The Library of Subroutines for Calculation of Matrix Elements of
Two–particle Operators for Many–Electron Atoms

Gediminas Gaigalas
Institute of Theoretical Physics and Astronomy,
A. Goˇstauto 12, Vilnius 2600, LITHUANIA

February 2, 2008

Abstract

In this paper a library for spin–angular integration in LS–coupling for many–electron atoms is pre-
sented. The software is an implementation of a methodology based on the second quantization in coupled
tensorial form, the angular momentum theory in 3 spaces (orbital, spin and quasispin), and the graphical
technique of angular momentum. This implementation extends applications of the relevant methodology
to open f – shells and leads to faster execution of angular integration codes. The possibility of using some
library routines for solving various angular momentum problems in atomic physics is also discussed.

PACS: 31.15.Ne, 31.25.-v, 32.10.-f, 32.30.-r

Keywords: atomic structure, conﬁguration interaction, complex atom, correlation, bound states, LS–

coupling.

4
0
0
2
 
y
a
M
 
4
1
 
 
]
h
p
-
m
o
t
a
.
s
c
i
s
y
h
p
[
 
 
1
v
2
7
0
5
0
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

1

PROGRAM SUMMARY

Title of program : SAI Catalogue identiﬁer:

Program obtainable from: Institute of Theoretical Physics and Astronomy, A. Goˇstauto 12, 2600 Vilnius, LITHUA-
NIA.

E–mail: gaigalas@itpa.lt

Computer for which the library is designed and others on which it has been tested:
Computers: Pentium–based PCs;
Installations: Institute of Theoretical Physics and Astronomy, A. Goˇstauto 12, 2600 Vilnius, LITHUANIA.

Programming language used in the new version: FORTRAN 77 [1]

Peripherals used: terminal, disk

No. of bits in a word: 32

No. of processors used: 1

Has the code been vectorised or parallelized?: no

No. of bytes in distributed program, including test data, etc.: 442 297 bytes

Distribution format: compressed tar ﬁle

Additional keywords : atomic structure, conﬁguration interaction, reduced coeﬃcients of fractional parentage, irre-
ducible tensors, angular momentum theory in three spaces (orbital, spin and quasispin), second quantization in the
coupled tensorial form, recoupling coeﬃcients, Slater integrals, complex atom, correlation, wave functions, bound
states, LS–coupling, f – shell states.

Nature of physical problem
Theoretical determination of atomic orbitals, energy levels and radiative transition data requires the calculation of
matrix elements of the relevant physical operators (see the multiconﬁguration Hartree–Fock method [2], for example).
The matrix elements of arbitrary operator can generally be expressed as

coef (i, j) (γiLiSi||T (klks)||γj LjSj ),

Xi,j
where T (klks) is a tensorial operator of ranks kl, ks. The program calculates the spin–angular part for matrix

elements (γiLiSi||T (klks)||γj Lj Sj) of one– and/or two–particle operator T (klks).

Method of solution
This program is created involving the angular methodology of [3–6]. It has been extended to include partially ﬁlled
f – shells in wave function expansions. The classiﬁcation of terms is identical to that described in [6].

Restrictions on the complexity of the problem
The non–orthogonal orbitals are not supported.

References
[1] Microsoft, Fortran Powerstation Programmer’s Guide (Microsoft Corporation, 1995).
[2] C. Froese Fischer, T. Brage and P. J¨onsson, Computational Atomic Structure. An MCHF Approach (Institute of

Physics Publishing, Bristol/Philadelphia, 1997).

[3] G. Gaigalas and Z. Rudzikas, J. Phys. B: At. Mol. Phys. 29 (1996) 3303.
[4] G. Gaigalas, Z. Rudzikas and C. Froese Fischer, J. Phys. B: At. Mol. Phys. 30 (1997) 3747.
[5] G. Gaigalas, A. Bernotas, Z. Rudzikas and C. Froese Fischer, Physica Scripta 57 (1998) 207.
[6] G. Gaigalas, Z. Rudzikas and C. Froese Fischer, Atomic Data and Nuclear Data Tables 70 (1998) 1.

2

LONG WRITE–UP

1

Introduction

Models of many–electron atoms and ions require both relativistic and correlation eﬀects to be taken into
account for getting very precise characteristics of atoms and ions. This can be done, for example, by using
multiconﬁguration Haretree–Fock, conﬁguration interaction method, various versions of perturbation theory,
or semiempirical methods [1]. All of them require the calculation of matrix elements of physical operators or
eﬀective operators from perturbation theory. The symmetry properties of atomic states allow the calculation
of matrix elements to be divided into the calculation of spin–angular terms and the accompanying radial
integrals. The latter are the more straightforward and can be handled by methods such as used in the MCHF
atomic structure package (ATSP MCHF) [2, 3]. Such packages have a modular structure, and the modules for
calculation of the spin–angular part for matrix elements of any operator can easily be replaced with new
one, which is more eﬃcient for large scale computation of open shell atoms.

This paper describes modules of such a sort. The new program (library for integration over spin–angular
variables in atomic theory – library SAI) is based on combination of the angular momentum theory, on
the concept of irreducible tensorial sets, on a generalized graphical approach, on the second quantization in
coupled tensorial form, on the quasispin approach and on standard quantities like the reduced coeﬃcients
of fractional parentage, completely reduced matrix elements of the unit tensors as well as a number of other
completely reduced matrix elements occurring in various products of electron creation and annihilation
operators [4]. The program for calculation of standard quantities have been published as library SQ [5]. The
program presented in this paper uses the library SQ for evaluation of these standard quantities. The new
module for the calculation of spin–angular coeﬃcients is faster compared to previous ones and can treat
conﬁgurations with open f N shell.

The theoretical background is presented in Section 2, program organization is outlined in Section 3, the
description of the use of this library for other programs is given in Section 4. The program installation is
presented in Section 5. Finally, a few examples are given in Section 6.

2 Notations and Methodology of Angular Integrations

2.1 Matrix Elements Between Complex Conﬁgurations

According to the approach [4, 6], a general expression of a submatrix element for any two–particle operator
between functions with u open shells, can be written as follows:

(ψu (LS)

G

ψu (L

S

))

′

′

||

||

=

=

Xnili,njlj ,n′

il′

i,n′

j l′

j

(ψu (LS)

G

nili, njlj, n
(cid:0)

||

b

′
il

′
i, n

′
jl

′
j

′

′

ψu (L

S

))

||

(cid:1)

Xnili,njlj ,n′

il′

i,n′

j l′

j Xκ12,σ12,κ′

12,σ′

12 XKl,Ks

1)∆ Θ

′

(
−

niλi, njλj, n
(cid:0)

′
′
i, n
iλ

′
′
j, Ξ
jλ
(cid:1)

′
′
i, n
iλ

′
′
j, Λbra, Λket, Ξ, Γ
jλ

T

×

niλi, njλj , n
(cid:0)

Li, Lj, L′

i, L′

bra

, Λbra

l, s, Λbra

where λ
s ≡
≡
(cid:0)
pling parameters connecting the recoupling matrix R
niλi, njλj , n′
T
12, σ′
σ12, κ′
(cid:0)

and Γ refers to the array of cou-
j
j, Λbra, Λket, Γ
(cid:1)
(cid:1)
to the submatrix element
j, Λbra, Λket, Ξ, Γ
. The expression (1) has summation over intermediate ranks κ12,
i, n′
iλ′
niλi, njλj , n′
(cid:1)
(cid:0)

l ≡
jλ′
i, n′
iλ′
12, Kl, Ks in T

So, to calculate the spin–angular part of a submatrix element of this type, one has to obtain:

jλ′

.
(cid:1)

(cid:1)

j

(cid:1)
Si, Sj, S′
λi, λj , λ′
(cid:0)
(cid:0)
j, Λbra, Λket, Ξ, Γ

R

′
′
j, Λbra, Λket, Γ
i, λ
λi, λj, λ
(cid:0)
i, S′
i, λ′

bra

,

(cid:1)

(1)

1. Recoupling matrix R

i, λ′
. This recoupling matrix accounts for the change in
ψu (L′S′)), which has u open shells in the bra and ket functions,
going from matrix element (ψu (LS)
(cid:1)
||
jλ′
i, n′
, which has only the shells being
to the submatrix element T
acted upon by the two–particle operator in its bra and ket functions.
(cid:1)

G
||
niλi, njλj , n′
(cid:0)

λi, λj, λ′
(cid:0)

j, Λbra, Λket, Ξ, Γ

j , Λbra, Λket, Γ

iλ′

3

niλi, njλj, n′
(cid:0)

iλ′

i, n′

jλ′

j , Λbra, Λket, Ξ, Γ

.
(cid:1)

2. Submatrix elements T

3. Phase factor ∆.

4. Θ′

niλi, njλj, n′
(cid:0)

iλ′
jλ′
g(κ1κ2k,σ1σ2k)

i, n′

(niλinjλj ||
details see [6]).

, which is proportional to the radial part. It consists of a submatrix element
j , Ξ
ψu (L′S′)), and in some cases of simple factors and 3nj–coeﬃcients (for more
(cid:1)
||

Some important points to note are the following:

1. The recoupling matrices R

in our approach are much simpler than in other
known approaches. We have obtained their analytical expressions in terms of just 6j– and 9j–coeﬃcients.
That is why we choose a special form of operator in second quantization, where second quantization operators
acting upon the same shell are tensorially coupled together.

j, Λbra, Λket, Γ

λi, λj , λ′
(cid:0)

i, λ′

(cid:1)

2. The tensorial part of a two–particle operator is expressed in terms of (products of) operators of the

type A(kk) (nλ, Ξ), B(kk)(nλ, Ξ), C(kk)(nλ, Ξ), D(ls), E(kk)(nλ, Ξ). Their explicit expressions are (2)–(6):

a(qλ)
mq ,

a(qλ)
mq1 ×
h

a(qλ)
mq2

i

(κ1σ1)

,

a(qλ)
mq1 × h

(cid:20)

a(qλ)
mq2 ×

a(qλ)
mq3

i

(cid:21)

(κ1σ1)

(κ2σ2)

(κ1σ1)

(κ2σ2)

a(qλ)
mq1 ×

a(qλ)
mq2

i

(cid:20)h

a(qλ)
mq3 (cid:21)

×

,

,

(2)

(3)

(4)

(5)

(6)

a(qλ)
mq1 ×

a(qλ)
mq2

(cid:20)h

(κ1σ1)

× h

i
niλi, njλj, n′

a(qλ)
mq3 ×
i, n′
iλ′

(κ2σ2)

(kk)

.

a(qλ)
mq4

i

(cid:21)
j , Λbra, Λket, Ξ, Γ

jλ′

. The parameter Γ repre-
We denote their submatrix elements by T
i, λ′
λi, λj, λ′
(cid:1)
to the
sents the whole array of parameters connecting the recoupling matrix R
iλ′
(cid:0)
. It is worth noting that each of the tensorial
submatrix element T
quantities (2)–(6) act upon one and the same shell. So, all the advantages of tensor algebra and the quasispin
(cid:1)
formalism may be eﬃciently exploited in the process of their calculation.

(cid:0)
jλ′
j, Λbra, Λket, Ξ, Γ

niλi, njλj , n′
(cid:0)

j , Λbra, Λket, Γ

i, n′

(cid:1)

We obtain the submatrix elements of operator (2) by using straightforwardly the Wigner–Eckart theorem

in quasispin space:

lN αQLS

a(qls)
mq ||
||

(cid:16)

′

lN

′
α

′

′

′

Q

L

S

=

[Q]

−

(cid:17)

−1/2

Q′
1/2 Q
M ′
Q mq MQ (cid:21) (cid:16)

(cid:20)

l αQLS

a(qls)

′
l α

′

′

′

Q

L

S

,

(7)

|||

|||

(cid:17)

where the last multiplier in (7) is the so–called reduced coeﬃcient of fractional parentage (RCFP) and we
use a shorthand notation (2k + 1)
[k, ...]. The details of the use of quasispin approach are discussed in
monograph [1].

...

≡

·

The value of a submatrix element of operator (3) is obtained by basing ourselves on (33), (34) in [7]. In

the other three cases (4), (5), (6) we obtain them by using (5.16) of Rudzikas [1]:

(nlN αQLS

F (κ1σ1) (nλ)

G(κ2σ2) (nλ)

|| h
1)L+S+L

′

′

+S

×
+2k [k]

= (

−

(kk)

′

nlN
||

i

′
α

′

′

′

Q

L

S

)

(nlN αQLS

F (κ1σ1) (nλ)
||

nlN
||

′′

′′

′′
α

Q

L

′′

S

′′

)

Xα′′Q′′L′′S′′

′′

(nlN

′′

′′
α

Q

L

′′

S

′′

×

G(κ2σ2) (nλ)
||

nlN
||

′

′
α

′

′

′

Q

L

S

)

κ1 κ2
k
L′ L L′′

(cid:26)

σ1 σ2
S′
S

k
S′′

,

(cid:27)

(cid:27) (cid:26)

(8)

4

where F (κ1σ1) (nλ) and G(κ2σ2) (nλ) is one of (2) or (3) and the submatrix elements correspondingly are
deﬁned by (7) and (33), (34) in [7]. N ′′ is deﬁned by second quantization operators occurring in F (κ1σ1) (nλ)
and G(κ2σ2) (nλ).

As is seen, by using this approach, the calculation of the angular parts of matrix elements between
functions with u open shells ends up as a calculation of submatrix elements of tensors (2), (3) within single
shell of equivalent electrons. As these completely reduced submatrix elements (reduced in the quasispin,
orbital and spin spaces) do not depend on the occupation number of the shell, the tables for them are
reduced considerably in comparison with the tables of analogous submatrix elements of tensorial quantities
U k, V k1k2 (Jucys and Savukynas [8] or Cowan [9]) and the tables of fractional parentage coeﬃcients (CFP).
That is why the expressions obtained are very useful in practical calculations. This is extremely important
for the f – shell, where the number of CFPs for f 1 – f 14 equals 54408 [10], whereas the number of RCFPs,
taking into account the transposition symmetry property of RCFP, is only 14161 – of which only 3624 are
nonzero [11].

We do not present details on obtaining phase factors ∆ and Θ′

, since no essential
generalizations may be made here; those are possible only after a particular operator is chosen (for more
details see [6, 12]).

niλi, njλj , n′
(cid:0)

j, Ξ
(cid:1)

i, n′

jλ′

iλ′

2.2 The Electrostatic Electron Interaction, Spin–Spin and Spin–Other–Orbit

Operators

The electrostatic (Coulomb) electron interaction operator H Coulomb itself contains the tensorial structure

H Coulomb

H (kk0,000)
Coulomb

≡ Xk

and its submatrix element is:

niλinjλj

(cid:16)

H (kk0,000)
Coulomb
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

ni′λi′ nj′ λj′

= 2[k]1/2

li′

lj

C(k)

lj′

Rk (nilini′ li′ , njljnj′ lj′ ) .

(10)

(cid:17)

li

(cid:16)

C(k)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

(cid:17) (cid:16)

(cid:13)
(cid:13)
(cid:13)

(cid:17)

(cid:13)
(cid:13)
(cid:13)

The spin–spin operator H ss itself contains tensorial structure of two diﬀerent types, summed over k:

H ss

≡ Xk h

H (k+1k−12,112)

+ H (k−1k+12,112)

.

ss

ss

i

Their submatrix elements are:

niλinjλj

ni′ λi′ nj′ λj′

(cid:16)

(cid:16)

ss

H (k+1k−12,112)
(cid:13)
(cid:13)
(cid:13)
3
√5 q

(2k + 3)(5)

(cid:13)
(cid:13)
(cid:13)
li

(cid:16)

ss

H (k−1k+12,112)
(cid:13)
(cid:13)
(cid:13)
3
√5 q

(2k + 3)(5)

(cid:13)
(cid:13)
(cid:13)
li

=

=

niλinjλj

ni′ λi′ nj′ λj′

(cid:17)

(cid:17)

(cid:13)
(cid:13)
(cid:13)
where we use a shorthand notation (2k + 3)(5)
≡
(12), (13) is deﬁned as in Glass and Hibbert [13]:

(cid:16)

C(k−1)
(cid:13)
(cid:13)
(cid:13)

li′

lj

(cid:17) (cid:16)

C(k+1)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

(cid:17)

(cid:17)

C(k+1)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

li′

lj

(cid:17) (cid:16)

C(k−1)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

lj′

N k−1 (nilinjlj, ni′li′ nj′ lj′ ) ,

(12)

lj′

N k−1 (njljnili, nj′ lj′ ni′ li′ ) ,

(13)

(2k + 3) (2k + 2) (2k + 1) (2k) (2k

1) and radial integral

−

N k (nilinjlj, ni′ li′ nj′ lj′ ) =

Pi (r1) Pj (r2)

r2)Pi′ (r1) Pj′ (r2) dr1dr2,

(14)

∞

∞

α2
4 Z

0 Z
0

rk
2
rk+3
1

ǫ(r1 −

where ǫ(x) is a Heaviside step–function,

(9)

(11)

(15)

ǫ(x) =

1;
0;

(cid:26)

for x > 0,
0.
for x

≤

5

The spin–other–orbit operator H soo itself contains tensorial structure of six diﬀerent types, summed over

H (k−1k1,101)

sso

+ H (k−1k1,011)

sso

+ H (kk1,101)
sso

+ H (kk1,011)
sso

+ H (k+1k1,101)

sso

+ H (k+1k1,011)

sso

.

(16)

i

k:

H sso

≡ Xk h

Their submatrix elements are:

(17)

(18)

(19)

k + 1) (k

li + li′ ) (k + li −
N k−2 (njljnili, nj′ lj′ ni′li′ ) ,

−

−
lj′

li′ ) (k + li + li′ + 1)
}

1/2

li + li′ + 1) (k + li −
−
N k (nilinjlj, ni′li′ nj′ lj′ ) .

1/2
li′ + 1) (k + li + li′ + 2)
}

niλinjλj

(cid:16)

soo

H (k−1k1,σ1σ21)
(cid:13)
(cid:13)
(cid:13)
2σ2

(2k

(cid:13)
(cid:13)
(cid:13)

ni′ λi′ nj′ λj′

(cid:17)

1) (2k + 1) (li + li′

= 2

(k)

×

·

(cid:16)

li

{
−1/2

−
C(k)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
H (k+1k1,σ1 σ21)
(cid:13)
(cid:13)
(cid:13)
2σ2

soo

niλinjλj

(cid:16)

= 2

·

(k + 1)

×

ni′ λi′ nj′ λj′

(cid:13)
(cid:13)
(cid:13)
(2k + 1) (2k + 3) (li + li′
{
−1/2

(cid:17)

li′

lj

(cid:17) (cid:16)

C(k)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

(cid:17)

k) (k

lj′

(cid:17)

−
C(k)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

ni′ λi′ nj′ λj′

(cid:17)

lj

(cid:16)

li

li′

(cid:13)
(cid:13)
(cid:13)

(cid:17) (cid:16)

C(k)
(cid:13)
(cid:13)
(cid:13)
H (kk1,σ1σ21)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
2σ2 (2k + 1)1/2
·

soo

(cid:16)
k (k + 1)

(li (li + 1)

×

−

niλinjλj

(cid:16)

=

2

−

li

li′

C(k)
(cid:13)
(cid:13)
(cid:17) (cid:16)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
li′ (li′ + 1))
−

−1/2

lj

lj′

(k (k + 1))

C(k)
(cid:13)
(cid:13)
(k + 1) N k−2 (njljnili, nj′ lj′ ni′ li′ )
(cid:13)
(cid:8)

(cid:17) n

(cid:13)
(cid:13)
(cid:13)

kN k (nilinjlj, ni′ li′ nj′ lj′ )
(cid:9)
The radial integrals in (17)–(19) are deﬁned by (14) and below (see Glass and Hibbert [13]):

2 (k (k + 1))1/2 V k−1 (nilinjlj, ni′ li′nj′ lj′ )
o

−

−

.

V k (nilinjlj, ni′ li′ nj′ lj′ ) =

Pi (r1) Pj (r2)

Pi′ (r1) Pj′ (r2) dr1dr2.

(20)

∞

∞

α2
4 Z

0 Z
0

rk−1
<
rk+2
>

r2

∂
∂r1

Now we have all we need (the operators with tensorial structure and their submatrix elements) for
obtaining the values of a matrix element of these operators for any number of open shells in bra and ket
functions. This lets us exploit all advantages of the approach by [6].

The spin–spin and spin–other–orbit operators themselves generally contain tensorial structure of several
diﬀerent types. Therefore the expression (1) must be used separately for each possible tensorial structure
for performing spin–angular integrations according to [6]. Each type of tensorial structure is associated with
and with diﬀerent matrix elements of
a diﬀerent type of recoupling matrix R
.
standard tensorial quantities T
(cid:1)

The one–particle operators are treated in a similar manner. Their expressions are much simpler and

j , Λbra, Λket, Γ
j, Λbra, Λket, Ξ, Γ
(cid:1)

niλi, njλj , n′
(cid:0)

λi, λj, λ′
i, n′
iλ′
(cid:0)

i, λ′
jλ′

therefore we do not present them here, for brevity. They may be found in [14].

3 Description of the Library

The library SAI presented in this paper is aimed at the spin–angular integration for any one– and two–
particle operator. It is a separate unit and can easily be adapted to existing codes such as the MCHF atomic
structure package (ATSP MCHF) [2, 3] or can easily be used to create a new one. It contains four modules –
SAI RECLS, SAI SQ, SAI NORE and SAI DUDU. They are classiﬁed according to the methodology presented in
papers [4, 6, 7, 12], and adhere to the principles of modular programming (although FORTRAN 77 does not
fully support this).

6

The module SAI SQ was published separately [5]. In this paper we will discuss brieﬂy the new modules
and subroutines contained therein. The author does not attempt to describe in detail all the subroutines
belonging to separate libraries. In order to give the reader a more complete view of the implementation
of methodology, published in papers [4, 6, 7, 11, 12, 15], only the main subroutines are described. Special
attention is given to the description of subroutines that other programs must call for use of this library. The
subroutines described in more detail can easily be used separately from the complete library SAI, too. These
subroutines are useful for creating new programs or modifying old ones, even those based on the traditional
methodology of angular calculations described by Fano [16].

3.1 SAI RECLS

This library contains 20 routines for calculation of recoupling matrices

R

′
′
j, Λbra, Λket, Γ
i, λ
λi, λj, λ
(cid:0)

(cid:1)

= R

li, lj, l
(cid:0)

′
i, l

′
j, Λbra
l

, Λket
l

, Γl

R

s, s, s, s, Λbra
(cid:0)

s

(cid:1)

, Λket
s

, Γs

.

(cid:1)

(21)

For more details see [6] (Section 4). Most of the subroutines from this module use common blocks CONSTS

and MEDEFN from ATSP MCHF [2, 3].

DLSAn, n=1, 2, ... 6, evaluates respectively coeﬃcients C1, C5, C2, C4, C3, C′

6, deﬁned in equations

(15), (16), (23), (21), (17), (25) of [6].

RECOUP0 checks the angular momentum selection rules for the recoupling coeﬃcients. For example,

it uses the expression (18) in one interacting shell case (see [6]).

RECOUPn, n=2, 3, 4, evaluates the Kronecker delta functions or calculates the recoupling coeﬃcients

respectively for the scalar operator

A(k) (n1l1)
h

×

B(k) (n2l2)

(0)

,

i

A(k1) (nili)

(cid:20)h

B(k2) (njlj)
i

×

(k)

×

C(k) (nmlm)

(0)

,

(cid:21)

A(k1) (n1l1)

(cid:20)h

(k)

B(k2) (n2l2)
i

×

× h

C(k3) (n3l3)

D(k4) (n4l4)

×

(0)

(k)

,

(cid:21)

i

deﬁned in equations (22), (26), (33) of [6]. The A(k), B(k2), C(k3) and D(k4) may be simple or composite
tensorial operators.

RLSP0 evaluates the Kronecker delta functions δ (Li, L′

i) for one and two interacting shells (see (14)

RLSP00 evaluates the Kronecker delta functions δ (Li, L′

i) for three and four interacting shells (see (24)

and (19) in [6]).

and (27) in [6]).

RLSPn, n=1, 2, 3 evaluates the Kronecker delta functions or calculates the recoupling coeﬃcients

respectively for the non–scalar operator

A(k) (n1l1) ,

A(k1) (n1l1)
h

×

B(k2) (n2l2)
i

(k)

,

A(k1) (nili)

B(k2) (njlj)
i

×

(cid:20)h

C(k4) (nmlm)
(cid:21)

×

(k)

,

(k3)

7

(22)

(23)

(24)

(25)

(26)

(27)

deﬁned in equations (14), (19), (24) of [6]. This routine evaluates the Kronecker delta functions or calculates
respectively the ﬁrst or second part of recoupling coeﬃcients for the non–scalar operator

A(k1) (n1l1)

(cid:20)h

(k3)

B(k2) (n2l2)
i

×

× h

C(k4) (n3l3)

D(k5) (n4l4)
i

×

(k3)

(k)

.

(cid:21)

(28)

in the case n=4a, 4b.

3.2 SAI NORE

This library is for calculating the spin–angular parts of matrix elements for a scalar two–particle operator. It
contains 18 subroutines. Most of the subroutines from this module use common blocks CONSTS and MEDEFN
from ATSP MCHF [2, 3].

From (1) we see that the matrix element of any two–particle operator can be written as a sum over
all possible sets of active shell quantum numbers nili. The systematic analysis of [6] aims to minimize the
number of distributions, which is necessary to obtain the matrix elements of any two–electron operator,
when the bra and ket functions consist of arbitrary number of shells. Table 1 lists all these distributions and
at the same time the expressions used by each of the subroutines NONRELAT1, NONRELAT2, NON-
RELAT31, NONRELAT32, NONRELAT33, NONRELAT41, NONRELAT51, NONRELAT52,
NONRELAT53. The numbering of expressions is the same as in paper [6], where all these expressions
are presented. As the structure of all the subroutines mentioned earlier is the same, and only diﬀerent
expressions are used and diﬀerent subroutines are called, we will discuss in more detail only one of these
subroutines.

NONRELAT1 is meant for ﬁnding spin–angular coeﬃcients for the distributions αααα, αβαβ and

In the αααα case, the program uses expression (5) from [6]. In this case

G (I)

b

∼ Xκ12,σ12,κ′

12,σ′

12 Xp h

ΘIIa (nλ, Ξ) A(00)

a

(nλ, Ξ) + ΘIIb (nλ, Ξ) A(kk)

(b)p,−p (nλ, Ξ)

,

(29)

i

A(00)
a

(nλ, Ξ) =

a(lαs)

˜a(lαs)

(cid:20)h

×

i

˜a(lαs)

a(lαs)

×

i

× h

(κ1σ1)

(κ2σ2)

(00)

,

(cid:21)

A(kk)

(b)p,−p (nλ, Ξ) =

a(lαs)
h

×

˜a(lαs)

(kk)

p,−p
i

,

ΘIIa (nλ, Ξ) = ˜ΘIIa (nαλα, nαλα, nαλα, nαλα, Ξ)

=

1
2

(
−

1)k−p [κ1, σ1, κ2, σ2]

−1/2

nαλαnαλα||

(cid:16)

g(κ1κ2k,σ1σ2k)

nαλαnαλα

||

(cid:17)

(30)

(31)

(32)

βαβα.

where

and

and

ΘIIb (nλ, Ξ) = ˜ΘIIb (nαλα, nαλα, nαλα, nαλα, Ξ)

1)k−p+1

= (

−

nαλαnαλα||

(cid:16)

g(κ1κ2k,σ1σ2k)

nαλαnαλα

||

(cid:17) (cid:26)

κ1 κ2
lα
lα

k
lα (cid:27) (cid:26)

σ1 σ2
s
s

k
s (cid:27)

.

(33)

The value of the reduced matrix element of operator (30) is found by subroutine WWLS1, and that of
(31) by W1 (see module SAI SQ in [5]). The value of coeﬃcient ΘIIa (nλ, Ξ) is calculated by COULOMBLS
subroutine, because this coeﬃcient, to the accuracy of a factor and a phase, is equal to that part of the two–
electron submatrix elements of electrostatic interaction, which this subroutine is calculating. The coeﬃcient
ΘIIb (nλ, Ξ) is found by COULOMBLS and SIXJ, and the recoupling matrix is investigated by RE-
COUP0 (see section SAI RECLS).

8

Table 1: Scheme of the expressions for matrix elements of two–particle scalar operator (like Coulomb inter-
action).

Dis.

G

G(T )

α

β

γ

˜Θ

R

∆

b

(52)

NONRELAT1
αααα (47)
αβαβ
(50)
βαβα (50)
αββα (54)
βααβ
(54)
NONRELAT2
ααββ
NONRELAT31
βααα (56)
αβαα (56)
NONRELAT32
βββα (60)
ββαβ
(60)
NONRELAT33
βγαγ
(50)
γβγα (50)
γβαγ
(54)
βγγα (54)
NONRELAT41
(52)
γγαβ
γγβα (52)
(52)
αβγγ
βαγγ
(52)
NONRELAT51
αβγδ
(52)
βαγδ
(52)
αβδγ
(52)
βαδγ
(52)
(52)
γδαβ
γδβα (52)
δγαβ
(52)
δγβα (52)
NONRELAT52
(50)
αγβδ
(54)
αγδβ
(50)
γαδβ
(54)
γαβδ
βδαγ
(50)
δβγα (50)
βδγα (54)
(54)
δβαγ
NONRELAT53
(50)
αδβγ
(50)
δαγβ
(54)
αδγβ
(54)
δαβγ
βγαδ
(50)
γβδα (50)
βγδα (54)
(54)
γβαδ

(6)

(6)
(6)

(6)
(6)

(7)
(7)
(7)
(7)

(7)
(7)
(7)
(7)

(8)
(8)
(8)
(8)
(8)
(8)
(8)
(8)

(8)
(8)
(8)
(8)
(8)
(8)
(8)
(8)

(8)
(8)
(8)
(8)
(8)
(8)
(8)
(8)

b
(5)
(6)
(6)
(6)
(6)

(38),(35)
(35)
(35)
(35)
(35)

(48),(49)
(51)
(51)
(55)
(55)

(35)

(35)

(53)

(22)

(41)

δ

–
–
–
–
–

–

–
–

–
–

–
–
–
–

–
–
–
–

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

–
–
–
–
–

–

–
–

–
–

(35)
(35)
(35)
(35)

(35)
(35)
(35)
(35)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

–
(35)
(35)
(35)
(35)

(34)
(34)

(37)
(37)

(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

9

(36)
(36)

(34)
(34)

(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

(34)
(34)
(34)
(34)
(34)
(34)
(34)
(34)

(18)
(22)
(22)
(22)
(22)

(22)
(22)

(22)
(22)

(26)
(26)
(26)
(26)

(26)
(26)
(26)
(26)

(33)
(33)
(33)
(33)
(33)
(33)
(33)
(33)

(33)
(33)
(33)
(33)
(33)
(33)
(33)
(33)

(33)
(33)
(33)
(33)
(33)
(33)
(33)
(33)

(41)
(41)
(41)
(41)
(41)

(42)
(42)

(42)
(42)

(42)
(42)
(42)
(42)

(42)
(42)
(42)
(42)

(43)
(43)
(43)
(43)
(43)
(43)
(43)
(43)

(43)
(43)
(43)
(43)
(43)
(43)
(43)
(43)

(43)
(43)
(43)
(43)
(43)
(43)
(43)
(43)

(58)
(59)

(62)
(63)

(51)
(51)
(55)
(55)

(53)
(53)
(53)
(53)

(53)
(53)
(53)
(53)
(53)
(53)
(53)
(53)

(51)
(55)
(51)
(55)
(51)
(51)
(55)
(55)

(51)
(51)
(55)
(55)
(51)
(51)
(55)
(55)

For the distributions αβαβ and βαβα the subroutine NONRELAT1 uses (6) of [6], keeping in mind
12) (nβλβ, Ξ)
that Θ (nαλα, nβλβ , Ξ) is expressed as (51) of [6] and tensorial parts B(κ12σ12) (nαλα, Ξ), C(κ
are equal to (35) from [6]. The coeﬃcients Θ (nαλα, nβλβ, Ξ) are investigated by COULOMBLS, the
12) (nβλβ, Ξ) are found by W1W2LS from the SAI SQ library [5],
coeﬃcients B(κ12σ12) (nαλα, Ξ) and C(κ
and the recoupling matrix is calculated by RECOUP2.

′
12σ

′
12σ

′

′

For the distributions αββα and βααβ the subroutine NONRELAT1 uses (6) of [6], keeping in mind
12) (nβλβ, Ξ)
that Θ (nαλα, nβλβ , Ξ) is expressed as (55) of [6] and tensorial parts B(κ12σ12) (nαλα, Ξ), C(κ
are equal to (35) from [6]. The coeﬃcients Θ (nαλα, nβλβ, Ξ) are investigated by COULOMBLS and
12) (nβλβ , Ξ) are found by W1W2LS from the SAI SQ
SIXJ, the coeﬃcients B(κ12σ12) (nαλα, Ξ) and C(κ
library [5], and the recoupling matrix is calculated by RECOUP2.

′
12σ

′
12σ

′

′

COULOMBLS Investigates the two–electron submatrix elements of electrostatic interaction

according to the formula (9) of [7]. The values of these matrix elements are needed because of (see [6])

niλinjλj||

g(kk0,000)
Coulomb ||

n

′
′
in
iλ

′
′
jλ
j

,

(cid:17)

(cid:16)

Θ (Ξ)

(niλinjλj k

g

k

∼

ni′ λi′ nj′ λj′ ) .

The value of the output parameter AA of this subroutine is:

AA = 2 [k]1/2

C(k)

′
i

l
||

li||

(cid:16)

C(k)

lj||

′
j

l
||

.

(cid:17)

(cid:17) (cid:16)

3.3 SAI DUDU

This library is meant for the calculation of matrix elements of any one– or two–particle operator. It contains
44 subroutines. Most of the subroutines from this module use common blocks CONSTS and MEDEFN from
package ATSP MCHF [2, 3]. Similar to the SAI NORE library, it uses the methodology described in paper [6].
Therefore the arrangement of library SAI DUDU is analogous to that of library SAI NORE. Therefore we will
not go into computational details of spin–angular parts of one– or two–particle operator matrix elements,
but instead will reserve all the attention to a demonstration of connection of the Breit–Pauli operators to
the general algorithm of one– or two–particle operator calculation.

3.3.1 Spin–own–orbit interaction

The subroutine SPINOR investigates the submatrix elements of the spin–own–orbit interaction operator

niλi||

f (11)
n
s−o ||

′
′
jλ
j

,

(cid:17)

(cid:16)

according to the formula (5) of [11].

3.3.2 Spin–spin interaction

The subroutine SSC investigates the spin–spin operator, which has the tensorial form (11) and ﬁnds the
submatrix element of this operator between functions with any number of open shells. This subroutine is
used for all distributions except αααα, αβαβ, βαβα, αββα, βααβ and ααββ. In the latter cases, instead
of subroutine SSC the subroutines SS1111, SS1212, SS1212, SS1221, SS1221 and SS1122 are used.

The subroutine SSA investigates the submatrix elements of the spin–spin interaction operator

and

niλinjλj ||

(cid:16)

H (k+1k−12,112)

ss

n

′
′
in
iλ

′
′
jλ
j

niλinjλj ||

(cid:16)

H (k−1k+12,112)

ss

n

′
′
in
iλ

′
′
jλ
j

||

||

(cid:17)

(cid:17)

10

respectively. This subroutine is used for all distributions except αααα, αβαβ, and βαβα. In the latter cases,
instead of subroutine SSA the subroutine SS1 is used.

(34)

(35)

(36)

(37)

(38)

(39)

3.3.3 Spin–other–orbit interaction

The subroutine SOOC investigates the spin–other–orbit operator (16). This subroutine is used for all
distributions except αααα, αβαβ, βαβα, αββα, βααβ and ααββ. For distributions αααα, αβαβ and
βαβα, according to (34), (39) and (40) of [12], the tensorial form

H soo
12 ≡ Xk n

H (k−1k1,101)

soo

+ H (k−1k1,011)

soo

+ H (k+1k1,101)

soo

+ H (k+1k1,011)

soo

o

is valid. Therefore instead of subroutine SSC the subroutines SOO1111, SOO1212, SOO1212 respectively
are used. The distribution αββα, βααβ and ααββ are also calculated according to separate expressions.
These are treated by the subroutines SOO1221P, SOO1221P and SOO1122P.

The subroutines SOOA and SOOB investigate the submatrix elements of the spin–other–orbit interac-

tion operator

niλinjλj||
(cid:16)

H (k−1k1,101)

ss

n

′
′
in
iλ

′
′
jλ
j

niλinjλj||

H (k−1k1,011)

ss

n

′
′
in
iλ

′
′
jλ
j

niλinjλj||
(cid:16)

H (kk1,101)

ss

n

′
′
in
iλ

′
′
jλ
j

niλinjλj||

H (kk1,011)

ss

n

′
′
in
iλ

′
′
jλ
j

||

,

(cid:17)

niλinjλj ||

(cid:16)

H (k+1k1,101)

ss

n

′
′
in
iλ

′
′
jλ
j

niλinjλj ||

(cid:16)

H (k+1k1,011)

ss

n

′
′
in
iλ

′
′
jλ
j

||

||

||

(cid:16)

(cid:16)

,

,

(cid:17)

(cid:17)

,

(cid:17)

||

||

,

(cid:17)

(cid:17)

according to the formulas (26), (27) and (28) of [12] respectively. These subroutines are used for all distri-
butions except αααα. In the latter case instead of subroutines SOOA and SOOB the subroutine SOO1 is
used.

4 The Library usage for other programs

There are diﬀerent versions of ATSP MCHF [2, 3, 17], which support non–relativistic atomic structure calcula-
tions. Each of them has some speciﬁc disparity. But it is possible to implement the library SAI in all of them
and in other programs as well. The one example of such connection between ATSP MCHF and SAI is shown
for the program Breit from [3] in Table 2. The modify package ATSP MCHF [3] which is ﬁt to the module
SAI is coming with the distribution of the library SAI.

For writing the similar interface for other programmes like [18] we need to ﬁll in the Common block
MEDEFN from ATSP MCHF, to write similar program as is presented in the Table 2 and to make some other
subroutines similar as is presented in this distribution (the ﬁles breit.f, savenon.f and setupgg.f in the
directory /dudu/breit).

Table 2. THE MODIFY PROGRAM BREIT FOR CONNECTION
BETWEEN ATSP MCHF AND SAI.

PROGRAM BREITF
IMPLICIT DOUBLE PRECISION(A-H,O-Z)
PARAMETER (NWD=60,NCD=1000,NCD2=2*NCD)
CHARACTER ANS*2, NAME(2)*24
COMMON/DEBUG/IBUG1,IBUG2,IBUG3,NBUG6,NBUG7,IFULL
COMMON/CONSTS/ZERO,TENTH,HALF,ONE,TWO,THREE,FOUR,SEVEN,ELEVEN,EPS
COMMON/DIAGNL/IDIAG,JA,JB
COMMON /FOUT/NOV(2),IOVLAP(10,2),NF,NG,NR,NL,NZ,NN,NV,NS,IFLAG,NIJ
COMMON/IMAGNT/CONST,CONSOO,CONSS,ISPORB,ISOORB,ISPSPN,

IREL,ISTRICT,IZOUT,IELST,ITENPR

COMMON/INFORM/IREAD,IWRITE,IOUT,ISC(8)
COMMON/MEDEFN/IHSH,NJ(16),LJ(16),NOSH1(16),NOSH2(16),J1QN1(31,3),

J1QN2(31,3),IJFUL(16)

COMMON/PHASES/SIGNFA(NCD2),ICSTAS
COMMON/STATES/NCFG,NOCCSH(NCD2),NOCORB( 5,NCD2),NELCSH( 5,NCD2),
J1QNRD( 9,NCD2),MAXORB,NJCOMP(NWD),LJCOMP(NWD),IAJCMP(NWD)

:

:

:

COMMON /OPERAT/ ICOLOM,ISOTOP,IORBORB
COMMON /BREIT/ ISPORBG,ISOORBG,ISPSPNG
COMMON/STEGG/IX,IGGG,IRHO,ISIG,IRHOP,ISIGP
DIMENSION NFLG(20),IRFST(NCD2),NCOUNT(8)

11

EQUIVALENCE (NCOUNT(1),NF)
LOGICAL INCL

105 FORMAT (49H ISPORB=0 AND ISOORB=1 CAUSES THE PROGRAM TO FAIL,

:
:
:

34H BECAUSE THE BLUME WATSON FORMULAE,/
50H CANNOT BE USED FOR CLOSED SUBSHELLS. TO OVERCOME,
34H THIS, THE CODE HAS SET ISPORB = 1//)

11 FORMAT(////’ THE TYPE OF CALCULATION IS DEFINED BY ’,

’THE FOLLOWING PARAMETERS - ’/

:
: 5X,22H BREIT-PAULI OPERATORS,13X,8HIREL
: 5X,27H PHASE CONVENTION PARAMETER,8X,8HICSTAS =,I2/)

=,I2/

13 FORMAT(40H RELATIVISTIC OPERATORS TO BE INCLUDED -/5X,13H SPIN-ORB
:IT (,I1,22H), SPIN-OTHER-ORBIT (,I1,15H), SPIN-SPIN (,I1,1H)/)

24 FORMAT(36H0INITIAL DEBUG: IN 1-ELECTRON PART =,I2,2H ,,5X,

: 20H IN 2-ELECTRON PART=,I2/16X,23HIN RECOUPLING PACKAGE =,I2/)

42 FORMAT(//’ MATRIX ELEMENTS CONSTRUCTED USING ’,

:

’THE SPHERICAL HARMONIC PHASE CONVENTION OF’/)

43 FORMAT(16X,47HCONDON AND SHORTLEY, THEORY OF ATOMIC STRUCTURE/16X,

:47H-----------------------------------------------///)

44 FORMAT(25X,42HFANO AND RACAH, IRREDUCIBLE TENSORIAL SETS/25X,42H--

:----------------------------------------///)

50 FORMAT(/20X,’=================================’/

:
:

20X,’ B R E I T - P A U L I
20X,’=================================’/)
78 FORMAT(19H DEBUG PARAMETERS -/5X,16H NBUG6(TENSOR) =,I2/5X,

2001’/

: ’ NBUG7(RELATIVISTIC OPERATORS - SO,SOO,SS) =’,I2//)

*
*

SET INPUT AND OUTPUT CHANNELS
ISOTOP=0
ICOLOM=0
IORBORB=0
IREAD=4
IWRITE=6
IOUT = 7
DO 2 I = 1,8

ISC(I) = 10 + I
NCOUNT(I) = 0
OPEN(UNIT=ISC(I),STATUS=’SCRATCH’,FORM=’UNFORMATTED’)

2 CONTINUE

NAME(1) = ’cfg.inp’
NAME(2) = ’int.lst’
OPEN(UNIT=IOUT,FILE=NAME(2),STATUS=’UNKNOWN’)
NIJ = 0
NHDEL=10
MXIHSH=(10)

10 WRITE(IWRITE,50)

WRITE(0,’(A/A/A/A)’) ’ Indicate the type of calculation ’,

: ’ 0 => non-relativistic Hamiltonian only;’,
: ’ 1 => one or more relativistic operators only;’,
: ’ 2 => non-relativistic operators and selected relativistic: ’

READ(5,*) IREL
IF (IREL.NE.1) ICOLOM=1
WRITE(0,’(A)’) ’ Is full print-out requested? (Y/N) ’
READ(5,’(A2)’) ANS
IFULL = 0
IF (ANS .EQ. ’Y’ .OR. ANS .EQ. ’y’) IFULL = 1
WRITE(0,’(/A)’)

:

’ Phases:- Condon and Shortley or Fano and Racah ? (CS/FR) ’

READ(5,’(A2)’) ANS
IF ( ANS .EQ. ’CS’ .OR. ANS .EQ. ’cs’) THEN

ELSE

ICSTAS = 1

ICSTAS = 0

END IF
ISPORB = 0
ISOORB = 0
ISPSPN = 0
IORBORB=0
IF (IREL .NE. 0) THEN

ISPORB = 1
ISOORB = 1
ISPSPN = 1
WRITE(0,’(A)’) ’ All relativistic operators ? (Y/N) ’
READ(5,’(A2)’) ANS
IF ( ANS .EQ. ’N ’ .OR. ANS .EQ. ’n ’) THEN
WRITE(0,’(A)’) ’ Spin-orbit ? (Y/N) ’
READ(5,’(A2)’) ANS
IF ( ANS .EQ. ’N ’ .OR. ANS .EQ. ’n ’) ISPORB = 0
WRITE(0,’(A)’) ’ Spin-other-orbit ? (Y/N) ’
READ(5,’(A2)’) ANS
IF ( ANS .EQ. ’N ’ .OR. ANS .EQ. ’n ’) ISOORB = 0
WRITE(0,’(A)’) ’ Spin-spin ? (Y/N) ’
READ(5,’(A2)’) ANS
IF ( ANS .EQ. ’N ’ .OR. ANS .EQ. ’n ’) ISPSPN = 0

END IF

12

IF(ISPORB.EQ.0.AND.ISOORB.NE.0) THEN

WRITE (IWRITE,105)

END IF

END IF
IBUG1 = 0
IBUG2 = 0
IBUG3 = 0
NBUG6 = 0
NBUG7 = 0
WRITE(IWRITE,11) IREL,ICSTAS
ISPORBG = ISPORB
ISOORBG = ISOORB
ISPSPNG = ISPSPN
CALL FACTRL(32)

*
* --- READ IN THE SET OF CONFIGURATIONS

CALL ACNFIG(NAME(1))
IDG = 0
NZERO = NCFG
NEW = NCFG
DO 554 I = 1,NZERO
IRFST(I) = 1
ISTART = 1
WRITE(0,’(A)’) ’ All Interactions? (Y/N): ’
READ (5,’(A2)’) ANS
IF (ANS .NE. ’Y’ .AND. ANS .NE. ’y’) THEN

WRITE(0,’(A,I3,A/A)’) ’ Of the ’,NCFG,

554

553

552
551

:
:

’ configurations, how many at the end are new? ’,
’ How many configurations define the zero-order set?’

READ (5,*) NEW,NZERO

IF (NEW .EQ. 0) NEW = NCFG

ISTART = NCFG - NEW + 1
IF (NZERO .eq. 0) NZERO = NCFG
IF (IREL .NE. 0 .AND. NZERO .NE. NCFG) THEN

WRITE(0,’(A)’) ’ Rel interaction with all the zero block? ’
READ (5,’(A2)’) ANS
IF (ANS .NE. ’Y’ .AND. ANS .NE. ’y’) THEN

DO 553 I = 1,(20)
NFLG(I) = 0
WRITE(0,*) ’ Define your reference set : FORM(20I3)’
READ (5,’(20I3)’) (NFLG(I),I=1,(20))
DO 551 I = 1,(ISTART-1)
IRFST(I) = 0
DO 552 J = 1,(20)
IF (NFLG(J) .EQ. I) THEN

IRFST(I) = 1
GO TO 552

ENDIF
CONTINUE
CONTINUE

ENDIF
WRITE(0,*) ’ Diagonal rel corrections ? (Y/N): ’
READ (5,’(A2)’) ANS
IF (ANS.EQ.’Y’.OR.ANS.EQ.’y’) IDG = 1

ENDIF
ISTRICT = 1
WRITE(0,*) ’ Restricted Two-body interactions? (Y/N); ’
READ (5,’(A2)’) ANS
IF (ANS .NE. ’Y’ .and. ANS .NE. ’y’ ) ISTRICT = 0

END IF

*
* ... Start the calculation
DO 6 JA = ISTART, NCFG
ICOUNT = 0

*
* ... Set up defining quantum numbers for each matrix element.

CALL SETUP(JA,JB)
IF(IBUG1.NE.0 .OR. IBUG2.NE.0) CALL VIJOUT(JA,JB)
IF(IHSH.GT.MXIHSH) STOP

*
* ... TEST ON POSSIBLE RECOUPLING ORTHOGONALITY.

CALL ORTHOG(LET,INCL)
IF (LET .NE. 0) THEN

CALL SETUPGG
IF (IX .LE. 4) THEN

77

IF (IFULL .NE. 0) WRITE(IWRITE,77)
FORMAT(///30X,’MULTIPLYING FACTOR’,11X,’TYPE OF INTEGRAL’)
CALL NONBP
IF (IFLAG .NE. 0) NIJ = NIJ + 1

ENDIF

ENDIF
7 CONTINUE
6 CONTINUE

NTOTAL = ((2*NCFG - NEW +1)*NEW)/2

13

WRITE(0,*) NTOTAL, ’ matrix elements’
WRITE(0,*) NIJ, ’ non-zero matrix elements’
WRITE(0,*) 100*NIJ/REAL(NTOTAL),’ % dense’
WRITE(0,*) ’NF=’,nf,’ NG=’,ng,’ NR=’,nr,’ NL=’,nl
WRITE(0,*) ’NZ=’,nz,’ NN=’,nn,’ NV=’,nv,’ NS=’,ns
WRITE(0,*) ’Total number of terms =’, NF+NG+NR+NL+NZ+NN+NV+NS
CALL OUTLSJ
WRITE(IWRITE,42)
IF(ICSTAS.EQ.0) THEN
WRITE(IWRITE,44)

WRITE(IWRITE,43)

ELSE

END IF
STOP
END

5

Installation of the Library

The library SAI will be distributed as compressed tar archive ﬁle. On a UNIX (or compatible) workstation,
the commands uncompress targ lib SAI and tar xvf targ lib SAI reconstruct the ﬁle structure. The
directory LIBRARY SAI contains the source code (subdirectories dudu, nore, recls, sqlsf1 and sqlsf1) as
well as makeﬁle make lib SAI. It also includes a modify package ATSP MCHF [3] which is ﬁted to the module
SAI.

The command make lib SAI creates the libraries libdudu.a, libnore.a, librecls.a, libsqlsf1.a and

libsqlsf2.a in directory bin.

6 Examples

The way to determine the ionization potential for Ce is demonstrated in this section. For this, one needs
to calculate the ground state energy of Ce atom (1G), the ground state of a Ce+ ion (2G), and ﬁnd the
diﬀerence.
It has been shown in [19, 20, 21] that the non–relativistic Hartree–Fock ionization potential
of singly ionized lanthanides follows the observed trends. Therefore we have chosen the non–relativistic
approximation, and ﬁnd the energy values by solving the multi–conﬁguration Hartree–Fock equations. For
brevity, we present only the Ce+ test cases. The energy for Ce is found in the same way.

In Table 3 we present an example of generating a set of conﬁgurations where the ground state energy
of th Ce+ ion is to be calculated by the multiconﬁguration Hartree–Fock method. The conﬁgurations are
(since
obtained by taking the singles and doubles excitations from
neither 5d nor 6s are ﬁlled shells, better accuracy would be obtained if these orbitals were also included in
the active set) [21]. In this case the program GENCL [22] generates a cf g.out ﬁle with 40 conﬁguration states.

to the active set

4f, 5d, 6s

5f, 5g

{

}

{

}

Table 3. TEST RUN OUTPUT

>>genclf

-----------------------------------------------------------
You are under the program GENCL

which GENerates a Configuration List

Type H (Help) to obtain information about the input format
Type <RETURN> if you already know
--------------------------------------------------------

> 1s 2s

2p 3s

3p 3d

4s 4p

4d 5s

5p

Header ?

> Ce+ ground state

Closed Shells ?

Reference Set ?

> 4f(1)5d(1)6s(1)

2 ?

>

>

> sd

> 5f,5g

> 1

Active Set ?

Replacements ?

Virtual Set ?

From which shell ?

14

To which shell ?

Final Terms ?

2 ?

> 3

> 2G

>

***************

I N P U T

D A T A

**********

3p 3d

4s 4p

4d 5s

5p

Ce+ ground sate
2p 3s
4f(1)5d(1)6s(1)

1s 2s

Header :
Closed shell :
Reference Set :
Active Set :
Replacements :
Virtual Set :

sd
5f,5g

From which shell :
To which shell :

1
3

Final Terms :

2G

GENERATE ALL COUPLINGS FOR EACH MEMBER OF THE REFERENCE SET

-------------

Ce+ ground state
Closed Shells :
1s
Configuration : 4f( 1) 5d( 1) 6s( 1)

3s 3p

2s 2p

--------
3d 4s

4p 4d

5s 5p

Their couplings :

2G0
2G0
FOR VIRTUAL SET GENERATE CONFIGURATION STATES FOR S-REPLACEMENT
Ce+ ground state
1s

--------
3d 4s

-------------

2F1
2F1

2S1
2S1

1G0
3G0

2D1
2D1

4p 4d

3s 3p

2s 2p

5s 5p

Closed Shells :
Reference set
Virtual Set

: 4f(1)5d(1)6s(1)
: 5f,5g

S-Replacement : 4f
Configuration : 5d( 1) 6s( 1) 5f( 1)

= 5f

Their couplings :

2D1
2D1

2S1
2S1

2F1
2F1

1D0
3D0

2G0
2G0

... Output omitted for brevity ...

FOR VIRTUAL SET, GENERATE CONFIGURATION STATES FOR D-REPLACEMENT

-------------

Closed Shells :
Reference set
Virtual Set

: 4f(1)5d(1)6s(1)
: 5f,5g

Ce+ ground state
1s

2s 2p

3s 3p

--------
3d 4s

4p 4d

5s 5p

S-Replacement : 4f .5d =5f .5g
Configuration : 6s( 1) 5f( 1) 5g( 1)

Their couplings :

2S1
2S1

2F1
2F1

2G1
2G1

1F0
3F0

2G0
2G0

... Output omitted for brevity ...

OK!
List of configurations and their couplings
cfg.inp
is in the file

Table 4. TEST RUN OUTPUT

>>breitf

========> Obtain Expressions for

Breit-Pauli Interactions

=======================
B R E I T - P A U L I
=======================

Indicate the type of calculation
0 => non-relativistic Hamiltonian only;
1 => one or more relativistic operators only;
2 => non-relativistic operators and selected relativistic:

Is full print-out requested? (Y/N)

Phases:- Condon and Shortley of Fano and Racah ? (CS/RF)

All Interactions? (Y/N)

>0

>N

>CS

>Y

THE TYPE OF CALCULATION IS DEFINED BY THE FOLLOWING PARAMETERS -

BREIT-PAULI OPERATORS
PHASE CONVENTION PARAMETER

IREL
= 0
ICSTAS = 1

---------------------
THE CONFIGURATION SET

15

The generating of the angles ﬁle int.lst is demonstrated in Table 4 with the modify package ATSP MCHF [3]
which is ﬁted to the module SAI and presented in the distribution. It will be needed for calculating the
energy of 2G state of Ce+ with the MCHF program [23]. The program input ﬁle cf g.inp is taken with the
help of renaming cf g.out to cf g.inp.

---------------------

STATE (WITH 40 CONFIGURATIONS):
-------------------------------

THERE ARE 5 ORBITALS AS FOLLOWS:

4f

5d 6s

5f 5g

THERE ARE 11 CLOSED SUBSHELLS COMMON TO ALL CONFIGURATIONS AS FOLLOWS:

1s

2s 2p

3s 3p

3d 4s

4p 4d

5s 5p

CONFIGURATION 1 ( OCCUPIED ORBITALS= 3 ): 4f( 1) 5d( 1) 6s( 1)
2S1

COUPLING SCHEME:

2D1

2F1

... Output omitted for brevity ...

CONFIGURATION 40 ( OCCUPIED ORBITALS= 2 ): 4f( 1) 5g( 2)
3H2

COUPLING SCHEME:

2F1

1G0

2G0

2G0

MATRIX ELEMENTS CONSTRUCTED USING THE SPHERICAL HARMONIC PHASE CONVENTION OF
CONDON AND SHORTLEY, THEORY OF ATOMIC STRUCTURE
-----------------------------------------------

===> Display the int.lst file produced

>>cat int.lst
Ce+ ground sate

F 0( 4f, 5d)
F 0( 4f, 6s)
F 0( 4f, 5f)
F 0( 4f, 5g)
F 0( 5d, 6s)
F 0( 5d, 5f)
F 0( 5d, 5g)
F 0( 6s, 5f)
F 0( 6s, 5g)
F 0( 5f, 5f)
F 0( 5f, 5g)
F 0( 5g, 5g)
F 2( 4f, 5d)
F 2( 4f, 5f)
F 2( 4f, 5g)
F 2( 5d, 5f)
F 2( 5d, 5g)
F 2( 5f, 5f)
F 2( 5f, 5g)
F 2( 5g, 5g)
F 4( 4f, 5d)
F 4( 4f, 5f)
F 4( 4f, 5g)
F 4( 5d, 5f)
F 4( 5d, 5g)
F 4( 5f, 5f)
F 4( 5f, 5g)
F 4( 5g, 5g)
F 6( 4f, 5f)
F 6( 4f, 5g)
F 6( 5f, 5f)
F 6( 5f, 5g)
F 6( 5g, 5g)
F 8( 5g, 5g)
*

G 0( 4f, 5f)
G 1( 4f, 5d)
G 1( 4f, 5g)
G 1( 5d, 5f)
G 1( 5f, 5g)
G 2( 4f, 5f)
G 2( 5d, 6s)
G 2( 5d, 5g)
G 3( 4f, 5d)
G 3( 4f, 6s)
G 3( 4f, 5g)
G 3( 5d, 5f)
G 3( 6s, 5f)
G 3( 5f, 5g)

12
16
22
40
44
56
76
80
84
90
102
108
120
130
166
178
226
232
258
264
276
287
324
336
388
394
420
426
435
464
470
490
496
502

21
33
111
124
182
202
207
317
329
334
413
426
431
489

1.00000000F 1 1
1.00000000F 13 13
1.00000000F 14 14
1.00000000F 7 7
1.00000000F 15 15

(cont.)

*

14
R 0( 4f 5d, 5f 5d)
20
R 0( 4f 6s, 5f 6s)
32
R 0( 4f 5g, 5f 5g)
46
R 1( 4f 5d, 5d 5f)
50
R 1( 4f 5d, 5g 5f)
110
R 1( 4f 5f, 5d 5g)
124
R 1( 4f 5f, 5g 5d)
188
R 1( 4f 5g, 5d 4f)
250
R 1( 4f 5g, 5d 5f)
354
R 1( 4f 5g, 5g 5f)
356
R 1( 5d 5f, 5f 5g)
406
R 1( 5d 5g, 5f 5f)
412
R 1( 5f 5f, 5g 5g)
414
R 2( 4f 5d, 4f 6s)
428
R 2( 4f 5d, 5f 5d)
430
R 2( 4f 5d, 5f 6s)
434
R 2( 4f 5d, 5f 5g)
436
R 2( 4f 6s, 5f 5d)
500
R 2( 4f 5g, 4f 5d)
564
R 2( 4f 5g, 5f 5d)
604
R 2( 4f 5g, 5f 5g)
606
R 2( 5d 5f, 6s 5f)
610
R 2( 5d 5f, 5g 5f)
650
R 2( 5d 5g, 6s 5d)
670
R 2( 5d 5g, 6s 5g)
720
R 2( 5d 5g, 5g 5g)
734
R 3( 4f 5d, 5d 5f)
736
R 3( 4f 5d, 6s 4f)
738
R 3( 4f 5d, 6s 5f)
742
R 3( 4f 5d, 5g 5f)
744
R 3( 4f 6s, 5d 5f)
748
R 3( 4f 6s, 6s 5f)
768
R 3( 4f 6s, 5g 5f)
780
R 3( 4f 5f, 5d 6s)
836
R 3( 4f 5f, 5d 5g)
848
R 3( 4f 5f, 6s 5d)
860
R 3( 4f 5f, 6s 5g)
884
R 3( 4f 5f, 5g 5d)
890
R 3( 4f 5f, 5g 6s)
942
R 3( 4f 5g, 5d 4f)
R 3( 4f 5g, 5d 5f)
992
R 3( 4f 5g, 6s 4f) 1024
R 3( 4f 5g, 6s 5f) 1046
R 3( 4f 5g, 5g 5f) 1150
R 3( 5d 6s, 5f 5f) 1152
R 3( 5d 5f, 5f 6s) 1154
R 3( 5d 5f, 5f 5g) 1156
R 3( 5d 5g, 5f 5f) 1206
R 3( 6s 5f, 5f 5g) 1216
R 3( 6s 5g, 5f 5f) 1218
R 3( 5f 5f, 5g 5g) 1224
R 4( 4f 5d, 5f 5d) 1238
R 4( 4f 5d, 5f 5g) 1242
R 4( 4f 6s, 5f 5g) 1252
R 4( 4f 5g, 4f 5d) 1316
R 4( 4f 5g, 4f 6s) 1338

R 5( 5d 5g, 5f 5f) 2008
R 5( 5f 5f, 5g 5g) 2014
R 6( 4f 5d, 5f 5g) 2018
R 6( 4f 5g, 4f 5d) 2082
R 6( 4f 5g, 5f 5d) 2146
R 6( 4f 5g, 5f 5g) 2178
R 6( 5d 5f, 5g 5f) 2182
R 6( 5d 5g, 5g 5g) 2232
R 7( 4f 5g, 5g 5f) 2336
R 7( 5f 5f, 5g 5g) 2342
*

-1.00000000R 26 14
1.00000000R 27 15
1.00000000R 23 11
0.50000000R 3 1
0.86602540R 4 1
-1.00000000R 22 10
1.00000000R 21 9
1.00000000R 19 7
-1.00000000R 20 8
-1.00000000R 28 16
1.00000000R 25 13
-0.86602540R 3 2
0.50000000R 4 2
-1.00000000R 24 12
-0.86602540R 3 2
0.50000000R 3 1
0.86602540R 4 1
-1.00000000R 18 6
0.50000000R 4 2
1.00000000R 17 5
-1.00000000R 18 6
1.00000000R 25 13
1.00000000R 17 5
1.00000000R 19 7
-1.00000000R 20 8
-1.00000000R 24 12
1.00000000R 21 9
-1.00000000R 26 14
-1.00000000R 28 16
-1.00000000R 22 10
1.00000000R 23 11
1.00000000R 27 15
0.17142857R 21 9
0.02857143R 19 7
0.14285714R 4 2
-0.14285714R 3 1
0.08571429R 20 8
0.28571429R 22 10
0.42857143R 28 16
0.28571429R 27 15
-0.24743583R 4 1
0.02857143R 24 12
0.42857143R 23 11
0.17142857R 26 14
-0.24743583R 3 2

16

510
G 4( 4f, 5f)
606
G 4( 5d, 5g)
612
G 4( 6s, 5g)
624
G 5( 4f, 5d)
703
G 5( 4f, 5g)
716
G 5( 5d, 5f)
774
G 5( 5f, 5g)
795
G 6( 4f, 5f)
905
G 6( 5d, 5g)
G 7( 4f, 5g)
984
G 7( 5f, 5g) 1042
*

-0.27380952G 34 34
-0.50787450G 34 33
0.55135887G 34 32
-0.09731237G 34 31
-1.00946357G 34 30

(cont.)

R 4( 4f 5g, 5f 5d) 1402
R 4( 4f 5g, 5f 6s) 1434
R 4( 4f 5g, 5f 5g) 1476
R 4( 5d 6s, 5g 5g) 1478
R 4( 5d 5f, 5g 5f) 1482
R 4( 5d 5g, 5d 6s) 1512
R 4( 5d 5g, 5g 6s) 1552
R 4( 5d 5g, 5g 5g) 1602
R 4( 6s 5f, 5g 5f) 1622
R 4( 6s 5g, 5g 5g) 1624
R 5( 4f 5d, 5d 5f) 1638
R 5( 4f 5d, 5g 5f) 1642
R 5( 4f 5f, 5d 5g) 1702
R 5( 4f 5f, 5g 5d) 1726
R 5( 4f 5g, 5d 4f) 1790
R 5( 4f 5g, 5d 5f) 1852
R 5( 4f 5g, 5g 5f) 1956
R 5( 5d 5f, 5f 5g) 1958

0.08571429R 25 13
-0.14982984R 17 1
0.25951289R 17 2
0.14982984R 18 2
0.25951289R 18 1
-0.03937627R 30 28
-0.08460778R 32 25
0.11533906R 33 24
0.00067076R 34 28
-0.05155563R 30 27
-0.04956348R 33 23
0.12698464R 30 26
0.09770956R 30 25
0.12978765R 33 22
-0.21161602R 30 24
-0.12989160R 33 25
0.02273390R 30 23

(cont.)

The energy of 2G state of Ce+ is found by the multi–conﬁgurational Hartree–Fock method. First, the
wave functions are obtained by the HF method, using the HF96 program (see Gaigalas and Fischer [24]).
These functions are used as starting ones in solving the multi–conﬁgurational Hartree–Fock equations. The
input ﬁles for MCHF program [23] int.lst, and cf g.inp, are taken from the examples described above.

7 Conclusion

The library SAI supports large scale computations of open–shell atoms using multi–conﬁguration Hartree–
Fock or conﬁguration interaction approaches and may be useful for developing codes for calculating the
spin–angular parts of eﬀective operators from many–body perturbation theory and orthogonal operators or
for evaluating the relativistic Hamiltonian in LS–coupling as well as for various versions of semi–empirical
methods. For example, it expands the use of possibilities of package MCHF ASP [2, 3, 17] because the new
program is faster and provides coeﬃcients and matrix elements for shells (nl) with l = 0, 1, 2 and 3, and l2
for l
3. It is important to underline that the use of the library described allows to perform calculations
of energy spectra of practical any atom or ion starting with LS–coupling and accounting for all relativistic
corrections of the order α2.

≥

Program is obtainable from the Institute of Theoretical Physics and Astronomy, A. Goˇstauto 12, Vilnius,

2600, LITHUANIA. E–mail: gaigalas@itpa.lt.

The author is grateful to Prof. Z. Rudzikas for encouraging and valuable suggestions.

Acknowledgments

References

[1] Z. Rudzikas, Theoretical Atomic Spectroscopy (Cambridge Univ. Press, Cambridge, 1997).

[2] C. Froese Fischer, T. Brage and P. J¨onsson, Computational Atomic Structure. An MCHF Ap-

proach (Institute of Physics Publishing, Bristol/Philadelphia, 1997).

[3] C.F. Fischer, ”The MCHF atomic–structure package”, Comput. Phys. Commun., V. 64, No. 3, p.

369–398 (1991).

Physics, V. 39, p. 79–105 (1999).

[4] G. Gaigalas, ”Integration over spin–angular variables in atomic physics”, Lithuanian Journal of

[5] G. Gaigalas, ”The library of subroutines for calculating standard quantities in atomic structure the-

ory”, Lithuanian Journal of Physics, V. 41, p. 39–54 (2001).

[6] G.A. Gaigalas, Z.B. Rudzikas and C. Froese Fischer, ”An eﬃcient approach for spin–angular
integrations in atomic structure calculations”, J. Phys. B: At. Mol. Opt. Phys., V. 30, p. 3747–3771
(1997).

17

[7] G. Gaigalas and Z. Rudzikas, ”On the secondly quantized theory of the many–electron atom”, J.

Phys. B: At. Mol. Opt. Phys., V. 29, p. 3303–3318 (1996).

[8] A.P. Jucys and A.J. Savukynas, Mathematical Foundations of the Atomic Theory (Mintis, Vilnius,

1973) (in Russian).

Press 1981).

[9] R.D. Cowan, The Theory of Atomic Structure and Spectra (Berkeley, CA: University of California

[10] C.W. Nielson and G. Koster, Spectroscopic Coeﬃcients for the pn, dn, and f n Conﬁgurations (MIT

Press, Cambridge, MA, 1963).

[11] G.A. Gaigalas, Z.B. Rudzikas and C. Froese Fischer, ”Reduced coeﬃcients (subcoeﬃcients) of
fractional parentage for p–, d–, and f –shells”, Atomic Data and Nuclear Data Tables, V. 70, p. 1–39
(1998).

[12] G.A. Gaigalas, A. Bernotas, Z.B. Rudzikas and C. Froese Fischer, ”Spin–other–orbit operator

in the tensorial form of second quantization”, Physica Scripta, V. 57, p. 207–212 (1998).

[13] R. Glass and A. Hibbert, ”Relativistic eﬀects in many electron atoms”, Comput. Phys. Commun.,

V. 16, p. 19–34 (1978).

[14] G. Gaigalas, S. Fritzsche and I.P. Grant, ”Program to calculate pure angular momentum coeﬃ-

cients in jj–coupling”, Comput. Phys. Commun. V. 139, p. 263–278 (2001).

[15] G. Gaigalas, ”Some new simpliﬁcations for the general form of the orbit–orbit interaction operator”,

Lithuanian Journal of Physics, V. 40, p. 395–405 (2000).

[16] U. Fano, ”Interaction between conﬁgurations with several open shells”, Phys. Rev. A., V. 140, No. 1A,

p. A67–A75 (1965).

[17] C. Froese Fischer, Comput. Phys. Commun. 128 (2000) 635.

[18] W. Eissner, M. Jones and H. Nussbaumer, ”Techniques for the calculation of atomic structure
and radiative data including relativistic corrections”, Comput. Phys. Commun., V. 8, p. 270–306 (1974).

[19] H. Tatewaki, M. Sekiya, F. Sasaki, O. Matsuoki and T. Koga, 1996 Phys. Rev. A51 197.

[20] G. Gaigalas, Ch. Froese Fischer, M. Godefroid and Z. Rudzikas, ”Studies of Gd ionization
energy”, Book of Abstracts of XXXI EGAS Conference, 6–9 July, 1999, Marseille, France (Ed. by F.
Vedel), 201–202.

[21] G. Gaigalas, Z. Rudzikas and T. ˇZalandauskas, ”Studies of Er ionization energy”, Lithuanian

Journal of Physics, V. 41, p. 195–199 (2001).

[22] C. Froese Fischer and Bin Liu, ”A program to generate conﬁguration–state lists”, Comput. Phys.

Commun., V. 64, p. 406–416 (1991).

V. 64, p. 431–454 (1991).

[23] C. Froese Fischer, ”A general multi–conﬁgutation Hartree–Fock program”, Comput. Phys. Commun.

[24] G. Gaigalas and C. Froese Fischer, ”Extension of the HF program to partially ﬁlled f –subshells”,

Comput. Phys. Commun., V. 98 p. 255–264 (1996).

18

