Relativistic wave and Green’s functions for hydrogen–like ions

Peter Koval and Stephan Fritzsche

Fachbereich Physik, Universit¨at Kassel,
Heinrich–Plett–Str. 40, D–34132 Kassel, Germany

February 20, 2014

Abstract

The Greens library is presented which provides a set of C++ procedures for the
computation of the (radial) Coulomb wave and Green’s functions. Both, the nonrelativistic
as well as relativistic representations of these functions are supported by the library.
However, while the wave functions are implemented for all, the bound and free–electron
states, the Green’s functions are provided only for bound–state energies (E < 0). Apart
from the Coulomb functions, moreover, the implementation of several special functions,
such as the Kummer and Whittaker functions of the ﬁrst and second kind, as well as a few
utility procedures may help the user with the set–up and evaluation of matrix elements.

3
0
0
2
 
l
u
J
 
3
2
 
 
]
h
p
-
m
o
t
a
.
s
c
i
s
y
h
p
[
 
 
1
v
6
1
1
7
0
3
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

PROGRAM SUMMARY

Title of program: Greens

Catalogue number: To be assigned.

Program obtainable from: CPC Program Library, Queen’s University of Belfast, N. Ireland.
Users may obtain the program also by down–loading a tar–ﬁle from a home page at the
University of Kassel
http://www.physik.uni-kassel.de/∼kovalp/software/greens

Licensing provisions: None.

Computer for which the program is designed and has been tested: PC Pentium III, PC Athlon
Installation: University of Kassel (Germany).
Operating systems: Linux 6.1+, SuSe Linux 7.3, SuSe Linux 8.0, Windows 98.

Program language used: C++.

Memory required to execute with typical data: 300 kB.

No. of bits in a word: All real variables are of type double (i.e. 8 bytes long).

Distribution format: Compressed tar ﬁle.

CPC Program Library Subprograms required: None.

Keywords: conﬂuent hypergeometric function, Coulomb–Green’s function, hydrogenic wave
function, Kummer function, nonrelativistic, relativistic, two–photon ionization cross section,
Whittaker function.

Nature of the physical problem:
In order to describe and understand the behaviour of hydrogen–like ions, one often needs the
Coulomb wave and Green’s functions for the evaluation of matrix elements. But although these
functions have been known analytically for a long time and within diﬀerent representations
[1,2], not so many implementations exist and allow for a simple access to these functions. In
practise, moreover, the application of the Coulomb functions is sometimes hampered due to
numerical instabilities.

Method of solution:
The radial components of the Coulomb wave and Green’s functions are implemented in po-
sition space, following the representation of Swainson and Drake [2]. For the computation
of these functions, however, use is made of Kummer’s functions of the ﬁrst and second kind
[3] which were implemented for a wide range of arguments. In addition, in order to support
the integration over the Coulomb functions, an adaptive Gauss–Legendre quadrature has also
been implemented within one and two dimensions.

2

Restrictions onto the complexity of the problem:
As known for the hydrogen atom, the Coulomb wave and Green’s functions exhibit a rapid os-
cillation in their radial structure if either the principal quantum number or the (free–electron)
energy increase. In the implementation of these wave functions, therefore, the bound–state
20, while
functions have been tested properly only up to the principal quantum number n
≈
the free–electron waves were tested for the angular momentum quantum numbers κ
7 and
. In the computation of the two–photon ionization
for all energies in the range 0 . . . 10
E1s|
|
cross sections σ2, moreover, only the long–wavelength approximation (e ik·r
1) is considered
both, within the nonrelativistic and relativistic framework.

≤

≈

Unusual features of the program:
Access to the wave and Green’s functions is given simply by means of the Greens library
which provides a set of C++ procedures. Apart from these Coulomb functions, however,
Greens also supports the computation of several special functions from mathematical physics
(see section 2.4) as well as of two–photon ionization cross sections in long–wavelength approxi-
mation, i.e. for a very ﬁrst application of the atomic Green’s functions. Moreover, to facilitate
the integration over the radial functions, an adaptive Gauss–Legendre quadrature has been
also incorporated into the Greens library.

Typical running time: Time requirements critically depends on the quantum numbers and
energies of the functions as well as on the requested accuracy in the case of a numerical
integration. One value of the relativistic two–photon ionization cross section takes less or
about one minute on a Pentium III 550 MHz processor.

References:
[1] H. A. Bethe and E. E. Salpeter, Quantum Mechanics of One–and Two–Electron Atoms,
(Kluwer Academic Publishers, 1977).
[2] R. A. Swainson and G. W. F. Drake, J. Phys. A 24 (1991) 95.
[3] M. Abramowitz and I. A. Stegun, Eds., Handbook of Mathematical Functions (Dover, New
York 1965).

3

LONG WRITE–UP

1

Introduction

From the early days of quantum mechanics on, the ’hydrogen atom’ has served not only as
a well–known textbook problem but also as one of the fundamental models in the physics of
atoms, molecules, and nuclei. When combined with the (atomic) shell model, namely, the
—analytic— solutions for the hydrogen–like ions help understand most atomic processes in
Nature, at least qualitatively. For this reason also, the ’hydrogen atom’ has found its way into
quite diﬀerent ﬁelds of physics including, for example, astro– and plasma physics, quantum
optics or even the search for more eﬃcient x–ray lasers schemes.

Despite of the success of the hydrogen model, however, the Coulomb problem is not always
that simple to deal with, in particular, if a relativistic treatment is required. Therefore,
various program tools have been developed over the years to help with either the analytic
or numerical manipulation of the Coulomb functions and their matrix elements. For the
nonrelativistic Coulomb problem, for example, the bound–electron states can be obtained
from the codes of Noble and Thompson [1], who applied a continued fraction representation
of the Whittaker functions, Bell and Scott [2], or simply by using the Gnu Scientiﬁc Library
[3]. These functions are incorporated also into a recent library by Madsen and coworkers
[4], which has been designed to support the computation of the multipole matrix elements
for circular and linear polarized light. — Less attention, in contrast, has been paid to the
relativistic wave functions for which a cpc program is provided only by Salvat et al. [5]. This
program help integrate the radial equation for any spherical–symmetric potential for both,
the (one–particle) Schr¨odinger and Dirac equations and also provides separate procedures to
compute the Coulomb wave functions.

Apart from the bound and free–electron wave functions, however, the Coulomb Green’s func-
tions play a similar important role, in particular, if the interaction of atoms with external
ﬁelds is to be studied. In second– and higher–order perturbation theory, for instance, these
functions help to carry out the summation over the complete spectrum in a rather eﬃcient
way. But although diﬀerent analytic representations are known for the Green’s functions
[6, 7, 8, 9, 10], until today, there are almost no reliable codes freely available.

Therefore, to facilitate the further application of the ’hydrogen atom’ in diﬀerent contexts, here
we present the Greens library which provides a set of C++ procedures for the computation of
the Coulomb wave and Green’s funtions. In Greens, these hydrogenic functions are supported
both, within a nonrelativistic as well as relativistic framework. Beside of the various routines
for the computation (of the radial parts) of these functions, however, we also supply the user
with a Gauss–Legendre quadrature and a set of special functions to simplify the evaluation of
matrix elements. — But before we shall present details about the organization of the Greens
library, in the following section, we ﬁrst compile the basic formulas from the theory of the
’hydrogen atom’ with emphasize especially to those expressions, which have been implemented
explicitly. In section 3, later, the program structure will be discussed and how the library is
to be distributed. This section also lists all user–relevant commands, although not much is
said here about the underlying algorithms. In most cases, we followed the expressions from

4

sections 2 but care has been taken in order to provide a reliable code for a rather wide range
of parameters which, sometimes, required quite additional eﬀort. In section 4, we explain how
(easily) the hydrogenic wave and Green’s functions can be accessed not only for a particular
set of arguments but also for the computation of matrix elements. These examples may serve,
therefore, also as a test bed for the installation of the code. Section 5, ﬁnally, gives a brief
summary and an outlook into our future work.

2 Theoretical Background

Since the theory of the ’hydrogen atom’ has been presented at quite many places before (see,
for instance, the texts of Messiah [11] and Drake [12]), we shall restrict ourselves to rather a
short compilation of formulas, just enough in order to provide the basic notations and those
expressions which are implemented in the code. In the next two subsections, therefore, we ﬁrst
recall the (analytic) form of the Coulomb wave and Green’s functions while, in subsection 2.3,
these functions are applied to calculate the two–photon ionizations cross sections for linear and
circular polarized light. In all these subsections, the nonrelativistic and relativistic formulas
are always presented in turn of each other in order to display the similarities but also the
diﬀerences in the numerical treatment of these functions. Subsection 2.4, moreover, provides
reference to a few special functions from mathematical physics, which frequently occur in the
computations of the Coulomb wave or Green’s functions and, hence, need to be part of the
Greens library.

2.1 Coulomb wave functions

2.1.1 Nonrelativistic wave function

In a time–independent external ﬁeld, the motion of a particle is described by the stationary
Schr¨odinger equation

ˆH (r)

−

E

ψ (r) = 0

(cid:17)
which, obviously, is an eigenvalue equation for the total energy E of the particle. As known
from the nonrelativistic Schr¨odinger theory, the Hamiltonian ˆH just includes the kinetic and
potential energy of the particle and, thus, takes the form 1

(cid:16)

in the case of a (pure) Coulomb ﬁeld of a nucleus with charge Z. For such a spherical–
symmetric potential, of course, Eq. (1) and the wave functions ψ(r) can be separated

ˆH (r) =

2

∇

−

2 −

Z
r

ψnlm(r, θ, ϕ) =

Ylm (θ, ϕ)

Pnl (r)
r

into a radial and an angular part where, in most practical computations, the angular structure
of the wave functions is often treated by means of the techniques from Racah’s algebra [14].
In expression (3), n and l denote the principal and orbital angular momentum quantum
component of the orbital
numbers, respectively, while m describes the projection of the z

1Here and in the following, we use atomic units (me = ~ = e2/4πǫo = 1) if not stated otherwise.

−

5

(1)

(2)

(3)

angular momentum onto the quantization axis and is called the magnetic quantum number.
The radial part of the wave function, Pnl (r)/r, is a solution of the radial Schr¨odinger equation

1
r 2

∂
∂r

r2 ∂
∂r

(cid:18)

(cid:20)

−

(cid:19)

l(l + 1)
r 2

2Z
r

Pnl(r)
r

(cid:21)

+

+ 2E

= 0

which has (normalizable) physical solutions for a discrete set of negative energies

En =

Z
2 n2 < 0,

−

n = 1, 2, . . . ,

the so–called bound states, as well as for all positive energies E > 0, i.e. the continuum or
free–electron states. Both, the bound and continuum solutions of (4) can be represented in
terms of a single Whittaker function of the ﬁrst kind Ma,b (z)

Pnl (r) = C(n, l, Z) Mn, l+

1
2

(2Zr/n)

PEl (r) = C(E, l, Z) M
i

Z
2E , l+

1
2

(
−

2i √2EZ r)

q

with real or complex arguments, and where C(n, l, Z) and C(E, l, Z), respectively, denote
the corresponding normalization factors. The Whittaker functions are closely related to the
Kummer functions of ﬁrst and second kind as we will discuss in subsection 2.2.1.
In the
standard theory, moreover, the radial wave functions (6) and (7) are often normalized due to

∞

0
Z

P 2

nl (r) dr = 1,

∞

0
Z

P ∗

El (r)PE′l (r) dr = δ(E

E′) ,

−

in order to represent a single particle per bound state or per energy unit, respectively, if
particles in the continuum are concerned.

2.1.2 Relativistic wave functions

An eigenvalue equation analogue to (1) also applies, if the motion of the particle is described
within the relativistic theory. For an electron with spin s = 1/2, however, then the Hamilto-
nian ˆH needs to be replaced by the Dirac–Hamiltonian [11]

ˆHD (r) =

icα

∇ + βc2

−

·

Z
r

−

which, apart from the kinetic and potential energy of the electron in the ﬁeld of the nucleus,
now also incorporates the rest energy of the electron as well as energy contributions owing to
its spin. As in the nonrelativistic case, a separation of the wave function

ψnκm(r) =

1
r  

Pnκ (r) Ωκm (θ, ϕ)
i Qnκ (r) Ω−κm (θ, ϕ)!

into a radial and angular part is possible for any spherical–symmetric potential, where the two
radial functions Pnκ (r) and Qnκ (r) are often called the large and small components. These

(4)

(5)

(6)

(7)

(8)

(9)

(10)

(11)

6

two functions also form a radial spinor

and have to be obtained as solutions of the

ﬁrst–order, coupled equations [13]

Pnκ (r)
Qnκ (r)

(cid:18)

(cid:19)

Z
r −

−

E

Pnκ (r)
r

+

κ
αr −

1
αr

∂
∂r

r

Qnκ (r)
r

(cid:21)

(cid:20)

(cid:21)

r +

κ
αr

Pnκ (r)
r

−

2
α2 +

Z
r

+ E

Qnκ (r)
r

(cid:20)
∂
∂r

1
αr

= 0

= 0

(12)

(13)

(cid:20)

(cid:21)

(cid:20)
where, however, the (total) energy E is taken here to represent the energy of the electron
without its rest energy2 c 2, similar to Eq. (4) in the Schr¨odinger theory. In Eqs. (11–13),
1/2 is called the relativistic angular momentum
moreover, κ =
quantum number and carries information about both, the total angular momentum j as well
1)l of the wave function. Again, (normalizable) physical solutions to the Dirac
as the parity (
operator (10) can be found for a discrete set of negative energies

(j + 1/2) for l = j

±

−

±

(cid:21)

Enκ = α−2

1 +

αZ
κ + √κ2

"

n

(cid:18)

α2Z 2

#

(cid:19)

−

−

−
n = 1, 2, . . . ; κ =

− 1
2

2

α−2 < 0 ,

n, . . . , n

1, κ

= 0

(14)

−

−

≥

0 as well as for the (negative) energies E

2c 2. The
and for all positive energies E
two latter —contineous— parts of the spectrum are also called the positive and negative
continuum whereby the negative branch, in particular, requires some re–intepretation of the
theory (in terms of positron states, for example) and often introduces additional complications
in the treatment of many–electron systems. When compared with the nonrelativistic energies
(5), however, the degeneracy of the (relativistic) energies (14) is partially resolved and now
depends on both, the principal quantum number n and the relativistic quantum number κ.

≤ −

Explicit representation of the bound and free–electron solutions of Eqs. (12–13) are known
from the literature (cf. [13, 15]) but typically result in rather lengthy expressions. For the
bound states, for example, the two radial components are given by

Pnκ (r) = CP (n, κ, Z) rse −qr [(

n +

Qnκ (r) = CQ(n, κ, Z) rse −qr [

n +

) M(
κ
|
|
κ

−
Z q−1

κ
|
|
M(

−
(cid:1)
n +
) M(
κ
−
|
|
Z q−1

M(

−
κ
|
|
n +

−

−

(cid:0)
n +

(
−

−

κ

−

−

+ 1, 2s + 1; 2qr)

n +

, 2s + 1; 2qr)
κ
|
|

+ 1, 2s + 1; 2qr)

(cid:3)

−

, 2s + 1; 2qr)
κ
|
|

(cid:3)
(αZ)2, and q =
where M(a, b; z) is the Kummer function of the ﬁrst kind, s =
Z [(αZ)2 + (n
2 , while even more elaborate expressions arise for the free–electron
states [15]. Similiar to (8) and (9),the bound and free–electron radial wave functions can be
normalized also due to

+ s2)]− 1

κ
|

− |

κ2

p

−

(cid:1)

(cid:0)

∞

0

Z

(cid:0)

nκ (r) + Q 2
P 2

nκ (r)

dr = 1,

(cid:1)

(PEκ (r)PE′κ (r) + QEκ (r)QE′κ (r)) dr = δ(E

E′)

−

2In atomic units, the speed of light c = 1/α is the inverse of the ﬁne–structure constant.

∞

0

Z

(15)

(16)

(17)

(18)

7

6
to represent one electron per bound state or per energy unit, respectively.
In the Greens library, the radial functions of the bound and free–electron states can be ac-
cessed by means of the two library procedures greens radial orbital() and greens radial spinor()
in the nonrelativistic and relativistic case, respectively; for further details, see section 3.

2.2 Coulomb Green’s functions

Apart from the wave functions, which describe the electron in particular quantum states,
one often needs a summation over all (unoccupied) states, especially, if parts of the atomic
interaction are treated as a perturbation. A full summation is required in second– and higher–
order perturbation theory, for instance, if the behaviour of the atom is studied in a — not too
weak — radiation ﬁeld or in the presence of external electric or magnetic ﬁelds. Although,
in principle, it appears straightforward to carry out such a summation explicitly, the large
number of terms and the need of free–free matrix elements may hamper such an approach.
Instead, the use of Green’s functions [16]

GE(r, r′) =

ψν (r)
|

i h
Eν −

ψν (r′)
|
E

,

XZν
often provides a much simpler access to the spectrum of the atom and, hence, to a perturbative
treatment of atomic processes.
In the following, therefore, we ﬁrst recall a representation
of the radial Coulomb Green’s functions as appropriate for numerical computations. The
application of these functions in the computation of two–photon ionization cross sections σ2
for hydrogen–like is discussed later in subsection 2.3.

(19)

2.2.1 Nonrelativistic Green’s function

Analogue to the wave functions (3), the Coulomb Green’s functions GE(r, r′) are obtained as
solutions of a linear equation

( ˆH(r)

E) GE (r, r′) = δ(r

r′)

(20)

−
with the same Schr¨odinger operator as in (1) but for an additional δ
like inhomogenity on
the right–hand side, which allows for solutions for any arbitrary E. For a spherical–symmetric
potential, again, this equation can be separated into a radial and angular part by using the
ansatz

−

−

GE(r, r′) =

Ylm(θ, ϕ) Y∗

lm(θ′, ϕ′)

(21)

gEl (r, r′)
rr′

Xlm

for the Green’s function in spherical coordinates. By substituting ansatz (21) into Eq. (20),
one easily shows that the radial Green’s function gEl (r, r′), which just depends on the energy
E and the orbital angular momentum l, must satisfy the equation

1
r 2

∂
∂r

(cid:20)

r2 ∂
∂r

(cid:18)

−

(cid:19)

l(l + 1)
r 2

+

2Z
r

+ 2E

(cid:21)

gEl (r, r′)
rr′

=

2

−

r′)

.

δ(r

−
rr′

Solutions to this single equation can be determined by taking a proper superposition of the
regular and irregular solutions (near the origin) of Schr¨odinger’s equation (4). An explicit
representation for the radial Green’s function reads as [9]

gEl (r, r′) =

τ )
Γ(l + 1
x Γ(2l + 2)

−

Mτ, l+

1
2

(2x r<) Wτ, l+

1
2

(2x r>) ,

(22)

8

Z
x

−

2E)1/2, τ =

, and where r > = max(r, r′) and r < = min(r, r′) refer to the
where x = (
larger and smaller value of the two radial coordinates, respectively. In this representation,
moreover, M a,b (z) and W a,b (z) denote the two Whittaker functions of the ﬁrst and second
kind which can be expressed also in terms of the Kummer functions M(a, b; z) and U(a, b; z)
of the corresponding kinds [17]

M a,b (z) = z b+
W a,b (z) = z b+

1

1

2 e −z/2 M(b

a + 1/2, 2b + 1; z) ,

2 e −z/2 U(b

a + 1/2, 2b + 1; z) .

−

−

(23)

(24)

In practise, the two Kummer functions are used more frequently (than the Whittaker func-
tions) in the mathematical literature and in various program libraries since M (a, b; z) is closely
related to the hypergeometric series and since the Kummer function U (a, b; z) of the second
kind can be expressed in terms of M (a, b; z). In addition, several improved algorithms have
been worked out recently in order to calculate the regular Kummer function M (a, b; z) more
eﬃciently, see section 2.4 for further details.

2.2.2 Relativistic Green’s function

Of course, the relativistic Coulomb Green’s function must refer to the Dirac Hamiltonian (10)
and, hence, is given by a 4

4–matrix which satisﬁes the equation

×
ˆHD(r)
(cid:16)
where I 4 denotes the 4
4 unit–matrix and where, as for the wave functions from Eqs. (12–
×
13), the rest energy c 2 has not been incorporated into the (total) energy E. Solutions to
this equation are known again from the literature for a radial–angular representation of the
Coulomb Green’s function [9]

GE(r, r′) = δ(r

r′) I 4 ,

c 2

−

−

−

E

(cid:17)

GE(r, r′) =

1
rr′ 

κm
X

Eκ (r, r′) Ωκm (r) Ω†
g LL

κm(r′)

i g SL

Eκ (r, r′) Ω−κm (r) Ω†

κm(r′)

i g LS

Eκ (r, r′) Ωκm (r) Ω†
−
Eκ (r, r′) Ω−κm (r) Ω†
g SS

−κm(r′)
−κm(r′) 


, (25)

where the radial part


Eκ (r, r′) g LS
g LL
Eκ (r, r′) g SS
g SL
which must satisfy the matrix equation

 

Eκ (r, r′)
Eκ (r, r′) !

Z
r −

−

E

(cid:20)
1
αr

∂
∂r

r +

(cid:21)
κ
αr








κ
αr −

1
αr

∂
∂r

r

(cid:20)

2
α2 −

Z
r −

−

E

(cid:21)








1
rr′ 

Eκ (r, r′) g LS
g LL

Eκ (r, r′) g SS
g SL

Eκ (r, r′)
Eκ (r, r′)


=

δ(r

r′)

−
rr′

I 2 .

(cid:20)

(cid:21)

(cid:21) (cid:20)


In this representation of the Green’s function, we make use of the two superscripts T and T ′
to denote the individual components in the 2
2 radial Green’s matrix. They may take both
×
the values T = [L, S] to refer to either the large or small components, when multiplied with
a wave function spinor (11). An explicit representation of the (four) components g T T ′
Eκ (r, r′)
of the radial Green’s function is found by Swainson and Drake [9]

/rr′ of this function is now a 2

2–matrix

×

g LL
Eκ
g SL
Eκ

 

g LS
Eκ
g SS
Eκ !

=

1
X 2)2

(1

−

 

−

−

h11

X(h12 + h21) + X 2h22

X(h11 + h22) + h12 + X 2h21

X(h11 + h22) + X 2h12 + h21 X 2 h11

X(h12 + h21) + h22 !

−

−

,

(26)

9

with

and

h11 (r, r′) =

(1

−

X 2)((Eα2 + 1) κγ−1 + 1)

Γ(γ + 1

ν)

2ω

−

Γ(2γ + 2)

Mν, γ+ 1

2 (2ω r<) Wν, γ+ 1

2 (2ω r>)

(27)

h22 (r, r′) =

(1

−

X 2)((Eα2 + 1) κγ−1
2ω

−

1)

Γ(γ

ν)

−
Γ(2γ)

Mν, γ− 1

2 (2ω r<) Wν, γ− 1

2 (2ω r>)

(28)

h21 (r, r′) = h12 (r′, r)

(1

X 2) Γ(γ + 1

ν) αγ−1

=

−

−
2 Γ(2γ + 2)

2γ(2γ + 1) θ(r′

r) Mν, γ− 1

2

(2ωr) Wν, γ+ 1

2

(2ωr′)

h

−

−

−

(ν + γ) θ(r

r′) Wν,γ− 1

2

(2ωr) Mν,γ+ 1

2

(29)

(2ωr′)
i

X = (

κ + γ)(αZ)−1 ,

−

ω = α−1(1

(Eα2 + 1)2)1/2 ,

γ = (κ2

α2Z 2)1/2 ,

−
ν = Z(Eα2 + 1)ω−1 ,

−

and where θ(x) denotes the Heaviside function.

In the Greens library, we provide the two procedures greens radial function() and
greens radial matrix() which support the computation of the radial functions (22) and (26)
for any proper set of parameters.

2.3 Two–photon transition amplitudes and ionization cross sections

The Green’s function (21) and (25) can be utilized directly to evaluate, for instance, the two–
photon cross sections σ2 for a non–resonant excitation, ionization, or decay process. They
also occur rather naturally in the theory of the photon scattering on hydrogen–like ions. In
the following, we brieﬂy outline the perturbative calculation of the two–photon ionization
cross section for hydrogen–like ions which, for an unpolarized target and in atomic units3, is
given by

σ2 =

8 π3 α2
E 2
γ

1
2ji + 1

2 ,

Mf i|
|

κf mf
X

mi
X

where Eγ is the photon energy and Mf i the two–photon transition amplitude
uλ2 e ik2r

p

·

p
|
Eν −

ψν i h

uλ1 e ik1r
ψν |
Ei
Eγ −

·

ψii

|

.

Mf i =

ψf |
h

XZν

In this amplitude, moreover, (ψi, Ei), (ψν , Eν), and (ψf , Ef ) denote the wave functions and
energies of the initial, intermediate and ﬁnal atomic states, respectively. Here, the energy of
the ﬁnal state, Ef , does not appear explicitly in (31) but follows from

(30)

(31)

due to the conservation of energy. Furthermore, the two vector quantities uλ and p in the
transition amplitude (31) refer to the polarization of the two photons as well as to the electron
momentum operator.

3The cross section σ2 has the dimension length4 × time and, thus, can be converted into cgs–units cm4·s by

using the multiplication factor 1.896792 · 10

−50.

Ef = Ei + 2Eγ

10

As mentioned before, the summation over ν in (31) runs over the complete spectrum of the
atom including the continuum. This summation can be replaced, therefore, by a single Green’s
function (19), so that the transition amplitude (31) ﬁnally takes the form

Mf i =

f (r) uλ2 e ik2r
ψ†

p GEi+Eγ (r, r′) uλ1 e ik1r′

p′ ψi(r′) dr dr′ .

(32)

·

·

Z

It is this form of the transition amplitude which has often been used in the literature to study
non–resonant, two–photon processes [10, 18].

2.3.1 Nonrelativistic ionization cross sections

For the sake of brevity, let us restrict ourselves to the two–photon ionization cross sections
within the long–wavelength approximation, i.e. we assume e ik·r
1 for the coupling of the
radiation ﬁeld in (32). Apart from the electric–dipole ﬁeld, of course, this approximation
neglects the contribution from all higher multipoles, but is known to describe well the ioniza-
tion of light atoms with a nuclear charge of, say, Z . 30 and for photon energies below the
ionization threshold Eγ < E T . By substituting p
1/Eγ into Eqs. (30) and
(31), moreover, we may obtain the ionization cross section in length gauge

r and Eγ →

→

≡

σ(length)
2

= 8 π3 α2 E 2
γ

1
2li + 1

Xlf mf

mi
X

M (length)
f i
|

|

2,

with

M (length)
f i

=

ψ†
f (r) uλ2 ·

r GEi+Eγ (r, r′) uλ1 ·

r′ ψi (r′) dr dr′ .

Z

Using the radial–angular representations (3) and (21) of the wave and Green’s functions, re-
spectively, and by making use of some angular momentum algebra, the 6–dimensional integral
in the transition amplitude (34) can be reduced further to just a two–dimensional integration
over the radial coordinates r and r′. In addition, if we assume the ion initially in its 1s ground–
state and circular polarized light, i.e. two photons with the same helicity λ1 = λ2 =
1, the
two–photon ionization cross section (in length gauge) simply takes the form

±

σ(length, circular)
2

= 8π3α2 E2
γ

PEf 2 (r) r gEi+Eγ,1 (r, r′) r′ P10 (r′) dr dr′

(35)

2.3.2 Relativistic two–photon ionization cross sections

Z

(cid:12)
(cid:12)
(cid:12)
(cid:12)

2

.

(cid:12)
(cid:12)
(cid:12)
(cid:12)

The long–wavelength approximation for the coupling of the radiation ﬁeld can be considered
also within the framework of the relativistic theory. In this framework, however, an useful
estimate of the total cross section σ2 are obtained only if the photon energy is well below
the threshold energy Eγ < E T of the two–photon ionization. In the relativistic theory, the
(long–wavelength) transition amplitude (32) takes the form

Mf i = c 2

ψ†
f (r) uλ2 ·

α GEi+Eγ (r, r′) uλ1 ·

α′ ψi(r′) dr dr′,

(36)

Z

where α denotes Dirac’s velocity operator. Using the radial–angular representation (25) of the
Green’s functions, then the total two–photon ionization cross section σ2 for circular–polarized

(33)

(34)

11

light can be written as

σ(velocity, circular)
2

=

8π3
α2 E2

γ (cid:26)

32
25

U SL

d 5

2 , p 3

2 , s 1

2

(cid:16)

(cid:17)

2

+

12
2025

5 U LL
h

(cid:16)

d 3

2 , p 3

2 , s 1

2

+

(cid:17)

+ 3 U SL

d 3

2 , p 3

2 , s 1

2

5 U LL

d 3

2 , p 1

2 , s 1

2

15 U LS

d 3

2 , p 1

2 , s 1

2

(cid:16)

−

(cid:17)

(cid:16)

−

(cid:17)

(cid:16)

(cid:27)

(cid:17)i

2

, (37)

where we introduced the radial integral

U T T ′

(κf , κν , κi) =

Ef κf (r) g T T ′
g T

Ei+Eγ ,κν (r, r′) g T

niκi (r′) dr dr′ .

′

(38)

Z

nκ(r) and g S

In this integral, a superscript T refers to the conjugate of T , i.e. T = S for T = L and
vice versa, and g L
nκ(r) are used to denote the large and small components of
the radial spinor (11). This notation allows for a very compact representation of the multi–
photon transition amplitudes which can be applied also well beyond the long–wavelength
approximation.

In the Greens library, the procedure greens two photon cs() is presented to compute two–
photon ionization cross sections in various approximations.

2.4 Special functions

Of course, the main emphasize in developing the Greens library has been paid to the compu-
tation of the Coulomb wave and Green’s functions as appropriate for a theoretical description
of hydrogen–like ions. As seen from sections 2.1 and 2.2, however, for an explicit represen-
tation of these functions we usually need to refer to a few special functions such as the Γ(z)
and Ψ(z) functions, or the Kummer and Whittaker functions of the ﬁrst and second kind
which are known from the mathematical literature [17]. Therefore, in order to facilitate the
implementation of the Coulomb functions, we have to provide also a simple interface to these
special functions; in the following, we brieﬂy summarize the deﬁnition of these functions and
for which type of arguments they are needed for the Greens library.

Euler’s Gamma function Γ(z) and the Psi–function Ψ(z) occur very frequently and in quite
diﬀerent ﬁelds of physics. While the Γ

function is deﬁned by the integral

the Ψ

function refers to the derivative

−

Γ(z) =

tz−1 e −t dt

−

∞

0

Z

Ψ(z) =

d [lnΓ(z)]
dz

.

(39)

(40)

1,

−

These functions are deﬁned for all complex arguments z except of the real negative integers z

=
2, ... where they have their poles. In Greens, the Γ(z) function with real arguments
−
z is needed for the computation of the bound–state wave and Green’s functions, respectively,
while complex arguments arise in the representation of the free–electron waves (7). The
Ψ
function, in addition, arises in the calculation of the Kummer function U (a, b; z) of the
second type if the argument b refers to an integer in the computation of nonrelativistic Green’s
functions.

−

12

6
Although the Coulomb wave and Green’s functions are often expressed in terms of the Whit-
taker functions M a,b (z) and W a,b (z) of the ﬁrst and second kind, in practical computations
one makes better use of the Kummer functions of the corresponding kind, as discussed in sub-
section 2.2.1 above. The Kummer functions M (a, b; z) and U (a, b; z) of the ﬁrst and second
kind refer to the regular and irregular solutions of Kummer’s equation

z

d 2 M
dz 2 + (b

z)

−

dM
dz −

a M = 0 ;

in the literature, however, also several other notations are used for these functions such as
M(a, b; z) = 1F1(a; b; z) or U(a, b, z) = Ψ(a, b, z), respectively. Usually, the function M (a, b; z)
of the ﬁrst kind is solved for the initial value M(a, b; 0) = 1 and, hence, is given by the conﬂuent
hypergeometric series

M(a, b; z) = 1 +

z +

a
b

1
2

a(a + 1)
b(b + 1)

z2 +

.

· · ·

(41)

(42)

The Kummer function of the ﬁrst kind M(a, b; z) is needed for both, real a, b, z and complex
arguments a, z to represent the radial wave and Green’s function components. In contrast,
the Kummer function U(a, b; z) of the second kind is required only for real argument b, for
which it can be expressed as a linear combination

U(a, b; z) =

π
sin πb

(cid:20)

M(a, b; z)

Γ(1 + a

b) Γ(b) −

−

z1−b M(a + 1

−

Γ(a) Γ(2

b, 2

b; z)

−
b)

−

(cid:21)

(43)

of two Kummer functions of the ﬁrst kind; the function U(a, b; z) arises in the computation
of the radial Green’s function.

The following section explains how these special functions from the Greens library can be
used also in applications other than the computation of Coulomb wave and Green’s functions.

3 Program organisation

3.1 Overview about the Greens library

The Greens library has been designed mainly in order to facilitate numerical applications
of the Coulomb wave and Green’s functions from section 2.
It provides the user with a
set of C++ procedures to compute the radial components of these functions within both, a
nonrelativistic as well as relativistic framework. Apart from the radial components, however,
we also support the numerical integration of the Coulomb functions as well as the computation
of a few selected matrix elements which, below, will help us demonstrate the application of
the Greens library. To provide the user with a simple access to the various functions, the
concepts of object–oriented programming such as structures, classes and members as well as
the overloading of procedures and operators have been utilized carefully.

Table 1 lists the main procedures of the Greens library for calculating the energies and
radial components of the Coulomb functions. To simplify the use of the library, the classes
spinor2 col, spinor2 raw, and matrix 2x2 have been implemented to describe the radial
spinor (11), its adjunct raw spinor, and the radial Green’s matrix (26), respectively. The
classes spinor2 col and spinor2 raw, for instance, contain each the two members .L and

13

.S to represent the large and small components of a relativistic wave function, while the
class matrix 2x2 has the four members .LL, .LS, .SL, and .SS with an obvious meaning.
The class matrix 2x2, moreover, also contains the member .e which just returns all the four
matrix elements together within a 2

2 array.

×

In order to treat the bound– and free–electron states in a similar way, the two wave func-
tion procedures green radial orbital() and green radial spinor() have been overloaded. For
these two procedures, a ﬁrst integer argument n
1 is used to represent the principal
quantum number and to return the corresponding bound–state solution, while a (ﬁrst) argu-
ment E > 0 of type double refers to the kinetic energy of a free–electron state (in Hartree
units). As mentioned above, however, this energy E does not include the electron rest en-
ergy, neither in the nonrelativistic nor relativistic framework. The two additional procedures
greens set nuclear charge() and greens get nuclear charge() from table 1 can be called to re–
deﬁne or to return the current value of the nuclear charge which is utilized for the computation
of all radial functions. The default value of the nuclear charge is Z = 1.

≥

In most applications, the (radial) Coulomb wave and Green’s function components usually
occur as part of some matrix element and, hence, ﬁrst require an additional integration (over
r and/or r′) before any observable quantity is obtained. Therefore, to facilitate such appli-
cations, we also provide the utility procedure greens integral GL() which evaluates a 1– or
2–dimensional integral over a ﬁnite or inﬁnite area with a user–deﬁned accuracy, see table 2.
In this procedure, a Gauss–Legendre quadrature [17] of appropriate order is applied, indepen-
dently for each dimension of the integrand. Moreover, to ensure a result which is accurate
up to a given number of d valid digits, the domain of integration is divided by steps into
subdomains until the required accuracy is obtained. A Warning arises during the execution,
if the requested precision cannot be guarranteed by the procedure. As seen from table 2, the
is overloaded and, thus, can be invoked with rather
procedure name greens integral GL()
diﬀerent lists of parameters, from which the dimension of the integral, the integration domain
as well as the type of the function is deduced. Apart from a real–valued integrand f (x) or
f (x, y), respectively, greens integral GL() also supports a matrix 2x2–valued integrand as
appropriate for the computation of matrix elements such as (38) from the relativistic theory.
In the latter case, for instance, all the four integrals U LL, U LS, U SL and U SS in (37) could
be treated simultaneously.

A second utility procedure greens two photon cs() from table 2 enables the user to calculate
two–photon ionization cross sections in various approximations. Obviously, this procedure
makes use of greens integral GL() and is mainly provided for test purposes below. It helps
compute the total two–photon ionization cross sections σ2 for linear or circular polarized light
and within either the nonrelativistic or relativistic framework, respectively.
In all of these
cases, however, the computation of the cross sections is restricted to the long–wavelength
approximation e ikr = 1 for the coupling of the radiation ﬁeld and to the ionization of an
electron from the unpolarized 1s ground state. In addition, the photon energy E γ, i.e. the
third argument of the procedure greens two photon cs() must be in the range
E1s/2 <
E γ <
binding energy from Eqs. (5) or (14). Again, the
last argument d refers to the requested accuracy of the cross section of (at least) d valid digits
and is transfered directly to the underlying integration procedure greens integral GL() .

E1s where E1s is the (negative) 1s

−

−

−

Of course, the wave and Green’s functions from section 2 can hardly be implemented without

14

Table 1 Main procedures of the Greens library to calculate the energies and radial wave and Green’s functions for hydrogen–like ions. The (expected)
type of parameters is shown by using the syntax of C++; all quantities below must be given in atomic units.

Procedure

Arguments

Description and comments

double greens energy

(int n)

(int n, int kappa)

double
greens radial orbital

(int n, int l, double r)

(double E, int l, double r)

Returns the nonrelativistic energy En (in a. u.) of a bound–state solution with
principal quantum number n; see Eq. (5).
Returns the relativistic energy Enκ (in a. u.) of a bound–state solution quantum
numbers n and κ; see Eq. (14).
Computes the value of the radial function Pnl(r) at r of a bound state (6) with
principal quantum number n and orbital angular momentum l.
Computes the value of the radial function PEl(r) at r of a free–electron state (7)
with energy E > 0 and orbital angular momentum l.

1
5

spinor2 col
greens radial spinor

(int n, int kappa, double r)

Computes the value of the radial spinor function

at r of a bound state

(15–16) with principal quantum number n and relativistic angular momentum
quantum number κ.

(double E, int kappa, double r)

Computes the value of the radial spinor function

at r of a free–

Pnκ (r)
Qnκ (r)!

 

PEκ (r)
QEκ (r)!

 

double
greens radial function

(double E, int l, double r,
double r’)

matrix 2x2
greens radial matrix

(double E, int kappa, double r,
double r’)

electron state with energy E and relativistic angular momentum quantum number
κ.
Computes the radial Coulomb Green’s function gEl (r, r′) at r and r′ from (22)
for the energy E < 0 and orbital angular momentum l.

Computes the radial Coulomb Green’s matrix

from (26) at r and

r′ for the energy E < 0 and the relativistic angular momentum quantum number
κ.

g LL
Eκ
g SL
Eκ

 

g LS
Eκ
g SS
Eκ !

Table 2 Utility procedures of the Greens library for the numerical integration of 1– and 2–dimensional functions and the computation of two–photon
ionization cross sections σ 2 in various approximations. The same notation as in table 1 is used.

Procedure

Arguments

Description and comments

double
greens integral GL

(double(*funct)(double x), double a,
double b, int d)

Calculates the deﬁnite (1–dimensional) integral

f (x) dx with an accuracy of

(at least) d valid digits. This procedure applies an adaptive Gauss–Legendre
integration formula, independently in each dimension.

(double(*funct)(double x), int d)

Calculates the deﬁnite (1–dimensional) integral

f (x) dx with an accuracy of

1
6

(double(*funct)(double x, double y),
double ax, double bx, double ay,
double by, int d)

(double(*funct)(double x, double y),
int d)

double
greens two photon cs

("nonrelativistic", "circular",
double E ph, int d)

("nonrelativstic", "linear",
double E ph, int d)
("relativistic", "circular",
double E ph, int d)

("relativistic", "linear",
double E ph, int d)

b

a
R

∞

0
R

bx

by

ax
R

ay
R

∞

∞

0
R

0
R

(at least) d valid digits if f (x) does not oscillate rapidly and vanishes suﬃciently
fast for large values of x.

Calculates the deﬁnite (2–dimensional) integral

f (x, y) dxdy with an accu-

racy of (at least) d valid digits.

Calculates the deﬁnite (2–dimensional) integral

f (x, y) dxdy with an accu-

racy of (at least) d valid digits if f (x, y) does not oscillate rapidly and vanishes
suﬃciently fast for large values of x and y.

Computes the nonrelativistic two–photon ionization cross section (35) for circu-
lar polarized light, in long–wavelength approximation, and for a photon energy
Eph > E1s/2. A cross section value in atomic units and with an accuracy of (at
least) d valid digits is returned.
Computes the nonrelativistic two–photon ionization cross section for linear po-
larized light and in long–wavelength approximation.
Computes the relativistic two–photon ionization cross section (37) for circu-
lar polarized light, in long–wavelength approximation, and for a photon energy
Eph > E1s/2.
Computes the relativistic two–photon ionization cross section for linear polarized
light and in long–wavelength approximation.

Table 3 Special function procedures of the Greens library. The same notation as in table 1 is used.
The type of all procedures is double if all arguments are double, and is of type complex otherwise.

Procedure

Arguments

Description and comments

GAMMA

(double z) or (complex z)

Psi

(double z) or (complex z)

KummerM

(double a, double b, double z) or
(complex a, double b, complex z)

KummerU

(double a, double b, double z)

WhittakerM

(double a, double b, double z) or
(complex a, double b, complex z)

WhittakerW

(double a, double b, double z)

Returns the Γ(z) function (39) for either a
real or complex argument z.
Returns the Ψ(z) function (40) for either a
real or complex argument z.
Calculates the Kummer function M(a, b; z)
of the ﬁrst kind (42) for real and/or complex
arguments a, b, and z.
Calculates the Kummer function U(a, b; z) of
the second kind (43) for real arguments a, b,
and z.
Calculates the Whittaker function Ma,b(z) of
the ﬁrst kind (23) for either real or complex
arguments a, b, and z; b must be real.
Calculates the Whittaker function Wa,b(z) of
the second kind (24) for real arguments a, b,
and z.

a proper set of special function procedures. Therefore, table 3 displays those procedures which
are provided by the Greens library and which we brieﬂy discussed in section 2.4. The allowed
types of the parameters are also displayed in this table.

3.2 Distribution and compilation of the Greens library

The Greens library will be distributed as the gzipped tar–ﬁle greens.tar.gz from which
the greens root directory is obtained by gunzip greens.tar.gz and tar -xvf greens.tar.
This root contains a Read.me ﬁle, the src subdirectory for the source code as well as six
In src, we provide the header ﬁle greens.h and a
subdirectories for various examples.
makeﬁle to facilitate the compilation of the (static) library libgreens.a in the greens root
directory. It also incorporates about 50 source ﬁles for all of the individual procedures.

In the following section, two examples from the subdirectories example-coulomb-funct and
example-twophoton-cs are discussed in more detail and are taken as the test for the instal-
lation of the library. Each of these example subdirectories, again, contain a makeﬁle from
which an executable (a.out) is generated simply by typing make within the corresponding
subdirectory. Since these makeﬁles also compile and link the library libgreens.a, the user
may start directly from a copy of one of these subdirectories for his own application of the
Greens library.

4 Examples

To illustrate the use of the Greens library, we ﬁrst show how the (radial) Coulomb wave
and Green’s functions can be calculated for any point r or (r, r′), respectively. Hereby,

17

#include "greens.h"

n, l, kappa;

int main(void){
int
double r, rp, E, wf_nr, gf_nr;
spinor2_col wf_r;
matrix_2x2 gf_r;

// quantum numbers
// coordinates, energies, etc.
// relativistic spinor
// relativistic Green’s matrix

print("#Test of the Coulomb radial functions");

for(double Z=1.0; Z<93.0; Z=Z+91.0) {

print();
greens_set_nuclear_charge(Z);
E = -greens_energy(1) * 0.8;

// set nuclear charge

rp = 2.5/Z; n = 4; l = 2; kappa = -3;
write("# coord
print("
for (r=0.0; r<25.0/Z; r=r+0.1/Z){

gf_nr

wf_nr

wf_r.L ");

gf_r.e[0][0] gf_r.LL");

wf_nr = greens_radial_orbital(n, l, r);
wf_r = greens_radial_spinor (n, l, r);
gf_nr = greens_radial_function(-E, l, r, rp);
gf_r = greens_radial_matrix (-E, l, r, rp);

printf("%E %E %E %E %E %E\n", r, wf_nr, wf_r.L,

gf_nr, gf_r.e[0][0], gf_r.LL); }}

return 0;}

Figure 1: Calculation of the Coulomb wave and Green’s functions for nuclear charge Z = 1
and Z = 92. The printout of this procedure is shown in the Test Run Output and in the
ﬁle printout.txt in the subdirectory example-coulomb-funct.

a simple comparison between the nonrelativistic and relativistic theory — in the limits of
a low and high nuclear charge Z — is achieved by setting Z = 1 (hydrogen) and Z =
92 (hydrogen–like uranium), respectively. Figure 1 displays the source code which evalu-
values in the range
ates the two radial functions P4d(r) and P4d5/2 (r), respectively, for r
r = 0., . . . , 25./Z with a stepsize of ∆r = 0.1/Z. Beside of these wave function com-
ponents, this code also calculates the Coulomb Green’s functions at the same values of r
and for a ﬁxed r′ = 2.5/Z. For a call of this procedure, the printout is (partially) shown
in the Test Run Output below. The source of this example and the complete print-
out can be found in the subdirectory example-coulomb-funct.
In order to obtain the
—full— radial part of the Coulomb wave and Green’s functions, of course, the results of
greens radial orbital() and greens radial spinor() must be multiplied with 1/r, while the val-
ues from greens radial function() and greens radial matrix() have to be multiplied with 1/rr′,
respectively.

−

A second example concerns the computation of the two–photon ionization cross sections for
the two ions from above. For these ions, the 1s binding energies are
4232 Hartrees
within the nonrelativistic theory. In the Test Run Output below, the two–photon ionization
cross sections for circular and linear polarized light and within both, the nonrelativistic and
relativistic approximation. For each of these ions, the cross sections are calculated with an
Z 2
accuracy of about six digits for the ten energies Eo, Eo + 0.01
Z 2 corresponds to 60 % of the nonrelativistic 1s binding energy. Again,
where Eo = 0.3
the full source of this example is provided with the Greens library in the subdirectory

Z 2, . . . , Eo + 0.09

1/2 and

−

−

∗

∗

∗

18

example-twophoton-cs and, thus, can easily be modiﬁed for any other photon energy.

5 Summary and outlook

To facilitate applications of the ’hydrogen ion model’ in quite diﬀerent ﬁelds of physics, the
Greens library is presented and provides a set of C++ procedures for the computation of
the Coulomb wave and Green’s functions within both, a nonrelativistic as well as relativistic
framework. Since C++ is today freely available for most architectures, an object–oriented
approach to the Coulomb problem could be realized without the need for special compilers
or other mathematical libraries. Apart from the radial Coulomb functions, however, Greens
also provides a set of special functions as well as a few utility procedures to evaluate, for
instance, the two–photon ionization cross sections in long–wavelength approximation.

In the future, various extensions of the Greens library might be of great interest for the
physics community. Owing to the current design of several free–electron laser (FEL) facilities
worldwide, for example, systematic investigations on multiphoton processes become more and
more likely also in the EUV and x–ray region, where the inner–shell electron get involved. For
such investigations, which will consider also many–electron atoms and ions, the generation of
eﬀective one–particle Green’s functions are certainly desirable. First steps into this direction,
including the combination with the well–known Ratip package [19], are currently under work
in our group.

References

[1] C. J. Noble and I. J. Thompson, Comput. Phys. Commun. 33 (1984) 413.

[2] K. L. Bell and N. S. Scott, Comput. Phys. Commun. 20 (1980) 447.

[3] http://sources.redhat.com/gsl/.

[4] L. B. Madsen, J. P. Hansen, H. M. Nilsen, Comput. Phys. Commun. 120 (1999) 231.

[5] F. Salvat et al, Comput. Phys. Commun. 90 (1995) 151.

[6] L. Hostler, J. Math. Phys. 5 (1964) 591.

[7] L. Hostler, J. Math. Phys. 11 (1970) 2966.

[8] J. Mlodzki, Comput. Phys. Commun. 34 (1984) 211.

[9] R. A. Swainson and G. W. F. Drake, J. Phys. A 24 (1991) 95.

[10] A. Maquet, V. Veniard and T. A Marian, J. Phys. B 31 (1998) 3743.

[11] A. Messiah, Quantum mechanics (Amsterdam, North-Holland, 1999).

[12] G. W. F. Drake Atomic, Molecular, and Optical Physics handbook, (Woodbury, New York

1996).

[13] R. A. Swainson and G. W. F. Drake, J. Phys. A 24 (1991) 79.

19

[14] D. A. Varshalovich, A. N. Moskalev, V. K. Khersonskii, Quantum Theory of Angular

Momentum (World Scientific, Singapore a.o., 1988).

[15] J. Eichler, W. E. Meyerhof, Relativistic Atomic Collisions (Academic Press, Inc. New

[16] P. Morse and H. Feshbach, Methods of Theoretical Physics, Vol. 1 (McGraw–Hill Inc.,

[17] M. Abramowitz and I. A. Stegun, Eds., Handbook of Mathematical Functions (Dover,

[18] G. W. Series, Ed., The Spectrum of Atomic Hydrogen: Advances (World Scientiﬁc, New

York, 1995).

New York 1953) p. 821.

New York 1965).

Jersey 1988).

[19] S. Fritzsche, J. Electr. Spec. Rel. Phenom. 114–116 (2001) 1155.

20

Test Run output

A. Computation of the radial Coulomb wave and Green’s functions

#Test of the Coulomb radial functions

wf_nr

wf_r.L

#Nuclear charge is changed to 1.000000
# coord
0.000000E+00 0.000000E+00 0.000000E+00 0.000000E+00 0.000000E+00 0.000000E+00
1.000000E-01 6.758392E-06 6.761076E-06 9.861696E-05 9.865164E-05 9.865164E-05
2.000000E-01 5.228909E-05 5.230066E-05 7.642130E-04 7.643481E-04 7.643481E-04
...
2.480000E+01 -2.307241E-01 -2.307229E-01 8.979656E-09 8.980284E-09 8.980284E-09
2.490000E+01 -2.295400E-01 -2.295388E-01 8.243999E-09 8.244579E-09 8.244579E-09

gf_r.e[0][0]

gf_r.LL

gf_nr

wf_nr

wf_r.L

#Nuclear charge is changed to 92.000000
# coord
0.000000E+00 0.000000E+00 0.000000E+00 0.000000E+00 0.000000E+00 0.000000E+00
1.086957E-03 6.482422E-05 4.344695E-04 1.071923E-06 5.170738E-06 5.170738E-06
2.173913E-03 5.015393E-04 1.952599E-03 8.306663E-06 2.311893E-05 2.311893E-05
...
2.706522E-01 -2.201670E+00 -2.088423E+00 8.960868E-11 1.641947E-10 1.641947E-10
2.717391E-01 -2.190133E+00 -2.074839E+00 8.226637E-11 1.512671E-10 1.512671E-10

gf_r.e[0][0]

gf_r.LL

gf_nr

B. Computation of two-photon ionization cross sections

#Test of the two-photon ionisation cross sections
#Digits is changed to 6

cs_r_c

#Nuclear charge is changed to 1.000000
# E
cs_nr_c
3.000000E-01 8.728681E-01 8.727765E-01 5.849625E-01 5.849002E-01
3.100000E-01 8.819793E-01 8.818399E-01 5.889291E-01 5.888364E-01
3.200000E-01 9.143732E-01 9.143980E-01 6.095973E-01 6.096138E-01
...
3.800000E-01 5.778480E+00 5.794808E+00 4.829547E+00 4.843563E+00
3.900000E-01 1.792990E-01 1.796899E-01 2.330477E-01 2.333333E-01

cs_nr_l

cs_r_l

cs_r_c

cs_nr_c

#Nuclear charge is changed to 92.000000
# E
2.539200E+03 1.439533E-12 6.927729E-13 9.647196E-13 4.629667E-13
2.623840E+03 1.454559E-12 6.763950E-13 9.712612E-13 4.510878E-13
2.708480E+03 1.507983E-12 6.588038E-13 1.005347E-12 4.392479E-13
...
3.216320E+03 9.529863E-12 6.744809E-13 7.964884E-12 4.646710E-13
3.300960E+03 2.956996E-13 7.498654E-13 3.843421E-13 5.232579E-13

cs_nr_l

cs_r_l

21

