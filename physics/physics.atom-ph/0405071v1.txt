The library of subroutines for calculating standard quantities in
atomic structure theory

Gediminas Gaigalas
State Institute of Theoretical Physics and Astronomy,
A. Goˇstauto 12, Vilnius 2600, LITHUANIA

February 2, 2008

Abstract

This library (collection of subroutines) is presented for calculating standard quantities in the de-
composition of many–electron matrix elements in atomic structure theory. These quantities include the
coeﬃcients of fractional parentage, the reduced coeﬃcients of fractional parentage as well as reduced and
completely reduced matrix elements for several operators. So the library is assigned for any computa-
tional scheme. The software is an implementation of a methodology based on the second quantization in
coupled tensorial form, the angular momentum theory in 3 spaces (orbital, spin and quasispin), and the
graphical technique of angular momentum. This implementation extends applications in atomic theory
capabilities to partially ﬁlled f – shells and has lead to faster execution of angular integration codes.

PACS: 31.15.Ne, 31.25.-v, 32.10.-f, 32.30.-r

Keywords: atomic structure, Clebsch–Gordan coeﬃcient, conﬁguration interaction, complex atom, cor-

relation, bound states, LS– coupling, matrix elements, 3nj–coeﬃcients.

4
0
0
2
 
y
a
M
 
4
1
 
 
]
h
p
-
m
o
t
a
.
s
c
i
s
y
h
p
[
 
 
1
v
1
7
0
5
0
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

1

PROGRAM SUMMARY

Title of program : SQ

Catalogue identiﬁer:

Program obtainable from: State Institute of Theoretical Physic and Astronomy, A. Goˇstauto 12, Vilnius, 2600,
LITHUANIA. E-mail: gaigalas@itpa.lt

Computer for which the library is designed and others on which it has been tested:
Computers: Pentium–based PCs

Installations: Institute of Theoretical Physics and Astronomy, A. Goˇstauto 12, Vilnius, 2600, LITHUANIA

Operating systems or monitors under which the new version has been tested: Sun UNIX, LINUX 2.2.3

Programming language used in the new version: FORTRAN 77

Memory required to execute with typical data: 6000K Bytes

Peripherals used: terminal, disk

No. of bits in a word: 32

No. of processors used: 1

Has the code been vectorised or parallelized?: no

No. of bytes in distributed program, including test data, etc.: 285 000 bytes

Distribution format: compressed tar ﬁle

CPC Program Library subprograms used: none

Additional keywords : atomic structure, Clebsch–Gordan coeﬃcient, conﬁguration interaction, Reduced coeﬃcients
of fractional parentage, irreducible tensors, angular momentum theory in three spaces (orbit, spin and quasispin),
second quantization in the coupled tensorial form, recoupling coeﬃcients, complex atom, correlation, wave functions,
bound states, LS coupling, f – shell, matrix elements, 3nj–coeﬃcients.

Nature of physical problem
Accurate theoretical determination of atomic energy levels, orbitals and radiative transition data requires the calcula-
tion of matrix elements of physical operators accounting for relativistic and correlation eﬀects (see the multiconﬁgura-
tion Hartree–Fock method [1], for example). The spin–angular integration of these matrix elements is typically based
on standard quantities like the matrix elements of the unit tensor, the (reduced) coeﬃcients of fractional parentage as
well as a number of other reduced matrix elements concerning various products of electron creation and annihilation
operators [2]. These quantities arise very frequently both in conﬁguration interaction approaches and the derivation
of perturbation expansions for many–particle system using symmetry–adapted conﬁguration state functions.

Method of solution
This program is created involving the angular methodology of [2–7]. It has been extended to include partially ﬁlled
f – subshells in wavefunction expansions. The classiﬁcation of terms is identical to that described in [6].

Restrictions on the complexity of the problem
For LS–coupling subshells states, the library provides coeﬃcients and matrix elements for all subshells (nl) with
l = 0, 1, 2 and 3, and l2

for l ≥ 3.

Unusual features of the program
The library can be used as an ”electronic tables” of standard quantities for evaluating general matrix elements for
LS–coupled functions.

References
[1] C. Froese Fischer, T. Brage and P. J¨onsson, Computational Atomic Structure. An MCHF Approach (Institute of

Physics Publishing, Bristol/Philadelphia, 1997).

[2] Z. Rudzikas, Theoretical Atomic Spectroscopy (Cambridge Univ. Press, Cambridge, 1997).

2

[3] G. Gaigalas and Z. Rudzikas, J. Phys. B: At. Mol. Phys. 29 (1996) 3303.
[4] G. Gaigalas, Z. Rudzikas and C. Froese Fischer, J. Phys. B: At. Mol. Phys. 30 (1997) 3747.
[5] G. Gaigalas, A. Bernotas, Z. Rudzikas and C. Froese Fischer, Physica Scripta 57 (1998) 207.
[6] G. Gaigalas, Z. Rudzikas and C. Froese Fischer, Atomic Data and Nuclear Data Tables 70 (1998) 1.
[7] G. Gaigalas, Lithuanian Journal of Physics 39 (1999) 80.

3

LONG WRITE–UP

1

Introduction

In order to obtain accurate values of atomic quantities it is necessary to account for relativistic and correlation
eﬀects (see for example [1, 2]). Relativistic eﬀects may be taken into account as Breit–Pauli corrections or in
a fully relativistic approach. In both cases for complex atoms and ions, a considerable part of the eﬀort must
be devoted to integrations over spin–angular variables, occurring in the matrix elements of the operators
under consideration.

Many existing codes for integrating are based on a scheme ﬁrst proposed by Fano [3]. This approach is
based on the coeﬃcients of fractional parentage (CFP) and then the integrations over spin–angular variables
constitute a considerable part of the computation, especially when atoms with many open shells are treated,
and the operators are non–trivial [4]. Over the last decade, an eﬃcient approach for ﬁnding matrix elements
of any one– and two–particle atomic operator between complex conﬁgurations has been developed (see papers
Gaigalas et al [5, 6, 7, 8, 9]). It is free of the shortcomings of previous approaches (see Gaigalas [10]). This
approach is based on a second quantization [11] and uses a coupled tensorial form for the electron creation
and annihilation operators [12]. It also applies the theory of angular momentum [13, 14] to three diﬀerent
spaces, i.e.
the space of orbital angular momentum l, spin space s and the quasispin space q [1]. The
basic quantities of this new approach are the reduced coeﬃcients of fractional parentage (RCFP) and the
completely reduced matrix elements of the W (kqklks) operator.

Obviously, each computational scheme is based on a set of standard quantities to decompose the many–
electron matrix elements. These quantities are either CFP, RCFP, the reduced matrix elements of the unit
tensors U (k) and V (k1), the completely reduced matrix elements W (kqklks), the completely reduced matrix
elements of some tensorial products of second quantization operators, depending on the approach [1]. In this
paper, we will present the library SQ (standard quantities). This library is collection of subroutines for the
calculation of abovementioned standard quantities. The same standard quantities arise very frequently in
eﬀective Hamiltonian of perturbation theory or eﬀective operator whose matrix elements between the non–
relativistic LS coupling states are equal to the matrix elements of the full electronic hamiltonian, between the
corresponding jj coupled relativistic states (see Rudzikas [1]), too. So the library not only supports large–
scale computations of open–shell atoms using multiconﬁguration Hartree–Fock or conﬁguration interaction
approaches, but may even help to develope codes for calculating the angular parts of eﬀective operators from
many–body perturbation theory and orthogonal operators or for evaluating relativistic hamiltonian in LS–
coupling as well as for various versions of semi–empirical methods. The code also is intented for approaches
and/or calculations presented in [15, 16, 17, 18, 19]. Some very accurate calculations was performed using
this library (see for example [20, 21, 22, 23]), too.

The theoretical background of this program will be presented in the section 2. It includes a brief outline
of the quasispin concept, the deﬁninitions of the RCFP and the reduced matrix elements of W (kqklks). The
library is presented in section 3.

2 Theoretical bacground

The library is based on the irreducible tensorial form of the second quantization operators and on a quasispin
technique. In this section we brieﬂy describe this approach.

In the quasispin representation, for a wave function of the shell of equivalent electrons

nlN αLS) a label
|
Q – quasispin momentum of the shell – is introduced, which is related to the seniority quantum number
ν, namely, Q = (2l + 1
1) /2. Here α denotes all additional
quantum numbers needed for the one–to–one classiﬁcation of the energy levels. Then, we can rewrite the
wavefunction of equivalent electrons as

ν) /2, and its projection, MQ = (N

2l

−

−

−

Making use of the Wigner–Eckart theorem in quasispin space of a shell lN ,

nlN αQLS MQ).
|

(1)

lN αQLSMQ||
(cid:16)

T (kqklks)
mq

′

lN
||

α′Q′L′S′M ′
Q

(cid:17)

4

= (

1)2kq [Q]−1/2

−

kq

Q′
M ′
Q mq MQ (cid:21) (cid:16)

Q

(cid:20)

l αQLS

T (kqklks)

l α′Q′L′S′

|||

|||

(cid:17)

(2)

it is possible to deﬁne the notions of a completely reduced matrix element
In (2) T (kqklks)

.
(cid:1)
is any tensor with rank kq and its projection mq in quasispin space and on the right–hand
Q′
M ′

side of this equation only the Clebsch–Gordan coeﬃcient

l αQLS
(cid:0)
Q

depends on the number N of

kq

|||

|||

mq

T (kqklks)

l α′Q′L′S′

Q mq MQ (cid:21)

(cid:20)

equivalent electrons.

The electron creation a(l s)

ml ms and annihilation a(l s)†

quantization and atomic structure [11]. Using the quasispin concept, the operators a(l s)
(
−

−ml −ms also form components of an irreducible tensor of rank q = 1

1)l+s−ml−ms a(l s)†

ml ms and
2 in Q–space, i.e.

−ml −ms operators play a key role in the theory of second
(l s)
ml ms=

∼
a

a(q l s)

mq ml ms = 


a(l s)

ml ms

∼
a

(l s)
ml ms



for mq = 1
2 ,

for mq =

1
2 .

−

Compared with the electron creation and annihilation operators above, the operators a(q l s)
an additional quasispin space like a tensor component with rank q and a projection mq =
following relation known between the reduced matrix element of a creation operator and the CFP [24]:

mq ml ms also act in
1
2 . There is the

±

lN αQLS

a(ls)
||

lN −1 α′Q′L′S′
||

= (

1)N

−

(cid:17)

(cid:16)

p

N [J, L, S]

lN αQLS
(cid:0)

lN −1 (α′Q′L′S′) l
||

,

(cid:1)

(4)

where [L, S]
its reduced counterpart in Q–space. Introducing the z
given by [1]

(2L + 1) (2S + 1). Eqs. (4) and (2) can be used to deﬁne the relation between the CFP and
projection, MQ, of the quasispin, this relation is

−

≡

lN αQLS
(cid:0)

lN −1 (α′Q′L′S′) l
||
Q′
M ′

1/2 Q
Q 1/2 MQ (cid:21)

× (cid:20)

= (

1)N −1 (N [Q, L, S])−1/2

×

a(qls)

l α′Q′L′S′

.

|||

(cid:1)

(cid:1)

−
l αQLS
(cid:0)
l αQ′L′S′

|||

Tables of numerical values of

are presented in Rudzikas and Kaniauskas [12]

when l = 0, 1, 2. For the tensorial product of two one–electron operators, the submatrix element equals

(cid:1)

l αQLS
(cid:0)

|||

a(qls)

|||

nlN αQLS

(cid:18)

=

Xǫ,mǫ

[Q]−1/2

|| h

(cid:20)

(k1k2)

a(qλ)
mq2

a(qλ)
mq1 ×
q

q

i

ǫ

mq1 mq2 mǫ (cid:21) (cid:20)
W (ǫk1k2)

|||

×

nl αQLS
(cid:0)

|||

′

nlN
||

α′Q′L′S′

=

(cid:19)

ǫ

Q

Q′
M ′
nl α′Q′L′S′

Q mǫ MQ (cid:21) ×
.

(cid:1)

On the right–hand side of equations (5) and (6) only the Clebsch–Gordan coeﬃcient

depends on the number N of equivalent electrons.

nl αQLS
(cid:0)

|||

W (ǫk1k2)

nl α′Q′L′S′

|||

reduced matrix element) of the triple tensor W (ǫk1k2) =
a following way:

a(qls)

a(qls)

×

(cid:2)

(cid:3)

(cid:1)

denotes reduced in quasispin space submatrix element (completely
(ǫk1k2)

. It is related to the RCFP in

Q′
M ′

ǫ

Q

(cid:20)

Q mǫ MQ (cid:21)

nl αQLS
|||
1)Q+L+S+Q
(cid:0)
−

= (

W (ǫk1k2)
+S
+L

′

′

′

=

nl α′Q′L′S′
|||
+ǫ+k1+k2 [ǫ, k1, k2]1/2
a(qls)

l α′′Q′′L′′S′′

(cid:1)

l αQLS

× Xα′′Q′′L′′S′′ (cid:16)

l α′′Q′′L′′S′′
|||
×
|||
q
l
k1
(cid:0)
L′ L L′′ (cid:27) (cid:26)

q
Q′ Q Q′′ (cid:27) (cid:26)

ǫ

× (cid:26)

(cid:1)

×
s
s
S′ S S′′ (cid:27)

k2

.

|||
l α′Q′L′S′

|||
a(qls)
l

×
(cid:17) ×

5

So, by applying the quasispin method for calculating the matrix elements of any operator, we can use
the RCFP or the completely reduced matrix elements of W (ǫk1k2) (nl, nl), which are independent of the

(3)

(5)

(6)

(7)

occupation number of the shell. The main advantage of this approach is that the standard data tables in
such a case will be much smaller in comparison with tables of the usual coeﬃcients and, therefore, many
summations will be less time–consuming. Also one can see that in such an approach the completely reduced
matrix elements of standard tensors and RCFP actually can be treated in a uniform way as they all are
the completely reduced matrix elements of the second quantization operators. Hence, all methodology of
calculation of matrix elements will be much more universal in comparison with the traditional one.

3 Description of the Library

3.1 SAI SQLS1

The section SQLS1, (standard quantities in LS coupling, part one) is a collection of utilities for calculation
of standard quantities as:

Clebsh–Gordan coeﬃcients of type

1
Q
2
mQ mS mC (cid:21)

C

,

(cid:20)

(cid:20)

Q 1 C
mQ 0 mC (cid:21)

and

Q 1 C
mQ 1 mC (cid:21)

.

(cid:20)

•

•

•

•

•

The 6j

and 9j

coeﬃcients.

−

−

The RCFP ( l QLS

a(qls)

l Q′L′S′ ).

|||

|||

Reduced matrix element ( l QLS

[ a(qls)

a(qls) ](k1k2k3)

l Q′L′S′ ).

|||

×
[a(qls)

mq1 ×

|||
a(qls)
mq2 ](klks)
lN

||
Q′L′S′ ),

′

′

lN

Q′L′S′ ),

The matrix elements of type ( lN QLS

( lN QLS

( lN QLS

( lN QLS

( lN QLS

[a(qls)
mq1 ×
[[ a(qls)
mq1 ×
[ [ a(qls)
mq1 ×
[ [ a(qls)
mq1 ×

[ a(qls)
mq2 ×
a(qls)
mq2 ](k1k2)
a(qls)
mq2 ](klks)
a(qls)
mq2 ](k1k2)

||
a(qls)
mq3 ](k1k2)](klks)
a(qls)
mq3 ](klks)
[ a(qls)
[ a(qls)

mq3 ×
mq3 ×

×

×

×

||

||

||

||

||

′

lN

Q′L′S′ ),

||
a(qls)
mq4 ](klks)](00)
||
a(qls)
mq4 ](k3k4)](klks)

′

lN

||

QLS ) and
′

lN

QLS ).

The subroutines presented in this section are independent and may be useful for other programs. 67
subroutines are contained in this library. Was created the library [25] on the low–powered computers BESM–
6 of the 1980s for some similar quantities for the s–, p– and d– shells. It was written in Fortran 4 and had
17 subroutines.
It was based on the approach [26] and assign for calculation submatrix elements of the
nonrelativistic eﬀective Hamiultonian of atom in the ﬁrst two orders of stationary perturbation theory in
the case of conﬁguration of two open–shells n1lN1
2 . The present library is more general and has more
future because it is useful for diﬀerent approaches with any number of open shells with l = 0, 1, 2 and 3,
and l2 for l

1 n2lN2

3.

≥

3.1.1 Common Blocks

Most of the subroutines use common block GLCONS from MCHF atomic structure package [2, 27]. The
parameters contained in this block are deﬁned in BLOCK DATA GLCONS.

The Common blocks /MT/ and /MT67/ are important, too. The ﬁrst one has the array MT(40), which
contains all the term characteristics of s–, p– and d– shells, that are needed while calculating matrix elements
in the quasispin formalism (see Table 1). An element of the MT array is indicated in the column N o of Table
1, and the T erm column indicates the characteristics of a term contained in that element of MT array. In
other words, for all the s–, p– and d– shells, the terms are numbered from 1 to 40. The terms are marked as
(2S+1)

ν L(2Q+1) in the table.

All the terms for f – shell (see Table 2) are similarly placed in the Common block /MT67/. The N o
column of Table 2 indicates the term number. The T ERM column has (2S+1)LN r in it, the 2Q column has
the quasispin momentum Q multiplied by two. See [8, 28] for the details of the classiﬁcation of f – shell
terms.

The Common block /MT/ is deﬁned in BLOCK DATA TERMLS. Meanwhile the /MT67/ is deﬁned
in BLOCK DATA TRMF from the library SAI SQLS2 (see below). BLOCK DATA TERMLS deﬁnes
9 and shell
COMMON /SKMT2/, which contains term characteristics for special cases, i.e. for shells l = 3
occupation numbers N = 1, 2.

−

Single shell data are stored in the two arrays I and B. The former consists of

6

Table 1: Allowed couplings of lN states for l = 0
2. The subshell quasispin angular momentum Q, spin
angular momentum S, the subshell angular momentum L and seniority quantum number ν are denoted
(2S+1)

−

ν L(2Q+1).

No Term
subshell s
2
1S1
1.
0S2
1
2.
subshell p
4
3S1
3.
2
1P 3
4.
2
3D1
5.
0S4
1
6.
3
2P 2
7.
2D2
1
8.

No Term
subshell d
6
5S1
9.
2
5S1
10.
3P 3
4
11.
3P 3
2
12.
2
1D5
13.
2
3D3
14.
5D1
4
15.
2
5D1
16.
4
3F 3
17.
3F 3
2
18.

No Term
2
5F 1
19.
2
3G3
20.
4
5G1
21.
5G1
2
22.
2
3H 3
23.
2
5I 1
24.
1
0S6
25.
4S2
1
26.
3
2P 4
27.
3
4P 2
28.
4D2
5
29.

No Term
3
4D2
30.
1
2D4
31.
1
4D2
32.
2F 4
3
33.
3
4F 2
34.
1
4F 2
35.
3
4G2
36.
2G4
1
37.
1
4G2
38.
3
4H 2
39.
4I 2
1
40.

I(1) is the state number of the shell (see Tables 1, 2).

I(2) is the principal quantum number n.

I(3) is the orbital quantum number l.

I(4) is the number of electrons in the subshell.

I(5) is the shell total angular momentum L multiplied by two.

I(6) is the shell total angular momentum S multiplied by two.

I(7) is the shell total quasispin Q multiplied by two.

The array B contains

B(1) is the shell quasispin Q.

B(2) is the shell total angular momentum S.

•

•

•

•

•

•

•

•

•

B(3) is the shell quasispin projection MQ.

•
These arrays are placed in Common blocks /TRK/ and /TRK2/. In particular, these are:

Name

Dimension

Function

/TRK/
BDS1
BDS2
BKS1
BKS2
IBDS1
IBDS2
IBKS1
IBKS2

/TRK2/
BDS3
BDS4
BKS3
BKS4
IBDS3

3
3
3
3
7
7
7
7

3
3
3
3
7

The data of the orbitals for ﬁrst two shells
the array B for the ﬁrst shell of the ket function
the array B for the second shell of the ket function
the array B for the ﬁrst shell of the bra function
the array B for the second shell of the bra function
the array I for the ﬁrst shell of the ket function
the array I for the second shell of the ket function
the array I for the ﬁrst shell of the bra function
the array I for the second shell of the bra function

The data of the orbitals for last two shells
the array B for the third shell of the ket function
the array B for the fourth shell of the ket function
the array B for the third shell of the bra function
the array B for the fourth shell of the bra function
the array I for the third shell of the ket function

7

Table 2: Allowed couplings of f N . The subshell spin angular momentum S, number N r and the subshell
angular momentum L are denoted (2S+1)LN r. The quasispin angular momentum is denoted Q.

No Term 2Q No Term 2Q No
69
35
1
70
36
2
71
37
3
72
38
4
73
39
5
74
40
6
75
41
7
76
42
8
77
43
9
78
44
10
79
45
11
80
46
12
81
47
13
82
48
14
83
49
15
84
50
16
17
85
51
86
52
18
87
53
19
88
54
20
89
55
21
90
56
22
91
57
23
92
58
24
93
59
25
94
60
26
95
61
27
28
96
62
97
63
29
98
64
30
99
65
31
100
66
32
101
67
33
102
68
34

4I 1
4I 2
4I 3
4I 4
4I 5
4K 1
4K 2
4K 3
4L1
4L2
4L3
4M 0
4N 0
2S1
2S2
2P 1
2P 2
2P 3
2P 4
2P 5
2D1
2D2
2D3
2D4
2D5
2D6
2D7
2F 1
2F 2
2F 3
2F 4
2F 5
2F 6
2F 7

8S0
6P 0
6D0
6F 0
6G0
6H 0
6I 0
4S1
4S2
4P 1
4P 2
4D1
4D2
4D3
4D4
4D5
4D6
4F 1
4F 2
4F 3
4F 4
4F 5
4G1
4G2
4G3
4G4
4G5
4G6
4G7
4H 1
4H 2
4H 3
4H 4
4H 5

0
2
0
2
0
2
0
4
0
2
2
4
2
2
0
0
0
4
2
2
2
0
4
2
2
2
0
0
0
2
2
2
0
0

4
2
2
0
0
2
2
0
2
0
0
2
0
0
0
4
2
2
2
0
4
4
2
2
2
0
0
6
4
2
2
2
2
2

Term 2Q No
2F 8
103
2F 9
104
2F A
105
2G1
106
2G2
107
2G3
108
2G4
109
2G5
110
2G6
111
2G7
112
2G8
113
2G9
114
2GA
115
2H 1
116
2H 2
117
2H 3
118
2H 4
119
2H 5
120
2H 6
121
2H 7
122
2H 8
123
2H 9
124
2I 1
125
2I 2
126
2I 3
127
2I 4
128
2I 5
129
2I 6
130
2I 7
131
2I 8
132
2I 9
133
2K 1
134
2K 2
135
2K 3
136

0
0
0
4
1
2
2
2
2
0
0
0
0
4
4
2
2
2
2
2
0
0
4
2
2
2
2
0
0
0
0
4
2
2

Term 2Q
2K 4
2
2K 5
2
2K 6
0
2K 7
0
2L1
4
2L2
2
2L3
2
2L4
0
2L5
0
2M 1
2
2M 2
2
2M 3
0
2M 4
0
2N 1
2
2N 2
0
2O0
2
2Q0
0
7F 0
1
5D1
3
5D2
1
5D3
1
5F 1
3
5F 2
1
5G1
3
5G2
1
5G3
1
5P 0
1
5H 1
1
5H 2
1
5S0
3
5I 1
3
5I 2
1
5K 0
1
5L0
1

8

Table 2 (continued)

No
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170

Term 2Q No
3F 1
171
3F 2
172
3F 6
173
3F 8
174
3D1
175
3D2
176
3D3
177
3D4
178
3F 3
179
3F 5
180
3G1
181
3G2
182
3G4
183
3G5
184
3D5
185
3F 4
186
3F 7
187
3F 9
188
3G3
189
3G6
190
3G7
191
3P 1
192
3P 2
193
3P 3
194
3H 1
195
3H 2
196
3H 3
197
3H 4
198
3P 4
199
3H 5
200
3H 6
201
3P 5
202
3P 6
203
3H 7
204

5
3
1
1
3
3
1
1
3
1
3
3
1
1
1
3
1
1
3
1
1
5
3
3
5
3
3
3
1
1
1
1
1
1

Term 2Q No
3H 8
205
3H 9
206
3I 1
207
3I 2
208
3I 3
209
3I 4
210
3I 5
211
3I 6
212
3K 1
213
3K 2
214
3K 3
215
3K 4
216
3K 5
217
3K 6
218
3L1
219
3L2
220
3L3
221
3M 1
222
3M 2
223
3M 3
224
3N 0
225
3O0
226
1F 2
227
1F 3
228
1F 4
229
1D1
230
1D2
231
1D3
232
1F 1
233
1G1
234
1G2
235
1G3
236
1D5
237
1G5
238

1
1
3
3
1
1
1
1
3
3
1
1
1
1
3
1
1
3
1
1
1
1
1
1
1
5
3
3
3
5
3
3
1
1

Term 2Q
1D6
1
1G6
1
1G7
1
1G8
1
1D4
3
1G4
3
1H 1
3
1H 2
3
1P 0
1
1H 3
1
1H 4
1
1S1
7
1I 1
5
1S2
3
1I 2
3
1I 3
3
1S3
1
1I 4
1
1I 5
1
1S4
1
1I 6
1
1I 7
1
1K 1
3
1K 2
1
1K 3
1
1L1
3
1L2
3
1L3
1
1L4
1
1M 1
1
1M 2
1
1N 1
3
1N 2
1
1Q0
1

9

IBDS4
IBKS3
IBKS4

7
7
7

the array I for the fourth shell of the ket function
the array I for the third shell of the bra function
the array I for the fourth shell of the bra function

In this library, the common blocks /MEDEFN/ and /FACT/ from the earlier version of the MCHF
atomic–structure package [2, 27], and the newly created auxiliary COMMON blocks /KAMPAS/, /RIBOLS/,
/RIBOLSF/, /RIBOF/, /RIBOLS3/, are used.

The authors would like to draw attention at the ordering of terms in Table 2, which is tuned to simplifying

the placement of tables of f – shell reduced coeﬃcients of fractional parentage into DATA blocks.

3.1.2 Subroutines

The subroutine NUMTER

FUNCTION NUMTER has several modes of operation, but only one of these is possible while using it in
other programs. If the input values are the shell’s total quasispin Q multiplied by two (input argument
I2Q), the shell’s total spin S multiplied by two (input argument I2S), the shell’s total angular momentum L
multiplied by two (input argument I2L) and the quantum number l, it will ﬁnd the number of the s–, p– d–
shell’s term, as numbered in Table 1. The other arguments of this subroutine, N K and N D, should be set
to 3. In this mode, a COMMON block /MT/, is needed by the program, which is deﬁned in BLOCK DATA
TERMLS.

The subroutine RUMT

The subroutine RUMT has several modes of operation, but only one of these is possible while using it in other
programs. For an input of the orbital quantum number l (input argument LL) and the term number from
Table 1 (input argument KN T ), it ﬁnds the shell’s total quasispin Q multiplied by two (output argument
LQ), the shell’s total spin S multiplied by two (output argument LS) and the shell’s total angular momentum
L multiplied by two (output argument L). It ﬁnds these characteristics for s–, p– and d– shells. A COMMON
blocks /MT/ is needed by this program, which is deﬁned in BLOCK DATA TERMLS.

The subroutine C0T5S

This subroutine determines the value of the Clebsch–Gordan coeﬃcients:

1
Q
2
QM SM CM (cid:21)

C

.

(cid:20)

The subroutine has the input arguments Q, QM , SM , C, CM and output argument A. The subroutine
performs its calculations by employing analytical expressions from Varshalovich et al [29].

The subroutine C1E0SM

This routine determines the value of the Clebsch–Gordan coeﬃcients:

The subroutine has the input arguments Q, QM , C, CM and output argument A. The subroutine performs
its calculations by employing analytical expressions from Varshalovich et al [29].

The subroutine C1E1SM

This subroutine determines the value of the Clebsch–Gordan coeﬃcients:

The subroutine has the input arguments Q, QM , C, CM and output argument A. The subroutine performs
its calculations by employing analytical expressions from Varshalovich et al [29].

Q 1
QM 0 CM (cid:21)

C

.

(cid:20)

Q 1
QM 1 CM (cid:21)

C

.

(cid:20)

10

(8)

(9)

(10)

The subroutine SIXJ

This routine determines the value of the 6j–coeﬃcients:

J/2 K/2

I/2
L/2 M/2 N/2 (cid:27)

.

(cid:26)

The subroutine has the input arguments I, J, K, L, M , N , IT IK and output argument SI. If the parameter
IT IK = 0, the subroutine does not check the triangular conditions for 6j–coeﬃcient. In other cases it checks
these. If any of the parameters of 6j–coeﬃcient is equal to 0, 1
2 , 2, 3, 4, the subroutine calculates the 6j–
coeﬃcients according to analytical formulas [29, 14]. Otherwise, the customary calculations are performed.
In that case, the COMMON block /FACT/ must be deﬁned. This is done by addressing the SUBROUTINE
FACTRL from the library MCHF LIB COM [2, 27].

2 , 1, 3

The subroutine NINE

J1/2
J3/2
J2/2
L1/2 L2/2 L3/2
K1/2 K2/2 K3/2






.






The subroutine has the input arguments J1, J2, J3, L1, L2, L3, K1, K2, K3, I and output arguments IN
and AA. If the parameter I = 1, the subroutine only checks the triangular conditions of a 9j– coeﬃcient. If
these are not satisﬁed, then IN = 0, and IN = 1 otherwise. At other values of I, the subroutine calculates
the value of 9j– coeﬃcient and assigns it to the output parameter AA.

The subroutine SLS

This subroutine determines the value of the RCFP:

for p–, d–, and f – shells (see (39) in [6]). The routine uses the table of reduced matrix elements of the a(qls)
tensor operator from [8]). The subroutine has the following arguments:

( l QLS

a(qls)

l Q′L′S′ )

|||

|||

(11)

(12)

(13)

1. L is the orbital quantum number l.

2. IT is the state number of the bra function (see Tables 1, 2).

3. LQ is the quasispin Q for the bra function multiplied by two.

4. LL is the total angular momentum L for the bra function multiplied by two.

5. LS is the total angular momentum S for the bra function multiplied by two.

6. ITS is the state number of the ket function.

7. LQS is the quasispin Q for the ket function multiplied by two.

8. LLS is the total angular momentum L for the ket function multiplied by two.

9. LSS is the total angular momentum S for the ket function multiplied by two.

10. S is the value of the reduced matrix element (13) which is returned by the subroutine.

The subroutine RWLS

The routine determines the value of the reduced matrix element:

( l QLS

[ a(qls)

a(qls) ](k1k2k3)

l Q′L′S′ ).

|||

×

|||

(14)

a(qls)](k1k2k3) for s–,
The routine uses the tables of reduced matrix elements of the tensor operator [a(qls)
p– and d– subshells (see ˇSpakauskas et al
[30]), and for the f – shell the expression (34) from paper [5] is
used. The subroutine does not calculate the simple case of k1 = k2 = k3 = 0, because then the operator is
just [ a(qls)
(2l + 1)1/2 (expression (15.54) in Rudzikas [1]). The subroutine has the formal
arguments:

a(qls) ](000) =

×

×

−

11

1. K1 is the rank k1.

2. K2 is the rank k2.

3. K3 is the rank k3.

4. L is the orbital quantum number l.

5. J1 is the state number of the bra function (see Tables 1, 2).

6. J2 is the state number of the ket function.

7. W is the value of the reduced matrix element (14) which is returned by the subroutine.

The subroutine W1

This subroutine determines the value of the matrix element:

( lN QLS

[a(qls)

mq1 ×

||

mq2 ](klks)
a(qls)

||

′

lN

Q′L′S′ ).

(15)

While calculating cases where the orbital number l=0, 1, 2, 3 and the shell occupation number N > 2, the
program relies on the expression (31) from the paper [5]. In that case, the subroutine ﬁnds the Clebsch–
Gordan coeﬃcient which gives the dependence on the shell occupation number. If the tensor product (15)
consists of either two electron creation or two annihilation operators then C1E1SM is called. Otherwise
CLE0SM is called. The subroutine RWLS ﬁnds the reduced matrix elements of the operator [ a(qls)
×
a(qls) ](klks). In other cases, the program calculates according to the expression (40) from paper [6]. The
subroutine has the formal arguments:

1. IK is the array I for the bra function.

2. BK is the array B for the bra function.

3. ID is the array I for the ket function.

4. BD is the array B for the ket function.

5. K2 is the rank kl.

6. K3 is the rank ks.

7. QM1, QM2 are the quasispin projections in (15).

8. W is the value of the reduced matrix element (15) which is returned by the subroutine.

The subroutine AWP1LS

The routine determines the value of the matrix elements:

( lN QLS

[a(qls)

mq1 ×

[ a(qls)

mq2 ×

||

mq3 ](k1k2)](klks)
a(qls)

||

′

lN

Q′L′S′ ).

(16)

While calculating cases where the orbital number l=0, 1, 2, 3 and the shell’s occupation number N > 2,
the program relies on the expression (31) from the paper [5]. In that case, the subroutine IZAS1 checks
that the subshell has a state with the speciﬁed characteristics. The subroutine ITLS2 ﬁnds the ﬁrst and
the last numbers of the state from the running intermediate sum in array MT. RUMT ﬁnds the shell’s
total angular momentum LS and quasispin Q for each intermediate state. The routine IXJTIK checks all
triads. The subroutine C0T5S ﬁnds the Clebsch–Gordan coeﬃcient giving the dependence on the shell’s
occupation number and SLS ﬁnds the reduced matrix element of a(qls) tensor operator (see in Section 3.1).
The second part of the expression is calculated by the routine W1 (see in Section 3.1.2). The routine SIXJ
ﬁnds 6j–symbol. In other cases, the program calculates according to the expression (40) from paper [6]. The
subroutine has the arguments:

1. IK is the array I for the bra function.

2. BK is the array B for the bra function.

12

9. QM1, QM2 and QM3 are the quasispin projections in (16).

10. AW is the value of the reduced matrix element (16) which is returned by the subroutine.

The subroutine WAP1LS

This subroutine determines the value of the matrix elements:

( lN QLS

[[ a(qls)

mq1 ×

||

mq2 ](k1k2)
a(qls)

mq3 ](klks)
a(qls)

×

||

′

lN

Q′L′S′ ).

(17)

The structure of the routine WAP1LS is the same as that of AWP1LS. The subroutine has the formal
arguments:

3. ID is the array I for the ket function.

4. BD is the array B for the ket function.

5. K1 is the rank k1.

6. K2 is the rank k2.

7. K3 is the rank kl.

8. BK4 is the rank ks.

1. IK is the array I for the bra function.

2. BK is the array B for the bra function.

3. ID is the array I for the ket function.

4. BD is the array B for the ket function.

5. K1 is the rank k1.

6. K2 is the rank k2.

7. K3 is the rank kl.

8. BK4 is the rank ks.

9. QM1, QM2 and QM3 are the quasispin projections in (17).

10. WA is the value of the reduced matrix element (17) which is returned by the subroutine.

The subroutine WWLS1

The routine determines the value of matrix elements:

( lN QLS

[ [ a(qls)

mq1 ×

||

mq2 ](klks)
a(qls)

[ a(qls)

mq3 ×

×

mq4 ](klks)](00)
a(qls)

||

′

lN

QLS ).

(18)

The routine WWLS1 uses the routines ITLS, RUMT, IZAS1 for calculation of this sort of the matrix element.
The subroutine W1 calculates the ﬁrst and the second parts of the operator calculates. The subroutine has
the formal arguments:

1. IK is the array I for the bra function.

2. BK is the array B for the bra function.

3. ID is the array I for the ket function.

4. BD is the array B for the ket function.

5. K2 is the rank kl.

6. K3 is the rank ks.

7. QM1, QM2, QM3 and QM4 are the quasispin projections in (18).

8. WW is the value of the reduced matrix element (18) which is returned by the subroutine.

13

The subroutine WWPLS1

The routine determines the value of matrix elements:

( lN QLS

[ [ a(qls)

mq1 ×

||

mq2 ](k1k2)
a(qls)

[ a(qls)

mq3 ×

×

mq4 ](k3k4)](klks)
a(qls)

||

′

lN

QLS ).

(19)

The routine WWPLS1 uses the routines ITLS, RUMT, IZAS1 for calculation of this sort of the matrix
element. The subroutine W1 calculates the ﬁrst and the second parts of the operator calculates. The routine
SIXJ ﬁnds 6j–symbol. The subroutine uses the COMMON block /TRK/, which contains arrays I and B for
the bra and ket function (ID1, IK1,BD1 and BK1). It uses the expression (40) from [6]. The subroutine has
the formal arguments:

1. K1 is the rank k1.

2. K2 is the rank k2.

3. K3 is the rank k3.

4. K4 is the rank k4.

5. K5 is the rank kl.

6. K6 is the rank ks.

3.2 SAI SQLS2

7. QM1, QM2, QM3 and QM4 are the quasispin projections in (19).

8. WW is the value of the reduced matrix element (19) which is returned by the subroutine.

The library SAI SQLS2 is the second part of Standard quantities in LS– coupling. Everything in it is related
to the f – shells. The tables of CFP for f – shell (see [8]) and the term characteristics are in this library. This
library can be used in other programs to its full extent, by employing programs from SAI SQLS1 library.
These are the subroutines SLS, RWLS, W1, AWP1LS, WAP1LS, WWLS1, WWPLS1. The remaining two
subroutines may also be used independently.

The subroutine NUMTERF

The subroutine has several modes of operation. But only one of these is useful while operated independently
from the MCHF atomic structure package [2, 27]. In that case, after giving number N r from Table 2 (input
argument I2N), the values of the shell total spin S multiplied by two (input arguments I2S and N), the
shell total angular momentum L multiplied by two, (input argument I2L) and the shell total quasispin Q
multiplied by two (input argument I2Q) for the FUNCTION NUMBER, it ﬁnds the number of f – shell term,
as numbered in Table 2. The subroutine needs the COMMON block /MT67/, which is deﬁned by BLOCK
DATA TERMF.

The subroutine RUMT67

For an input of the term member from Table 2 (input argument KN T ), the subroutine RUMT67 ﬁnds the
number N r from Table 2 (output argument NR), the shell total quasispin Q multiplied by two (output
argument LQ), the shell total spin S multiplied by two (output argument LS) and the shell total angular
momentum L multiplied by two (output argument L). The subroutine needs the COMMON block /MT67/
which is deﬁned by BLOCK DATA TERMF.

4 Examples

A driver program (see Figure 1) accompanying the library SQLSF illustrates three examples.

The examples show that some of the subroutines contained in the libraries may serve as an electronic
version of Nielson and Koster [31] or [8] tables. As such they may serve as a basis for extending the capabilities
of programs that rely on the principle of calculating the determinants to arbitrarily ﬁlled f – shells (see for
example Eissner et al [32] or Zatsarinny [33]).

Here we describe each example separately, the EXAMPLES RUN OUTPUT being shown in Table 4.

14

IF(ICASE .EQ. 1) THEN

WRITE(6,’(/A)’) ’ orbital quantum number l (I1) ’
READ(5,’(I1)’) L
IF(L.LT.3) THEN

WRITE(6,’(/A)’) ’ 2*Q 2*L 2*S for bra function (3I2) ’
READ(5,’(3I2)’) IQB,ILB,ISB
JB=NUMTER(IQB,ISB,ILB,L,3,3)
WRITE(6,’(/A)’) ’ 2*Q 2*L 2*S for ket function (3I2) ’
READ(5,’(3I2)’) IQK,ILK,ISK
JK=NUMTER(IQK,ISK,ILK,L,3,3)

ELSEIF(L.EQ.3) THEN

WRITE(6,’(/A)’) ’ 2*Q 2*L 2*S Nr for bra function (4I2) ’
READ(5,’(4I2)’) IQB,ILB,ISB,INB
JB=NUMTERF(INB,ISB,ILB,ISB,IQB)
WRITE(6,’(/A)’) ’ 2*Q 2*L 2*S Nr for ket function (4I2) ’
READ(5,’(4I2)’) IQK,ILK,ISK,INK
JK=NUMTERF(INK,ISK,ILK,ISK,IQK)

ENDIF
CALL SLS(L,JB,IQB,ILB,ISB,JK,IQK,ILK,ISK,S)
WRITE(6,’(/A,F17.7)’) ’ Value= ’,S

ELSEIF(ICASE .EQ. 2) THEN

WRITE(6,’(/A)’) ’ orbital quantum number l (I1) ’
READ(5,’(I1)’) L
WRITE(6,’(/A)’) ’ number electrons in the shell N (I1) ’
READ(5,’(I1)’) N
WRITE(6,’(/A)’) ’ bra and ket number of term (2I3) ’
READ(5,’(2I3)’) JB,JK
IF(L.LT.3) THEN

CALL RUMT(JB,L,IQB,ISB,ILB)
CALL RUMT(JK,L,IQK,ISK,ILK)

ELSEIF(L.EQ.3) THEN

CALL RUMT67(JB,NRB,IQB,ISB,ILB)
CALL RUMT67(JK,NRK,IQK,ISK,ILK)

ENDIF
CALL SLS(L,JB,IQB,ILB,ISB,JK,IQK,ILK,ISK,S)
QK=DBLE(IQK)*0.5
QB=DBLE(IQB)*0.5
QMK=DBLE(N-1-2*L-1)*0.5
QMB=DBLE(N-2*L-1)*0.5
QM=0.5
CALL C0T5S(QK,QMK,QM,QB,QMB,A)
CFP=S*A/DSQRT(DBLE(N*(IQB+1)*(ILB+1)*(ISB+1)))
IF(((N-1)/2)*2.NE.N-1) CFP=-CFP
WRITE(6,’(/A,F17.7)’) ’ Value= ’,CFP

ELSEIF(ICASE .EQ. 3) THEN

WRITE(6,’(/A)’) ’ orbital quantum number l (I1) ’
READ(5,’(I1)’) L
WRITE(6,’(/A)’) ’ number electrons in the shell N (I1) ’
READ(5,’(I1)’) N
WRITE(6,’(/A)’) ’ first and last number of term for bra (2I3) ’
READ(5,’(2I3)’) JFB,JLB
WRITE(6,’(/A)’) ’ first and last number of term for ket (2I3) ’
READ(5,’(2I3)’) JFK,JLK
WRITE(6,’(/A)’) ’ the ranks K1 K2 K3 (3I1) ’
READ(5,’(3I1)’) K1,K2,K3
WRITE(6,’(3I1)’) K1,K2,K3
DO 2 JTB=JFB,JLB

IF(L.LT.3) THEN

CALL RUMT(JTB,L,IQB,ISB,ILB)

ELSEIF(L.EQ.3) THEN

CALL RUMT67(JTB,NRB,IQB,ISB,ILB)

ENDIF
DO 3 JTK=JFK,JLK

IF(L.LT.3) THEN

CALL RUMT(JTK,L,IQK,ISK,ILK)

ELSEIF(L.EQ.3) THEN

CALL RUMT67(JTK,NRK,IQK,ISK,ILK)

ENDIF
CALL RWLS(K1,K2,K3,L,JTB,JTK,W)
QK=DBLE(IQK)*0.5
QB=DBLE(IQB)*0.5
QM=DBLE(N-2*L-1)*0.5
CALL C1E0SM(QK,QM,QB,QM,A)
VK=-0.5*W*A/DSQRT(DBLE((IQB+1)*(2*K2+1)))
WRITE(6,’(/A,/2I3,F17.7)’)
’ number for bra : number for ket : value ’,JTB,JTK,VK

:

3
2

CONTINUE

CONTINUE

ENDIF

Figure 1:

The program for three examples

15

Case 1. Finding the RCFP

In this case the subroutine ﬁnds the value of a RCFP ( f 8S0
see that the value of this coeﬃcient is equal to

|||

|||

a(qls)

f 7F 0 ). From Table IV of [8] we

|||
This is in accordance with the result obtained with SLS subroutine (see in Section 3.1).

|||

−

( f 8S0

a(qls)

f 7F 0 ) =

4√7.

It is necessary to mention that in the calls to this and some other subroutine, the input of a term number
and term characteristics is needed. In this case the user indicates only the term characteristics, and ﬁnds
the term number by using the subroutine NUMTER (see in Section 3.1) or NUMTERF (see in Section 3.2).
In other examples we will present a way, showing how to call subroutines of analogous type, by deﬁning just
the term number by the user.

Case 2. Calculating the CFP

This case illustrates the ﬁnding of a CFP value, using the SLS program. It may be useful for programs that
are based on the tables of CFP, which are much more extended than the tables of RCFP. The values of CFP
are found by programming the expression (5).

The value of a CFP ( f 7 6D0
that the value of this CFP is equal to

||

f 6 5P 0 f ) is found in the example. We see from Nielson and Koster [31]

( f 7 6D0

f 6 5P 0 f ) =

||

√3
7

.

−

This is in accordance with the result obtained with SLS subroutine.

See [8, 28] for details of the encoding of the f – shell terms. See [8] for a more extensive use of the tables
of RCFP in ﬁnding the CFP. In that paper, also the problems related to that task are discussed and the
ways to solve these are indicated.

Case 3. Calculating the matrix elements of V k operator
In this section it is demonstrated how to calculate the V 11 operator, using the subroutine RWLS (see in
Section 3.1), which calculates the reduced matrix elements (14). For that purpose the relation (16.34) from
Rudzikas [1] is used. While using the U k and V k1 tables, one must pay attention to various phase conventions
used in the literature. In addition, small diﬀerences in the deﬁnitions of U k occur. Some authors, Karazija
et al [34] among them, tabulate the submatrix elements

others, like Nielson and Koster [31] or Cowan [35], tabulate

(lN αSL

U k
||

lN α′S′L′),
||

(lN αL

U k
||

lN α′L′),
||

although they use the notation of (20). Meanwhile, the relation between these two coeﬃcients is:

(lN αSL

U k
||

lN α′S′L′) = δ(S, S′)
||

(2S + 1)(lN αL

U k
||

lN α′L′).
||

p

The submatrix elements are deﬁned as (20) if we use the relations between matrix elements of W (k1k2k3) and
U k as presented in the Rudzikas monograph [1]. Reduced matrix elements of the operator V 11 (f 7 6P 0
are calculated in the example. The numerical value of this reduced matrix element is taken from the Nielson
and Koster [31] tables

V 11
||

f 7 4S1)
||

and agree with our value.

(f 7 6P 0

V 11
||

f 7 4S1) =
||

−r

2
7

(20)

(21)

(22)

16

Table 4. EXAMPLES RUN OUTPUT

Case 1. Finding a reduced coeﬃcient of fractional parentage

>> Example

==========================================

E X A M P L E S

for L I B R A R I E S

==========================================

Case 2. Calculation of the coeﬃcient of fractional parentage

>> Example

==========================================

E X A M P L E S

for L I B R A R I E S

==========================================

Case 3. Calculation of the matrix elements of operator V k

>1

>3

>2

>3

>7

Which case? (1,2,3)

CASE 1
===========
orbital quantum number l (I1)

2*Q 2*L 2*S Nr for bra function (4I2)

2*Q 2*L 2*S Nr for ket function (4I2)

> 0 0 7 0

> 1 6 6 0

bra (number l 2*Q 2*L 2*S)

ket (number l 2*Q 2*L 2*S)

1 3

0

1

0

6

7

6

120 3

Value=
END OF CASE 1
===========

-10.583005244258363

Which case? (1,2,3)

CASE 2
===========
orbital quantum number l (I1)

number electrons in the shell N (I1)

bra and ket number of term (2I3)

3129

bra (number l 2*Q 2*L 2*S N)

3 3

0

4

5

7

ket (number l 2*Q 2*L 2*S)

2

1

4
-0.247435829652697

129 3

Value=
END OF CASE 2
===========

>> Example

==========================================

E X A M P L E S

for L I B R A R I E S

==========================================

>3

>3

>7

>

>

2 2

8 8

>111
111

Which case? (1,2,3)

CASE 3
===========
orbital quantum number l (I1)

number electrons in the shell N (I1)

first and last number of term for bra (2I3)

first and last number of term for ket (2I3)

the ranks K1 K2 K3 (3I1)

number for bra : number for ket : value

2 8

-0.534522483824849

END OF CASE 3
===========

17

5 Conclusion

Accurate theoretical determination of atomic energy levels, orbitals and radiative transition data requires the
calculation of matrix elements of physical operators accounting for relativistic and correlation eﬀects. The
spin–angular integration of these matrix elements is typically based on standard quantities like the matrix
elements of the unit tensor, the (reduced) coeﬃcients of fractional parentage as well as a number of other
reduced matrix elements concerning various products of electron creation and annihilation operators. These
quantities arise very frequently in large–scale computations of open–shell atoms using multiconﬁguration
Hartree–Fock or conﬁguration interaction approaches, in calculating the angular parts of eﬀective operators
from many–body perturbation theory or for evaluating relativistic hamiltonian in LS–coupling as well as
in various versions of semiempyrical methods. The library SQ is assigned for the calculation of all these
standard quantities.
It can be used as ”electronic tables” of standard quantities for evaluating general
matrix elements for LS–coupled functions, too.

The library SQ is created involving the angular methodology of [5, 6, 7, 8, 9, 10]. For LS–coupling
subshells states, the library provides coeﬃcients and matrix elements for all subshells (nl) with l = 0, 1, 2
and 3, and l2 for l

3.

≥

Program is obtainable from State Institute of Theoretical Physic and Astronomy, A. Goˇstauto 12, Vilnius,

2600, LITHUANIA. E-mail: gaigalas@itpa.lt.

References

[1] Z. Rudzikas, Theoretical Atomic Spectroscopy (Cambridge Univ. Press, Cambridge, 1997).

[2] C. Froese Fischer, T. Brage and P. J¨onsson, Computational Atomic Structure. An MCHF Ap-

proach (Institute of Physics Publishing, Bristol/Philadelphia, 1997).

[3] U. Fano, ”Interaction between conﬁgurations with several open shells”, Phys. Rev. A., V. 140, No. 1A,

[4] R. Glass and A. Hibbert, ”Relativistic eﬀects in many electron atoms”, Comput. Phys. Commun.,

p. A67–A75 (1965).

V. 16, p. 19–34 (1978).

[5] G. Gaigalas and Z. Rudzikas, ”On the secondly quantized theory of the many–electron atom”, J.

Phys. B: At. Mol. Opt. Phys., V. 29, p. 3303–3318 (1996).

[6] G.A. Gaigalas, Z.B. Rudzikas and C. Froese Fischer, ”An eﬃcient approach for spin–angular
integrations in atomic structure calculations”, J. Phys. B: At. Mol. Opt. Phys., V. 30, p. 3747–3771
(1997).

[7] G.A. Gaigalas, A. Bernotas, Z.B. Rudzikas and C. Froese Fischer, ”Spin–other–orbit operator

in the tensorial form of second quantization”, Physica Scripta, V. 57, p. 207–212 (1998).

[8] G.A. Gaigalas, Z.B. Rudzikas and C. Froese Fischer, ”Reduced coeﬃcients (subcoeﬃcients) of
fractional parentage for p–, d–, and f –shells”, Atomic Data and Nuclear Data Tables, V. 70, p. 1–39
(1998).

[9] G. Gaigalas, ”Some new simpliﬁcations for general form of orbit–orbit interaction operator, Lithuanian

Journal of Physics, V. 40 p. (2000).

Physics, V. 39 p. 79–105 (1999).

Vilnius, 1984) (in Russian).

Vilnius, 1977) (in Russian).

[10] G. Gaigalas, ”Integration over spin–angular variables in atomic physics”, Lithuanian Journal of

[11] B.R. Judd, Second Quantization and Atomic Spectroscopy (John Hopkins, Baltimore, 1967).

[12] Z.B. Rudzikas and J.M. Kaniauskas, Quasispin and Isospin in the Theory of Atom (Mokslas,

[13] A.P. Jucys and A.A. Bandzaitis, Theory of Angular Momentum in Quantum Mechanics (Mintis,

18

[14] A.P. Jucys and A.J. Savukynas, Mathematical Foundations of the Atomic Theory (Mintis, Vilnius,

1973) (in Russian).

(in Russian).

[15] R. Karazija, Introduction to the Theory of X–Ray and Electronic Spectra of Free Atoms (Plenum

Press, New York and London, 1988).

[16] R. Karazija, Sums of Atomic Quantities and Mean Characteristics of spectra (Mintis, Vilnius, 1991)

[17] G. Gaigalas, J. Kaniauskas, R. Kisielius, G. Merkelis and M.–J. Vilkas, ”Second–Order MBPT

Results for Oxygen Isoelectronic Sequence”, Physica Scripta, V.49, p. 135–147 (1994).

[18] P. Bogdanivich, G. Gaigalas, A. Momkauskait ˙e and Z. Rudzikas, ”Accounting for Admixed
Conﬁgurations in the Second Order of Perturbation Theory for Complex Atoms”, Physica Scripta, V.
56, p. 230–239 (1997).

[19] P. Bogdanoviˇc, G. Gaigalas and A. Momkauskait ˙e, ”Accounting for Correlation Corrections to
Interconﬁgurational Matrix Elements”, Lithuanian Journal of Physics, V. 38 p. 443–451 (1998).

[20] P. Bogdanovich, A. Kynien ˙e, R. Karazija, R. Karpuskiene, and G. Gaigalas, ”Additional
symmetry for the electron shell in its ground state and many–electron eﬀects”, Eur. Phys. J. D, V. 11,
p. 175–183 (2000).

[21] Ch. Froese Fischer, M. Saparov, G. Gaigalas and M. Godefroid, ”Breit–Pauli Energies, Tran-
sition Probabilities and Lifetimes for 2s, 2p, 3s, 3p, 3d, 4s 2L Levels of the Lithum Sequence, Z= 3–8”,
Atomic Data and Nuclear Data Tables, V. 70, p. 119 (1998).

[22] Ch. F. Fischer, A. Ynnerman and G. Gaigalas, ”Multiconﬁguration–Hartree–Fock calculations

for the electron aﬃnity of boron”, Physical Review A, V. 51, p. 4611–4616 (1995).

[23] Ch. F. Fischer, G. Gaigalas and M. Godefroid, ”The 2s2 1S0 – 2s3p 3P 0

1 intercombination line in
the Be– like sequence”, J. Phys. B: Atomic, Molecular and Optical Physics, V. 30, p. 3333–3342 (1997).

[24] R.D. Lawson and M.H. Macfarlane, Nuclear Physics 66 (1965) 80.

[25] G. Gaigalas and G. Merkelis, ”Calculation program of submatrix elements of irreducible tensor
products of the creation and annihilation operators”, A collaction of programs on mathematical supply of
atom calculations, Ed. 17 (Institute of Theoretical Physics of the Academy of Sciences of the Lithuanian
SSR, 1986), p. 78–132, (1986).

[26] G. Merkelis and G. Gaigalas, ”Determination of the expressions for the submatrix elements of the
nonrelativistic eﬀective Hamiultonian of atom in the ﬁrst two orders of stationary perturbation theory
in the case of conﬁguration of two open–shells n1lN1
2 , in: Spectroscopy of Autoionized States of
Atomic and Ions (Moscow, Scientiﬁc Council of Spectroscopy, 1985), p. 20.

1 n2lN2

[27] C.F. Fischer, ”The MCHF atomic–structure package”, Comput. Phys. Commun., V. 64, No. 3, p. 369

– 398 (1991).

[28] G. Gaigalas and C. Froese Fischer, ”Extension of the HF program to partially ﬁlled f –subshells”,

Comput. Phys. Commun., V. 98 p. 255–264 (1996).

[29] D.A. Varshalovich, A.N. Moskalev and V.K. Khersonskii, Quantum Theory of Angular Mo-

mentum (World Scientiﬁc, Singapore, 1988).

[30] V.V. ˇSpakauskas, J.M. Kaniauskas and Z.B. Rudzikas, ”Reduced in quasi–spin space coeﬃcients
of fractional parentage and matrix elements of tensorial operators”, Liet. Fiz. Rink., V. 18, No. 3, p.
293–315 (1978). (English translation– Sov. Phys. Coll. 18(3), 1 (1978) from Allerton Press, New York).

[31] C.W. Nielson and G. Koster, Specroscopic Coeﬃcients for the pn, dn, and f n Conﬁgurations (MIT

Press, Cambridge, MA, 1963).

[32] W. Eissner, M. Jones and H. Nussbaumer, ”Techniques for the calculation of atomic structure
and radiative data including relativistic corrections”, Comput. Phys. Commun., V. 8, p. 270–306 (1974).

19

[33] O. Zatsarinny, ”A general program for computing matrix elements in atomic structure with nonorthog-

onal orbitals”, Comput. Phys. Commun. V. 98 p. 235–254 (1996).

[34] R.I. Karazija, Ya. I. Vizbarait ˙e, Z.B. Rudzikas and A.P. Jucys, Tables for the Calculation
of Matrix Elements of Atomic Quantities, (Moscow, 1967); English translation by E.K. Wilip, ANL–
Trans–563 (National Technical Information Service, Springﬁeld, Va., 1968).

[35] R.D. Cowan, The Theory of Atomic Structure and Spectra (Berkeley, CA: University of California

Press 1981).

20

”Prongramin˙e biblioteka atom¸u strukt¯uros teorijos standartiniams dydˇziams skaiˇciuoti.”

G. Gaigalas

Santrauka

Straipsnyje pateikta biblioteka (paprogrami¸u rinkinys), paraˇsyta Fortran 77 programavimo kalba. Ji
skirta standartini¸u dydˇzi¸u skaiciavimui, su kuriais susiduriame atomo teorijoje nagrin˙ejant ﬁzikini¸u bei
efektyvini¸u operatori¸u matricinius elementus LS ryˇsyje. Visu pirma, tai kilminiai koeﬁcientai bei viene-
tini¸u tenzori¸u U k ir V k1 matriciniai elementai, kurie paprastai pasirodo nagrin˙ejant matricinius elementus
klasikiniais metodais. Be to biblioteka skirta ir toki¸u standartini¸u dydˇzi¸u nagrin˙ejimui, kurie pasirodo
naudojant kvazisukinio formalizm¸a. Tai subkilminiai keoﬁcientai, bei redukuotiniai kvazisukinio erdv˙eje,
vienetiniai tenzoriai W (kqklks). Taigi darbe pateikta biblioteka yra bendro pob¯udˇzio ir skirta matricini¸u
element¸u skaiˇciavimui bet kokia mokslin˙eje literat¯uroje ˇzinoma metodika. Pati biblioteka yra paraˇsyta
remiantis antrinio kvantavimo suriˇstame tenzoriniame pavidale formalizmu, judesio kiekio momento teorija
trijose erdv˙ese (orbitiniame, sukininiame ir kvazisukininiame) ir graﬁne judesio kiekio momento teorija. ˇSi
biblioteka iˇspleˇcia atomo teorijos galimybes, kadangi joje yra pilnai i¸traukti f sluoksniai su bet kokiu sluoksnio
uˇzpildymo skaiˇciumi, bei leidˇzia pagreitinti jau esamas programas.

21

