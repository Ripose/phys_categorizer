Program to calculate pure angular momentum coeﬃcients in
jj–coupling

Gediminas Gaigalas a,b, Stephan Fritzschea and Ian P. Grantc

a Fachbereich Physik, Universit¨at Kassel,
Heinrich–Plett–Str. 40, D–34132 Kassel, Germany.
b Institute of Theoretical Physics and Astronomy,
A. Goˇstauto 12, Vilnius 2600, Lithuania.
c Mathematical Institute, University of Oxford,
24/29 St. Giles’, Oxford OX1 3LB, UK.

February 2, 2008

Abstract

A program for computing pure angular momentum coeﬃcients in relativistic atomic
structure for any scalar one– and two–particle operator is presented. The program, writ-
ten in Fortran 90/95 and based on techniques of second quantization, irreducible tensorial
operators, quasispin and the theory of angular momentum, is intended to replace existing
angular coeﬃcient modules from GRASP92. The new module uses a diﬀerent decom-
position of the coeﬃcients as sums of products of pure angular momentum coeﬃcients,
which depend only on the tensor rank of the interaction but not on its details, with ef-
fective interaction strengths of speciﬁc interactions. This saves memory and reduces the
computational cost of big calculations signﬁcantly.

4
0
0
2
 
y
a
M
 
5
2
 
 
]
h
p
-
m
o
t
a
.
s
c
i
s
y
h
p
[
 
 
1
v
9
2
1
5
0
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

PROGRAM SUMMARY

Title of program: ANCO

Catalogue number: ADOO

Program obtainable from: CPC Program Library, Queen’s University of Belfast, N. Ireland.
Users may obtain the program also by down–loading the tar–ﬁle ratip-anco.tar from our
home page at the University of Kassel
(http://www.physik.uni-kassel.de/fritzsche/programs.html).

Program Summary URL: http://cpc.cs.qub.ac.uk/summaries/ADOO

Licensing provisions: None.

Computer for which the program is designed and has been tested:
IBM RS 6000, PC Pentium II.
Installations: University of Kassel (Germany).
Operating systems: IBM AIX 4.1.2+, Linux 6.1+.

Program language used in the new version: ANSI standard Fortran 90/95.

Memory required to execute with typical data: 100 kB.

No. of bits in a word: All real variables are parametrized by a selected kind parameter.
Currently this is set to double precision for consistency with other components of the RATIP
package [1].

Distribution format: Compressed tar ﬁle. On a UNIX (or compatible) workstation, the
command uncompress uncompress this ﬁle and the command tar -xvf ratip anco.tar
reconstructs the ﬁle structure.

Keywords: atomic many–body perturbation theory, complex atom, conﬁguration interaction,
eﬀective Hamiltonian, energy level, Racah algebra, reduced coeﬃcients of fractional parent-
age, reduced matrix element, relativistic, second quantization, standard unit tensors, tensor
operators, 9/2–subshell.

Nature of the physical problem:

Ak of rank k with respect to a set
The matrix elements of a one–electron tensor operator
Ak|b) where the angular
ab tk
of conﬁguration state functions |γiJii can be written
b
Ak, i, j are CSF labels and a, b run over
coeﬃcients tk
the relevant interacting orbital labels. Similarly, the matrix elements of the Dirac–Coulomb
ab t0
ij(abcd) X k(abcd),
Hamiltonian can be written in the form
HD is the one-electron Dirac Hamiltonian operator, with tensor rank zero, vk
ij(abcd)
where

ij(ab) are independent of the operator

b
ij(ab) (a|

ij(ab) (a|

HD|b) +

abcd vk

P

b

k

P

P

P

b

b

2

are pure angular momentum coeﬃcients for two–electron interactions, and X k(abcd) denotes
an eﬀective interaction strength for the two electron interaction. The eﬀective interaction
strengths for Coulomb and Breit interaction have diﬀerent selection rules and make use of
subsets of the full set of coeﬃcients vk
Such matrix elements are required for the theoretical determination of atomic energy levels,
orbitals and radiative transition data in relativistic atomic structure theory. The code is
intended for use in conﬁguration interaction or multiconﬁguration Dirac–Fock calculations [2],
or for calculation of matrix elements of the eﬀective Hamiltonian in many–body perturbation
theory [3].

ij(abcd).

Method of solution:
A combination of second quantization and quasispin methods with the theory of angular
momentum and irreducible tensor operators leads to a more eﬃcient evaluation of (many–
particle) matrix elements and to faster execution of the code [4].

Restrictions on the complexity of the problem:
Tables of reduced matrix elements of the tensor operators a(q j) and W (kqkj) are provided for
(nj) with j = 1/2, 3/2, 5/2, 7/2, and 9/2. Users wishing to extend the tables must provide
the necessary data.

Typical running time:
3.5 seconds for both examples on a 450 MHz Pentum III processor.

Unusual features of the program:
The program is designed for large–scale atomic structure calculations and its computational
cost is less than that of the corresponding angular modules of GRASP92. The present
version of the program generates pure angular momentum coeﬃcients t0
ij(abcd),
but coeﬃcients tk
ij(ab) with k > 0 have not been enabled. An option is provided for generating
coeﬃcients compatible with existing GRASP92.
Conﬁgurational states with any distribution of electrons in shells with j ≤ 9/2 are allowed.
This pemit user to take into account the single, double, triple excitations form open d– and
f – shells for the systematic MCDF studies of heavy and superheavy elementds (Z > 95).

ij(ab) and vk

References:
[1] S. Fritzsche, C. F. Fischer, and C. Z. Dong, Comput. Phys. Commun. 124 (1999) 240.
[2] I. P. Grant, Methods of Computational Chemistry, Vol 2. (ed. S. Wilson) pp. 1-71 (New
York, Plenum Press, 1988); K. G. Dyall, I. P. Grant, C. T. Johnson, F. A. Parpia and E. P.
Plummer, Comput. Phys. Commun. 55 (1989) 425; F. A. Parpia, C. Froese Fischer and I. P.
Grant, Comput. Phys. Commun. 92 (1996) 249.
[3] G. Merkelis, G. Gaigalas, J. Kaniauskas, and Z. Rudzikas, Izvest. Acad. Nauk SSSR,

Phys. Series 50 (1986) 1403.

[4] G. Gaigalas, Lithuanian Journal of Physics 39 (1999) 80.

3

LONG WRITE–UP

1

Introduction

The improved accuracy of modern experiments challenges theorists to match or exceed ex-
perimental precision. Models of many–electron atoms and ions require both relativistic and
correlation eﬀects to be taken into account; this can be done, for example, by using various
versions of perturbation theory, the conﬁguration interaction method, the multiconﬁguration
Hartree–Fock method [1] or the multiconﬁguration Dirac–Fock method [2].

The evaluation of matrices of one– and two–electron operators for many–electron states in
jj–coupling is customarily done by expressing each matrix element as a sum of products
of angular coeﬃcients and radial integrals. This strategy, based on earlier work by Fano,
was adopted for the MCP program [3, 4] for evaluating angular coeﬃcients for the Coulomb
interaction and the related MCBP program [5] for evaluating angular coeﬃcients for the Breit
interaction. Whilst this strategy was adequate on the relatively low–powered computers of
the 1970s, it is now possible and desirable to use very large conﬁguration sets which require
a more eﬃcient strategy. The new program attains this objective by building up the angular
coeﬃcients for one– and two–electron interactions from a relatively small number of common
spin-angular parts in the manner of [6, 7, 8].

The theoretical background is presented in Section 2, program organization in section 3,
testing and timing studies in section 4 and simple test problems in Section 5.

2 Theoretical background

2.1 Dirac–Coulomb Hamiltonian

As usual, multiconﬁguration self–consistent–ﬁeld calculations in relativistic atomic theory are
based on the Dirac–Coulomb hamiltonian:

HDC =

HD(i) +

N

Xi=1

N

1
2

Xi,j=1

1
rij

.

b
HD(i) is the Dirac one–particle operator,

b

b

HD = cα(i) · pi + [β(i) − 1]c2 −

Z
ri

,

(1)

(2)

b

and the second term in (1) represents the Coulomb interaction of pairs of electrons.
In
equation (2) c denotes the speed of light; α(i) and β(i) are 4 × 4 Dirac matrices for the
ith electron; ri and pi are the radial coordinate of the ith electron and its (3–) momentum,
respectively. The ﬁrst two terms of (2) comprise the Dirac kinetic energy operator.

Both conﬁguration interaction and multiconﬁguration Dirac–Hartree–Fock calculations re-
HDC with respect to a basis of n–electron conﬁgurational states
quire the matrix elements of

b

4

labelled |γrJri, r = 1, 2, 3, . . . The present program computes the pure angular coeﬃcients
rs(ab) (only for k = 0 in the present version) and vk
tk

rs(abcd)) in the expression

hγrJr|

HDC|γsJsi =

t0
rs(ab) (a|

HD|b) +

rs (abcd) X (k)(abcd)
v(k)

(3)

,

)

Xab (

Xk Xcd

b

where X (k)(abcd) is the eﬀective interaction strength of the two–electron interaction with
respect to the orbitals concerned. Here in (3), the interaction is the Coulomb potential only,
where

X (k)(abcd)

(4)
= (−1)khnalajakC (k)knclcjcihnblbjbkC (k)kndldjdiRk(nalajanblbjbnclcjcndldjd),

but the formalism can also be used for the Breit interaction, with a diﬀerent deﬁnition of
X (k)(abcd) and diﬀerent selection rules. Equation (3) is a rearrangement of the formula used
in GRASP92 [9, eqn. (3.10)],

hγrJr|

HDC|γsJsi =

Trs(ab)I(ab) +

Xab (

Xk Xcd

rs (abcd) R(k)(abcd)
V (k)

,

)

(5)

b

b

where

and

I(ab) =

a|

HD|b

R(k)(abcd) =

ab

k+1

cd

(cid:16)

(cid:17)

b
k/r>
r<

(cid:17)

(cid:16)

(cid:12)
(cid:12)
(cid:12)

(cid:12)
is a relativistic Slater integral over orbitals a, b, c, d (in the usual notation). Whilst the
(cid:12)
(cid:12)
one–electron part is the same, equation (5) expands the eﬀective interaction strength as a
traditional sum of Slater integrals, and V (k)
rs (abcd). The latter
can be used for any two–electron interaction, and it is no longer necessary to treat Coulomb
and Breit interactions on a diﬀerent footing in the manner of GRASP92. Other intractions
such as the lowest–order normal mass shift and the speciﬁc mass shift [9, eqns. (3.12–3.14)]
can be handled within the same scheme. The way in which the coeﬃcients are built up is
described below.

rs (abcd) therefore diﬀers from v(k)

2.2 One–particle operators

The matrix elements of a one–particle scalar operator
tions with u open shells can be expressed as a sum over one–electron contributions

F (0) between conﬁguration state func-

ψbra

u (J)

F (0)

ψket

u (J

′

)

=

(cid:17)

niκi,njκj (cid:16)
X

(cid:16)

(cid:13)
(cid:13)
(cid:13) b

(cid:13)
(cid:13)
(cid:13)

where

b

ψbra

u (J)

F (niκi, njκj)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13) b

ψket

u (J

′

)

(cid:17)

(6)

ψbra
(cid:16)

u (J)

F (niκi, njκj)
(cid:13)
(cid:13)
(cid:13)

2ji + 1 R

(cid:13)
(cid:13)
= (−1)∆+1
(cid:13) b

ψket

u (J

′

)

(cid:17)

p

(cid:16)

ji, jj, Λbra, Λket

δ(κi, κj )

niκi

(cid:16)

f (0)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

njκj

(cid:17)

(cid:17)
5

a(q ji)
1/2
(cid:13)
(cid:13)
(cid:13)

×

δ(ni, nj)

(cid:26)

+(1 − δ(ni, nj))

(cid:18)

jNi
i αiQiJi

1/2 × a(q ji)
a(q ji)
−1/2
h
jNi
i αiQiJi

(cid:13)
i
(cid:13)
(cid:13)
N ′
(cid:13)
i
i αiQiJi
j

(cid:13)
(cid:13)
(cid:13)
(cid:13)

(0)

jNi
i αiQiJi

(cid:19)

jNj
j αjQjJj

N ′
j
j αjQjJj
j

.

a(q jj)
−1/2
(cid:13)
(cid:13)
(cid:13)

(cid:16)

(cid:13)
(cid:13)
(cid:13)
(ψbra
u

(cid:17) (cid:18)
(J) || and ||ψket
All states are deﬁned in jj–coupling.
ket functions with u open subshells, κ ≡ (2j + 1)(l − j),

(cid:13)
(cid:13)
u (J ′)) are respectively bra and
(cid:13)
is the one–
njκj
bra and Λket ≡
(cid:17)
ket denote the respective sets of active subshell angular momenta. The opera-
mq are second quantization operators in quasispin space of rank q = 1/2. The operator
mj creates electrons with angular momentum quantum numbers j, mj and its

electron reduced matrix element of the operator
Ji, Jj, Ji′, Jj′
tors a(q j)
(cid:1)
(cid:0)
= a(j)
a(q j)
1/2 mj
conjugate a(q j)
numbers j, mj in a given subshell.

−mj annihilates electrons with the same quantum

niκi
(cid:16)
F (0), Λbra ≡

mj = (−1)j−mj a(j)+

f (0)
(cid:13)
(cid:13)
(cid:13)

Ji, Jj, Ji′ , Jj′

= ˜a(j)

−1/2 mj

(cid:19)(cid:27)

(cid:13)
(cid:13)
(cid:13)

b

(cid:0)

(cid:1)

2.2.1 Recoupling matrix

The recoupling matrix R
in (6) is particularly simple. It is either a product
of delta functions [6, eqn. (18)] when niκi = njκj or a combination of delta functions and
6j− coeﬃcients [6, eqn. (22)] when niκi 6= njκj.

ji, jj , Λbra, Λket

(cid:16)

(cid:17)

2.2.2 Matrix elements of irreducible tensor operators

By applying the Wigner–Eckart theorem in quasispin space we obtain the submatrix elements
of operators of type a(qj)
mq

in the form [10]

jN αQJ
(cid:16)

a(q j)
mq
(cid:13)
(cid:13)
(cid:13)
= −[Q]

−1/2

′

′

Q

J

jN ′
′
α
Q′
M ′

(cid:13)
(cid:13)
(cid:13)
"

(cid:17)
1/2 Q
Q mq MQ #

(cid:16)

jN αQJ

a(q j)

′
j α

′

Q

J

′

,

(7)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

where we have used the conventional shorthand notation (2k + 1) · ... ≡ [k, ...], and the last
factor is a reduced coeﬃcient of fractional parentage. The submatrix elements of the simplest

compound tensor operator of type

(kj)

uses

i
njN ′

′
α

′

Q

J

′

mq2 × a(q j)
a(q j)
mq2
h
a(q j)
mq1 × a(q j)
mq2
(cid:13)
h
(cid:13)
(cid:13)
(cid:13)
[Q]

−1/2

(kj )

q

i

(cid:13)
(cid:13)
(cid:13)
(cid:13)
mq1 mq2 mq # "

kq

q

(cid:19)
Q′
M ′

"

kq Q
Q mq MQ #

njN αQJ

(cid:18)

=

Xkq,mq

×

nj αQJ

W (kqkj)

′
nj α

′

Q

J

′

.

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

nj α′Q′J ′

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

where

nj αQJ

ator W (kqkj) (nj, nj) =

(cid:16)

(cid:16)
W (kqkj)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

h

(cid:12)
(cid:12)
(cid:12)
(cid:17)
a(q j) × a(q j)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

i

denotes the reduced matrix element of the tensor oper-
(kqkj)

in quasi–spin space. In terms of the fully reduced

(8)

6

coeﬃcients of fractional parentage

j αQJ

nj αQJ

W (kqkj)

′
nj α

Q

′

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

= (−1)Q+J+Q′+J ′+kq+kj [kq, kj ]1/2

(cid:16)
′
J

(cid:17)

j α′Q′J ′

, we ﬁnd

(cid:17)

a(qj)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

Xα′′Q′′J ′′ (
′′
J
Q
j α

′′

′′

×

j αQJ

a(q j)

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

kq
q
q
Q′ Q Q′′

j
kj
j
J ′ J J ′′

) (

′′
j α

Q

′′

J

′′

a(q j)

′
j α

′

Q

J

′

.

(9)

)

(cid:17)

(cid:17) (cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

This construction has the advantage that the completely reduced matrix elements on the right
hand side of (7) and (8) are independent of the occupation number of the shell, and so reduces
requirements of storage in comparison with earlier work. These formulae are evaluated in the
module rabs rcfp [11].
The phase factor arises from the reordering needed to match the recoupled creation and
annihilation operators in the bra and ket vectors. We have

(10)

(11)

when niκi = njκj; otherwise

where Nr is the occupation number of subshell r, a = min{i, j}, and b = max{i, j}.

2.2.3 The one–electron submatrix element

It only remains to deﬁne the one–electron interaction matrix element

∆ = 0.

∆ = 1 +

Nr,

b−1

r=a
X

niκi

(cid:16)

f (0)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

njκj

(cid:17)

in (6). The only operator required in this implementation is the matrix element of the Dirac
operator, a tensor operator of rank zero,

njκj

= I(niliji, niliji)δ(κi, κj),

(12)

niκi
(cid:16)

HD
(cid:13)
(cid:13)
(cid:13) b

(cid:13)
(cid:13)
(cid:13)

(cid:17)

where I(niliji, niliji) is deﬁned by [12, eqn. (22)]. The Dirac kinetic energy operator, denoted
by T in [9, eqn. (3.13)], can be obtained from this by setting the nuclear charge Z = 0. The
coeﬃcients Trs(ab) in (3) can now be identiﬁed by inserting (12) in (6). Meanwhile the pure
angular coeﬃcients t0

rs(ab) for one–electron operators can be identiﬁed by inserting

in (6).

niκi
(cid:16)

f (0)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

njκj

= 1

(cid:17)

7

2.3 Two–particle operators

According to [6], the matrix element of any two–particle scalar operator
conﬁguration state functions with u open shells, can be written

G(kk0) between

b

ψbra

u (J)

G(kk0)

′

ψket

u (J

(cid:16)

=

(cid:13)
(cid:13)
(cid:13) b

(cid:13)
(cid:13)
(cid:13)
niκi,njκj,ni′ κi′ ,nj′ κj′ (cid:16)
X

)
(cid:17)
ψbra
u (J)

where

G(niκi, njκj, ni′κi′, nj′κj′)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13) b

ψket

u (J

′

)

(cid:17)

(13)

(ψbra
u

(J) ||

G

niκi, njκj, ni′κi′, nj′κj′

||ψket
u

′

J

)

=

(cid:0)
(−1)∆Θ
b

′

(niliji, njljjj, ni′li′ji′, nj′lj′jj′, Ξ)

(cid:1)

(cid:0)

(cid:1)

Xk12

×T

niji, njjj, ni′ji′, nj′jj′, Λbra, Λket, Ξ, Γ
(cid:16)

(cid:17)

(cid:16)

R

ji, jj , ji′, jj′, Λbra, Λket, Γ

,

(cid:17)

Γ speciﬁes the recoupling scheme required for each matrix element and Ξ, when required,
speciﬁes the coupling scheme of the tensor operators deﬁning each matrix element. The
G(kk0) couples tensor operators of rank k for each electron to give an overall scalar
operator
operator.

b

From (13) we see that the matrix element of any two–particle operator can be written as
a sum over all possible sets of active shell quantum numbers niκi, njκj, ni′κi′, nj′κj′. The
systematic analysis of [6] aims to minimize the computation needed in this expansion. The
parameter distributions are presented in Table 1. Note that for distributions 2–5 and 19–
42 the subshell labels are ordered so that α < β < γ < δ, while for distributions 6–18 no
conditions upon the ordering are imposed. We discuss these structures in more detail below.

2.3.1 Recoupling matrix

The recoupling coeﬃcients deﬁned in [3, 4, 5] did not reduce the recoupling coeﬃcients to their
simplest forms but relied on the analysis module of the NJSYM package (later NJGRAF)
to perform the reduction mechanically. The analysis [6] leads to simpler forms denoted by
ji, jj , ji′, jj′, Λbra, Λket, Γ
. In the case of one interacting shell R
R
reduces to delta functions [6, eqn. (18)]. For two, three and four interacting shells, the recou-
(cid:17)
pling coeﬃcients are given by [6, eqns. (22), (23) and (24)], replacing l, L by j, J respectively.
The recoupling parameters Γ for each distribution can be found in Table 1.

ji, jj , ji′, jj′, Λbra, Λket, Γ

(cid:17)

(cid:16)

(cid:16)

2.3.2 Matrix elements of irreducible tensor operators

niji, njjj, ni′ji′, nj′jj′, Λbra, Λket, Ξ, Γ
The expressions T
subshell creation/annihilation operators
(cid:16)

(cid:17)

are matrix elements of standard

a = a(qj)
mq ,

W =

mq1 × a(qj)
a(qj)
mq2
h

i

(k12)

,

8

(14)

(15)

Table 1: Scheme of the deﬁnitions for matrix elements of any two–particle operator. The
operators a, W, aW and Wa deﬁned in (14) – (18) act on the indicated subshells.

No.

i′

j′

i

j

β α α β
β

Γ
1. α α α α –
–
2. α β α β
k
3.
α k
β α β
4. α β
α k12
β
5.
k12
6. α α β
k12
7.
β α α α jβ
8. α β α α jβ
9.
β
α jα
β
β
10.
β
jα
β α β
11.
β
γ
α
γ
jα, jβ, k
12.
γ
α jα, jβ, k
β
γ
13.
γ
jα, jβ, k12
γ
β α
14.
β
α jα, jβ, k12
γ
γ
15.
jα, jβ, k12
α β
γ
γ
16.
α jα, jβ, k12
β
γ
γ
17. α β
jα, jβ, k12
γ
γ
18.
jα, jβ, k12
γ
β α γ
19. α β
jα, jβ, jγ, jδ
δ
γ
20.
jα, jβ, jγ, jδ
δ
β α γ
21. α β
jα, jβ, jγ, jδ
γ
δ
22.
jα, jβ, jγ, jδ
δ
β α
γ
23.
jα, jβ, jγ, jδ
α β
δ
γ
24.
α jα, jβ, jγ, jδ
β
δ
γ
25.
jα, jβ, jγ, jδ
α β
γ
δ
26.
α jα, jβ, jγ, jδ
β
γ
δ
27. α γ
jα, jβ, jγ, jδ
δ
β
28. α γ
jα, jβ, jγ, jδ
β
δ
29.
jα, jβ, jγ, jδ
β
α
γ
δ
30.
jα, jβ, jγ, jδ
δ
α β
γ
31.
jα, jβ, jγ, jδ
γ
α
δ
β
32.
α jα, jβ, jγ, jδ
γ
β
δ
33.
α jα, jβ, jγ, jδ
δ
β
γ
34.
jα, jβ, jγ, jδ
γ
β α
δ
35. α
jα, jβ, jγ, jδ
γ
β
δ
36.
jα, jβ, jγ, jδ
β
α γ
δ
37. α
jα, jβ, jγ, jδ
β
δ
γ
38.
γ
α β
δ
jα, jβ, jγ, jδ
39.
jα, jβ, jγ, jδ
δ
α
γ
β
40.
α jα, jβ, jγ, jδ
δ
β
γ
41.
α jα, jβ, jγ, jδ
γ
β
δ
42.
jα, jβ, jγ, jδ
δ
β α
γ

Ξ
jα, k
jα
jα, jβ
jα, jβ
jα, jβ
jα, jβ
jα, jβ
jα, k12
jα, k12
jβ, k12
jβ, k12
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–
–

9

α

γ
β
δ ϕ
–
WW –
–
–
W
–
–
–
–
W W –
0
–
W W –
0
–
W W –
0
–
W W –
0
–
W W –
jα + jβ + k12
–
–
aW a
k + k12
–
–
aW a
k
–
k + k12
–
a Wa
–
k
–
–
a Wa
1 + jα + jβ − k
a W –
a
1 + jα + jβ − k
a W –
a
1 + jα + jβ − k12
a W –
a
1 + jα + jβ − k12
a W –
a
jα + jγ + k12
a W –
a
jα + jγ
a W –
a
jα + jβ + k12
a W –
a
jβ + jγ
a W –
a
jα + jβ + k12
a
a
a
a
jβ + jγ + k12
a
a
a
a
jβ + jγ
a
a
a
a
jβ + jγ
a
a
a
a
jα + jδ + k12
a
a
a
a
jα + jδ + k12
a
a
a
a
jα + jδ
a
a
a
a
jα + jδ
a
a
a
a
0
a
a
a
a
0
a
a
a
a
0
a
a
a
a
0
a
a
a
a
jα + jβ + jγ + jδ
a
a
a
a
jα + jβ + jγ + jδ
a
a
a
a
jα + jβ + jγ + jδ
a
a
a
a
jα + jβ + jγ + jδ
a
a
a
a
1 + jγ + jδ − k
a
a
a
a
1 + jγ + jδ − k
a
a
a
a
1 + jγ + jδ − k12
a
a
a
a
1 + jγ + jδ − k12
a
a
a
a
1 + jα + jβ − k
a
a
a
a
1 + jα + jβ − k
a
a
a
a
1 + jα + jβ − k12
a
a
a
a
1 + jα + jβ − k12
a
a
a
a

aW =

a(qj)
mq1 ×

mq2 × a(qj)
a(qj)
mq3

W a =

h
mq1 × a(qj)
a(qj)
mq2

W W =

mq1 × a(qj)
a(qj)
mq2

(k12)

(k2)

,

,

(k12)

i
(k)

×

(cid:21)

(k2)

i
× a(qj)
mq3

(cid:21)
mq3 × a(qj)
a(qj)
mq4
h

(0)

(k)

.

(cid:21)

(cid:20)

(cid:20)h

(cid:20)h

i
The creation and annihilation operators in (14)–(18) refer to a single subshell. The evaluation
of the submatrix elements of operators of type a (14) and the simplest compound tensor
operator of type W (15) was explained in section 2.1.2. For types (16)–(18), we use the
formula

i

(cid:18)

njN αQJ

(cid:13)
h
(cid:13)
(cid:13)
(cid:13)
= (−1)J+J ′+k[k]1/2

U (k1)(nj) × V (k2)(nj)
(cid:13)
i
(cid:13)
(cid:13)
k1 k2
(cid:13)
J ′
J
njN ′′

Xα′′Q′′J ′′ (

′′
α

Q

×

njN αQJ

(cid:16)

U (k1)(nj)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(k)

njN ′

′
α

′

Q

J

′

(cid:19)

k
J ′′

′′

′′

J

,

)
njN ′′

(cid:17) (cid:16)

where U (k1) (nj) , V (k2) (nj) are either of type (14) or type (15). The occupation number
N ′′ is deﬁned by second quantization operators occurring in U (k1) (nj) and V (k2) (nj). The
module rabs rcfp [11] performs the evaluation of these formulae.

′′

′′
α

Q

J

′′

V (k2)(nj)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

njN ′

′
α

′

Q

J

′

(cid:17)

2.3.3 Phase factors ∆

These arise from the reordering necessary to match the recoupled creation and annihilation
operators in bra and ket vectors contributing to the matrix element. For each of the cases
considered in Table 1 we ﬁnd

Cases 1–6 :

Cases 7–18 :

Cases 19–42 :

∆ = 0.

j−1

Xr=i

∆ = 1 +

Nr,

∆ =

Nk +

Nk.

β−1

Xk=α

δ−1

Xk=γ

where Nr is the occupation number of subshell r. If α < β, then i = α, j = β, and if α > β,
then i = β, j = α.

(16)

(17)

(18)

(19)

(20)

(21)

(22)

2.3.4 The coeﬃcients Θ′

niliji, njljjj, ni′li′ji′, nj′lj′jj′, Ξ

The eﬀective interaction strength of order k of a two–electron operator, is denoted by

(cid:0)

(cid:16)

nilijinjljjj

ni′li′ji′nj′lj′jj′

g(kk)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)
10

(cid:1)

(cid:17)

in [7] and by

X k

niliji, njljjj, ni′li′ji′, nj′lj′jj′

in [12]. The coeﬃcients Θ′
in Table 1) have diﬀerent multiplicative factors deﬁned as follows:

niliji, njljjj, ni′li′ji′, nj′lj′jj′, Ξ

(cid:1)

(cid:0)

(cid:1)

(cid:0)

for the diﬀerent cases tabulated

Case 1 : Single subshell (αααα)

(cid:17)

(cid:17)

nαlαjαnαlαjα

δ (k12, k)

(23)

and

Θ

′
IIa (nαlαjα, nαlαjα, nαlαjα, nαlαjα, Ξ)

=

[k]

−1/2

1
2

nαlαjαnαlαjα
(cid:16)

g(kk)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

Θ

′
IIb (nαlαjα, nαlαjα, nαlαjα, nαlαjα, Ξ)

= (−1)k [jα]

−1/2

(cid:16)

g(kk)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

nαlαjαnαlαjα

nαlαjαnαlαjα

δ (k12, 0) .

(24)

Cases 2, 3, 11, 12, 27, 29, 31, 32, 35, 36, 39, 40 : Subshell assignments αβαβ, βαβα, βγαγ,
γβγα, αγβδ, γαδβ, βδαγ, δβγα, αδβγ, δαγβ, βγαδ, γβδα

′

Θ

niliji, njljjj, ni′li′ji′, nj′lj′jj′, Ξ
= (−1)ϕ 1
(cid:0)
2

nilijinjljjj

−1/2

[k]

(cid:1)
g(kk)

(cid:13)
(cid:13)
Cases 6, 15–26 : Subshell assignments ααββ, γγαβ, γγβα, αβγγ, βαγγ, αβγδ, βαδγ, αβδγ,
(cid:13)
βαγδ, γδαβ, δγβα, γδβα, δγαβ

(cid:13)
(cid:13)
(cid:13)

(cid:16)

(cid:17)

ni′li′ji′nj′lj′jj′

δ (k12, k) .

(25)

′

Θ

(cid:0)

niliji, njljjj, ni′li′ji′, nj′lj′jj′, Ξ

= (−1)1+k+ϕ 1
2

[k12]1/2

ji
jj′

(

(cid:1)
ji′
jj

k
k12 )

(cid:16)

nilijinjljjj

ni′li′ji′nj′lj′jj′

. (26)

(cid:17)

g(kk)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

Cases 4, 5, 7, 8, 9, 10, 13, 14, 28, 30, 33, 34, 37, 38, 41, 42 : Subshell arrangements αββα,
βααβ, βααα, αβαα, βββα, ββαβ, γβαγ, βγγα, αγδβ, γαβδ, βδγα, δβαγ, αδγβ, δαβγ,
βγδα, γβαδ

′

Θ

niliji, njljjj, ni′li′ji′, nj′lj′jj′, Ξ

(cid:0)

= (−1)ϕ 1
2

[k12]1/2

ji
jj

(

(cid:1)
k
ji′
jj′ k12 )

nilijinjljjj

g(kk)

ni′li′ji′nj′lj′jj′

.

(27)

(cid:16)

(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

(cid:17)

The phase factors ϕ in expressions (25) – (27) are deﬁned in column ϕ of Table 1. This
construction exploits the common tensorial structure of any scalar two–electron operators
as the Coulomb, Breit and Gaunt interactions [12]) and exploits this similarity to simplify
the calculation of spin–angular coeﬃcients. The relativistic jj–coupling expressions for the
eﬀective interaction strength of the Coulomb interaction [12, eqn. (86)] is

nilijinjljjj

g(kk)

ni′li′ji′nj′lj′jj′

(28)

(cid:16)

= (−1)khnilijikC (k)kni′li′ji′ihnjljjjkC (k)knj′lj′jj′iRk(nilijinjljjjni′li′ji′nj′lj′jj′).

(cid:17)

(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

11

We can now identify the coeﬃcients V k
rs(abcd) of (3) by substituting the results above in (13).
The same construction can be used for the Gaunt interaction (the leading part of the magnetic
Breit interaction) [12, eqn. (91)] and for the full transverse Breit interaction [12, eqn. (101)],
although the selection rules and the eﬀective interaction strengths corresponding to (27) are,
of course, diﬀerent. The pure angular coeﬃcients vk
rs(abcd) for two–electron operators are
the same for all these operators since the vk

rs(abcd) can be identiﬁed by inserting

in (13).

nilijinjljjj
(cid:16)

g(kk)
(cid:13)
(cid:13)
(cid:13)

(cid:13)
(cid:13)
(cid:13)

ni′li′ji′nj′lj′jj′

= 1

(cid:17)

3 Program organization

3.1 Overview of the program

The program ANCO constructs the pure angular coeﬃcients t0
rs(ab) for one–electron operators
and the vk
rs(abcd) coeﬃcients contributing to matrix elements of the Dirac–Coulomb–Breit
Hamiltonian. The coeﬃcients Trs(ab) and V k
rs(abcd) used in GRASP92 and earlier version of
the system are available as an option. The new format generates what we have called “pure”
angular momentum coeﬃcients which can be used unchanged with any one–particle tensor
operator of rank 0, and any two–particle interaction. The Coulomb and Breit interactions
use diﬀerent subsets of the complete set of vk
rs(abcd) coeﬃcients, which are selected automat-
ically when multiplying by the relevant eﬀective interaction strengths to complete the matrix
element calculation. The MCP and MCBP modules of GRASP92 calculated the full matrix
elements for each of these subsets, so that the new formulation reduces the computational
overheads and the memory requirements, which renders ANCO more suitable for large scale
problems.

There are two new modules rabs recoupling and rabs anco for extracting spin–angular
coeﬃcients relating to formula (13). The module rabs recoupling evaluates recoupling
coeﬃcients R
as described in [6], mod-

ji, jj, ji′, jj′, Λbra, Λket, Γ

and R

ule rabs rcfp [11] evaluates the T
evaluates all the contributions to (13) for both scalar one– and two–particle operators.

niji, njjj, ni′ji′, nj′jj′, Λbra, Λket, Ξ, Γ

whilst rabs anco

(cid:17)

(cid:16)

(cid:16)

(cid:17)

ji, jj, Λbra, Λket
(cid:16)

(cid:17)

The program ANCO can be run in two modes. The interactive mode is intended for testing
the program and for performing short calculations involving a small number of conﬁgurations.
Normally the modules rabs anco and rabs recoupling will be interfaced to GRASP92 or
to some other program with compatible data structure to perform multiconﬁguration or
conﬁguration–interaction relativistic calculations. The program can handle any combination
of open subshells with j ≤ 9/2, but subshells with j > 9/2 are only allowed if they contain
not more than two electrons.

ANCO is written in Fortran 90/95 and is designed as an addition to the RATIP package [13].
The new Fortran 90/95 standard enables us to deﬁne new derived data types which will enable
us to incorporate this module in our continuing development of large–scale computations for

12

open–shell atoms and ions. The full deﬁnition of the various derived structures can be found
in the module header of rabs anco. Here we need only those types which concern the program
output.

All information about pure spin–angular coeﬃcients of scalar one– and two–particle opera-
tors (trs(ab) and vk
rs(abcd) coeﬃcients) of the Hamiltonian matrix or of some part of it is
summarized in the derived data anco pair list.

type(anco_csf_pair), dimension(:), pointer :: anco_pair_list

which is deﬁned by

type :: anco_csf_pair

integer
integer
type(anco_t_coeff), dimension(:), pointer :: t_coeff
type(anco_v_coeff), dimension(:), pointer :: v_coeff

:: r, s
:: no_t_coeff, no_v_coeff

end type anco_csf_pair

The integers r and s respectively index the bra– and the ket– conﬁguration state functions
(CSF) for the current matrix element. The variable no t coeff is the number of pure spin–
angular coeﬃcients of one–particle operators that can be constructed for the pair r,s, and the
variable no v coeff gives corresponding data for two–particle matrix elements. The array
anco v coeff contains pure spin–angular coeﬃcients for two–particle scalar operators. It is
deﬁned by

type :: anco_v_coeff

integer
type(nkappa)
real(kind=dp)

:: k
:: a, b, c, d
:: v

end type anco_v_coeff

where k is the rank k of the eﬀective interaction strength, a, b, c, d point to the relevant
subshells niliji, njljjj, ni′li′ji′, nj′lj′jj′, and the pure spin–angular coeﬃcient itself is given
in v. The array anco t coeff is deﬁned in the same way.

Memory for the array anco pair list is allocated dynamically using the

allocate( anco_pair_list(1:number_of_pair_list_max))

instruction, and can be deallocated subsequently.

3.2 Interactive calculations

A typical interactive dialog for calculating spin–angular coeﬃcients is shown in Fig. 1.

Enter a file name for the anco.sum file:

13

After this prompt, the user should insert the output ﬁle name to which the main output
data will be written. This must be followed by the name of the input ﬁle listing CSF in the
GRASP92 format. The next question

Generate only not trivial angular coefficients which include (at least one)
open shells ?

The response y or Y will cause the program to calculate coeﬃcients for peel shells only; the
reponse n or N the program calculate will yield data for all shells (open and closed).

The question

Generate one-electron angular coefficients for scalar interactions ?

This requires answer n or N if one–electron coeﬃcients are not needed. If the user responds
y or Y, then the prompt

Generate GRASP92-like T coefficients for scalar interactions ?.

appears. The response y or Y causes GRASP92–like Trs(ab) coeﬃcients to be generated,
whereas the alternative n or N yields t0
rs(ab) coeﬃcients.

A similar dialog follows for two–electron angular coeﬃcients. A number of examples illustrate
the usage of ANCO in this mode in section 4 below.

The prompt

Enter a file name for the anco.vnu file:

permits the user to specify where the spin–angular coeﬃcients should be stored.

The module ANCO needs one input ﬁle .csl containing the CSF list output by GRASP92 [9],
which is gnerated by the program GENCSL.

The program creates two output ﬁles. The ﬁle .sum contains the summary of the problem.
The other ﬁle .vnu contains the angular momentum coeﬃcients and their characteristics. Its
format for Trs(ab) and V k
rs(abcd) coeﬃcients is the same as that of ﬁle genmcp.dbg generated
by the module genmcp of GRASP92 [9]. The format for t0
rs(abcd) is very similar
but without the sorting process which is used in GRASP92.

rs(ab) and vk

3.3 Distribution and installation of the program

As a new component of the RATIP package [13] similar to the module RCFP [11] ANCO
will be distributed as a tar archive ﬁle of the directory ratip anco. On a UNIX (or com-
patible) workstation, the command tar -xvf ratip anco.tar reconstructs the ﬁle struc-
ture. The directory ratip anco then contains the Fortran 90/95 modules rabs anco.f and
rabs recoupling.f, the program xanco.f (the main program for interactive work) as well as
the makeﬁle make-anco. It also includes a number of examples in the subdirectory test-anco
and a short Read.me which explains further details about the installation. Since the same
ﬁle structure is preserved in both cases, the combination of ANCO with RATIP is simply
achieved by running the command cp -r ratip anco/. ratip/. inside the RATIP root

14

ANCO: Calculation of angular coefficients for symmetry-adapted CSF functions

from the GRASP92 structure program (Fortran 90 version)
(C) Copyright by G Gediminas and others, Kassel (2000).

Enter a file name for the anco.sum file:

Enter the name of the configuration symmetry list file:

test.sum

argon-sd.inp

Loading configuration symmetry list file ...

There are 16 relativistic subshells;
there are 761 relativistic CSFs;
... load complete.

Generate only non-trivial angular coefficients which include
(at least one) open shells ?

y

y

y

y

y

Generate one-electron angular coefficients for scalar interactions ?

Generate GRASP92-like T coefficients for scalar interactions ?

Generate two-electron angular coefficients for scalar interactions ?

Generate GRASP92-like V^k coefficients for scalar interactions ?

Enter a file name for the anco.vnu file:

test.vnu

Figure 1: The typical interactive dialog for calculation spin–angular coeﬃcients.

15

directory; then make -f make-anco will generate the executable xanco, together with the
other two components xcesd99 [14] and xreos99 [13] of the RATIP package. The name of
the (Fortran 90/95) compiler and special compiler ﬂags can be overwritten in the header of
the makeﬁle as necessary. Although ANCO uses six other modules which are part already
of RATIP, no further adaptation of the program is needed. At present, the ANCO program
has been installed and tested under the Linux and AIX operating systems but, owing to the
compliance of the Fortran 90/95 standard, no diﬃculties should arise on any other platform.

The subdirectory test-anco lists a number of examples which demonstrate the usage of the
program.

4 Timing and veriﬁcation of ANCO

Tests and timing studies using the Dirac-Coulomb Hamiltonian only were performed for the
3s23p6 1S state of Ar I with the common closed shells 1s22s22p6 for diﬀerent values of ﬁnal
orbital momentum J. The wave function expansions used were:

1. 3SD: Single and double excitations from 3s23p6 to the active set {3s, 3p, 3d}contains 14
conﬁguration state functions (CSF) for J = 0 and 34 CSF (the maximum) for J = 2.

2. 3SDT: Single, double and triple excitations from 3s23p6 to the active set {3s, 3p, 3d}.The

maximum number of CSF is 145 for J = 2.

3. 4SD: Single and double excitations from 3s23p6 to the active set

{3s, 3p, 3d, 4s, 4p, 4d, 4f }. The maximum number of CSF is 465 for J = 2.

4. 4SDT: Single, double and triple excitations from 3s23p6 to the active set

{3s, 3p, 3d, 4s, 4p, 4d, 4f }.

5. 5SD; Single and double excitations from 3s23p6 to the active set

{3s, 3p, 3d, 4s, 4p, 4d, 4f, 5s, 5p, 5d, 5f, 5g}.

We ﬁrst considered simple cases with a small number of CSF (3SD, 3SDT, 4SD with J = 0,
1, 2, 3, 4, 5, 6, 7, 8, 9). Although ANCO generates the full set of “pure” coeﬃcients for both
one– and two–particle operators, the calculation runs from 1.4 – 2.3 times faster than an
equivalent calculation with GRASP92 because of the lower computational overheads. Table 2
demonstrates similar enhanced performance for the much larger 4SDT and 5SD eamples,
showing the improvement expected for large–scale calculations.

From the results presented in the Table 2 we conclude that the new program is not much faster
in simple cases, but does better in more complicated cases. The fact that ANCO calculates
approximately twice the number of angular coeﬃcients as GRASP92 reduces the eﬀective cost
per coeﬃcient by a further factor of two.

Although the program is completely new, we have veriﬁed that the results presented agree
completely with those obtained from GRASP92. We have also veriﬁed that the Breit inter-
action is treated correctly, although no data are presented here.

16

Table 2: Timing Comparison for GRASP92 and ANCO codes. Times are given in hours, minutes,
seconds

ASF

expan.

4SDT (J= 0)
4SDT (J= 1)
4SDT (J= 2)
4SDT (J= 3)
4SDT (J= 4)
4SDT (J= 5)
4SDT (J= 6)
4SDT (J= 7)
5SD (J= 0)
5SD (J= 1)
5SD (J= 2)
5SD (J= 3)
5SD (J= 4)
5SD (J= 5)
5SD (J= 6)
5SD (J= 7)

2 149
5 786
8 016
8 378
7 284
5 349
3 370
1 788
468
1 134
1 609
1 584
1 361
920
559
259

Number of

Running time of Speed

CSF T k

rs(ab) or
tk
rs(ab)

V k
rs(abcd)

vk
rs(abcd)

GRASP92

ANCO

3 606
14 017
21 356
21 342
15 971
9 435
4 556
1 789
621
2 324
3 704
3 441
2 500
1 361
644
226

756 023
4 070 156
7 018 885
7 634 136
6 111 074
3 810 165
1 836 602
693 761
75 192
395 450
697 651
721 907
558 223
314 909
141 328
44 137

1 530 086
8 188 130
14 077 044
15 290 955
12 260 139
7 656 054
3 706 544
1 412 443
150 455
792 560
1 395 839
1 444 095
1 117 681
632 306
284 102
89 398

00:08:11
00:59:01
01:42:47
01:53:55
01:33:17
00:50:27
00:21:52
00:07:26
00:00:32
00:03:10
00:06:27
00:06:43
00:05:15
00:02:30
00:01:02
00:00:15

00:03:01
00:15:19
00:26:28
00:30:37
00:23:01
00:14:18
00:06:40
00:02:29
00:00:17
00:01:29
00:02:44
00:02:59
00:02:17
00:01:22
00:00:36
00:00:12

-up

2.7
3.9
3.9
3.7
4.1
3.6
3.3
3.0
1.9
2.1
2.4
2.3
2.3
1.8
1.7
1.3

17

5 Examples

To illustrate the use of ANCO in its interactive mode, we studied Ar II. The program genmcp
of GRASP92 [9] is used ﬁrst to generate the CSF ﬁle argon-sd.inp before running the
program xanco.

The ﬁrst example does a GRASP92–style calculation. After checking all triangular condi-
tions for X k
Coulomb(αβγδ) (see expression (88) in [12]), it multiplies each pure–two particle
coeﬃcient by the factor X k
Coulomb(αβγδ) and prints all non zero V k
rs(abcd) coeﬃcients. With
corrsponding Trs(ab) coeﬃcients, this generates a total of 11279 coeﬃcients. The second
example, with the same input, calculates a total of 433911 pure non–trivial spin–angular
coeﬃcients at one go, as is more convenient for large scale calculations. However, only 11279
coeﬃcients from this set are required in the ﬁrst example.

The Test Run Output displays the .sum ﬁles and the ﬁrst 10 lines of .vnu ﬁles for both
examples.

References

[1] C.F. Fischer, The Hartree-Fock Method for Atoms (Wiley, New York, 1977).

[2] I.P. Grant and M. Quiney, Advances in Atomic and Molecular Physics 23 (1987) 37.

[3] I.P. Grant, Comput. Phys. Commun. 5 (1973) 264.

[4] I.P. Grant, Comput. Phys. Commun. 11 (1976) 397.

[5] N. Beatham, I.P. Grant and B.J. McKenzie, Comput. Phys. Commun. 18 (1979) 245.

[6] G. Gaigalas, Z. Rudzikas and C. Froese Fischer, J. Phys. B: At. Mol. Opt. Phys. 30 (1997) 3747.

[7] G. Gaigalas, Lithuanian Journal of Physics 39 (1999) 80.

[8] G. Gaigalas, S. Fritzsche and Z. Rudzikas, At. Data and Nucl. Data Tables (accepted).

[9] F.A. Parpia, C. Froese Fischer and I.P. Grant, Comput. Phys. Commun. 94 (1996) 249.

[10] G. Gaigalas and Z. Rudzikas, J. Phys. B: At. Mol. Phys. 29 (1996) 3303.

[11] G. Gaigalas and S. Fritzsche, Comput. Phys. Commun. (2000) in print.

[12] I.P. Grant, in: Methods in Computational Chemistry 2, S. Wilson, ed. (Plenum, New York, 1988)

p. 1.

[13] S. Fritzsche, C. F. Fischer, and C. Z. Dong, Comput. Phys. Commun. 124 (2000) 340.

[14] S. Fritzsche and J. Anton, Comput. Phys. Commun. 124 (1999) 353.

18

TEST RUN OUTPUT

...........................Example 1...........................

>>type example1.sum

ANCO run at 15:50:39 on Feb 14 2000.

There are 17 electrons in the cloud

in 761 relativistic CSFs
based on
Total number of pair is: 289941

16 relativistic subshells.

Generate only not trivial angular coefficients

there are 716 Grasp92-like T coefficients
there are 112078 Grasp92-like Vk coefficients
the total number of coefficients is 112794

(first 10 lines of example1.vnu file)

>> type example1.vnu
ANCO
761 16 4
V^[( 2)]_[
V^[( 1)]_[
V^[( 3)]_[
V^[( 1)]_[
V^[( 2)]_[
V^[( 1)]_[
T^[
V^[( 0)]_[

1,
1,
1,
2,
3,
3,

6,

6,

1] ( 3p , 3p ; 3p , 3p ) =
1] ( 3p , 3d-; 3d-, 3p ) =
1] ( 3p , 3d-; 3d-, 3p ) =
1] ( 3p , 3d ; 3d-, 3p ) =
1] ( 3p , 4s ; 3p , 3d-) =
1] ( 3p , 4s ; 3d-, 3p ) =

-1.200000000000E-01
6.666666666667E-02
-2.571428571429E-01
-1.632993161855E-01
2.529822128135E-01
-2.108185106779E-01

1] ( 4d-, 3d-) =

1.000000000000E+00

1] ( 1s , 4d-; 1s , 3d-) =

2.000000000000E+00

...........................Example 2...........................

>>type example2.sum
ANCO run at 16:35:02 on Feb 14 2000.

There are 17 electrons in the cloud

in 761 relativistic CSFs
based on
Total number of pair is: 289941

16 relativistic subshells.

Generate only not trivial angular coefficients

there are 716 pure one-particle angular coefficients
there are 433195 pure two-particle angular coefficients
the total number of coefficients is 433911

>> type example2.vnu

(first 10 lines of example2.vnu file)

ANCO

19

761 16 4

pure two-particle [( 1)]_[ 1, 1] ( 3p , 3p ; 3p , 3p ) =
5.000000000000E-02
pure two-particle [( 2)]_[ 1, 1] ( 3p , 3p ; 3p , 3p ) = -1.500000000000E-01
5.000000000000E-02
pure two-particle [( 3)]_[ 1, 1] ( 3p , 3p ; 3p , 3p ) =
pure two-particle [( 1)]_[ 1, 1] ( 3p , 3d-; 3p , 3d-) =
3.000000000000E-01
pure two-particle [( 3)]_[ 1, 1] ( 3p , 3d-; 3p , 3d-) = -2.000000000000E-01
pure two-particle [( 0)]_[ 1, 1] ( 3p , 3d-; 3d-, 3p ) = -2.500000000000E-01
pure two-particle [( 1)]_[ 1, 1] ( 3p , 3d-; 3d-, 3p ) = -2.500000000000E-01
pure two-particle [( 2)]_[ 1, 1] ( 3p , 3d-; 3d-, 3p ) = -1.500000000000E-01

20

