Spike sorting in the frequency domain
with overlap detection

Dima Rinberg1

William Bialek2

Hanan Davidowitz3

Naftali Tishby4

NEC Research Institute, 4 Independence Way, Princeton, NJ 08540.

Present addresses:

1 Monell Chemical Senses Center, 3500 Market St. Philadelphia, PA 19104.

2 Dept. of Physics, Princeton University, Princeton, NJ 08544.

3 PharmaSeq, Inc., 1 Deer Park Dr., Suite F, Monmouth Junction, NJ 08852.

4 Institute of Computer Science and Center for Neural Computation,

The Hebrew University, Jerusalem 91904, Israel.

3
0
0
2
 
n
u
J
 
6
 
 
]
n
a
-
a
t
a
d
.
s
c
i
s
y
h
p
[
 
 
1
v
6
5
0
6
0
3
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

1

Abstract

This paper deals with the problem of extracting the activity of indi-

vidual neurons from multi-electrode recordings. Important aspects of

this work are: 1) the sorting is done in two stages - a statistical model

of the spikes from diﬀerent cells is built and only then are occurrences

of these spikes in the data detected by scanning through the original

data, 2) the spike sorting is done in the frequency domain, 3) strict

statistical tests are applied to determine if and how a spike should be

classiﬀed, 4) the statistical model for detecting overlaping spike events

is proposed, 5) slow dynamics of spike shapes are tracked during long

experiments. Results from the application of these techniques to data

collected from the escape response system of the American cockroach,

Periplaneta americana, are presented.

Keywords

extracellular recording, clustering, overlap detection, multicellular, gaussian,

waveform variability, cockroach

2

1 Introduction

Classical methods for exploring the mechanisms of brain function involve

recording the electrical activity of single nerve cells. Much has been learned

from this approach, but there are several reasons to go beyond single neuron

recording [Rieke et al., 1997]. First, multineuron recording greatly increases

the eﬃciency of studying the properties of single neurons. Second, record-

ing simultaneously from many neurons allows access to the precise temporal

relations among action potentials in multiple neurons [Usrey et al., 1998].

This can provide a testing ground for the hypothesis that these temporal

relationships carry signiﬁcant information. Finally, multineuron recording

experiments might give us a glimpse into the collective dynamics in neu-

ral networks, e.g. the existence of multiple stable states and possibility of

switching between them [Amit, 1989, Abeles and Gerstein, 1988].

This paper is concerned with one of the many technical problems that

arise in trying to adddress the above questions, namely the problem of

sorting out signals from multiple neurons as they appear on multiple elec-

trodes [McNaughton et al., 1983, Reece and O’Keefe, 1989]. In a multineu-

ron recording each cell can appear on multiple electrodes and multiple cells

can appear on each electrode. Finding the spike times for each cell is diﬃcult

because spikes from diﬀerent cells are very similar in shape, making it hard

to distinguish among them.

In addition, the events which might be most

interesting, synchronous spiking of nearby cells, are among the most diﬃcult

3

to disentangle.

2 The spike sorting problem

Throughout the nervous system, cells generate stereotyped electrical pulses

termed action potentials or spikes. Thus, in the absence in the absence of

noise or variability, it is expected that each neuron in the system would

generate a characteristic signal at each electrode. This waveform can be

viewed as a single point in signal space. In the presence of noise, however,

these discrete points spread into clusters of points, each point representing

a single spike. One of the objectives of the spike sorting method described

here is to make a model of these clusters that is accurate enough to allow

the assignment of any given voltage waveform to one of the clusters. Even

though it is unlikely that all the details of the cluster model are correct, our

hope is that any such errors will not hamper spike classiﬁcation.

If V is the set of voltages measured on all of the electrodes during a

short time segment, the probability distribution of these voltages may be

decomposed as

P (V) = X
c

P (V|c)P (c),

(1)

where P (c) is the total probability of observing a spike from cell c and P (V|c)

is the distribution of voltage waveforms that arise from this cell. Conversely,

if a set of voltage signals V is observed, the probability that it comes from

4

cell c can be derived from Equation (1) by applying Bayes’ rule,

P (c|V) =

P (V|c)P (c)
Pc′ P (V|c′)P (c′)

.

(2)

Ideally one would like assignments which are certain. Statements of the form

“probably a spike from cell 2, but maybe from cell 1,” “probably a spike from

cell 3, but maybe overlapping spikes from cells 4 and 5,” defeat our purpose.

To avoid this type of problem the distributions P (V|c) and P (V|c′) should

not overlap when c 6= c′. Furthermore, it is hoped that if these distributions

overlap only slightly, a precise model for the distribution of each cluster may

not be necessary and a small number of parameters may suﬃce to make

reliable distinctions among the clusters. If a reliable model of this form can

be made, then the assignment problem is solved. Note also that, in this limit,

our prior assumptions about the likelihood of diﬀerent neural responses plays

no role.

The approach to the clustering problem described here is as follows. First

it is assumed that individual clusters P (V|c) have a Gaussian form in which

each frequency component ﬂuctuates independently. Next, the best possible

clusters are found and the mean and variances at each frequency are calcu-

lated for every cluster. If this Gaussian model were correct, the probability

that a given cluster could generate a particular waveform would depend only

on the χ2 distance between that waveform and the cluster mean, with ap-

propriate weighting by the variances. These χ2 values provide a set of new

dimensions along which distributions should be nonoverlapping if certainty

5

in the assignments has been achieved. In addition, it is possible to check if

the clustering is self consistent because every member waveform of a given

cluster will yield a distance of χ2 ≈ 1 for that cluster and χ2 >> 1 for all of

the other clusters.

This combination of χ2 below a threshold for one cluster and above thresh-

old for all other clusters is the signature of unambiguous assignment. The

reader should note that we achieve this result despite the fact that the real

clusters need not obey the assumptions of our simple model. This can be

seen by looking closely at the form of the resultant χ2 distributions. The im-

plementation of these ideas takes on the following form. First, a statistical

model of the spikes from diﬀerent cells is built by clustering. Second, in a

completely independent stage we detect the occurrence of these spikes in the

data. This is initially done for single spikes. Finally, by superimposing these

statistical models, overlaping spikes are treated as well.

We emphasize once more that we are not proposing the Gaussian model

as an exact model of the relevant probability distributions. On the contrary,

the goal is to show that the Gaussian model suggests dimensions along which

clusters are discriminable, and that the real clusters are almost perfectly dis-

criminable along these dimensions. Once this is established, the precise form

of the model is irrelevant. In cases where nonGaussian behavior is known

to be crucial, one might start with diﬀerent assumptions but the general

strategy would be the same: we want to exhibit explictly the discriminabil-

ity of clusters along some small number of relevant directions in waveform

6

space, and the starting model is just an aid to ﬁnding these dimensions.

Similar ideas using a χ2 test were proposed in recent work by Pouzat et al.

[Pouzat, 2002].

3 The spike sorting algorithm

The ﬁrst step is to build the set of clusters. This is done by identifying the

diﬀerent spike shapes in the data and constructing a statistical model for

each recognized spike type. As with many other spike sorting algorithms

the work described here is based on the following assumptions: a) diﬀerent

spikes from the same cell are very similar, b) spikes from diﬀerent cells have

diﬀerent waveforms on at least one electrode, c) if a cell ﬁres once, it ﬁres

many times and d) overlaps are fairly rare.

3.1 Clustering

Before the actual clustering can be done a large number of each of the dif-

ferent spike types is needed. To do this the data is broken into short frames.

The content of each frame is then examined to see if it contains “clean” spikes

which are described below. A frame refers to a set of data snippets, one from

each electrode at a given time. We emphasize that during this initial pass

through the data we are interested only in collecting clean representatives of

every spike type and no attempt is made to deal with frames that did not

obviously contain only one single spike.

The object of the clustering is to group similar spikes together. This must

7

work in spite of the fact that two similar spikes may be shifted slightly in time

[Lewicki, 1998]. To deal with this problem great care is given to accurately

aligning the spikes during the clustering process.

Objects to be clustered- While we measure time domain signals, from

now on each frame, f , is represented by a vector composed of the concate-

nated Fourier transforms of the voltage waveforms of the data from each of

the Ne electrodes, i.e.,

Sf (ω) = [Sf,1(ω), Sf,2(ω), · · ·Sf,Ne(ω)] .

(3)

The alignment of spikes in the frequency domain is achieved simply by mul-

tiplying the Fourier components by eiωτ where τ is the necessary time delay

(see below). It should be noted that although the work presented here deals

with sorting concatenated spectra, other objects can be sorted as well. Ex-

tensive experiments on sorting diﬀerent objects were done while developing

the methods described here but for our data Sf (ω) proved to be the most

useful. For example, reference [Rinberg et al., 1999] describes the sorting

of transfer functions between electrodes which is independent of the spike

shape. This may be of interest in cases where the spike shape can change

[Fee et al., 1996b] (e.g.

in bursting cells).

In certain cases power spectra,

which are invariant to time shifts, can be used as well.

Description of the algorithm- The clustering algorithm is outlined in

Figure (1). Its various steps are described below.

• Line 1: Initialization- First all frames are averaged yielding an av-

8

(4)

(5)

erage signal,

and variance,

¯S0,e(ω) =

Sf,e(ω)

1
Nf

Nf

X
f =1

σ2
0,e(ω) =

1
Nf

Nf

X
f =1

Sf,e(ω) − ¯Sc,e(ω)(cid:12)
(cid:12)
(cid:12)
(cid:12)

2

where Nf is the number of frames, ω is the discrete frequency index

and the indices f , c, and e refer to the frame, cluster and electrode

respectively. For this initial averaging the time shifts, τf , described

below, are set to zero for all frames.

• Loop 2: Split clusters- In every pass, except the ﬁrst, each cluster

is split in two using a small random vector δc,e, i.e., ¯Sc,e → ¯Sc,e ±

¯δc,e. This is repeated until some criterion is met. Establishing this

criterion proved to be a diﬃcult problem to solve generally. An a priori

knowledge of the expected number of cells was found to be the most

reliable criterion for stopping the cluster splitting.

• Loop 3: Reassign frames- This loop executes an expectation maxi-

mization algorithm. The average and variance at each frequency com-

ponent of every cluster are calculated using the appropriate time delay

for every member frame calculated against each cluster. The time delay

τf that minimizes χ2

f,c(τf ) is calculated against all clusters. The frame

is then reassigned to the cluster that matches it most closely, i.e., the

one that yields the minimum

9

χ2

f,c(τf ). This is done until the frames are distributed in such a way

that these parameters no longer change [Papoulis, 1965].

• Line 4: Finalize clusters- After the clustering ends some clusters

may actually be identical within statistical error. These are merged

into a single cluster. Others might clearly contain frames of diﬀerent

types and are split into two clusters. Still others might contain frames

that clearly do not contain spikes or perhaps contain very few spikes.

These are discarded.

3.2 Detection

The end result of the clustering phase is a statistical template for all of the

spike types found in the data. In the next and ﬁnal phase the data is scanned

to ﬁnd all occurrences of each spike type. The basic idea of the detection is

to cut the data into short frames and determine which cluster best describes

the data in that frame and its precise timing. Spikes that are well centered

in the frames are detected and subtracted from the data. The data is then

reframed and the process is repeated until no single spikes remain in the

data. Finally, this process is repeated for overlaps. This process is shown

schematically in Figure (2).

(c, τf ) pair that minimizes

Single spike detection- Single spike detection is done by ﬁnding the

χ2
f (c, τf ) = X
ω,e

1
Sf,e(ω) − ¯Sc,e(ω) · eiωτf (cid:12)
c,e(ω) (cid:12)
σ2
(cid:12)
(cid:12)

2

(6)

10

for every frame. In practice Equation (6) is expanded into three terms,

,

2
| ¯Sc,e(ω)|

A(c) = X
ω,e

χ2
f (c, τf ) = A(c) + B(c) + 2C(c, τf ),
1
σ2
c,e(ω)
1
σ2
c,e(ω)
1
σ2
c,e(ω)

B(c) = X
ω,e

Re(cid:0)Sf,e(ω) ¯S∗

C(c, τf ) = X
ω,e

2
|Sf,e(ω)|

,

c,e(ω) · e−iωτf

(cid:1).

(7)

(8)

(9)

(10)

A(c) can be calculated in advance once the frame clustering has been done.

B(c, τf ) and C(c, τf ) are calculated in the detection algorithm, outlined in

pseudo-code in Figure (3). The main ideas are described below.

• Line 1: Frame data- The complete data set is broken up into nonover-

lapping equal sized frames.

• Loop 2: Process each frame- It is assumed that a frame can contain

either noise (see next section), a spike, part of a spike or an overlap

of 2 spikes. Frames containing noise are discarded leaving only those

containing single or multiple spike events.

• Loop 3: Check ﬁt to each cluster- Here the chosen frame is com-

pared to each cluster. Since the spike in the frame may not be centered

it is necessary to align the frame to the cluster. For each frame the

time delay, τf , that maximizes the cross correlation term, C(c, τf ), is

found for each cluster.

11

• Line 4: Calculate χ2

f ,c(τ f , c) for all clusters- If the spike is not

near the edge of the frame, i.e., |τf | < τth, then B(c, τf ) is calculated

yielding the ﬁnal term in Equation (6). All of the terms of χ2

f,c(τf , c)

have now been calculated yielding an estimate of the similarity of the

frame to each of the clusters.

• Line 5: Finalize spike detection- The cluster that yields the small-

est value for χ2

i (τ, c) is the cluster most similar to the frame being
tested. It is not enough to ﬁnd the cluster for which χ2 is smallest.

A ﬁt is accepted only if χ2

i (τ, c) < χ2

th. Frames that were not good

matches to any cluster most likely contained an overlap, noise or a par-

tial spike that will most likely be found when the frames are shifted in

a later pass through the data.

Multiple spike (overlap) detection- Once all of the single spikes have

been detected and removed, overlapping spikes are detected and removed as

well. Here we generalize the single spike case to two spikes, thus, we look for

the set of (τ1, τ2, c1, c2) that minimizes

χ2(τf,1, τf,2, c1, c2) = X

1

σ2
c1,c2,e

ω,e

Sf,e(ω) − Sc1,e(ω) · eiωτf,1 − Sc2,e(ω) · eiωτf,2
(cid:12)
(cid:12)

.

2
(cid:12)
(cid:12)
(11)

The algorithm used to ﬁnd the clusters and time delays is very similar to

that used for the single spike case with some diﬀerences. First, the minimiza-

tion executed on line 3 of Figure (3) is over two variables τf,1 and τf,2. This

is computationally intensive but since there are a ﬁnite number of possible

12

time delays it remains manageable on a personal computer. As before many

of the calculations can be performed once the cluster centers are known.

Another issue which needs to be addressed when dealing with two spikes

is the calculation of σ2

c1,c2,e(ω). Here we assume that there is an inherent noise

in the spike shape and an additive background noise. Thus the variances are

given by

c1,c2,e (ω) = σ2
σ2

c1,e (ω) + σ2

c2,e (ω) − σ2

n (ω) ,

(12)

where σ2

n(ω) is the background noise computed from regions devoid of spikes.

While this assumption is not true in general it is reasonable since the vari-

ances of the diﬀerent clusters are assumed to be independent. It proved to

be a reliable working model. This measure of the two-spike variance takes

into account the contribution of each cluster but does not overcount the

background noise.

4 Application to multi-electrode data

The techniques described above were applied to data recorded from the

escape response system of the American cockroach Periplaneta americana

[Camhi and Levy, 1989, Kolton and Camhi, 1995, Liebenthal et al., 1994, Westin et al., 1977,

Camhi, 1984]. Neural activity was recorded using 8 hook electrodes attached

to the two bilateral abdominal connectives. In this arrangment each electrode

measures a weighted sum of the activity from the diﬀerent neurons in the

connective. A more detailed description of the experimental setup is given

in reference [Rinberg and Davidowitz, 2002]. Typical experiments lasted for

13

several hours and yielded about 8 GB of raw data (see Figure (4)). The aim

of the work described here is to unravel the individual spike times from this

multi-electrode data.

4.1 Statistical model of the clusters

Here we describe the application of the clustering algorithm described in

Section (3.1) to the multielectrode cockroach data.

Frame selection- Only frames that fulﬁll the following criteria were col-

lected to produce a model of the clusters: a) the signal in the middle of the

frame is above some threshold, vmid

th , on at least one electrode and b) the

signal at the frame edges is less than some other threshold, vedge

th , on all of

the electrodes. This idea is illustrated in Figure (5).

The thresholds were proportional to the background noise levels. This

background signal, ¯vb, was the average of several averages,

X
i=1
calculated from regions devoid of spikes at the beginning, middle and end

(13)

|vi − ¯v|

2

1

2 ,

)

Np

vb = (

1
Np

of the experiment (usually silences between trials when no stimulus was pre-

sented). Here vi are the data points while the number of data points was

typically about Np = 5 · 104. The thresholds described above were deﬁned as

th = 4 · ¯vb and vedge
vmid

th = 1.5 · ¯vb. These thresholds worked well for our data

but will likely be diﬀerent for data from other experiments.

While the choice of thresholds is to some extent arbitrary, there are several

guidelines that can be followed. If the threshold is set too high low energy

14

spikes will be missed.

If it is set too low, a large cluster containing noise

will appear. We have checked that lowering the thresholds does not inﬂuence

the larger amplitude clusters identiﬁed by our algorithm. The setting of the

threshold is thus a compromise between identifying all the small amplitude

spikes and minimizing computing time.

To avoid missing spikes because of voltage drifts or overlapping tails of

nearby spikes, the frames are ﬁrst detrended by subtracting a linear ﬁt to

the ﬁrst and last 0.5 ms of each frame.

Time shift between electrodes- Spikes appear on each electrode at dif-

ferent times because of the ﬁnite propagation time of the action potentials

along the neurons in the connective. This is evident in the data shown in

Figure (5). Frames are thus deﬁned with time delays between the diﬀerent

channels. A further complication arises from the fact that the time delays on

the diﬀerent electrodes may be diﬀerent for diﬀerent cells. An average delay

was found by calculating the time of the maximum of the cross correlation of

voltage traces from the diﬀerent electrodes. Because these delays can change

during the course of an experiment these inter-channel delays were in turn

averaged from widely separated segments of data. Typically, these delays

were between 0.1 and 0.8 ms depending on the positioning of the electrodes.

Frame size- To keep calculation times short, a small frame size is desir-

able. On the other hand, the frames have to be big enough to account for

the diﬀerent propagation times of the diﬀerent cells. For the experiments

described here frames were 3.2 ms long (64 data points).

15

The clustering begins after 10,000 frames containing candidate spikes

have been collected. While each frame is represented by the vector deﬁned

in Equation (3) only the low frequency components (the ﬁrst 16 complex

numbers) of each Fourier transform were used because the higher frequencies

were found to be indistinguishable from noise. Thus Sf,e(ω) was of dimension

1
2 · 32 · Ne complex numbers, where Ne is the number of electrodes.

Since about 7 cells are expected on each side the clustering is stopped

once 16 clusters have been found on a side. Up until this point the clus-

tering is automatic. Some results of this automatic clustering are shown in

Figure (6). Intervention is now needed to reﬁne the clustering. To do this

the χ2 distributions of the clusters are examined manually. Clusters are then

merged, split or discarded as necessary. This process could be automated,

but was not deemed worth the eﬀort. Results of the clustering after the ﬁnal

manual intervention are shown in Figure (7) and Figure (8).

Track slow changes- Thus far, the ﬁrst ≈ 104 frames have been used to

establish the statistics of each cluster. The accuracy of the spike detection

can be improved if the change in spike shapes are tracked during the course

of a long experiment. For the cockroach experiments described here, the

trial period of 100 s was chosen as the time scale upon which changes are

tracked. To do this the cluster statistics ¯Sc,e(ω) and σc,e(ω) are updated

with consecutive 100 s segments of data on a ﬁrst-in, ﬁrst-out basis. Once

the cluster statistics have been computed, the next N “clean” frames from

the data are found and are each assigned to the cluster that is closest based on

16

the χ2 distance deﬁned in Figure (1). These frames are then added to these

clusters while the same number of the earliest frames are removed. As usual,

frames that exceed a certain χ2 for all clusters are discarded. The cluster

statistics are then recalculated, yielding dynamic clusters of time dependent

spike statistics ¯Sc,e(ω, t) and σc,e(ω, t) that are used as the templates for the

spike detection described in the next section. Results of spike shape tracking

are shown in Figure (9).

4.2 Detection

For the detection phase the complete data set is broken into nonoverlapping

frames containing 64 data points (3.2 ms). In practice, B(c) is calculated only

after zero padding the frame on the outside 2 ms. This is done to eliminate

the possibility of a nearby spike, with an overlapping tail, causing χ2

f,c(τf , c)

to be too large. C(c, τf ) does not need to be recalculated because the clusters

themselves are averages of many clean spikes and therefore inherently zero

padded.

A ﬁt is accepted only if χ2

i (τ, c) < χ2

th which was determined by the shape

of the distribution. Typically χ2

th ≈ 2, though this threshold would likely be

diﬀerent for other data. The probability of detecting a spike is smaller if it

overlaps with the tails of nearby spikes. This problem can be greatly reduced

if, once spikes have been classiﬁed, the average spike from the corresponding

cluster is subtracted from the data (see Figure (2)). Every pass through the

data leaves a smaller number of unclassiﬁed spikes. After each pass the data

17

is reframed with a time shift of 1

4 frame and the process is repeated. Ideally,

after 4 passes all single spike events have been detected.

Multiple spike (overlap)detection- Once all of the single spikes have

been detected and removed, overlapping spikes are detected and removed as

well. Figures (10 and 11) show the results of describing an overlap as single

and double spike events. Notice that the automatic recognition of an event

as being a two spike event is dependent on being able to reject the “best”

single spike description of the event. Thus, in Figure (10), the best single

spike description is quite good, and the identiﬁcation of a spike from cell (b)

is correct, but the value of χ2 = 3.5 is unacceptably high, as can be seen

from the χ2 distributions. Once we explore the space of two spike events we

ﬁnd a unique description with χ2 ≈ 1 (see Figure (11)).

5 Discussion

The spike sorting method described here has several key features. First,

the experimental design is such that the full waveforms from all electrodes

are recorded continuously during the course of an experiment. This is an

advantage over many spike sorting techniques that are based on the idea

of feature clustering (see [Lewicki, 1998] for a recent review of spike sorting

techniques as well as an older review in [Schmidt, 1984]). In feature clustering

one or more features of the spikes (spike height, peak to peak amplitude, rise

times, etc.) are extracted and clustered. Since only a few features of the

spikes are used, subtle diﬀerences between spikes from diﬀerent cells can be

18

lost. In addition, it is not a priori clear which, and how many, features to

use—are there better (optimal) ones? When applied properly this technique

can work well for a small number of cells but does not work well with many

cells.

Another important feature of the present technique is that the construc-

tion of models for the spike shapes from individual cells (clustering) is sepa-

rated from the problem of ﬁnding those spikes in the data (detection). The

advantage here is that one has the leisure to look for clean examples of

each spike type and thus to build a good statistical model of each spike type.

Only then does one look for the occurrence of these spikes in the data. These

models are time dependent in the sense that they track the change in spike

shape during the course of an experiment. This has traditionally been a

problem in template-matching spike sorting techniques in which a model of

the spike shapes are constructed [Bergman and DeLong, 1992]. In this tech-

nique, these models are compared to a given spike and a decision is made as

to whether it belongs to the class deﬁned by this template or not. One of the

more advanced implementations of this technique [Lewicki, 1994] works well

in many cases but relies heavily on a Gaussian model of the noise. Another

technique [Fee et al., 1996a] that makes no assuptions about the waveform

noise uses the spike shapes as well as refractory period statistics to classify

cells. It works well with bursting cells but in its present form this technique

does not treat overlaps well. This is another advantage of the separation

of clustering from detection:

it simpliﬁes the problem of overlap detection

19

which has traditionally been one of the most diﬃcult parts of the spike sorting

problem.

Many comparisons and computations that go into the sorting process

are much easier when working in the frequency domain. The ease in which

temporal alignment is achieved is one of the advantages of performing the

detection in the frequency domain since sub-bin time shifts in the time do-

main would require resampling [Lewicki, 1998].

In the frequency domain

this is done simply by multiplying the Fourier components by eiωτ which is

equivalent to a time shift of τ in the time domain. In addition, it is even

possible to sort spikes from bursting cells (in which spike shapes can change

drastically over short time scales) by ignoring the spike shapes entirely and

sorting on transfer function ratios [Rinberg et al., 1999]. Since this is an

independent type of information it can be used to check the validity of sort-

ing results. Sorting on the full Fourier transforms of the voltage waveforms

yielded excellent results for our data but other investigators will likely ﬁnd

other combinations that work better for their data.

The statistical methods used in this sorting program allow us to decide

whether the clustered spikes really are discriminable. In addition, this sta-

tistical analysis allows us to develop more rigorous criteria for accepting or

rejecting the possible detection of a spike.

Finally we note that in a typical experiment ≈ 400, 000 spikes are found.

Of these 90% were found with single spike detection, 8% were found with

overlap detection only 2% were events that could not be classiﬁed.

20

6 Summary

In this paper the problem of unraveling multielectrode neural data has been

addressed. Special attention has been paid to the detection of overlapping

spikes which poses obvious diﬃculties for any sorting method. The problem

of spike sorting has been separated into two independent parts. First, a sta-

tistical model of all possible spikes found in the data is constructed. Only

then are these spikes detected in the data using strict statistical criteria to

quantify the quality of this detection. Overlaps are dealt with after all pos-

sible single spike events have been detected. These techniques were applied

to multielectrode data from the American cockroach with good results.

7 Acknowledgements

The authors would like to thank N. Brenner and R. de Ruyter van Steveninck

for many helpful suggestions and discussions.

21

References

[Abeles and Gerstein, 1988] Abeles, M. and Gerstein, G. (1988). Detecting

spatio-temporal ﬁring patterns among simultaneously recorded single neu-

rons. Journal of Neurophysiology, 60:909–924.

[Amit, 1989] Amit, D. (1989). Modeling brain function. Cambridge Univer-

sity Press, Cambridge.

[Bergman and DeLong, 1992] Bergman, H. and DeLong, M. (1992). A per-

sonal computer based spike detector and sorter: implementation and eval-

uation. Journal of Neuroscience Methods, 41:187–197.

[Camhi, 1984] Camhi, J. (1984). Neuroethology, volume 174. Sinauer Assoc.

Inc., Sunderland.

[Camhi and Levy, 1989] Camhi, J. and Levy, A. (1989). The code for stim-

ulus direction in a cell assembly in the cockroach. Journal of Comparative

Physiology A, 165:83–97.

[Fee et al., 1996a] Fee, M., Mitra, P. P., and Kleinfeld, D. (1996a). Au-

tomatic sorting of multiple unit neuronal signals in the presence of

anisotropic and non-gaussian variability. Journal of Neuroscience Methods,

69:175–188.

22

[Fee et al., 1996b] Fee, M., Mitra, P. P., and Kleinfeld, D. (1996b). Vari-

ability of extracellular spike waveforms of cortical neurons. Journal of

Neurophysiology, 76:3823–3833.

[Kolton and Camhi, 1995] Kolton, L. and Camhi, J. (1995). Cartesi an rep-

resentation of stimulus direction: parallel processing by two sets of gi-

ant interneurons in the cockroach. Journal of Comparative Physiology A,

176:691–702.

[Lewicki, 1994] Lewicki, M. (1994). Bayesian modeling and classiﬁcation of

neural signals. Neural Computation, 6:1005–1030.

[Lewicki, 1998] Lewicki, M. (1998). A review of methods for spike sorting:

the detection and classiﬁcation of neural potentials. Network: Comput.

Neural Syst., 9:R53–R78.

[Liebenthal et al., 1994] Liebenthal, E., Uhlmann, O., and Camhi, J. (1994).

Critical parameters of the spike trains in a cell assembly: coding of turn di-

rection by the giant interneurons of the cockroach. Journal of Comparative

Physiology A, 174:281–296.

[McNaughton et al., 1983] McNaughton, B., O’Keefe, J., and Barnes, C.

(1983). The stereotrode: a new technique for simultaneous isolation of sev-

eral single units in the central nervous system from multiple unit records.

Journal of Neuroscience Methods, 8:391–397.

23

[Papoulis, 1965] Papoulis, A. (1965). Probability, random variables and

stochastic processes. McGraw-Hill, New York.

[Pouzat, 2002] Pouzat, C., O. Mazor, and G. Laurent (2002). Using noise

signature to optimize spike-sorting and to assess neuronal classiﬁcation

quality. Journal of Neuroscience Methods, 122(1):43-57.

[Reece and O’Keefe, 1989] Reece, M. and O’Keefe, J. (1989). The tetrode:

a new technique for multi-unit extracellular recording. Society of Neuro-

science Abstracts, 15:1250.

[Rieke et al., 1997] Rieke, F., Warland, D., de Ruyter van Steveninck, R.,

and Bialek, W. (1997). Spikes exploring the neural code. MIT Press,

Cambridge.

[Rinberg and Davidowitz, 2002] Rinberg, D. and Davidowitz, H. (2002). A

stimulus generating system for studying wind sensation in the American

cockroach. Journal of Neuroscience Methods, 121:1–11.

[Rinberg et al., 1999] Rinberg, D., Davidowitz, H., and Tishby, N. (1999).

Multi-electrode spike sorting by clustering transfer functions. In Advances

in Neural Information Processing Systems 11, edited by M. S. Kearns, S.

A. Solla, D. A. Cohn, editors. MIT Press, Cambridge.

[Schmidt, 1984] Schmidt, E. (1984). Computer separation of multi-unit neu-

roelectric data: A review. Journal of Neuroscience Methods, 12:95–111.

24

[Usrey et al., 1998] Usrey, W., Reppas, J., and Reid, R. (1998). Paired-spike

interactions and synaptic eﬃcacy of retinal inputs to the thalamus. Nature,

395:384–387.

[Westin et al., 1977] Westin, J., Langberg, J., and Camhi, J. (1977). Re-

sponses of giant interneurons of the cockroach periplaneta americana to

wind puﬀs of diﬀerent directions and velocities. Journal of Comparative

Physiology A, 121:307–324.

25

Figure captions

Figure 1: Pseudo code outline of the frame clustering algorithm. See text for
details.

Figure 2: A schematic outline of the spike detection algorithm. Spike events
are labeled a...f and are shown for only one electrode and only two cells for
the sake of clarity. The detection procedure progresses from top to bottom
yielding the spike times of two cells shown in bottom of the diagram. The
rectangular boxes represent the frames. Note that a spike near a frame edge
is not detected until the framing has shifted enough to more or less center it.
Overlaps are not detected until all of the single spikes have been removed.
In the work described here, both the single spike detection and the overlap
detection processes consisted of 4 passes each. See text for more details.

Figure 3: Pseudo code outline of the single spike detection algorithm. See
text for details.

26

Figure 4: Sample of the raw data used in the spike sorting. Typically, signals
from 4 electrodes were recorded on each side of the abdominal connective
along with 2 stimulus channels (not shown). Three channels from the right
connective are shown. Data was recorded at 20 kS/s, 16 bits per channel.

Figure 5: Example showing the framing of the data from three electrodes
(1-3). Grey boxes show frames that have been found to contain a candidate
spike. 10,000 such frames are collected to generate a statistical model of
the spikes. Each white box contains a frame that has been rejected for one
or more of the following reasons: a) they contain noise, b) they contain an
overlap or c) their energy is too high at the frame edges. Note that in this
data there is a time shift in the appearance of the same spike on the diﬀerent
electrodes. This is a consequence of the spike propagation velocity but is not
a necessary condition for the spike sorting techniques described here.

Figure 6: Results of the automatic frequency domain spike sorting showing
four possible situations. Each row corresponds to one cluster. The center
columns (labeled 1-4) show the spike shapes as they appear on diﬀerent
electrodes. Each trace shows 30 randomly chosen spikes from each cluster.
The left column shows the average spectra of the signal from electrode 2
with the corresponding variances. Nsp is the number of spikes found in
each cluster. The right column shows the distributions of the χ2 distance
of all spikes to this cluster center. The shaded area (thin lines) shows the
distributions for member (nonmember) spikes. Row 1 shows a good cluster
clearly separated from the others. Rows 2 and 3 show clusters that overlap
each other and should be merged. Row 4 shows a small cluster with no clear
center which will be deleted. Its members will be reassigned to other clusters.

Figure 7: Resulting clusters after manual intervention. Some clusters from
Figure (6) have been joined, others have been deleted and still others have
been split, depending on the χ2 distribution resulting from the automatic
sort. Note the clear separation of the χ2 distributions.

27

Figure 8: Cluster distribution at one frequency component in the complex
plane. The circles correspond to a distance of 2σ from the center. Even
though the clouds partially overlap for these components, they are well sep-
arated in multidimensional space.

Figure 9: The evolution of the spike shape over the course of an experiment,
shown for a single cluster.

Figure 10: Attempt to describe an overlap of two spikes as a single spike
event. The dotted traces at the top are the actual raw data of an overlap
recorded on 4 electrodes. The middle traces show four clusters a-d. The
bottom traces show χ2 calculated for diﬀerent time shifts. The minimum χ2
is 3.5 found by ﬁtting cell b with a time shift, τ ≈ 0 ms. The thin line traces
at the top of the ﬁgure show this ﬁt.

Figure 11: Same as Figure (10) except that a ﬁt is attempted using two cells.
χ2 is now a function of two time shifts, τ1 and τ2. The panels on the bottom
show χ2 as a function of these two time shifts. The circles are centered at
the minimum of χ2 for each combination of cells. The smallest χ2 was found
for cells b and d. This ﬁt is plotted as a thin line at the top of the ﬁgure.
Note that this ﬁt is considerably better that the best ﬁt of any single spike
event.

28

spike spectra
spike spectra
on electrode 2 
on electrode 2 

spike shapes
spike shapes
on electrodes 
on electrodes 

c2 distribution
c2 distribution

6

n
o
i
5
t
c
e
t
e
d

4

3
n
o
i
t
c
e
t
e
d
2

e
4
k
i
p
s
 
e
l
g
n
s
i
s
 
r
3
 
e

 
t
 

 

s
u

s
 
r
 
e
 
t
 
s
 
u

 
l
 
c

 
l
 
p
c
a
l
2
r
e
v
o

1
1

2
2

3
1
#
 
s
3
s
a
p

2
#
 
s
s
a
p

4
3
#
 
s
s
5
a
p

1
#
 
s
s
a
4
p

5

4
3
2
1
set τf := 0 and calculate initial ¯Sc,e(ω) and σc,e(ω)
Frame whole data set with no overlaps
1
4
3
2
repeat split clusters
repeat get next frame, f
c d
b
a
if frame has signal above background then
repeat update frame assignment
repeat for each cluster, c

Nsp = 157
for

Nsp= 1023

and variance

ﬁnd average

e f

each cluster using τf

919

¯Sc,e(ω) :=

ﬁnd time delay, τf , that maximizes
1
Sf,e(ω) · eiωτf
Nc
C(c, τf ) = (cid:1)
1
σc,e(ω) :=
ω,e
Nc

X
c,e(ω) · e−iωτf (cid:3)
Re(cid:2)Sf,e(ω) ¯S∗
f ∈c
σ2
c,e(ω)
Sf,e(ω) · eiωτf − ¯Sc,e(ω)¯
X
¯
f ∈c
1765
143

¯
¯

2

f (τf , c)

if |τf | < τth then zero pad frame and calculate χ2
for every frame, f , ﬁnd τf that minimizes

until all clusters checked
ﬁnd cluster, c, that yields smallest χ2
1
e(ω) ¯
σ2
if χ2
¯
4202
assign frame to the cluster that yields smallest χ2
1528

f,c(τf , c)
Sf,e(ω) · eiωτf − ¯Sc,e(ω)¯
¯
f,c(τf)

χ2
f,c(τf ) := X
ω,e
until end of data reached

until clusters are stationary

th keep this spike and subtract it from data

f (τf , c) < χ2

2

until number of clusters > expected number of cells

ﬁnalize clustering by merging, splitting or removing clusters

1661

a
ﬁnd spikes in next time chunk of data and update cluster statistics

f

repeat track slow changes in spike shapes
d
1 mV
1 mV
until end of data is reached
b

c

1122
1103

e

e
1
k
i
p
s

s
e
1
m

i
t

cell I

cell II

0

0

2 4
4
2
f (kHz)
f (kHz)

0 2
0 2

10
c2
10

c2

1 ms
Fig. 1
1 ms

Fig. 3

Fig. 8
Fig. 7
Fig. 6
Fig. 2

V
m
 
5
.
0

1 m
s

1   h o u r

Fig. 9

V
m
1

 

e4

e3

e2

e1

a

1 ms

b

c

d

150

100

50

0

2
χ

χ2

min = 7.8

χ2

min = 3.5

χ2

min = 66.4

χ2

min = 45.8

-1 0  1 

-1 0  1 

-1 0  1 

-1 0  1 

τ (ms)

Fig. 10

e4

e3

e2

e1

V
m
 
1

1 ms

cells: a, b
2
 = 6.9
(cid:114)
min

cells: a, c
2
 = 6.0
(cid:114)
min

cells: b, c
2
 = 3.2
(cid:114)
min

2
(cid:114)

 1

 0

-1

 1

 0

)
s
m

(
 
 

2

(cid:111)

-1

cells: a, d
2
 = 5.8
(cid:114)
min

cells: b, d
2
 = 0.9
(cid:114)
min

cells: c, d
2
 = 20.8
(cid:114)
min

-1

 0
  (ms)

1

(cid:111)1

-1

 0

1

-1

 0

1

Fig. 11

 20

 10

  5

  2

  1

0.5

