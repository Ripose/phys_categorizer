4
0
0
2
 
b
e
F
 
9
 
 
]
n
a
-
a
t
a
d
.
s
c
i
s
y
h
p
[
 
 
1
v
9
3
0
2
0
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Pattern Recognition and Event Reconstruction

in Particle Physics Experiments

R. Mankel1

Deutsches Elektronen-Synchrotron DESY, Hamburg

Abstract

This report reviews methods of pattern recognition and event reconstruction
used in modern high energy physics experiments. After a brief introduction
into general concepts of particle detectors and statistical evaluation, diﬀerent
approaches in global and local methods of track pattern recognition are reviewed
with their typical strengths and shortcomings. The emphasis is then moved to
methods which estimate the particle properties from the signals which pattern
recognition has associated. Finally, the global reconstruction of the event is
brieﬂy addressed.

1Email: Rainer.Mankel@desy.de

Contents

1 Introduction

2 Basics

Stereo angles

2.1 Detector Layouts . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.1.1 Forward or ﬁxed target geometry . . . . . . . . . . . . . .
2.1.2 Collider detector geometry . . . . . . . . . . . . . . . . . .
2.2 Typical Tracking Devices . . . . . . . . . . . . . . . . . . . . . . .
2.2.1 Linear single-coordinate measurements . . . . . . . . . . .
2.2.2 Radial single-coordinate measurements . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . .
2.2.3
. . . . . . . . . . . . . .
2.2.4 Three-dimensional measurements
. . . . . . . . . . .
2.3 Track Models and Parameter Representations
2.3.1 Forward geometry . . . . . . . . . . . . . . . . . . . . . . .
2.3.2 Cylindrical geometry . . . . . . . . . . . . . . . . . . . . .
2.4 Parameter Estimation . . . . . . . . . . . . . . . . . . . . . . . .
2.4.1 Least squares estimation . . . . . . . . . . . . . . . . . . .
2.4.2 The Kalman ﬁlter technique . . . . . . . . . . . . . . . . .
2.5 Evaluation of Performance . . . . . . . . . . . . . . . . . . . . . .
2.5.1 The reference set . . . . . . . . . . . . . . . . . . . . . . .
2.5.2 Track ﬁnding eﬃciency . . . . . . . . . . . . . . . . . . . .
2.5.3 Ghosts . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.5.4 Clones . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.5.5 Parameter resolution . . . . . . . . . . . . . . . . . . . . .
Interplay . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.5.6

3 Global Methods of Pattern Recognition

3.1 Template Matching . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2 The Fuzzy Radon Transform . . . . . . . . . . . . . . . . . . . . .
3.3 Histogramming . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . .
3.4 Neural Network Techniques
3.4.1 The Hopﬁeld neuron . . . . . . . . . . . . . . . . . . . . .
3.4.2 The Denby-Peterson method . . . . . . . . . . . . . . . . .
3.4.3 Elastic arms and deformable templates . . . . . . . . . . .

4 Local Methods of Pattern Recognition

4.1 Seeds . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.2
2D Versus 3D propagation . . . . . . . . . . . . . . . . . . . . . .
4.3 Na¨ive Track Following . . . . . . . . . . . . . . . . . . . . . . . .
4.4 Combinatorial Track Following . . . . . . . . . . . . . . . . . . . .
4.5 Use of The Kalman Filter
. . . . . . . . . . . . . . . . . . . . . .
4.6 Arbitration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3

5
5
6
7
9
9
10
12
13
14
14
15
15
16
17
19
20
20
21
21
22
22

23
23
25
26
33
34
35
40

50
50
51
53
54
55
55

4.8 Track Following And Impact of Detector Design Parameters

4.7 An Example for Arbitrated Track Following . . . . . . . . . . . .
4.7.1 Algorithm . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . .
4.7.2 Parameters
. . .
Inﬂuence of detector eﬃciency . . . . . . . . . . . . . . . .
4.8.1
4.8.2 Eﬀect of detector resolution . . . . . . . . . . . . . . . . .
4.8.3
Inﬂuence of double track separation . . . . . . . . . . . . .
4.8.4 Execution speed . . . . . . . . . . . . . . . . . . . . . . . .
4.9 Track Propagation in a Magnetic Field . . . . . . . . . . . . . . .

5 Fitting of Particle Trajectories

Impact parameter and angular resolutions

5.1 Random Perturbations . . . . . . . . . . . . . . . . . . . . . . . .
5.2 Treatment of Multiple Scattering . . . . . . . . . . . . . . . . . .
5.2.1
. . . . . . . . .
5.2.2 Momentum resolution . . . . . . . . . . . . . . . . . . . .
5.2.3 Eﬀects of ﬁt non-linearity . . . . . . . . . . . . . . . . . .
5.2.4 Contributions of diﬀerent parts of the spectrometer . . . .
5.2.5 Parameter covariance matrix estimation . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . .
5.2.6 Goodness of ﬁt
5.3 Treatment of Ionization Energy Loss And Radiation . . . . . . . .
5.3.1
Ionisation energy loss . . . . . . . . . . . . . . . . . . . . .
5.3.2 Radiative energy loss . . . . . . . . . . . . . . . . . . . . .
5.3.3 Radiation energy loss correction within the magnetic ﬁeld

5.4 Robust Estimation . . . . . . . . . . . . . . . . . . . . . . . . . .

6 Event Reconstruction

6.1 Vertex Pattern Recognition . . . . . . . . . . . . . . . . . . . . .
6.2 Vertex Fitting . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . .
6.3 Kinematical Constraints

7 Concluding Remarks

Acknowledgement

References

56
56
57
58
59
59
59
63
64

66
66
66
71
71
73
74
75
75
79
79
79
85
88

89
89
91
92

93

93

93

2

1 Introduction

Scientiﬁc discovery in elementary particle physics is largely driven by the quest
for higher and higher energies, which allow delving ever more deeply into the
ﬁne structure of the microscopic universe. Higher energies lead in general to an
increased multiplicity of particles. Since the acceleration of electrons is limited
either by synchrotron radiation in case of storage rings, or by ﬁeld gradients in
case of linear colliders, multi-TeV energies are in the near future only accessible
by accelerating hadrons, the collision of which generates even more particles.

Reconstruction of charged particles from signals of tracking detectors in spec-
trometers has always shown aspects of a discipline of art, since the variety of
experimental setups lead to development of very diverse pattern recognition meth-
ods, which could not easily be ranked among each other. An general overview has
been given in an earlier review [1]. It is remarkable that even today, no generally
accepted standard software package exists which performs track ﬁnding in a va-
riety of detector setups, a situation which is in marked contrast e.g. to detector
simulation. A new generation of experiments is now emerging in which the track
density is so high that success will crucially depend on the power of the recon-
struction methods. One example for the development in tracking demands over
15 years is illustrated in ﬁg. 1, which shows in direct comparison an event from
the experiment ARGUS [2], which took data of e+e− collisions in the Υ range in
the period 1982–1992, and the ATLAS experiment [3] which is currently under
construction and will operate from 2007 on with proton collisions at the LHC.
The new experiments also require huge computing resources for reconstruction
of their data. Since track ﬁnding is usually the most time consuming part in
reconstruction, the sophistication and economy of pattern recognition methods
has considerable impact on the computing eﬀort.

Pattern recognition plays an important rˆole also in other detector components,
for example cluster reconstruction in calorimeters, or ring ﬁnding in ring imaging
ˇCerenkov detectors (RICH). It is however in track reconstruction where the new
generations of experiments pose the most crucial challenges. This article will
therefore focus on track reconstruction as well as to related aspects of event
reconstruction.

The ﬁrst of the following chapters will provide an introduction into basic
detector concepts and tracking devices and summarize mathematical tools for
estimating parameters and performance that will be used later on. The two
following chapters focus on track pattern recognition with various methods, in-
cluding applications in several experiments. The next chapter then concentrates
on parameter estimation from particle trajectories, which is – in contrast to track
ﬁnding – in principle a straight-forward mathematical problem, but contains sev-
eral detailed issues worth mentioning. The last chapter brieﬂy discusses some
track-related aspects of event reconstruction.

3

ATLAS

Figure 1: Comparison of event complexity in the experiments ARGUS and AT-
LAS. The ARGUS event (top) consists of two reconstructed B mesons, one of
them being a candidate for the charmless decay B−
K −4π± (from [2]). The
ATLAS display (bottom) shows a simulation of an event in the inner detector
b¯b, including the pileup at full LHC
with a Higgs boson in the decay mode H 0
luminosity (from [3]).
4

→

→

2 Basics

This section provides a brief introduction into the basic elements inﬂuencing event
reconstruction. It is not intended to cover the subject of particle detectors in full
detail, instead the detector literature (see for example [4, 5, 6]) is referred to.

2.1 Detector Layouts

Modern detectors in high energy physics are usually sampling detectors. The
detector volume is ﬁlled with devices which the particles traverse and in which
they leave elementary pieces of information, as e.g. an excitation in a solid-state
detector, a primary ionization in a gaseous chamber or an energy deposition in
a sensitive volume of a calorimeter. The event record of an experiment consists
of the amassed volume of the signals from all particles of an interaction – or
possibly even several interactions – joined together. After sorting out which
bits of information are related to the same particle – this process is called pattern
recognition – the kinematical properties of each particle have to be reconstructed,
to reveal the physical nature of the whole event.

In general, experiments nowadays strive to record the interaction as a whole,
with all (signiﬁcant) particles produced in the process. This has lead to the
development of 4π detectors, where almost the whole solid angle region, as seen
from the interaction, is covered.

In general, two main concepts have to be distinguished, which will be discussed

in the following.

Muon system

HCAL

ECAL

Spectrometer
magnet

Beam

Vertex
detector

Target

Main tracking
system

Figure 2: Typical geometry of a forward spectrometer, as used e.g. in ﬁxed-target
setups.

5

2.1.1 Forward or ﬁxed target geometry

When the interaction is generated by an incident beam hitting a ﬁxed target,
the centre-of-mass system of the participating particles is seen under a strong
Lorentz boost, and the emerging particles are moving within a cone into the
forward direction. In this case, the detector setup must cover this forward cone
with instrumentation, while the more backward part of the solid angle is generally
neglected. This scenario is called a forward detector geometry. Similar situations
exist where the dynamics of the interaction result in all relevant particles to be
produced under a huge Lorentz boost, like heavy ﬂavour production at large
hadron colliders.

Figure 2 schematically shows a forward detector geometry as it is used in ﬁxed
target experiments. The event is generated through collision of a beam particle
with a nucleus in the target. Because of the momentum of the incident beam
particles, the whole event is seen under a Lorentz boost in the beam direction, so
that the emerging particles are conﬁned to a cone whose opening angle depends
on the typical transverse momenta generated in the interaction, and the size of
the Lorentz boost.

The main components of a typical forward spectrometer are:

•

•

•

the vertex detector, which is a precision tracking system very close to the
interaction point. Its main purpose is the improvement of track resolution
near the interaction point which allows reconstruction of secondary vertices
or distinction of detached tracks which is used e.g. for the tagging of heavy
ﬂavour decays.

the spectrometer magnet with the main tracking system, which measures
trajectories of charged particles and determines their momentum and charge
sign from the curvature.

the calorimeter system, which is often split into an electromagnetic and
a hadronic part. The calorimeter allows identiﬁcation of electrons and
hadrons by their deposited shower energy, and very often provide essen-
tial signals for the trigger system. The calorimeter can also measure ener-
gies of individual neutral particles, in particular photons, though the actual
capability in this task depends strongly on the particle density in the event.

•

the muon detector, which consists of tracking devices in combination with
absorbers. Only muons are able to traverse the intermediate material, and
are then measured in the dedicated tracking layers.

The design of a forward spectrometer is inﬂuenced by several factors. The
sheer size of the tracking volume depends on the leverage required for the momen-
tum resolution, since at suﬃciently high momentum the resolution is inversely
proportional to the integral of the magnetic ﬁeld along the trajectory [7], as will

6

be discussed in more detail in sec. 5. Depending on the scope of the experiment,
further detector components may be introduced to provide particle identiﬁca-
tion, for example ring-imaging ˇCerenkov counters (RICH) or transition radiation
detectors (TRD).

2.1.2 Collider detector geometry

When two beams collide head-on, the centre-of-mass system of the interactions
is either at rest or moving moderately. In this case, the detector should try to
cover the full solid angle. This beam setup usually leads to cylindrical detector
layouts with a solenoid ﬁeld parallel to the beam axis (ﬁg. 3). In comparison to

(cid:27)

(cid:27)

Vertex detector

Drift chamber

(cid:27)

Calorimeter

(cid:27)

(cid:27)

Yoke/Absorber

Muon chambers

Figure 3: Typical setup of a collider detector.

the forward geometry detector, the cylindrical geometry diﬀers in several details:

•

•

the vertex detector requires modules parallel to the beam, at least in the
central part of the angular acceptance, often referred to as the barrel part.

the main tracking system is generally contained in the magnetic ﬁeld. Coil
and yoke of the magnet usually have to be within the detector volume,
where the general choice is to have the coil between drift chamber and
calorimeter, where particles traverse it before their energy being measured
in the calorimeter, or to make it large enough to enclose the calorimeter,

7

which may be more costly to build and operate and where the ﬁeld may
have adverse eﬀects on the calorimeter itself.

•

the calorimeter system now requires barrel and end cap parts to cover the
solid angle. A main functionality at high energy colliders is the measure-
ment of jets.

•

for the muon detector, the yoke of the solenoid lends itself readily as ab-
sorber.

8

2.2 Typical Tracking Devices

2.2.1 Linear single-coordinate measurements

Figure 4: Lower half barrel part of the Zeus micro-vertex detector

A widespread type of tracking device measures one coordinate of the particle
whose trajectory intersects the device. A good example for this type represent
silicon strip detectors, which are semiconductor-based devices structured in strips
typically down to widths of 25 µm. Each strip works like a small diode, with a
voltage applied such that the border area is depleted and the resistance is high. A
traversing charged particle will then create pairs of electrons and corresponding
holes which drift apart under the voltage and can be registered as a pulse. In
general several strips will register a signal under traversal of a particle, and the
pulse heights of the participating channels can be evaluated with suitable cluster-
ing algorithms, for example centre-of-gravity based, and determine the location
at which the particle has passed. Solid-state detectors are presently the track-
ing devices with the highest spatial resolution, and they are often installed very
close to the interaction region as vertex detectors where they allow or improve the
reconstruction of primary and secondary vertices. Another favourable property
of solid-state detectors is their resilience against radiation damage. The current
limitation is in the size of individual detector modules, which makes them expen-
sive for coverage of large volumes. Figure 4 shows the micro-vertex detector of

9

the ZEUS experiment [8], prior to its installation in 2001.

2.2.2 Radial single-coordinate measurements

The size of the tracking volumes is important, since momentum measurement
requires the particle to traverse a magnetic ﬁeld, where the length of the path
provides the leverage that determines the precision of the momentum recon-
struction. This is one of the reasons why gaseous chambers, in particular drift
chambers are very commonly employed when large areas have to be covered.

Figure 5: Schematic view of a drift chamber cell. The ﬁlled circles indicate wires,
with the sense wire in the middle of the cell and the ﬁeld wires on the outside. The
black arrow shows the trajectory of a particle, the grey arrows denote primary
ionization charges drifting towards the sense wire.

The basic principle of the drift chamber is displayed in ﬁg. 5. A drift cell
consists of an anode wire in the centre and an arrangement of ﬁeld wires. The
geometry shown is very similar to that in the ARGUS drift chamber [9] (see
also ﬁg. 34 in section 4). The drift cell need not be of rectangular shape, in
the drift chamber of the BaBar experiment, for example, it is hexagonal [10].
Along the path of the particle, primary ionization occurs. The charges drift to
the anode wire, where they create a locally conﬁned avalanche of particles within
the large electrical ﬁeld close to the wire. This eﬀect results in a multiplication
of the ionization which is called gas ampliﬁcation. The rising edge of the signal
picked up by the anode wire triggers a time-to-digital converter (TDC) which
then measures the time until a common stop signal. This allows measuring of
the drift time for those charges that are the ﬁrst to arrive. In the simplest case,
the drift ﬁeld will be shaped such that the drift velocity is uniform, and the
time resolution can be directly transformed into a uniform resolution of the drift

10

distance. In practice, numerous eﬀects can lead to a non-linear drift-time/space
relation, and the spatial resolution will depend on the precise location of the
traversal of the particle.

Figure 6: Left: event display from the ZEUS central tracking detector (CTD),
showing sense wires and reconstructed tracks. Right: closeup around the track
in the lower left area. The black dots represent the sense wires, the grey dots
indicate the drift distance end points on both sides of the corresponding wire.

Since the time measured by the TDC corresponds to the arrival of the ﬁrst
charges, usually those with the smallest distance to the wire, the drift chamber
measures the distance of closest approach of the particle to the wire. In cases
where more than one particle traverses the same drift cell within the same in-
teraction window, in general only the particle closest to the wire is registered.
This eﬀect may cause complications for pattern recognition which depend on the
degree of occupancy. Another typical property of drift chambers is that the sin-
gle measurement cannot distinguish on which side of the wire the particle has
traversed; this uncertainty is called left-right ambiguity. In the worst case, left-
right ambiguity may lead to a mirror track that cannot be distinguished from
the real one. Concepts have therefore been developed how to design drift cham-
bers such that left-right ambiguity can be resolved in all cases, e.g. the butterﬂy
geometry [11].

Drift in gases is inﬂuenced also by magnetic ﬁelds. The deviation of the gas
drift direction from the vector of the electric ﬁeld is described by the Lorentz
angle. Figure 6 shows an event display of the central tracking detector (CTD) of
the ZEUS experiment, in the view along the beam axis, which has been created

11

using the tool described in [12]. The Lorentz angle in this case is 45◦, and it is
reﬂected in the design of the cell structure.

2.2.3 Stereo angles

x

u

u

u

x

x

Figure 7: Hit ambiguities with two stereo views

Devices measuring single coordinates do not provide three-dimensional2 points
on a trajectory, but measure only in a projected space. While such devices can be
very economic in the sense that a relatively small number of channels is needed
to cover a region at good resolution, 3D information can only be obtained by
combining several projections, usually named stereo views. While two views are
in principle suﬃcient to reconstruct spatial information, the presence of more than
one track leads in general to ambiguities regarding the assignment of projected
information. This is illustrated in ﬁg. 7, where two particles are measured in two
strip detector views of 0◦ (x) and 45◦ (u). Ambiguity in the assignment of the
measured hits in the x and u views to each other leads to the reconstruction of two
ghost points. This illustrates that in general at least three views are necessary
to avoid this kind of ambiguities. On the other hand, in special cases of limited

2The shorthands 2D (two-dimensional) and 3D (three-dimensional) will frequently be used

in the following.

12

TC

PC

MC

SI

Figure 8: Layout of the HERA-B spectrometer. The labels TC, PC, MC and SI
indicate groups of tracking stations that comprise the vertex and main tracking
system.

track density, the use of only two views may be justiﬁed, since in this case the
majority of ghosts may be discarded for geometrical reasons. This can already
be guessed from ﬁg. 7: since the true tracks are well separated, the uppermost
ghost combination is already just outside the chamber acceptance of the u view.
Such concepts are called all-stereo designs.

An example for a spectrometer that combines several types of single-coordinate
measurements is the HERA-B detector [13, 14, 15] which is shown in ﬁg. 8. The
vertex detector (labelled SI) consists of eight superlayers of silicon strip detectors
with four diﬀerent stereo angles. The design of the main tracker is structured
into the three areas within the magnet (MC), between magnet and RICH (PC)
and between RICH and calorimeter (TC), it contains 13 superlayers of honey-
comb drift chamber modules for the outer area and 10 superlayers of micro-strip
gaseous chambers (MSGC) for the region close to the beam3.

2.2.4 Three-dimensional measurements

In general pattern recognition will beneﬁt considerably if the tracking device itself
is able to measure 3D space points. A modern example is solid-state pixel detec-
tors, as for example the CCD-based vertex detector of the SLD experiment [17],

3The layout of tracking stations has been modiﬁed later with the shift of emphasis away

from B physics.

13

Figure 9: TPC of the STAR experiment (from [16]).

×

20 µm2. A gaseous detector capable of cover-
where the pixels have a size of 20
ing large tracking volumes with 3D measurement is the time projection chamber
(TPC). Figure 9 shows the TPC of the STAR experiment [16]. The gas volume
itself is free of wires; instead, an axial electrical ﬁeld, produced with the help of
a membrane electrode in the middle plane, lets the primary charges drift to the
anodes at the end caps, where they are registered, for example with multi-wire
proportional chambers with pad readout. While this provides a direct measure-
ment of the x and y coordinates, the z coordinate is inferred from the time
measurement. The magnetic ﬁeld is also axial, and plays an important rˆole in
limiting diﬀusion eﬀects during the drift.

2.3 Track Models and Parameter Representations

2.3.1 Forward geometry

In the forward geometry, the interaction region lies very often in an area without
magnetic ﬁeld, since the spectrometer magnet is located further downstream.
The natural choice of parameters, assuming that the z coordinate points down
the spectrometer axis and x and y are the transverse coordinates, is then

x0 the x coordinate at the reference z0

y0 the y coordinate at the reference z0

tx = tan θx the track slope in the xz plane

ty = tan θy the track slope in the yz plane

14

Q/p the inverse particle momentum, signed according to charge

where z0 denotes the location of a suitable reference plane transverse to the beam,
for example at the position of the target, or at the nominal interaction point. The
slope parameters allow for a convenient transformation of the parameters to a
diﬀerent reference z value, as is needed during vertex reconstruction. In cases
of a very homogeneous magnetic ﬁeld, it may be advantageous to substitute the
parameter Q/p by Q/p⊥, where p⊥ is the momentum in the plane transverse to
the magnetic ﬁeld, or by κ = Q/R, the signed inverse radius of curvature.

2.3.2 Cylindrical geometry

In collider detectors with cylindrical geometry, the magnetic ﬁeld normally en-
compasses the whole tracking volume, including the interaction region where the
particles are produced. In a homogeneous solenoid ﬁeld, the particle trajectory
will be a helix curling around an axis parallel to the magnetic ﬁeld. Assuming
the z coordinate is oriented along the detector axis, and the radius is given by
r = √x2 + y2, typical track parameters given at a reference value r = r0 may be

φ0 the azimuth angle where the trajectory intersects the reference radius

z0 the z value where the trajectory intersects the reference radius

ψ0 the phase angle of the helix at the reference radius intersection, which corre-

sponds to the angle of the tangent at this point

Q/R the signed inverse curvature radius of the helix

tan λ where λ = arctan pz/p⊥ is the dip angle of the helix

2.4 Parameter Estimation

The estimation of the kinematical parameters of a particle, as position (or impact
parameter), direction of ﬂight and momentum at its point of origin from spatial
measurements along its trajectory is generally referred to as track ﬁtting. We as-
sume at this point that the measurements related to a particle have been correctly
identiﬁed in the pattern recognition step (which will be discussed in more detail
in sections 3 and 4). A very general approach to parameter estimation is the
maximum likelihood method, which shall not be discussed here in detail; instead
we refer to the textbook literature [18, 19, 20, 21, 22]. The maximum likelihood
method can take very general distributions of the observed variables into account,
for example exponential distributions as they may occur when decay lengths are
measured. However, its application in multi-parameter problems can be very
complex, in particular the error analysis. In cases where the distribution of the
random variables is Gaussian, at least approximately, the least squares method is

15

generally successful. Since many observables in track reconstruction do at least
approximately follow a Gaussian distribution, this method will be focussed on in
the following.

2.4.1 Least squares estimation

If the trajectory of a particle can be described by a closed expression f~λ(ℓ), where
~λ stands for the set of parameters, ℓ is the ﬂight path and f is the coordinate which
will provide an
could be measured, a set of measurements
estimate of the parameters according to the least squares principle

with errors

mi

σi

{

{

}

}

X 2 =

X

(mi

−

f~λ(ℓi))2
σ2
i

!
= min

One can easily convince oneself that in the case of normally distributed measure-
ments mi, the above impression is proportional to the negative logarithm of the
corresponding likelihood function, which shows directly the equivalence of least
squares principle and maximum likelihood principle for this case.

Symbolizing the derivative matrix4 of f with respect to the parameters as
, the

F and the (diagonal) error matrix of the measurements as V = diag
expression to be minimized is

σ2
i }

{

and requiring the derivative to vanish at the minimum leads to the matrix equa-
tion

In case of a linear problem, ~f = F~λ, the above condition can be directly inverted

( ~m

−

F~λ)T V −1( ~m

F~λ)

−

F T V −1 ~f = F T V −1 ~m

~λ = (F T V −1F )−1F T V −1 ~m

and the estimated parameters are a linear function of the measurements. The
matrix (F T V −1F )−1 that needs to be inverted is of the shape Nλ
Nλ (where
Nλ is the number of parameters describing the particle), which is inexpensive in
terms of computation. Also the covariance matrix of the parameter estimate can
be directly determined as

×

The popularity of the least squares method can be attributed to its optimality

cov(~λ) = Cλ = (F T V −1F )−1

properties in the linear case:

4We denote the derivative matrix as ∂f

∂λ , where

=

∂f~λ(ℓi)
∂λj

.

∂f
∂λ

ij

(cid:17)

(cid:16)

16

(1)

(2)

(3)

(4)

(5)

•

•

the estimate is unbiased, i.e. the expectation value of the estimate is the
true value

the estimate is eﬃcient, which means that, of all unbiased estimates which
are linear functions of the observables, the least squares estimate has the
smallest variance. This is called the “Gauss-Markov-Theorem”.

Though these properties are strictly guaranteed only for the linear case, they are
still retained in most cases where the function f~λ can be locally approximated by
a linear expansion.

The expression X 2 in equation 1 will follow a χ2 distribution if the function fλ
is (suﬃciently) linear and if the measurements mi follow a normal distribution.
This property can be used for statistical tests. In particular the second condition
should be always kept in mind, as its relevance will become apparent later.

2.4.2 The Kalman ﬁlter technique

The least squares parameter estimation as described in the previous section re-
quires the global availability of all measurements at ﬁtting time. There are cases
when this requirement is not convenient, for example in real-time tracking of
objects, or in pattern recognition schemes which are based on track following,
where it is not clear a-priori if the hit combination under consideration does
really belong to an actual track.

The Kalman ﬁlter technique was developed to determine the trajectory of the
state vector of a dynamical system from a set of measurements taken at diﬀerent
times [23]. In contrast to a global ﬁt, the Kalman ﬁlter proceeds progressively
from one measurement to the next, improving the knowledge about the trajectory
with each new measurement. Tracking of a ballistic object on a radar screen may
serve as a technical example. With a traditional global ﬁt, this would require a
time consuming complete reﬁt of the trajectory with each added measurement.
Several properties make the Kalman ﬁlter technique an ideal instrument for
track (and vertex) reconstruction [24, 25, 26]. The prediction step, in which an
estimate is made for the next measurement from the current knowledge of the
state vector, is very useful to discard noise signals and hits from other tracks from
the ﬁt. The ﬁlter step which updates the state vector does not require inversion
of a matrix with dimension of the state vector as in a global ﬁt, but only with
the dimension of the measurement, leading to a very fast algorithm. Finally,
the problem of random perturbations on the trajectory, as multiple scattering or
energy loss, can be accounted for in a very eﬃcient way. In its ﬁnal result, the
Kalman ﬁlter process is equivalent to a least squares ﬁt.

In this article the implementation and nomenclature from [25, 27] is used, and
these documents are referred to for a more detailed explanation of the Kalman
ﬁlter method. In this notation, the system state vector at the time k, i.e. after
inclusion of k measurements is denoted by ˜xk, its covariance matrix by Ck. In

17

our case ˜xk contains the parameters of the ﬁtted track, given at the position of
the kth hit. The matrix Fk describes the propagation of the track parameters
1)th to the kth hit.5 For example, in a planar geometry with one-
from the (k
dimensional measurements and straight-line tracks, the propagation takes the
form

−

x
tx !k

=

 

 

1
0

zk

zk−1
−
1

x
tx !k−1

!  

where a subset of the track parametrization in section 2.3.1 has been used. The
coordinate measured by the kth hit is denoted by mk. In general mk is a vector
with the dimension of that speciﬁc measurement. For tracking devices measuring
only one coordinate, mk is an ordinary number. The measurement error is de-
scribed by the covariance matrix Vk. The relation between the track parameters
˜xk and the predicted measurement is described by the projection matrix Hk. In
the example in section 2.2.3, the measured coordinate in the stereo view u is

H

 

x
y !

=

cos αst

sin αst

−

(cid:16)

x
y !

 

(cid:17)

with αst as the stereo angle (45◦ in the example).

In each ﬁlter step, the state vector and its covariance matrix are propagated

to the location or time of the next measurement with the prediction equations:

˜xk−1
k = Fk ˜xk−1

C k−1

k = FkCk−1F T

k + Qk

and the estimated residual becomes

rk−1
k = mk

Hk ˜xk−1
k

−

Rk−1

k = Vk + HkC k−1

k H T

k

Here Qk denotes the additional error introduced by process noise, i.e. random
perturbations of the particle trajectory, for example multiple scattering. We will
see later (sec. 5.2) how this treatment works in detail. The updating of the system
state vector with the kth measurement is performed with the ﬁlter equations:

(6)

(7)

(8)

(9)

(10)

Kk = C k−1

k H T (Vk + HkC k−1

k H T

k )−1

˜xk = ˜xk−1

k + Kk(mk

Hk ˜xk−1
k

)

−
KkHk)C k−1

k

Ck = (1

−

with the ﬁltered residuals

rk = (1

(11)
5We assume at this stage a linear system, so that Fk and Hk are matrices in the proper

HkKk) Vk

Rk = (1

−

−

k

HkKk) rk−1

sense. For treatment of the non-linear case see below.

18

Kk is sometimes called the gain matrix. The χ2 contribution of the ﬁltered point
is then given by
k,F = rT
χ2

k R−1

k rk

(12)

The system state vector at the last ﬁltered point contains always the full infor-
mation from all points. If one needs the full state vector at every point of the
trajectory, the new information has to be passed upstream with the smoother
equations:

(13)

(14)

(15)

k+1)−1

Ak = CkF T

k+1(C k
k = ˜xk + Ak(˜xn
˜xn
k = Ck + Ak(C n
C n
Hk ˜xn
k

rn
k = mk

˜xk
k+1)
k+1)AT
C k

k

k+1 −

k+1 −

Rn

k = Rk

HkAk(C n

C k

k+1)AT

k H T
k

k+1 −

−

−

Thus, smoothing is also a recursive operation which proceeds step by step in the
direction opposite to that of the ﬁlter. The quantities used in each step have been
calculated in the preceding ﬁlter process. If process noise is taken into account,
e.g. to model multiple scattering, the smoothed trajectory may in general contain
small kinks and thus reproduce more closely the real path of the particle.

In the equations above, F and H are just ordinary matrices if both transport
and projection in measurement space are linear operations. In case of non-linear
systems, they have to be replaced by the corresponding functions and their deriva-
tives:

Fk ˜xk

fk(˜xk)

→

Hk ˜xk

hk(˜xk)

→

using for covariance matrix transformations

Fk

→

∂fk
∂ ˜xk

Hk

→

∂hk
∂ ˜xk

The dependence of fk and hk on the state vector estimate will in general require
iteration until the trajectory converges such that all derivatives are calculated
at their proper positions. We will continue to call ∂fk/∂ ˜xk the transport matrix
and ∂hk/∂ ˜xk the projection matrix of our system.

The Kalman ﬁlter has also been found to be particularly suited for implemen-

tation in object-oriented programming language [28].

2.5 Evaluation of Performance

When it comes to quantifying the performance of methods in track pattern recog-
nition, actual numbers will in general strongly depend of the deﬁnition of criteria,
which comparisons should take into account.

19

2.5.1 The reference set

Assessment of track ﬁnding eﬃciency requires ﬁrstly a deﬁnition of a reference set
of tracks that an ideally performing algorithm should ﬁnd. Normally tracks will
be provided by a Monte Carlo simulation, and the selection of reference tracks will
depend on the physics motivation of the experiment. Low momentum particles
arising from secondary interactions in the material are normally not within the
physics scope but merely an obstacle and should be excluded. Particles travelling
outside of the geometrical acceptance, for example within the beam hole of a
collider experiment cannot be traced by the detector and should be disregarded
as well. Also particles straddling the border of a detector and e.g. traversing only
a small number of tracking layers will often be regarded as outside of the design
tracking volume. A typical convention may be to regard particles which traverse

O

(80%) of the nominal tracking layers as constituents of the reference set.

The deﬁnition of the reference set can then be regarded as a deﬁnition of

eﬀective geometrical acceptance

ǫgeo =

Nref
Ntotal

(16)

with N denoting the number of particles of interest in the reference set and in
total.

2.5.2 Track ﬁnding eﬃciency

Deﬁnition of the track ﬁnding eﬃciency requires a criterion which speciﬁes whether
a certain particle has been found by the algorithm or not. There are two rather
diﬀerent concepts:

Hit matching This method analyzes the simulated origin of each hit in the re-
constructed track using the Monte Carlo truth information. If the qualiﬁed
majority of hits, for example at least 70% originates from the same true
particle, the track is said to reconstruct this particle. This method is stable
in the limit of very high track densities, but it requires the Monte Carlo
truth information to be mapped meticulously through the whole simulation.

Parameter matching The reconstructed parameters of a track are compared
with those of all true particles. If the parameter sets agree within certain
limits (which should be motivated by the physics goals of the experiment),
the corresponding track is said to reconstruct this particle. This method
requires less functionality from the simulation chain, but it bears the dan-
ger of accepting random coincidences between true particles and artifacts
from the pattern recognition algorithm.
In extreme cases, this can lead
to the paradox impression that the track ﬁnding eﬃciency improves with
increasing hit density.

20

The reconstruction eﬃciency is then deﬁned as

ǫreco =

N reco
ref
Nref

where N reco
is the number of reference particles that are reconstructed by at
ref
least one track. It should be noted that this deﬁnition is such that a value of
one cannot be exceeded, and multiple reconstructions of the same track will not
increase the track ﬁnding eﬃciency. One should also control the abundance of
non-reference tracks which are reconstructed (N reco

non−ref ): normally the relation

N reco

non−ref

Ntotal

Nref ≪

−

ǫreco

2.5.3 Ghosts

ǫghost =

N ghost
Nref

should hold, otherwise the reference criteria might be too strict.

Tracks produced by the pattern recognition algorithm that do not reconstruct
any true particle within or without the reference set are called ghosts. A ghost
rate can be deﬁned as

Since the ghost rate may be dominated by a small subset of events with copious
hit multiplicity, it is also informative to specify the mean number of ghosts per
event.

2.5.4 Clones

The above deﬁnitions for eﬃciency and ghost rate are intentionally insensitive
to multiple reconstructions of a particle. Such redundant reconstructions are
sometimes called clones. For a given particle m with N reco
m tracks reconstructing
it, the number of clones is

N clone

m =

(

N reco
m −
0

1, ifN reco

m > 0
, otherwise

and the clone rate becomes

ǫclone =

m N clone
m
Nref

P

21

In practice, clones can usually be eliminated at the end of the reconstruction
chain by means of a compatibility analysis [29].

(17)

(18)

(19)

(20)

(21)

2.5.5 Parameter resolution

The quality of reconstructed particle parameters and error estimates from recon-
struction in a subdetector is essential for matching and propagation into another
subsystem. For the whole detector, it determines directly the physics perfor-
mance. The quality of the estimate of a track parameter Xi is reﬂected in the
parameter residual

From the parameter residual distribution, one can then obtain the parameter es-
timate bias
, and the parameter resolution as a measure of its width. The
estimate of the parameter covariance matrix can be used to deﬁne the normalized
parameter residual

R(Xi)

i

h

R(Xi) = X rec

X true
i

i −

P (Xi) =

X rec

i −

X true
i

√Cii

which is often called the pull of this parameter. Ideally, the pull should follow a
Gaussian distribution with a mean value of zero and a standard deviation of one.

2.5.6 Interplay

Results for the individual performance estimators may very much depend on the
deﬁnitions, so it is advisable to always judge several of the above quantities in
combination. For example, the track ﬁnding eﬃciency should be always seen
together with the ghost rate, since a less strict deﬁnition of the criterion if a
track reconstructs a particle will lead to a higher track ﬁnding eﬃciency but also
to a higher ghost rate. Also the parameter resolution will tell if the reconstruction
criterion is correct, because in case of an inadequately generous assignment, the
parameter residuals are likely to show an increased width, or tails from improperly
recognized tracks. When parameter matching is used, generous deﬁnition of the
matching criteria will also increase the track ﬁnding eﬃciency, but reveal itself
in a high clone rate.

Excessive tightening of the reference set criteria can potentially also amelio-
rate the visible track ﬁnding eﬃciency, but it will be at the cost of the eﬀective
acceptance, since the total yield of particles with a certain physical signature is
proportional to the product

ǫtotal = ǫreco

ǫgeo

·

always assuming that relation (18) holds.

(22)

(23)

(24)

22

3 Global Methods of Pattern Recognition

The task of pattern recognition in general can be described by the illustration
in ﬁg. 10. The physical properties of the particles that are subject to measure-
ment are described by a set of parameters, as point of origin, track direction or
momentum. Each particle can therefore be represented by a point in the feature
space spanned by these parameters. The signals the particle leave in the elec-
tronic detectors are of a diﬀerent kind, they are measured hit coordinates the
nature of which is governed by the type of device. These coordinates are repre-
sented in the pattern space. While the conversion from feature to pattern is done
by nature, or by sophisticated simulation algorithms in case of modelled events,
the reverse procedure is the task of the combined pattern recognition and track
ﬁtting process.

Pattern Space

Feature Space

x

tan q

z

x0

Figure 10: Schematic illustration of Pattern Space (left) and Feature Space (right)

Global methods assess the pattern recognition task by treating all detector
hits in a similar way. The result should be independent of the starting point or
the order in which hits are processed. This is unlike the local methods that will
be discussed in section 4, which depend on suitable seeds for track candidates.
Global methods aim to avoid any kind of seeding bias.

3.1 Template Matching

The simplest method of pattern recognition can be applied if the number of
possible patterns is ﬁnite and the complexity limited enough to handle them all.
In this case, for each possible pattern a template can be deﬁned, for example a
set of drift chamber cells through which track candidates in a certain area will
pass. Such a technique has been used for the Little Track Finder, which was
part of the second trigger level of the ARGUS experiment [30], and which worked
by comparing the hits in the drift cells of the axial layers to masks stored in

23

random access memory. This method allowed for basic track ﬁnding in a 2D
parameter space, the track azimuth and the curvature in the R/φ projection,
within 20 µs. The granularity of the ARGUS drift chamber was moderate, which
limited the number of templates that had to be generated. The concept was later
extended to the ARGUS vertex trigger [31], which used the hits of the micro-
vertex detector [32] and generalized the algorithm to three dimensions and four
parameters (track curvature being negligible), which allowed to measure the track
origin in z to reject background interactions in the beam pipe. This algorithm
required the deﬁnition of more than 245000 masks, where a ﬁve-fold symmetry
of the detector had already been exploited.

in several steps
Figure 11: Schematic illustration of the tree-search algorithm:
(in this case four), the track is matched with templates of increasing granularity
and resolution. Each step descends into the next level of template hierarchy.

Template matching algorithms are mathematically so simple that they can
be hard-wired as track roads, provided that the hit eﬃciency of each element is
close to one. Remarkably, the computing time may be independent of the event
complexity, since the number of templates to be checked is always the same.
However, template matching does not scale very well when the problem requires
high dimensionality or granularity. On one side, with increasing granularity the
number of templates quickly exceeds limits of feasibility already when storing

24

them. Also the number of computations increases strongly with a ﬁner resolution
of templates. Keeping the granularity low, on the other hand, means that dense
situations cannot be resolved, and other methods have to be used to disentangle
them.

An elegant solution to both problems is the tree-search algorithm, which uses
templates of increasing structural resolution that are ordered in a hierarchy [33,
34]. In the ﬁrst step, the hit structure is viewed at a very coarse resolution with a
small set of templates (ﬁg. 11). For those templates that have “ﬁred”, i.e. which
match a structure prevalent in the event, a set of daughter templates with ﬁner
granularity is applied which are all compatible with the ﬁrst matched template.
This subdivision of templates is iterated until either a matching template on the
ﬁnest level of granularity is reached – indicating that a good track candidate has
been found – or a pattern matched at a certain resolution level cannot be resolved
at the next level, in which case it is attributed to a random combination of hits.
The tree-search approach avoids the linear growth of the number of computa-
tions with increasing granularity that would develop in a purely sequential search;
instead, the computing eﬀort, at least for small occupancy, increases only loga-
rithmically with the number of detector channels. The algorithm becomes even
in many cases
handier when storage of all possible templates can be avoided:
symmetries of the detector can be used to formulate rules how the daughter tem-
plates can be derived from the parent at run-time, and how they are connected
with the event data. The tree-search algorithm is used for example in the pattern
recognition of the HERMES spectrometer, where the ﬁnal detector resolution of
250 µm is reached in 14 steps [35]. Application of tree-search ideally requires
considerable simplicity and symmetry in the detector design, and therefore can-
not be easily used in many complex cases. In particular inhomogeneous magnetic
ﬁelds can complicate the application.

3.2 The Fuzzy Radon Transform

In a very general sense, the observed hit density in the event can be described
by a function ρ(x), where x is a very general description of the measured set of
hit quantities. In absence of stochastic eﬀects, the expected hit density in the
pattern space can be described by an integral

ρ(x) =

ρp(x)D(p)dp

ZP

(25)

where D(p) describes the prevalent population of the feature space, typically a
sum of delta functions centred at the parameters of the particles, and ρp(x) is
the average response function in pattern space for a particle with parameters p,
including all detector layout and resolution eﬀects [36].

Pattern recognition can then be regarded as an inversion of the above integral
from a stochastically distorted ρ(x). The Fuzzy Radon transform of the function

25

ρp(x) is deﬁned as

˜D(p) =

ρ(x)ρp(x)dx

ZX

(26)

This transformation requires precise knowledge of the response function, in par-
ticular the detector resolution. Track candidates are then identiﬁed by searching
local maxima of the function ˜D(p).

This method shall be illustrated in a simple example with a tracking system
consisting of ten equidistant layers in two dimensions without magnetic ﬁeld.
Tracks are parametrized by an impact parameter x0 and a track slope tx =
tan θx as deﬁned in sec. 2.3.1. As the measurement is one-dimensional, each
hit coordinate gives a linear warp-like constraint in the parameter plane, where
the width of the warp reﬂects the eﬀect of the detector resolution (ﬁg. 12a).
For a ﬁctitious situation with three superimposed tracks, the resulting Fuzzy
Radon transform is shown in ﬁg. 12b. The three peaks are very pronounced,
but development of additional local minima is already visible even in this clean
situation.

In [36] this method has been explored for a cylindrical geometry in the case of
two very close tracks which only diﬀer by a small diﬀerence in the curvature value
(ﬁg. 13), with additional noise taken into account. Figure 14 shows the resulting
Radon transform ˜D(κ, φ, γ) as a series of ﬁve images around the central values (γ
stands for the z speed of the particle which is a measure of the dip angle tangent
explained in section 2.3.2), where also the resolution parameter σ has been varied.
The images show that the individual tracks can in fact be distinguished (centre
image), but it is essential that the assumed resolution parameter matches the
real one. It should be noted that automated recognition of the “track signals” in
such images would not be a trivial task, and that, for practical purposes, analysis
of fuzzy Radon transforms in multi-dimensional parameter spaces are in general
very demanding in terms of computing power.

Another generalization of the Radon transform has been investigated in [37].

3.3 Histogramming

As seen in the previous section, the fuzzy Radon transform allows taking the
precise detector resolution into account in an elegant manner.
In cases where
eﬀects of the resolution can be neglected, the response function ρp(x) only needs
to describe the trajectory, and takes the shape of a delta-function whose argument
vanishes for points on the trajectory. This special form of the Radon transform
is often called Hough transform [39]. The Hough transform of each point-like
hit in two dimensions becomes a line; in more generality it deﬁnes a surface in
the feature space. Completion of the pattern recognition task is thus converted
into ﬁnding those points in feature space where many of such lines or surfaces
intersect, or at least approach each other closely in shape of knots [39].

26

(a)

(b)

tx

tx

x0

x0

Figure 12: Fuzzy Radon transform ˜D(x0, tx) of the hit signals of a single track
(a), and in a scenario with three tracks (b), where x0 and tx are the track oﬀset
and slope.

27

Figure 13: Two simulated tracks diﬀering only by curvature (taken from [36])

Figure 14: Fuzzy Radon transform of the two tracks in ﬁg. 13 displayed in (κ, φ)
space, with the third track parameter γ as described in the text (taken from [36]).
The transform is shown for three values of the resolution parameter σ in ρp(x),
where the value in the middle row corresponds to the simulated resolution.

28

-15(cid:13) 0(cid:13)

0(cid:13)

0(cid:13)

+ 1 5(cid:13)0(cid:13)

0(cid:13)
0(cid:13)

3

+

Figure 15: Illustration of wire orientations in the ZEUS straw-tube tracker. In
this representation, the beam is oriented vertical to the page, displaced towards
the bottom of the page (from [38]).

Histogramming can be regarded as a discrete implementation of the Hough
transform. Hit information is converted to a constraint in a binned feature space,
and the frequency of entries in a bin above a certain limit is indicative for a
track candidate. However, in most tracking devices a single measurement is
not suﬃcient to constrain all track parameters. One solution is then to convert
each measurement into a discretized curve or surface in parameter space, and
to sample the contribution of all hits in corresponding accumulator cells. An
example for such an implementation is shown for the straw-tube tracker (STT)
of the ZEUS experiment [38]. This detector system is used as a forward tracker
and consists of two superlayers with eight layers of straw tubes each. The straws
are arranged in the four diﬀerent stereo views 0◦,
15◦ and 30◦, as illustrated
in ﬁg. 15. The 0◦ straws are oriented such that the point of closest approach to
the beam line is in the middle of the straw. Taking the beam spot into account
and neglecting the curvature of the segment within the conﬁnes of the straw tube
tracker, each hit provides an arc-like constraint in the parameter space spanned
by polar angle θ and the azimuth angle φ. This structure is displayed in the
histogram from four views for a single track in ﬁg. 16. The hits from the 0◦ straws
give a transform which is symmetric in azimuth, while the yields from the other
views are slightly skewed in correspondence to the stereo angle. The parameters
of the track are clearly indicated by the intersection of the four constraints. The
resulting histogram is already much more complex in a sample with 10 simulated
tracks, where combinatorial overlaps occur (ﬁg. 17).

±

Another popular way of avoiding the underconstrained case is to combine

29

Figure 16: Hough transform of a single simulated track in the ZEUS straw-tube
tracker (from [38]).

30

Figure 17: Hough transform of a set of simulated tracks in the ZEUS straw-tube
tracker (from [38]).

31

several hits to track segments before applying the Hough transform. For example,
in a 2D pattern space without magnetic ﬁeld, two measured coordinates in the
same projection from nearby hits in diﬀerent detector layers give a straight track
segment which represents a point in the feature space. Histogramming all segment
entries in the feature space should then reveal track candidates as local maxima.
This procedure is often referred to as local Hough transform [40].

bands

HHj

@@R

(cid:0)

(cid:2)

(cid:0)(cid:9)

(cid:2)
(cid:2)
(cid:2)(cid:13)

Figure 18: Local Hough transform in a simulated event with ﬁve interactions, in
the feature space spanned by impact parameter x0 and track slope tx = tan θx
(from [41]). The parameters of true particles are illustrated by circles. The
colour intensity in each pixel corresponds to the count of segments falling into
this square. While the histogram shows the expected enhancements at the true
parameters of most simulated particles, it also displays artiﬁcial structures, indi-
cated as bands in the plot that complicate the analysis.

In general, a price has to be paid for this artiﬁcial construction of a higher
dimension of measurement, since random combinations of hits of diﬀerent origin
lead to ghost segments. The abundance of such contaminations depends strongly
on the hit and particle density. A practical example illustrating this problem is
shown in ﬁg. 18 (taken from [41]). The geometry corresponds to the “PC” part of
the HERA-B spectrometer (see ﬁg. 8), which consists of four tracking superlayers,
as indicated in ﬁg. 19a, though in the latter the drawing has been simpliﬁed
from six to three individual layers per superlayer. A simulated high-multiplicity
event with ﬁve simultaneous pN interactions has been passed through a local

32

Hough transform, from which a closeup is shown in ﬁg. 18. The genuine tracks
as generated by the Monte Carlo are indicated as circles in the feature space.
While enhancements on the histogram are clearly seen at the track parameters
of the true particles (indicated by circles), the histogram shows a signiﬁcant
number of bands which are caused by the interference of track patterns. Such
interference occurs when several tracks cross the same superlayer of the tracking
system within a close distance, as illustrated in ﬁg. 19b for four intersecting
tracks: the proximity gives rise to a multitude of combinatorial segments, which
have roughly the correct spatial information (xSL3), but a wide range of deviating
slopes shadowing the entries with the proper value. These segments enter the
histogram with their spatial coordinate transformed to the reference plane relative
to which all impact parameters are deﬁned (in this case given by z = zref ) in the
manner

x0 = xSL3 + (zref

zSL3)

tan θx

−

·

The wide spread in the slope tan θx results in a band in the parameter space,
where the tilt of the band

(27)

(28)

d tan θx
dx0

=

1

−

zref

zSL3

reﬂects the distance of the superlayer (at zSLi) from the reference plane (at zref ).
It is therefore not surprising that in the given detector example with four super-
layers, bands of four diﬀerent slopes can occur.

Even in absence of ghost segments from track overlap, the pattern of track
signals in the discretized feature space will in general reﬂect the underlying layer
structure of the tracking system. The local Hough transform is usually based on
short segments, i.e. those composed of hits in subsequent or at least nearby lay-
ers, which has the advantage that the line topology of the track is exploited and
the background from random hit combinations is still relatively small. However,
due to the small leverage, the angular error can be sizeable, which may impose
additional diﬃculty in identifying the track candidates in the Hough transform.
Long segments spanning across many layers of the tracking system have the prin-
cipal advantage of better angular resolution. However, a wide variety of hits
have to be combined, so that the number of random combinations increases ac-
cordingly. The performance of diﬀerent approaches has been analyzed in detail
in [42]. For the individual application, the optimal choice will depend on the
relative importance of resolution and multiple scattering eﬀects.

3.4 Neural Network Techniques

The human brain is particularly skilled in recognizing patterns. It is capable of
analyzing patterns in a global manner; it is self-organizing, adaptive and fault-
tolerant. It is therefore not surprising that methods have been sought for which

33

(a)
x

(b)
x

SL1

SL2

SL3

SL4

SL3

zref

z

z

Figure 19: (a) Illustration of the model detector with four tracking superlayers
discussed in the text, with the response of a single passing track. (b) Schematic
illustration of track segments for a local Hough transform generated from four
tracks intersecting in superlayer SL3, showing the abundance of ghost segments
compared to the proper ones.

aim at solving pattern recognition problems by means of artiﬁcial neural networks.
Another intriguing aspect of the human brain is the massively parallel processing
of information, which raises hopes that algorithms can be derived which can take
full advantage of inherently parallel computing architectures. Because of the wide
scope of this subject, this article cannot give a full introduction into this ﬁeld. A
collection of classic papers reprinted is available in [43].

An artiﬁcial neuron manifests a simple processing unit, which evaluates a
number of input signals and produces an output signal. A neural network consists
of many neurons interacting with each other - the output signal of a neuron is
fed into the input of many other neurons. While many classiﬁcation problems
can be attacked with simpliﬁed layouts, the feed-forward networks, track pattern
recognition in general uses fully coupled topologies.

3.4.1 The Hopﬁeld neuron

In the Hopﬁeld model [44], each neuron is in general interacting with every other
neuron. All interactions are symmetric, and the state of each neuron, expressed
by its activation Si, can only be either active (1) or inactive (0). The interaction
is simulated by updating the state of a neuron according to the activations of all
other neurons. The update rule in the Hopﬁeld model sets the new state of a
neuron to

Si = Θ

(wijSj

si)





j
X

−





34

(29)

+

j

+

k

+

i

+

k

++

i

k

+

j

+

j

i+

Figure 20: Three typical cases for adjacent track segments in the Denby-Peterson
algorithm. The ﬁrst two combinations correspond to incompatible segments, in
the third case, both segments are likely to come from the same track. (from [41])

where the weights wij determine the strength of each interaction, si are threshold
values. The theta function Θ(. . .), whose value is zero for negative arguments
and one otherwise, is only the simplest example of an activation function, which
relates the updated activation to the weighted sum of the other activations. It
can be shown [44] that such interactions characterize a system with an energy
function

1
2 


−

E =

wijSiSj

siSi

and that the interaction leads to a ﬁnal state which corresponds to the minimum
of the energy function [44, 45].

(30)

ij
X

i
X

−

2

3.4.2 The Denby-Peterson method

An adaptation of Hopﬁeld networks to track ﬁnding has been developed by
Denby [46] and Peterson [47]. The basic idea is to associate each possible con-
nection between two hits with a neuron. Activation of such a neuron means
that both hits are part of the same track. It is then essential to deﬁne an in-
teraction such that in the global energy minimum only neurons corresponding to
valid connections will be active. Interaction is only meaningful with neurons that
have one hit in common. An approach to such an energy function is illustrated
in ﬁg. 20 [41]: while in the ﬁrst two cases the neurons (ij) and (jk) represent
segments incompatible with the same track and therefore must have a repulsive
interaction, the third case is much more track-like and should have an attractive
interaction. This desired behaviour can be obtained by an energy function

E =

1
2

−

δjk −

cosm θijl
dij + djl

SijSkl

X

35

1

1
2

1
2

2

(cid:17)

δ





α

+

+

−

N

Skl

Xl6=j

Xk6=i

(cid:16)X

(31)

SijSil +

SijSkj

where Sij is the activation of the neuron associated with the segment (ij), i.e.
the connection between hits i and j, and θijl is the angle between the segments
(ij) and (jl). The variables α and δ are Lagrange multipliers preceding terms
that suppress unwanted combinations as the ﬁrst two cases in ﬁg. 20, and ﬁx
the number of active segments to the number of hits, N. Track ﬁnding is then
reduced to ﬁnding the global minimum of this multivariate energy function. The
interaction is simulated by recalculating the activity of each neuron with the
update rule, which takes the activations of all other neurons into account.

It is remarkable that the Denby-Peterson method works without actual knowl-
edge of a track model – it favours series of hits that can be connected by a line as
straight as possible, but also allows small bending angles from one segment to the
next. Thus also curved tracks can be found, provided that a suﬃcient number
of intermediate measurements exists which split the track into a large number of
almost collinear segments. The Denby-Peterson algorithm is in particular indif-
ferent about the global shape of the track - a circle and a wavy track with the
same local bending angles but alternating directions are of equal value.

One of the ﬁrst explorations of the Denby-Peterson method has been per-
formed on track coordinates measured by the ALEPH TPC [48]. The algorithm
found tracks in hadronic Z 0 decays rather accurately, which may be at least par-
tially attributed to three favourable circumstances: pattern recognition beneﬁts
considerably from the the 3D nature of the hits measured in the TPC, and equally
from the clean event structure and the low occupancy. Moreover, the algorithm
is applied such that the initialization activates only neurons that already corre-
spond to plausible connections of hits. The authors of [48] have also investigated
the behaviour of the method on events with much higher track numbers, sim-
ulated by piling up Monte-Carlo events, and found that the total CPU time of
the neural network algorithm is dominated by the initialization of the neurons,
which indicates the degree of selection already involved at this stage.

Figure 21: Wrong activations in the case of nearby tracks (from [41]).

36

The behaviour of the Denby-Peterson method under high track densities has
been further investigated in [41] by applying it to a four superlayer geometry
resembling the “PC” part of the HERA-B tracker (see ﬁg. 8). These studies
found that the classical Denby-Peterson method cannot be relied on to converge
safely in cases of nearby parallel tracks. This behaviour is explained in ﬁg. 21:
there is no possibility of resolving a cross-wise misassignment, since the system
has reached a local energy minimum, and no additional segment can be attached
because it would temporarily lead to an illicit branching of the track according
to the rules illustrated in ﬁg. 20 and formulated in eq. 31.

Figure 22: Modiﬁed energy function versus angle θijk (left) and generalized seg-
ment length dij (right) as used in [41].

The situation can be improved, as shown in [41] by dropping the branching
restriction and instead accounting for undesired angles in the cost function, by
the replacement

cosm θijl
−
dij + djl →

f (cosm θij,kl)

(32)

where the angle-dependent part is chosen such that only segments with angles
close to 180◦ give a strong negative contribution, and by adding a term propor-
tional to (δ
1/dij) for each neuron, which introduces a typical inverse segment
length δ into the energy function, where the length of an individual segment dij is
generalized such that the superlayer structure of the tracker is taken into account.
(The full deﬁnitions are given in [41].) The energy as function of segment angle
and length is displayed in ﬁg. 22.

−

The eﬀect of this variation of the method is visible in ﬁg. 23, which shows
the system after one iteration applied to an event with low track multiplicity. At
this point, there are still branchings that would not be allowed in the classical
Denby-Peterson approach, and which disappear under further iteration. With
these modiﬁcations the algorithm obtains reasonable eﬃciency and ghost rate
values [49, 41], as displayed in ﬁg. 24.

37

]

m

[

 
x

2

1

0

-1

-2

5.6

5.8

6

6.2

6.4

6.6

z [m]

Figure 23: State of the network after one iteration [41]. Crosses denote the
locations of the simulated hits.

38

R
P

1

0.5

0

0.1

0.2

0.3
Peak Occupancy

Figure 24: Eﬃciency and ghost rate for pattern recognition using the modiﬁed
2D Denby-Peterson algorithm on simulated events in a ﬁxed target geometry
(from [49]).

Several properties of the Denby-Peterson algorithm limit its application at
production scale in the general case. The fact that it does not take any ex-
plicit track model into account lets it ignore valuable information, which could
otherwise help to resolve ambiguous situations. A straight track with random
perturbations e.g. is equivalent to a slightly curved track. Neither is there a way
to take explicitly the resolution of the detector into account. The computing time
per event increases with the third power of the track density, since the number of
neurons that have to be generated is proportional to the number of hits squared
and the number of non-zero elements in the weight matrix increases with the num-
ber of neurons in the vicinity of the track. Perhaps the dominant shortcoming of
the Denby-Peterson method is the fact that it does not have a direct extension
for ﬁnding 3D tracks on the basis of single-coordinate measurements (see 2.2.1),
though it is in principle possible to circumvent this problem by ﬁrst forming
space points or segments out of the hits, provided that the ghost combinations
are properly eliminated later. Such an approach has been successfully followed
in [50], where a method resembling a discrete form of a Denby-Peterson net, re-
ferred to as cellular automaton [51], was used to select optimal combinations of
space points, complemented by a subsequent track following step.

39

e
3.4.3 Elastic arms and deformable templates

}

{

t1, ... tM

The above-mentioned limitations of the Denby-Peterson algorithm are overcome
with the elastic arms algorithm [40, 52], which was introduced by Ohlsson, Pe-
terson and Yuille in 1992. The basic idea can be described as follows: a set of
M deformable templates is created, which correspond to valid parametrizations
. The number M must be adjusted to the
of tracks with parameters
approximate number of tracks in the event. The algorithm should then move and
deform these templates such that they ﬁt the pattern given by the positions of
N detector hits, which are represented by

{
As in the Denby-Peterson case, the approach proceeds by formulation of an
energy function, whose absolute minimum is at the set of parameters which solve
the pattern recognition problem. This requires two elements: an activation-like
quantity Sia whose value is one if hit i is assigned to track a, and zero otherwise,
and a function Mia(ξi, ta) describing a metric between track template and hit,
typically the square of the spatial distance. The energy function can then be
deﬁned as

ξ1 ... ξN

}

.

To avoid trivial solutions, it is necessary to introduce the condition that each hit
must be assigned to some template in the form

˜E(S, ξ, t) =

SiaMia(ξi, ta)

N

M

i=1
X

a=1
X

M

a=1
X

Sia = 1

for each hit i. This requirement is called Potts condition [53]. One immediate
consequence of this condition is the necessity to introduce a special template to
which noise hits can be assigned.

The main challenge is then to ﬁnd the global minimum of the energy func-
tion. Since this function tends to be very spiky, as will be illustrated in more
detail below, this problem is usually tackled by extending the energy function
according to a stochastic model, which simulates a thermal motion in the system
and smoothens out the spike structure. Search of the minimum starts then at
high temperature, and the temperature is successively lowered. At zero temper-
ature, the extended energy function becomes identical to the original one. This
technique is called simulated annealing.

Instead of the temperature T , normally its inverse β = 1/T is used. At
ﬁnite temperature, the Sia are replaced by their thermal mean values Via, which
take continuous values and lead to a fuzzy hit-to-track assignment. They can be
derived from the metric function as

Via =

e−βMia
M
b=1 e−βMib

e−βλ +

P

40

(33)

(34)

(35)

where the index b in the sum in the denominator runs over all templates except
for the noise template. Via is called the Potts factor. The temperature determines
the range of inﬂuence for a hit: at zero temperature (β
), the hit is assigned
only to the nearest template, with the corresponding Via equal to one. At higher
temperature, the degree of the assignment decreases smoothly with increasing
distance. The noise parameter λ represents the symbolic noise template which, in
the limit of zero temperature, takes over hits that are further than √λ away from
the nearest genuine template. It is therefore logical to set λ in correspondence
to the detector resolution, typically as three or ﬁve standard deviations. The
term e−βλ accounts for assignments to the noise template. The Potts factor of
the noise template is calculated as

→ ∞

Vi0 = 1

Via

−

Xa6=0

instead of eq. 35, since the concept of a distance does not make sense here.

The only remaining steps necessary to solve the pattern recognition problem

are

1. to ﬁnd a suitable initialization for the templates, and

2. to ﬁnd the absolute minimum of the energy function.

It turns out that both are non-trivial in practical applications. Before turning to
realistic scenarios, it is very instructive to look at the shape of the energy function
in a very trivial example (taken from [41]), which consists of a detector measuring
only one spatial coordinate, named x, and a track model consisting only of one
parameter for each template. Two hits are considered with coordinates x1 and
x2, and two templates with parameters xa and xb.

The energy as a function of the template parameters is shown in ﬁg. 25 at
1 and xb = +1). At
a high temperature (the hits being at coordinates xa =
this temperature, the templates perceive only a blurred image of the hit pat-
tern. The global minimum is at the coordinates in the centre between the hits.
When the temperature is lowered to a critical temperature Tc, a saddle point
develops (ﬁg. 26), and the previous single minimum splits into two. The critical
temperature is related to the coordinates as

−

(36)

(37)

Tc =

=

1
βc

xa

xb

−
2

(cid:18)

(cid:19)

At very low temperature (ﬁg. 27), two minima have developed at positions
xb = x2 and
corresponding to the two equally valid solutions, xa = x1 ∧
xb = x1. The potential ridge at the line xa = xb can be interpreted as
xa = x2 ∧
a repulsive force between the templates [40].

The presence of the noise template parameter λ introduces further local min-
ima into the energy function. An example is shown in ﬁg. 28 with three hits (with

41

Figure 25: Representations of the energy function of a one-dimensional detector
with two hits, as a function of the parameters of two templates xa and xb at high
temperature [41].

Figure 26: Energy function at critical temperature [41].

42

Figure 27: Energy function at low temperature [41].

Figure 28: Energy function with three hits at low temperature, with λ = 0.4 [41]

43

xc = 0.24) and λ = 0.4. While the previous solutions are still valid, additional
minima appear that correspond to either one or two of the genuine hits being
attributed to noise.

The complexity of the energy function for this very simple example is already
staggering, and illustrates why initialization and convergence are serious issues.
In their initial study, Ohlsson, Peterson and Yuille [40] applied the method
to hits from the DELPHI TPC. Reconstruction was restricted to tracks coming
from a vertex spot common to all events, so that track candidates were described
by only three parameters, which simpliﬁed the situation considerably. The ini-
tialization was obtained with a local Hough transform. The moderate hit density
allowed performing ﬁrst the Hough transform in the projection transverse to the
magnetic ﬁeld, searching for track candidates in the space of curvature and az-
imuth. For each candidate found as a narrow peak in this projection, all hits
within a certain neighbourhood were used to calculate the longitudinal tilt angle,
which was again histogrammed.

The elastic arms phase then used gradient descent to minimize the energy
function at a given temperature. The temperature was lowered by 5% in each
step. The Hough transform produced an abundance of templates. The excessive
templates were either attracted to noise, or converged to tracks that had already
templates associated with them; these had to be weeded out at the end. The
result was found to be rather independent of algorithm parameters. The CPU
time per event was dominated by the elastic arms step (1 min on a contemporary
computer), in contrast to the Hough transform initialization (1 s).

Once more one has to note that pattern recognition in the TPC (here DEL-
PHI’s) beneﬁts strongly from the clean event structure with a moderate track
density, and the remarkable 3D measurement capabilities of the chamber. An
interesting study targeted at much more dense events with 2D measurements has
been performed in 1995 [54]. The algorithm was applied to the barrel part of the
Transition Radiation Tracker (TRT) of the ATLAS detector, with 40 layers of
straw drift-tubes with a diameter of 4 mm and a hit resolution of 150 µm. Since
the required hit resolution could only be obtained using the drift-time measure-
ment, the left-right ambiguity had to be resolved. This problem was approached
with the elegant method from [55], which introduces energy terms for both left-
right assignments (in the nomenclature of eq. 33)

N

M

˜E(S, ξ, t) =

Sia

iaM +
s+

ia(ξi, ta) + s−

iaM −

ia(ξi, ta)

(38)

(cid:16)

i=1
X

a=1
X
where the left-right assignment parameters s±
ia +
s−
ia = 1, introduce a repulsive interaction between the alternative left-right as-
signments, so that a track can only be assigned to one of the two ambiguities of
a hit.

ia, which satisfy the condition s+

(cid:17)

The initialization again used a local Hough transform. The minimization
phase of the elastic arms step at a given temperature, however, did not rely on

44

simple gradient descent, but used the Hessian matrix, i.e. the second derivative of
the energy with respect to the parameters, in a multidimensional generalization of
the Newton method. The eﬃciency was found to be 85% for fast tracks completely
contained in the barrel TRT. The eﬃciency was practically identical to the one
of the Hough transform itself, indicating that the elastic arms part did not ﬁnd
any new tracks that had not been properly covered by the initialization. The
main application of the elastic arms part was therefore to verify track candidates
found by the Hough transform and resolve the hit associations.

Figure 29: Illustration of segment initialization in the zx projection. The circles
are drift distance isochrones of each hit with the drift cell indicated by a surround-
ing hexagon. The light grey lines are the simulated particles, the black straight
lines connecting the hits are the segments produced to initialize the elastic arms
algorithm [41].

The track ﬁnding capabilities of elastic arms have been further investigated
in [41] and [56] with events passed through a full Geant simulation of the “PC”
area of the HERA-B spectrometer (see ﬁg. 8). Since the interpretation of the
Hough transform turned out problematic in the ﬁxed target geometry under
study, a diﬀerent approach was followed. Track candidates were initialized by
searching hit triplets in the 0◦ projection in each of four superlayers (ﬁg. 29). All
triplets with a straight-line-ﬁt yielding χ2 < 3.8 were accepted, and then matched
according to their track parameters. Combinations with triplet segments from all
four superlayers were used to initialize the templates in the horizontal plane. The

45

elastic arms algorithm was then used to perform the pattern recognition together

a
i

V

i

 
/
 
2

a

X

10 5

10 4

10 3

10 2

10

1

-1

10

-1

10

1

10

2

10

10

4

3
10
 [cm-2]

Figure 30: Development of χ2 with increasing β (corresponding to decreasing
temperature) with 10 muon tracks [41].

with the stereo layers, arranging the tracks vertically. Proper operation of this
method was shown with test events with ten muon tracks, where the convergence
of the tracks in the annealing from a temperature parameter of 0.1 cm−2 to
104 cm−2 is illustrated in ﬁg. 30 by the decrease of the χ2 per track. While the
algorithm was actually performing the task of vertical pattern recognition after
horizontal initialization, the computing time for the annealing with 10 tracks
turned out to be already about 4000s, and it increased at least with the second
power of the number of templates. For this reason, dense events with 100 and
more track candidates could not be seriously addressed with this method.

For this reason, a subsequent study [56] focused on the reduction of the pro-
cessing eﬀort. The ﬁrst major step was the extension of the segment initialisation
to 3D. This was achieved by using the segments found from triplets in the xz pro-
jection to convert the information from the stereo layers to 3D coordinates: the

46

b
S
y

E

h’

h

h

e

z

h

x

t

h’

p

z

Figure 31: Scheme of converting information from stereo layers to vertical (y)
coordinates, by using the horizontal projection track candidate that is indicated
by p. The true track is indicated by a dotted arrow labelled t. The ovals ﬁlled
α pro-
either in black or grey are coordinates measured under the stereo angle
jected into the xz plane. The lines labelled h are stereo hits stemming from the
true track, these fall on the trajectory t when the y coordinate is inferred with
eq. 40. Other hits of diﬀerent origin (labelled h′) lead to background hits in the
vertical plane (from [56]).

±

47

a
a
segment in the projection deﬁned a vertical plane in which the track candidate
had to be contained (ﬁg. 31). Intersections of stereo wires with this plane lead to
indirect measurements in the vertical coordinate y; the measurement equation

(39)

(40)

(41)

(42)

u[v] = x cos α

(

)y sin α

−

±

was inverted to

x cos α

u[v]

y =

±

−
sin α

and the triplet and segment ﬁnding proceeded with the stereo layers in a similar
fashion. The stereo coordinates u and v took drift distance measurements into
account, which improved the resolution but lead to left-right ambiguities also in
the vertical segment ﬁnding.

The second crucial improvement concerned the minimization algorithm within
each annealing step. The simplicity of the gradient descent method has made it
highly popular for neural network applications, but as already observed in [54],
it is by far not the most eﬃcient method. One of its main drawbacks is the
fact that its convergence slows down as it approaches the minimum where the
surface of the energy function ﬂattens out. On the other hand, large gradients as
they can easily occur at lower temperatures (see ﬁg. 28) tend to increase the step
size drastically and throw the algorithm completely oﬀ the mark. These eﬀects
contribute largely to the high computing demands.

It is therefore promising to explore more eﬃcient minimization techniques for
high-dimensioned functions [56]. The Quickprop algorithm [57] parametrizes the
dependence of the energy function on a template parameter t(k)
(where a is the
a
identiﬁer of the template and k the index of the template parameter) in second
order

E

t(k)
a
(cid:16)

{ta}

= c0 + c1t(k)

a + c2

2

t(k)
a
(cid:16)

(cid:17)

(cid:17)
and replaces the parameter in iteration step (i+1) with the value at the minimum
of the parabola, which is calculated using the gradients of the two previous steps
i and (i

1):

−

∆t(k)

a,i+1 =

∂E
∂t(k)
a

∂E
∂t(k)
a

−

i
(cid:12)
∂E
(cid:12)
∂t(k)
(cid:12)
a

i −
(cid:12)
(cid:12)
(cid:12)

i−1
(cid:12)
(cid:12)
(cid:12)

∆t(k)
a,i

Another more sophisticated minimization method, the RPROP algorithm [58],
eliminates entirely the dependence of the step width of the gradient by using
only its sign. Each component of the template parameter set has its own step
width, which is reduced in each step if the sign of the partial derivative has not
changed, and somewhat increased if the sign has changed, indicating a step across
the minimum.

48

In application to fully simulated events, the RPROP algorithm turned out
to be ten times faster than simple gradient descent. The Quickprop algorithm
reduced the computing time by yet another factor of two, but failed to converge
properly on about 10% of the tracks, so that the RPROP algorithm was ﬁnally
chosen for further study [56].

Nint

1
2
3
4
5

Segment initialization

Elastic arms (incl. initialization)
Eﬃciency Ghostrate CPU time Eﬃciency Ghostrate CPU time
15s
40s
105s
198s
371s

38%
100%
240%
440%
1100%

3.7%
5.9%
7.5%
10%
13%

4s
14s
47s
107s
234s

91%
91%
89%
87%
85%

90%
89%
87%
86%
83%

Table 1: Eﬃciency of segment initialization and elastic arms algorithm as com-
piled from [56], as a function of the number of superimposed interactions, Nint. In
the elastic arms section of the table, eﬃciency, ghost rate and CPU time include
the eﬀects of the segment initialization.

The segment initialization achieved a track eﬃciency of 91% for single inter-
actions, which dropped to 85% for ﬁve superimposed interactions in an event
(tab. 1). The relative eﬃciency of the subsequent elastic arms phase was always
better than 98%, indicating that hardly any of the good tracks the initialization
had found were lost. On the other hand, the elastic arms algorithm strongly
reduced the rate of ghost tracks prevalent in the initialization. The CPU time
consumption, determined on a HP9000/735 processor with 125 MHz clock rate,
was still relatively high, but with slightly more than 2 minutes for ﬁve simul-
taneous interactions already in a feasible range. With increasing track density
the CPU fraction of the initialization increased steadily and exceeded that of the
elastic arms part beyond three superimposed interactions.

The investigations underline that elastic arms can in principle be employed in
an eﬃcient manner, but require a very good initialization of the track candidates.
This has lead to the general perception that elastic arms should not be used for
track ﬁnding from scratch, but should rather be seen as a tool to optimize assign-
ment of hits to tracks, to resolve left-right or other ambiguities, or to detect and
eliminate outlier hits. A similar philosophy is followed in [50]. A very interesting
development in this context is the deterministic annealing ﬁlter (DAF) [59, 60],
which extends the track ﬁt with the Kalman ﬁlter with a fuzzy hit assignment
and obtains a mathematical equivalent of the elastic arms procedure.

49

4 Local Methods of Pattern Recognition

While global methods of pattern recognition have the common property to treat
all hit information in an equal and unbiased way, simultaneous consideration of
all hits can be very ineﬃcient in terms of speed. In fact many detector layouts
provide suﬃciently continuous measurements so that the sheer proximity of hits
makes it already likely that they belong to the same track. This is one of the rea-
sons why local methods of track pattern recognition, often called track following,
are the workhorses of many reconstruction programs in high energy physics.

Track following methods are essentially based on three elements:

•

•

A parametric track model, which connects a particle trajectory with a set
of track parameters and provides a method of transport, i.e. extrapolation
along the trajectory

A method to generate track seeds, i.e. rudimentary initial track candidates
formed by just a minimal set of hits which serve as starting point for the
track following procedure

•

A quality criterion, which allows distinguishing good track candidates from
ghosts so that the latter can be discarded

A related variant of track following is the propagation of a track candidate found
in one part of the tracking system into another, collecting suitable hits on the
way. In this case the initial track candidate takes the rˆole of the seed.

4.1 Seeds

There are diﬀerent possible philosophies how seeds can be constructed. This is
illustrated in ﬁg. 32, which shows schematically a tracking system with equidis-
tant layers. Starting from the last layer L, where the hit density is lowest, seeds
can be obtained by combining the hit with suitable others in the neighbouring
layer K (left side). This is the natural choice which exploits the local proximity
of hits as a selection criterion. The angular precision of such a short segment
is in general limited because of the small leverage, but the rate of fake seeds is
relatively small, since most wrong combinations tend to obtain a steep slope that
is incompatible with the relevant physical tracks and can be discarded immedi-
ately. A completely diﬀerent alternative is to combine hits for example from the
distant layers K and A to construct seeds. These seeds have potentially a much
better precision in angle, but the number of choices to be considered is also much
higher. The gain of precision can in fact be very limited if the material within
the tracker introduces sizable multiple scattering dilution. For the latter reasons,
seed combinations from nearby layers are often preferred in practical applications.

50

A
B
C
D
E
F
G

H
I
J
K
L

Figure 32: Seeding schemes with nearby (left) and distant layers (right).

Though the number of hits required for a seed is in general dictated by the
dimensionality of the parameter space, additional hits can very eﬃciently decrease
the ghost rate of the seeds. Figure 33 shows the construction of seeds consisting
of three drift chamber hits each [61].
In this example without magnetic ﬁeld,
only two hits would be minimally needed to deﬁne a seed, but the example shows
that using hit triplets reduces the combinatorics considerably.

4.2

2D Versus 3D propagation

Many detector layouts allow track following in a projection. For example, drift
chambers with many wires parallel and of same length may allow separation of
a pattern space that is measured in a plane orthogonal to the wires. This means
that parameter propagation during the track following process is far less costly
in terms of computations, and that the seeds can be constructed from only two
measured hits in the case of a ﬁeld-free area, or from three hits within a magnetic
ﬁeld. It should be noted that in presence of a magnetic ﬁeld, a 2D treatment is
only possible if the ﬁeld is oriented parallel to the wire, and homogeneous in wire
direction. An example for such an application is the pattern recognition in the
ARGUS drift chamber (ﬁg. 34), where the seeds are constructed from three hits
in the outer layers, and the track following proceeds towards the beam line [62].
However, pattern recognition in projections cannot avoid that at some point,
3D information must be inferred. This can be achieved by performing track
ﬁnding independently in all available projections, and then merging compatible
projected track candidates into a 3D object. For an unbiased tracking, at least
three independent views must exist (see sect. 2.2.3), and each view must possess

A
B
C
D
E
F
G

H
I
J
K
L

51

Figure 33: Creating seeds from drift chamber hit triplets. The style of displayed
items is similar to ﬁg. 29. Crosses indicate the hit coordinates used to construct
the triplets(from [61]).

Figure 34: Close-up of the drift chamber area from the ARGUS event display in
ﬁg. 1 [2]. The tracks are obtained by a track-following algorithm that proceeds
from the outer towards the inner layers.

52

enough hit information to ﬁnd the track by itself with good eﬃciency. A typical
symmetric arrangement consists of three views with 0◦, 120◦ and 240◦ stereo
angle, among which all layers are evenly distributed. This approach leads to
virtually azimuth-independent track parameter resolutions.

A more economic alternative is a design with an asymmetric layer distribu-
tion which is less costly in terms of the number of channels but requires suitable
pattern recognition algorithms. It is possible to perform ﬁrst the pattern recog-
nition in the 0◦ projection, and then use the resulting track candidate to convert
α layers into the vertical coordinate [62], as
the measurements in the +α and
already illustrated in a diﬀerent context in ﬁg. 31. The next step then proceeds
with track ﬁnding in the vertical projection. In this case, only the 0◦ projection
needs to be equipped with enough layers for a standalone track ﬁnding, while
the two stereo views are combined and thus the number of layers per stereo view
can be smaller. A reasonable scenario for this design comprises 50% of the layers
oriented at 0◦, 25% in the +α and 25% in the

α projection.

−

In the case of genuine 3D measurements, 3D seeds can be easily constructed
from two hits in the ﬁeld-free case, and from three hits in the case with magnetic
ﬁeld, which normally will hardly lead to combinatorial problems. This is the
situation in the barrel part of the CMS inner detector [63, 64], where three layers
of silicon pixel detectors with 150 µm pixel size will be used to initiate track
seeds, or in TPCs. In case of intrinsically 2D measurements, 3D seeding has the
general disadvantage that the seeds will become rather complex, consisting of 4–5
measurements and under high particle density also many false seeds will be gen-
erated. Also left-right ambiguities have a strong impact here: a seed constructed
from ﬁve drift chamber hits yields 32 ambiguous track parameter sets upon ex-
panson of all possible left-right assignments. Once the seed is constructed, the
track following step involves many extrapolations of the track parameters which
are more costly with the full set of parameters, in particular if the covariance
matrix is to be transported as well.

On the other hand, 3D propagation is easier to apply in the sense that the full
coordinate information is always available, so that e.g. the decision if the track
candidate intersects a particular detector volume or not can be made unambigu-
ously and multiple scattering eﬀects can be accounted for with good precision.
The issue of merging the diﬀerent projections is also avoided.

−

4.3 Na¨ive Track Following
The na¨ive variant shall be discussed here essentially to allow for comparison
with the more sophisticated approaches. Starting from a seed, the trajectory is
extrapolated to the detector part where the next hit is expected. If a suitable hit
is found, it is appended to the track candidate. Where several hits are at disposal,
na¨ive track following selects the one closest to the extrapolated trajectory. This
procedure is continued until the end of the tracking area is reached, or no further

53

suitable hit can be found.

Na¨ive track following is relatively easy to apply to tracking scenarios with
moderate track density and often leads to a reasonable computational eﬀort since
the number of hits to be considered is roughly proportional to both the number
of layers and the number of tracks. The application to situations with large hit
density soon reaches its limitations, since in dense environments, track following
runs the risk of losing its trail whenever several possible continuations exist. The
main complications can be summarized as follows:

1. Some expected hits may be missing because of limited device eﬃciency,
which will be called a track fault in the following. This also includes the
case where the hit is existing, but out of expected coordinate bounds, for
example because of delta electrons created by the impact of the particle. In
drift chambers with single hit readout, the drift time measurement of the
followed track can be superseded by another particle passing the same cell
closer to the signal wire.

2. Wrong hits may be closer to the presumed trajectory than the proper hits
and be picked up in their stead. This can happen easily just after the
seeding phase when the precision of the track parameters is still limited, or
when some false hits have already been accumulated. A wrong hit may stem
from another reconstructable track, from a non-reconstructable low-energy
particle, or from detector noise.

3. Left-right ambiguities in wire drift chambers double the number of choices.
Especially in small drift cells, e.g. in straw tube trackers, wrong left-right
assignments are to some degree unavoidable and need to be coped with.

These aspects can pose a particular problem if the track density is subject to
strong variations, e.g. due to a ﬂuctuating number of simultaneous interactions
under LHC-like conditions.

4.4 Combinatorial Track Following

This variant is aware of possible ambiguities, and in each track following step,
each continuation hit which is possible within a wide tolerance gives rise to a
new branch of the procedure, so that in general a whole tree of track candidates
emerges. The ﬁnal selection of the best candidate must be done in a subsequent
step, which may involve a full track ﬁt on each candidate. This kind of method is
potentially unbeatable in terms of track eﬃciency, but in general highly resource
consuming and therefore only used in special cases with limited combinatorics.

54

4.5 Use of The Kalman Filter

All track following approaches have to evaluate if a certain hit is compatible with
the presumed trajectory and thus suitable to be added to the track candidate.
The suitability of a hit should be based on criteria which exploit all the knowledge
based on those hits that have been accumulated so far. Not only the track
parameters themselves, also their precision needs to be known. The ideal tool in
this situation is the progressive ﬁt implemented by the Kalman ﬁlter, which has
been discussed in section 2.4.2.

k

The Kalman ﬁlter prediction already provides an excellent criterion for hit
selection. When a hit is considered to be appended to the track, ﬁrst the predicted
residual rk−1
from equation 9 can be used as a rough criterion. After passing a
hit through the ﬁlter process (see eq. 10), the ﬁltered χ2 deﬁned in equation 12 is
an even more precise measure. In general, the decision power will increase when
more and more hits are accumulated in the track candidate. Once the full track
is available, the result of the Kalman smoother (eq. 13) can be used to detect
and remove further outlier hits.

4.6 Arbitration

In practical applications of track following, means are required to reduce its de-
pendency on the starting point, and to decrease its vulnerability against stochas-
tic inﬂuences. This process is called arbitration. For example, it is mandatory
not to depend on a single option of seeding tracks, which would lead to loss of a
track if one of the seeding layer happens to be ineﬃcient, but one will normally
use several combinations of layers for seeding. Such redundancy increases the
probability to obtain a seed for a track even in presence of device ineﬃciency.
When an expected hit appears to be missing in a layer during propagation, it may
be advisable not to discard the candidate immediately, but to proceed further
until a fault limit is exceeded. In a case where more than one hit could present a
suitable continuation for a track, one might want not to decide immediately for
the closest hit but create branches into diﬀerent candidates which are pursued
independently. When a hit appears to be ﬁne for a continuation, the algorithm
should account for the possibility that this hit is wrong and the right hit has
disappeared for some reason. However, na¨ively applied, all these extensions lead
to either vast combinatorics, which will explode with increasing hit density, or
suﬀer from ad-hoc limitations. A method to overcome these problems will be
detailed in the following.

55

4.7 An Example for Arbitrated Track Following

This section discusses the concurrent track evolution algorithm as an example for
an approach to track following with arbitration, which is in detail described in
[61, 65].

4.7.1 Algorithm

The basic idea is to allow for concurrency of a certain number of track candidates
at any time during the propagation of a certain seed, or even a set of seeds. These
tracks are propagated in a synchronized manner from one sensitive tracking vol-
ume to the next. At each propagation step for each track candidate, branching
into several paths is possible and will in general occur. Multiple branches appear
when several continuation hits are consistent with the present knowledge of track
parameters, or when more than one tracking volume is within reach. Also the
possibility that the expected hit is simply missing, e.g. because of device inef-
ﬁciency, gives rise to a new branch. Thus the procedure explores the available
paths for all track candidates concurrently which leads to a rapid creation of new
track candidates. On the other hand, the number of track candidates should not
grow beyond control. This is achieved by applying a quality selection on the
whole set of concurrent track candidates after each round of propagation, using
suitable estimators for the quality of a track. This leads to a favourable timing
behaviour even for high multiplicity events. Concurrent track evolution can thus
be regarded as a variant of deferred arbitration [66]. The actual propagation is
based on the Kalman ﬁlter.

An illustration of this strategy is shown in ﬁg. 35 taken from [61], which shows
a potentially ambiguous situation caused by two nearby tracks T1 and T2 plus a
large angle track T3 in ﬁve layers of honeycomb drift chambers. For simplicity,
it is assumed here that the algorithm discards track candidates with more than
one missing hit (fault) in a row, and that the maximum number of concurrent
candidates is three – in reality, higher limits may be used. It is also assumed
that a seed of hits from track T1 has been formed on the right side outside of the
ﬁgure. The propagation proceeds upstream from right to left. The illustration
shows how three parallel candidates arise from diﬀerent left-right assignments to
the two drift chamber hits in layer E, which are propagated through layers D and
C – including the tolerance of a fault on track T1 in layer D. In layers B and A,
the false paths are discarded because of accumulating too many faults, and the
proper reconstruction of track T1 is retained. Track T2 should then be found
later with a diﬀerent seed, while track T3 is likely to be non-reconstructable.

Track following in the na¨ive sense would always accept the hit with the small-
est χ2 contribution, possibly a good solution when the hit density is small. In the
presence of multiple scattering and high hit densities, a wrong hit will frequently
have a smaller χ2 contribution than the proper one, or replace a proper hit which

56

A

B

C

D

E

from seed

T2

T1

Reject

Accept

T3

Figure 35: Schematic view of concurrent track evolution in a ﬁve-layered part of
a tracking system with hexagonal drift cells, which is traversed by three particles,
labelled T1, T2 and T3. The simulated drift time isochrones are indicated by
circles. The propagation proceeds upstream from the right to the left and starts
with a seed of hits from track T1 outside of the picture (from [61]).

is missing due to detector ineﬃciency, or shadowed by another track passing the
same cell. On the other hand, full evaluation of all possible hit combinations
would exceed all bounds of computing resources when applied to dense events.
Thus, the concurrent track evolution strategy combines the virtues of track fol-
lowing and combinatorial approaches. As will be shown below, the optimization
in each evolution step using a quality estimator provides an elegant means to deal
with the main problems in high occupancy track propagation.

4.7.2 Parameters

The algorithm is controlled by parameters which determine the selection of hits
for propagation of candidates, and for optimization of concurrent candidates on
each level. The parameter δmax
is the range around the predicted coordinate
in the next considered tracking layer, in which continuation hits are searched.
The parameter δχ2
max stands for the maximum tolerable ﬁltered χ2 increment
according to eq. 12. Missing hits (faults) are in general tolerated but only a
certain number of subsequent faults (Nmax
Faults) are accepted. The pruning of track
candidates after each evolution step is then regulated with absolute and relative
cuts. The quality of a track candidate can be estimated with a function of the

u

57

form

Q = f (NSteps, NFaults, χ2

i , ...)

(43)

(44)

where NSteps is the number of evolution steps passed so far, and χ2
i stands for
the contribution of the accumulated hit i to the total χ2. If needed, also a bias
from the track parameters could be introduced here, which suppresses e.g. tracks
that are very steep or have very low momentum. A convenient simple quality
estimator is

Q = NSteps −

NFaults −

wχ2

χ2
i

·

i
X

which applies a certain malus (in this case 1) for each missing hit, which is equiva-
lent to an ill-matching hit with a χ2 contribution of 1/wχ2 (in the conﬁguration of
tab. 2 equal to 10). Furthermore, cuts are applied relative to the best candidate
currently in the set: candidates whose quality diﬀers from the best candidate
by more than δqmin are discarded. Finally, all concurrent track candidates are
ranked in decreasing order of quality, and only the ﬁrst
max candidates in rank
are retained. If propagation cannot be continued though the end of the tracking
system is not reached, this may have a natural reason, e.g. the particle may have
been stopped or decayed in ﬂight. In such cases, the best remaining track candi-
date on the last level is kept if it comprises at least a certain minimum number
of hits, N min
Hits.

R

4.8 Track Following And Impact of Detector Design Pa-

rameters

The practical behaviour of such an algorithm, as it has been developed for the
HERA-B spectrometer has been studied in [61], including an investigation of the
impact of detector design and performance on the pattern recognition capabil-
ity. As the experiment has never routinely taken physics data at the high design
interaction rate of 40 MHz, the results have been obtained from a full Geant
simulation with on average ﬁve superimposed pN interactions, one of them con-
taining beauty hadrons. As seen in ﬁg. 8, the inner part of the HERA-B main
spectrometer acceptance within about 25 cm radius from the beam line is covered
by micro-strip gaseous chambers (MSGC), while the outer part is instrumented
with Honeycomb drift chambers [13, 14, 15]. The pattern tracker consists of four
superlayers outside of the magnetic ﬁeld, which consist of 6 individual layers each
(the area marked “PC” in ﬁg. 8), except for the inner part of the two middle su-
perlayers that have only four layers each. Half of the layers measure a horizontal
coordinate (0◦ orientation), the other half are arranged at
100 mrad stereo an-
gle. The seeds were produced from hit triplets in the hindmost two superlayers
for upstream, and in the foremost two superlayers for downstream propagation

±

58

Parameter Value Parameter Value
Nmin
Nmin
δχ2
δχ2
δqmin

Hits(x)
Hits(y)
max(x)
max(y)

Nmax
Nmax
Rmax
wχ2

Faults(x)
Faults(y)

2
2
5
0.1

9
9
8
16
1
−

Table 2: Table of parameters used in the implementation in [61]

(ﬁg. 33). Track ﬁnding was performed ﬁrst in the 0◦ projection, then continued
in the combined stereo layers, where the vertical coordinates were determined
using the horizontal projection of the track candidate with the method explained
in sec. 3.4.3 (see eq. 40 and ﬁg. 31).

The algorithm parameters used are summarized in table 2. The parameters
allow for a delicate adjustment of balance between the extremes of na¨ive track
following (
Rmax = 1), where always the apparently best path is followed, and
combinatorial track following (
), which retains all paths. The detailed
Rmax =
∞
simulation allowed to study some principal eﬀects of tracking system properties
on pattern recognition parameters which will be shown in the following.

4.8.1 Inﬂuence of detector eﬃciency

Figure 36 shows how the hit eﬃciency of the detector devices aﬀects the pattern
recognition performance on tracks emerging from B decays. Above ǫHIT = 95%,
the hit ineﬃciency is well compensated by the algorithm (operating with NFaults =
2), resulting in an excellent track ﬁnding performance. Smaller hit eﬃciency leads
to sizeable loss in the fraction of detected particles.

4.8.2 Eﬀect of detector resolution

The inﬂuence of the spatial resolution is shown in ﬁg. 37. The simulated res-
olutions of outer and inner tracking system were varied independently.
It is
interesting to see that the eﬃciency degrades only slowly with the resolution be-
ing increased up to 1 mm. The slight drop in eﬃciency at 100 µm in ﬁg. 37a is an
artifact due to numerical approximations. Both ﬁgures indicate that the eﬀect
of resolution on track ﬁnding eﬃciency should not be overrated. Much stronger
is the eﬀect on the ghost rate, the plots underline that a good resolution helps
considerably to suppress fake reconstructions.

4.8.3 Inﬂuence of double track separation

The simulation of the inner tracker devices allowed varying of the double track
the distance down to which nearby tracks can be resolved as
resolution, i.e.

59

±

e

 p ±

 (B0)

 m ±
(p> 1 GeV)

±

X
B0→ J/y

 K0
S

1.1

R
P

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.7

0.8

0.9

1

1.1

1.2

HIT

Figure 36: Pattern recognition eﬃciency for diﬀerent values of the hit eﬃciency
on simulated events consisting of one pN interaction with a B0 meson with the
ℓ+ℓ−π+π−, where ℓ+ℓ− can be a pair of muons
decay chain B0
or electrons, superimposed with on average four unbiased inelastic interactions.
The ﬁlled squares show the track ﬁnding eﬃciency for charged particles with
momentum above 1 GeV, the ﬁlled circles are for particles from the B decay.
The triangles indicate the combined eﬃciency of all four B decay particles [61].

J/ψK 0

S →

→

60

e
e
1.4

R
P

NLayers

> 17

1.2

R
P

NLayers

> 17

1.2

1

0.8

0.6

0.4

0.2

0

0

(a)

Ghosts

±

 m ±

 p ±

e

 (B0)

B0→ J/y

 K0
S

1

0.8

0.6

0.4

0.2

0

0

(b)

±

 m ±

 p ±

e

 (B0)

B0→ J/y

 K0
S

Ghosts

200

400

600

800 1000 1200 1400 1600

100 200 300 400 500 600 700 800 900 1000

OTR [m m]

ITR [m m]

Figure 37: Pattern recognition eﬃciency for diﬀerent outer (a) and inner tracker
resolutions (b), for particles from the B0
S decay mode as detailed in
the caption of ﬁg. 37. Only tracks passing at least 17 out of 24 possible tracking
layers were considered. Also the ghost rate is displayed (open circles) [61].

J/ψK 0

→

61

s
e
s
e
1.2

R
P

NLayers

> 17

1

0.8

0.6

0.4

0.2

m ±
±

e

 (B0)
 (B0)

B0→ J/y

 K0
S

0

0

2000

4000

6000

Ghosts

8000

10000
dHitITR [m m]

Figure 38: Pattern recognition eﬃciency for diﬀerent double hit resolutions of
the inner tracker for particles from the B0
S decay mode as detailed in
the caption of ﬁg. 37. Also the ghost rate is shown (open circles). Only tracks
passing at least 17 out of 24 possible tracking layers were considered [61].

J/ψK 0

→

62

e
]

s
t
i
n
u
 
e
v
i
t
a
l
e
r
[

 

U
P
C
T

4.5

3.5

2.5

1.5

0.5

5

4

3

2

1

0

0

2

4

6

8

10

12
NINEL

Figure 39: Mean computing time per event as a function of the number of inelastic
interactions superimposed to one b¯b interaction [61], normalized to the value at
NIN EL = 4.

individual hits in a device. In micro-strip gaseous chambers (MSGC) as they are
used by HERA-B, the double track separation distance is in general larger than
the resolution, since it depends on the cluster sizes. As visible in ﬁg. 38, the
eﬃciency drops signiﬁcantly with double track resolutions worse than 800 µm.

4.8.4 Execution speed

As already seen in sec. 3.4.3, the CPU time consumption is an essential aspect for
the selection of a pattern recognition algorithm. The concurrent track evolution
algorithm was tested on the same geometry and event type as the elastic arms
algorithm implementation (see tab. 1), and required on average 4s per event
with four superimposed inelastic interactions, compared to several minutes for
the elastic arms method on the same type of processor. Also the behaviour with
increasing track density is important, since steep increases with a sizable power
of the track multiplicity, as they may arise from combinatorics, can have a very

63

negative impact on use of a reconstruction program at production scale. Fig-
ure 39 shows the average computing time per event normalized to that for the
nominal four superimposed inelastic interactions. At high interaction multiplic-
ity, the computing time per event settled rather gracefully on a roughly linear
dependence, indicating a constant amount of time per track, at an acceptable
loss of eﬃciency, which can be considered a good-natured behaviour. With the
speed shown above, the algorithm is fast enough to be used in quasi-online re-
construction [67].

4.9 Track Propagation in a Magnetic Field

In general the above track following strategy can be applied also within a magnetic
ﬁeld. The main diﬀerence is that the transport function in eq. 8 becomes non-
linear, and the transport matrix becomes a local derivative as displayed in eq. 15.
If the ﬁeld is homogeneous, or if inhomogeneity can at least be neglected within
typical transport distances, the transport function and matrix can usually be
expressed analytically.

In many cases, however, the ﬁeld is neither homogeneous nor describable in
an analytic expression, instead, it is parametrized in terms of a ﬁeld map, which
has been measured with Hall probes, or computed by means of a ﬁeld simulation
program. In this case, numerical methods have to be used to derive the transport
function. A very suitable method is the Runge-Kutta procedure [68], which
integrates the equations of motion by expanding the trajectory up to a certain
order and sampling the ﬁeld at a series of intermediate points, which are chosen
and weighted such that all powers of the errors below a certain order cancel.
Even this procedure meets considerable challenges when the ﬁeld varies strongly
and a very high precision, matching the detector resolution, must be warranted.
In this situation, an embedded Runge-Kutta method with adaptive step size can
help: the next highest order of Runge-Kutta is compared with the preceding one
and the diﬀerence serves as an error estimate, which is then used to adjust the
step size.

Application of the Kalman ﬁlter does not only require a transport function for
the track parameters, but also the derivative matrix of the new parameters with
respect to the old is needed (see eq. 15). Calculation of this derivative matrix can
be eﬃciently performed within the same Runge-Kutta framework that is used for
the parameter transport itself [69].

An extension of the concurrent track evolution algorithm for track following
in the magnetic ﬁeld has been developed and tested on the HERA-B geometry
in [65]. Track segments found in the ﬁeld-free part of the spectrometer were fol-
lowed upstream through the inhomogeneous ﬁeld of the magnet tracker. Figure 40
shows an event display with simulated tracks including a B decay reconstructed
with this method. The algorithm achieved a high track propagation eﬃciency in
spite of the large track density.

64

(a)

(b)

π+
π−
µ+

µ−

Figure 40: (a) Display of a simulated event with one interaction containing the
golden B decay and six superimposed inelastic interactions, focussed on the mag-
net area, where the pole shoe of the magnet is indicated by the large circle [65].
Both the Monte Carlo tracks (light grey) and the reconstructed tracks (thick dark
lines) are show (reconstructed hit points denoted by crosses). (b) Same event,
with the display restricted to particles from the golden B decay.

65

5 Fitting of Particle Trajectories

After pattern recognition has done its work, the detector hits are separated into
sets each of which, ideally, contains manifestations of one speciﬁc particle.
It
is then the task of the track ﬁt to evaluate the track parameters and thus the
kinematical properties of the particle with optimal precision. Even if the pattern
recognition itself is already providing track parameters and covariance matrices
to some degree, obtained for example by means of the Kalman ﬁlter, it will in
general be left to a ﬁnal track ﬁt to take all necessary eﬀects into account which
are often neglected at the track ﬁnding stage because they are costly to apply
under the full combinatorics of pattern recognition.

5.1 Random Perturbations

In the easiest case, track parameters could be derived from the measurements by
applying the least squares ﬁt formulas from eq. 4 and 5 in sec. 2.4.1. In real-
istic applications, the problem is usually more involved because of the way the
trajectory of the particle is inﬂuenced by random perturbations that dilute the in-
formation content of the measurements, most commonly multiple scattering and
ionization or radiative energy loss. Their inﬂuence is schematically displayed in
ﬁg. 41. One can interpret the diagram in such a way that, from step to step, the
measurements, labelled on the right side, improve the degree of amount of infor-
mation about the kinematical properties of the particle, while the perturbations
labelled on the left side reduce it.

5.2 Treatment of Multiple Scattering

Multiple scattering occurs through the elastic scattering of charged particles in
the Coulomb ﬁeld of the nuclei in the detector material. Since the nuclei are
usually much heavier than the traversing particles, the absolute momentum of
the latter remains unaﬀected, while the direction is changed. If the longitudi-
nal extension of the traversed material block can be neglected (this is normally
referred to as thin scatterer approximation), only track parameters related to
particle direction are aﬀected directly, for example the track slopes tx = tan θx
and ty = tan θy introduced in section 2.3.1. The stochastic nature of multiple
scattering is that of a Markov process.

The distribution of the deﬂection angle follows a bell-like shape, though it
cannot be accurately described by a Gaussian because of its pronounced tails. The
variance of the projected multiple scattering angle is calculated within Moli`ere
theory [70, 71, 72] as

CM S =

2

13.6 MeV
βpc

 

!

t [1 + 0.038 ln t]2

(45)

66

Multiple scattering

hard radiation
Multiple scattering

Measurement

Measurement

Multiple scattering

Measurement

Multiple scattering

Measurement

Continuous
multiple scattering
(thick scatterer)

Multiple scattering

Measurement

Multiple scattering

Measurement

Figure 41: Schematic view of the information ﬂow in the track ﬁt. Elements
shown are measurements (hits) in the tracking layers, in one case a missing hit
which is e.g. not found by the pattern recognition procedure, and random per-
turbations like multiple scattering and photon radiation.

67

where t is the traversed path length in terms of radiation lengths xR, usually
called radiation thickness. (While the radiation length is frequently abbreviated
as x0 in the literature, the symbol xR is used here instead to avoid confusion with
other uses of x0 throughout this article.) For a planar object arranged in a plane
vertical to the z axis, the radiation thickness along z is given by

Taking the track inclination against the z axis into account, one obtains the

˜t =

Z

dz
xR(z)

eﬀective radiation thickness

t = ˜t

1 + t2

x + t2
y

q

so that the ﬁnal formula becomes (assuming β

1)

≈

CM S =

13.6 MeV
pc

 

2

!

q

1 + t2

x + t2

y ˜t

1 + 0.038 ln
h

q

1 + t2

x + t2

y ˜t

(48)

2

i

In general, multiple scattering could be treated in the track ﬁt by expressing the
angular uncertainty of each thin scatterer as an additional contribution to the
error of each aﬀected measurement. Since a multiple scattering deﬂection will
inﬂuence all downstream measurement errors in a correlated way, this introduces
artiﬁcial correlations into the hitherto uncorrelated measurements, so that the
matrix V in section 2.4.1 is no longer diagonal. Evaluation of eq. 4 requires
then inversion of non-trivial matrices whose dimension is not only the number of
parameters but the number of measurements. Straight-forward solutions of this
problem have been devised [73], which intrinsically treat all multiple scattering
angles as free parameters. In many practical situations however, where the num-
ber of parameters may be ﬁve and the number of measurements perhaps as large
as 70, this can lead to serious problems.

The generally accepted solution for the above problem is provided by the
Kalman ﬁlter technique. The multiple scattering dilution is added as process
noise (represented by the matrix Qk in the transport equation, eq. 8) at the
very position in the trajectory where it originates. The Kalman ﬁlter normally
proceeds in the inverse ﬂight direction along the path of the particle and takes
the inﬂuences illustrated in ﬁg. 41 into account. Mathematically, the result will
be identical to a straight-forward least squares ﬁt as described in the previous
paragraph, but the detailed procedure avoids handling of huge matrices.

In Kalman ﬁlter language, the resulting covariance matrix contribution for

thin scatterers is

(46)

(47)

(49)

cov(tx, tx) = (1 + t2
cov(ty, ty) = (1 + t2
cov(tx, ty) =

x)(1 + t2
y)(1 + t2
txty (1 + t2

x + t2
x + t2
x + t2

y)CM S
y)CM S
y)CM S

68

y

x

]

m

 

[
n
o
i
t
u
l
o
s
e
R
 
y
/
x

30

20

10
9
8
7
6
5

4

3

2

1

-1

10

1

10

2

10
p [GeV]

Figure 42: Impact parameter resolution at the ﬁrst track point, separately for
the coordinate in the bending plane (x, circles) and the non-bending plane (y,
triangles).

(These and related formulas and their derivation can be found in [74]).

It may be interesting to see how such a ﬁt works in practice. In the following,
results of a study are shown which has been performed on basis of simulated
events in the HERA-B geometry (ﬁg. 8), applying a Kalman ﬁlter based track ﬁt
to the simulated hits [75]. This kind of geometry is typical for modern forward
spectrometers, and generally similar to COMPASS [76] or the planned LHCb [77]
and bTEV [78]. The study was based on detector design resolutions and not in-
tended to make quantitative statements on the actual spectrometer performance,
but to provide insight into the eﬀects of combining various diﬀerent detector
types, the sizable number of hits per track, and the considerable amounts of ma-
terial in the tracking area that make an accurate treatment of multiple scattering
essential.

69

m
ty

tx

n
o
i
t
u
l
o
s
e
R

 

y

t
/

x

t

-2

10

-3

10

-4

10

70

-5

10

-1

10

1

10

2

10
p [GeV]

Figure 43: Resolution of the slope parameters tx = tan θx (circles) and ty = tan θy
(triangles).

5.2.1 Impact parameter and angular resolutions

The visible track parameter resolution was obtained by calculating the track
parameter residual for each track using the Monte Carlo truth, and applying
a Gaussian ﬁt to the distribution. (The term visible is used to distinguish this
resolution from the one estimated by the ﬁt.) The impact parameter resolution for
tracks passing the Silicon micro-vertex detector and the outer tracker as a function
of momentum is shown in ﬁg. 42. Since this impact parameter is deﬁned with
respect to the position of the ﬁrst hit of the track counting from the interaction
point, the resolution is governed by the error of the ﬁrst coordinate and only
weakly dependent on momentum. Multiple scattering acts like a ﬁlter which
dilutes the information from the following layers, only at higher momentum their
contribution to the resolution at the ﬁrst point becomes visible.

Since the vertex detector measurement accuracy is approximately isotropic,
horizontal and vertical resolution are almost identical, the deviation at p =
100 MeV is explained by the fact that the strips in the ﬁrst vertex detector layer
are oriented almost parallel to the y axis. The resolution of track slopes is shown
1/p behaviour ex-
in ﬁg. 43 and turns out to be dominated by the pronounced
pected in a multiple scattering-dominated regime. At high momentum, the onset
of coordinate resolution eﬀects appears to be just visible, where the slightly bet-
ter resolution of the horizontal slope (tx) may be due to the dominantly vertical
orientation (parallel to y) of the wires in the main tracking system.

∝

The impact parameter resolution given above should not be confused with
the quantities relevant for physics performance where assignment to vertices is
important. In the latter case, the track parameters must be extrapolated from
the ﬁrst track point to the interaction area. With extrapolation distances of
typically
(10 cm), the resolution of the extrapolated impact parameters will
generally be fully dominated by the angular resolution rather than the impact
parameter resolution at the ﬁrst point.

O

5.2.2 Momentum resolution

A very central design issue in spectrometers is resolution of momentum, since
it determines the rejection power against background in particle spectrometry.
The relative momentum resolution, labelled dp/p, as a function of momentum is
shown in ﬁg. 44 for particles traversing the areas SI, MC and PC of the spec-
trometer (see ﬁg. 8 for deﬁnition) in the polar angle area 0.1 < θ < 0.15. The
circle symbols show the relative momentum resolution that results with multiple
scattering switched oﬀ in the simulation, leading to a strictly linear dependence
on p. This behaviour is expected since the resolution is then only determined by
the coordinate resolution and the geometrical layout of the spectrometer - size
and number of layers - that provides the leverage for momentum measurement
together with the magnetic ﬁeld. The result reﬂects the fact that the curvature κ,

71

Moli`ere scattering

-1

10

p
p
/
/
p
p
d
d

-2

10

-3

10

-4

10

without multiple scattering

10

2

10

3
10
p [GeV]
p [GeV]

Figure 44: Visible momentum resolution (ﬁlled squares) for simulated muons
(ﬁlled squares) together with the ﬁt of the parametrization described in the text
(upper solid line). In the lower part, the open squares show the visible resolution
with multiple scattering switched oﬀ in the simulation, with a similar function
ﬁtted. The open circles show the pure coordinate resolution as estimated by the
track ﬁt, with a linear function ﬁtted to it.

72

p
/
p

 
t
f
i
h
s
 

m
u
t
n
e
m
o
M

0.008

0.006

0.004

0.002

0

-0.002

-0.004

-0.006

-0.008

0

2

4

6

8

12
10
p [GeV]

Figure 45: Residual of the momentum parameter (see eq. 23) normalized to the
momentum itself for two and three passes of the ﬁt. The relative momentum
resolution is indicated by the dashed lines for comparison.

which is the inverse of the radius of curvature, can be measured with a precision
that is independent of its actual value, hence δκ=const. On the other hand the
curvature is inversely proportional to the momentum, so that dp/p
p. In pres-
ence of multiple scattering, the resolution shows a multiple scattering-dominated
50 GeV, and a transition into a linear rise at high
regime below momenta of
momentum. Superimposed is a ﬁt with a constant and a linear resolution term
added in quadrature. This parametrization, which corresponds to a commonly
used function introduced by Gluckstern [7] for an even spacing of tracking sta-
tions does not ﬁt the visible resolution very well in the momentum mid-range,
which can be attributed to the uneven distribution of measurements, resolutions,
material and magnetic ﬁeld strength in the spectrometer.

≈

∝

5.2.3 Eﬀects of ﬁt non-linearity

The presence of the inhomogeneous magnetic ﬁeld introduces particular eﬀects of
non-linearity into the ﬁtting problem. The least squares ﬁt technique, which the
Kalman ﬁlter is built on, can still be applied, with the transport matrices now
obtained as derivatives of the transport function. As already noted in sec. 2.4.1,
the optimal properties of the least squares technique are still retained on the
condition that the derivatives are taken at the position of the ﬁnal trajectory.
Since this is initially not necessarily the case, the ﬁt must be repeated iteratively
until the procedure converges.

73

D
-1

10

p
p
/
/
p
p
d
d

-2

10

-3

10

10

2

10

3
10
p [GeV]
p [GeV]

Figure 46: Relative momentum resolution in the MC–PC (circles), SI–PC
(squares) and SI–TC (triangles) spectrometer ranges, together with the ﬁts de-
scribed in the text. The dashed line is the upper ﬁt in ﬁg. 44.

The practical implications of non-linearity are visible in ﬁg. 45, which shows
the mean relative deviation of the reconstructed from the true momentum value.
Small systematic shifts of reconstructed momentum are observed for momentum
below 5 GeV with two ﬁt passes applied. These shifts reﬂect the convergence
behaviour of the ﬁt due to non-linearity. They are found to be virtually removed
when a third pass is applied.

5.2.4 Contributions of diﬀerent parts of the spectrometer

For understanding detector design, it is also important to investigate how much
diﬀerent parts of the spectrometer contribute to the momentum measurement.
In the HERA-B geometry (ﬁg.8), the tracking system is grouped into the vertex
detector (SI), the chambers within the magnet (MC), the chambers just behind
the magnet (PC) and the so-called trigger chambers (TC), which are separated
from the PC part by the ring-imaging ˇCerenkov detector (RICH). In order to
separate the contributions of the diﬀerent spectrometer parts, the range of the ﬁt
was modiﬁed by omitting the vertex detector hits (labelled MC–PC range) and
by adding the hits from the tracking chambers at the end of the main tracking

74

system (SI–TC range). The resulting momentum resolutions are displayed in
ﬁg. 46. It turns out that without including the vertex detector (MC–PC), the
momentum resolution is well described by a constant and a linear term added
in quadrature. In the regime of linear rise, the poorer coordinate resolution is
reﬂected in comparison to the system including the vertex detector. When the
ﬁt on the other hand is extended into the “TC” region which is mainly designed
to support the trigger (SI–TC), these additional measurements with their huge
lever arm are expected to improve the coordinate contribution of the resolution.
100 GeV , where it is hardly
Such an improvement is visible in ﬁg. 46 for p
relevant for the physics scope of the experiment. A third term proportional to the
square-root of the momentum had to be added in quadrature to ﬁt the resolution
for the latter two ranges.

≥

5.2.5 Parameter covariance matrix estimation

A very important task of the track ﬁt is the quantiﬁcation of the covariance
matrix of the estimated track parameters. The reliability of parameter error
estimation can be studied by investigating distributions of normalized parameter
residuals (see eq. 23 in sec. 2.5.5), which use the estimated error for normalization.
In the example at hand, the resulting pull distributions are shown in ﬁg. 47,
where unbiased ﬁts with a Gaussian function are superimposed. Distortions of
the parameter estimates would show up as deviations of the mean values from
zero, which are however not present in this case. The Gaussian cores of the
pulls agree in all cases with unity width, indicating a reliable estimate of the
covariance matrix. One should note that only mean value and variance of the
pull distribution are indicators of the quality of the estimate. The actual shape
of the distribution, e.g. whether it is Gaussian or not, reﬂects the underlying
structure of the problem, as will be more clearly visible in the next section.

5.2.6 Goodness of ﬁt

Since the Kalman ﬁlter is mathematically equivalent to a least-squares estimator,
the sum of the ﬁltered χ2 contributions will follow a χ2 distribution, provided that
the random variables entering into the ﬁt have Gaussian distributions. In this
case the χ2 probability

where f ( ˜χ2) is the standard χ2 distribution for the appropriate number of degrees
of freedom, should be evenly distributed between 0 and 1. (Pχ2 is often called
conﬁdence level.) This prerequisite is not strictly fulﬁlled in case of Moli`ere
scattering, so that deviations are to be expected. These eﬀects have potentially
large inﬂuence in modern radiation hard drift chambers, where the drift cells

Pχ2 =

f ( ˜χ2) d ˜χ2

χ2

Z−∞

75

300

N

x

300

N

y

250

200

150

100

50

250

200

150

100

50

0

-5

-4

-3

-2

-1

0

1

2

5
x (normalized residual)

3

4

0

-5

-4

-3

-2

-1

0

1

2

5
y (normalized residual)

4

3

300

N

300

N

tx

ty

0

-5

-4

-3

-2

-1

0

2

1

5
tx (normalized residual)

3

4

0

-5

-4

-3

-2

-1

0

2

1

5
ty (normalized residual)

4

3

250

200

150

100

50

250

200

150

100

50

250

200

150

100

50

300

N

Q
p

0

-5

-4

-3

-2

-1

1

5
0
Q/p (normalized residual)

2

3

4

Figure 47: Normalized parameter residual distributions for muons of 10 GeV,
based on 3000 simulated tracks.

76

0

0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9

1
c 2 probability

(a)

(b)

N

N

120
100
80
60
40
20
0

140
120
100
80
60
40
20
0

0

0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9

1
c 2 probability

Figure 48: Distributions of χ2 probability (conﬁdence level) for the track ﬁt for a
10 GeV particle, (a) with Gaussian form of multiple scattering, (b) with Moli`ere
scattering.

are enclosed in a multitude of small gas volumes and a considerable amount of
material is introduced into the tracking area.

Figure 48 compares the distribution of the χ2 probability for the Gaussian
form of multiple scattering (a) and Moli`ere scattering (b). The peak at small
probabilities in (b) obviously does not indicate a bad behaviour of the ﬁt, but
instead shows the inadequateness of the χ2 test with non-Gaussian random vari-
ables. The probability distribution for various momentum values is displayed in
ﬁg. 49. The increasing prominence of the peak at low probability is clearly seen
with decreasing momentum. Small χ2 probability does not necessarily imply a
bad estimation of the parameters, hence special care is required when a χ2 cut is
to be used to eliminate improperly reconstructed tracks.

77

(a) p=3 GeV

0

0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9

1
c 2 probability

(b) p=10 GeV

0

0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9

1
c 2 probability

(c) p=30 GeV

0

0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9

1
c 2 probability

(d) p=100 GeV

N

N

N

N

225
200
175
150
125
100
75
50
25
0

140
120
100
80
60
40
20
0

90
80
70
60
50
40
30
20
10
0

100
90
80
70
60
50
40
30
20
10
0

0

0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9

1
c 2 probability

Figure 49: Distribution of χ2 probabilities as a function of momentum, (a)
3.5 GeV, (b) 10 GeV, (c) 30 GeV and (d) 100 GeV.

78

5.3 Treatment of Ionization Energy Loss And Radiation

5.3.1 Ionisation energy loss

For minimal ionizing particles in the GeV energy range, energy loss due to ion-
ization within the tracking system depends in good approximation only on the
amount of material that is traversed. In this case, it is not the radiation thickness
(as deﬁned in eq. 46), but the geometrical thickness multiplied by the mass den-
sity of the material that is relevant. Since the energy loss depends only weakly
on the energy itself in this range, the eﬀect will become most noticeable for low
momentum particles. This behaviour is illustrated in ﬁg. 50, which shows the
normalized residual of the momentum parameter Q/p for µ+ particles of 3.5 and
10 GeV with ionization energy loss simulation turned on. The residual distribu-
tions are shifted towards positive values of Q/p, reﬂecting an underestimation of
the energy, which is caused by the ionization energy loss, in particular upstream
of the magnet. The visible shift corresponds to an energy loss of 12 MeV. On the
other hand, the width of the residual distributions is not signiﬁcantly increased,
which in the 10 GeV case can directly be seen by comparing with ﬁg. 47.

A correction can be applied in each ﬁlter step if the dE/dx of the particle in

the material is known, since

Eaf ter = Ebef ore

(dE/dx)ion

ℓ

−

·

(50)

where ℓ is the traversed thickness of the material. This requires in general the
knowledge of the particle mass. Since ionization energy loss will be most notable
for small particle energies where the resolution is governed by multiple scattering,
no correction to the momentum error has been applied. The bottom part of ﬁg. 50
displays the same normalized residuals with the energy loss correction applied.
The bias of the momentum estimate is successfully eliminated by the correction.

5.3.2 Radiative energy loss

The corrections discussed up to now are usually suﬃcient for minimum ionizing
particles. For electrons6 however, the situation is more complicated since above
the critical energy, which is of the order of MeV, these particles lose more en-
ergy through radiation of photons than through ionization when they traverse
material. This process is also of a more notably stochastic nature than ionization
energy loss, as considerable fractions of the electron energy can be transferred to
the photon. Modern radiation-hard detectors as e.g. those under construction
for the LHC are confronted with this problem to a much higher degree than tra-
ditional detectors, because of the signiﬁcant amount of material in the tracking
system, which can easily exceed 50% of a radiation length.

6in this section the term electron should be interpreted to imply positron as well

79

300

250

200

150

100

50

300

250

200

150

100

50

350

N

(a)

p = 3 GeV
no correction

350

N

(b)

p = 10 GeV
no correction

0

-5

-4

-3

-2

-1

0

1

2

5
3
(Q/pRC-Q/pMC)/s (Q/p)

4

0

-5

-4

-3

-2

-1

0

1

2

5
3
(Q/pRC-Q/pMC)/s (Q/p)

4

350

N

(c)

p = 3 GeV
corrected

350

N

(d)

p = 10 GeV
corrected

0

-5

-4

-3

-2

-1

0

1

2

5
3
(Q/pRC-Q/pMC)/s (Q/p)

4

0

-5

-4

-3

-2

-1

0

2

1

5
3
(Q/pRC-Q/pMC)/s (Q/p)

4

Figure 50: Pull distribution of the momentum parameter for µ+ particles of
3 GeV (a,c) and 10 GeV (b,d). The upper pictures show the eﬀect of dE/dx if
no correction is applied. The lower plots show the same when the correction is
applied in the ﬁt.

300

250

200

150

100

50

300

250

200

150

100

50

80

Region 1

Region 2

Region 3

Figure 51: Regions 1–3 for classifying radiative energy loss illustrated in the
geometry of the HERA-B spectrometer. The simulated geometry diﬀers in some
details from the one in ﬁg. 8. Also the trajectory of a simulated electron is shown,
which radiates a photon within the magnet that converts into a e+e− pair further
downstream.

.

81

For the relevance of photon radiation on measurement of the electron, three
cases have to be distinguished regarding the range where the radiation occurs
(indicated as regions 1–3 in ﬁg. 51):

Region 1: between interaction point and spectrometer magnet If the point
of origin of the particle is not yet within the magnetic ﬁeld – as is typical
for ﬁxed-target setups rather than for collider detectors – radiation will not
change the electron trajectory and thus not interfere with the quality of the
ﬁt; however, the spectrometer will only measure the remaining momentum
of the electron after the radiation.

Region 2: within the magnetic ﬁeld In this case, the curvature of the tra-
jectory changes because of the radiation, which means that the energy
change is – in principle – measurable.
Ignoring the radiation in the ﬁt
will lead to a bad description of the trajectory and to distortions of the
parameter estimates.

Region 3: beyond the magnetic ﬁeld If the electron loses energy downstream
of the magnet, this will have no inﬂuence on the momentum measurement
in the spectrometer. However, pair creation from radiated photons may
lead to accompanying particles that can disturb pattern recognition in the
downstream area.

The dilution due to energy loss of electrons and positrons through emission of
electromagnetic radiation can be treated by the method by Stampfer et al. [79].
According to the Bethe-Heitler equation [80], this energy loss is described by

dE
dx !rad

 

=

E
xR

where xR is the radiation length of the traversed material (see section 5.2). This
leads to the relation
Eaf ter
Ebef ore +

= e−t

(52)

*

where t is the traversed distance measured in radiation lengths as deﬁned before.
For a track propagation which follows the track opposite to its physical movement,
one obtains on average
′

Q
p !

 

=

+ ∆

Q
p

Q
p !

 

=

Q
p −

Q
p

Ebef ore

Eaf ter

−
Ebef ore

=

e−t

Q
p

The contribution to the propagated covariance matrix emerges as

∆cov

Q
p

,

Q
p !

 

=

2

Q
p !

 

e−t ln3

ln2

(cid:16)

e−2t

−

(cid:17)

This contribution can be included into the Kalman ﬁlter process noise as intro-
duced in eq. 8.

(51)

(53)

(54)

82

no radiation correction

with radiation correction

1

-0.04

-0.02

0

1

-0.04

-0.02

0

0.02
xRC - xMC [cm]

0.04

0.02
xRC - xMC [cm]

0.04

-0.002

0

-0.002

0

0.002
MC

tx

RC - tx

0.002
MC

tx

RC - tx

(b)

x

10 4

N

10 3

10 2

10

N

10 4

(d)

tx

10 3

10 2

10

10(cid:13) 3(cid:13)

10(cid:13) 2(cid:13)

10(cid:13)

N

(f)

1
p

(a)

x

10 4

N

10 3

10 2

10

N

10 4

(c)

tx

10 3

10 2

10

10(cid:13) 3(cid:13)

10(cid:13) 2(cid:13)

10(cid:13)

N

(e)

1
p

-0.02(cid:13)

0(cid:13)

0.02(cid:13)

0.04(cid:13)
 1/p(cid:13)RC(cid:13) -  1/p(cid:13)MC(cid:13) (cid:13)[(cid:13)GeV(cid:13)-1(cid:13)](cid:13)

-0.02(cid:13)

0(cid:13)

0.02(cid:13)

0.04(cid:13)
 1/p(cid:13)RC(cid:13) -  1/p(cid:13)MC(cid:13) (cid:13)[(cid:13)GeV(cid:13)-1(cid:13)](cid:13)

Figure 52: Distributions of parameter residuals for electrons of 100 GeV based on
5000 tracks, where x is the impact parameter in the bending plane, tx = tan θx
is the corresponding track slope, and 1/p the inverse momentum. The track ﬁt
was applied to all hits within the spectrometer magnet (region 2 in ﬁg. 51).

83

(cid:13)
(cid:13)
Point of radiation

True e- path

Magnetic field

Fitted e- path

Illustration of how radiation within the magnetic ﬁeld can aﬀect the
Figure 53:
estimate of the ﬁtted track slope. The magnetic ﬁeld vector is pointing into the
drawing plane. The electron, whose true path is shown by a solid line, emits
a photon, which leads to an increase of curvature for the subsequent part of
its trajectory within the magnet. This is illustrated by the curvature radii of
the helices as dotted lines. The ﬁtted trajectory (dashed line) assumes a single
curvature, which leads to an overestimation of the initial slope of the track. The
curvatures drawn are intentionally exaggerated.

84

g
Radiation correction mode Fraction of ﬁts within momentum deviation
0.2 < δp/p < +0.2

0.1 < δp/p < +0.1

none
within magnet
within full spectrometer

−

0.566
0.635
0.321

0.004
0.003
0.003

±
±
±

−

0.678
0.728
0.786

±
±
±

0.003
0.003
0.002

Table 3: Fraction of ﬁts within given limits of momentum deviation, for three
variants of radiation correction

5.3.3 Radiation energy loss correction within the magnetic ﬁeld

Energy loss through radiation can not only interfere with the momentum measure-
ment, but may also aﬀect other track parameters. This is shown in ﬁgs. 52a,c,e
which display the residuals of the parameters x, tx and 1/p for electrons pro-
duced with 100 GeV momentum, where the ﬁt was restricted to the magnet area
(MC). Without bremsstrahlung correction, the track slope estimate tx shows a
tail towards overestimated values, which is reﬂected in an underestimation of the
corresponding impact parameter, x. The explanation for this eﬀect is illustrated
in ﬁg. 53 which for simplicity assumes a homogeneous ﬁeld: the curvature of the
electron track is abruptly increased beyond the point of radiation. Fitting the
track with a constant momentum leads to an intermediate curvature resulting in
a shift in the measured initial track slope.

The residual distribution of the momentum parameter, 1/p, displays a tail

towards higher values, corresponding to a mean momentum shift of

13%.

Also the parameter errors are underestimated, which is evident from the nor-
malized residuals in ﬁgs. 54a,c,e (uncorrected case), where the widths of the tx
and Q/p pull distributions are signiﬁcantly enlarged.

≈

δp/p2 is reduced from 1.3

Figures 52b,d,f show the result with the radiation correction applied in the
ﬁt. One can see that the tails in the parameter estimates of x and tx are far less
pronounced, and the bias in the impact parameter and track slope is consider-
ably reduced. Also the distortion of the mean reconstructed inverse momentum
10−4 GeV−1, and the stan-
δ(1/p)
dard deviation (RMS width) of the parameter estimates is reduced by 11% (x),
48% (tx) and 14% (Q/p), respectively. Moreover, the radiation correction brings
the RMS widths of the pull distributions close to unity (ﬁgs. 54b,d,f), which
indicates a reliable covariance matrix estimate. The ﬁt probability distribution
is shown in ﬁg. 55. It reﬂects a non-χ2 type distribution of the goodness-of-ﬁt,
which is expected since the radiation of bremsstrahlung introduces a strongly
non-Gaussian random perturbation.

10−3 GeV−1 to 7

·

·

The situation is diﬀerent if one attempts to extend the radiation correction to
the full tracking system including regions 1 and 3 which are outside of the mag-
netic ﬁeld, most notably the vertex detector whose material causes a signiﬁcant
energy loss for electrons. Outside of the magnetic ﬁeld, however, the trajectory

≈

85

no radiation correction

with radiation correction

0

-5

-4

-3

-2

-1

0

1

0

-5

-4

-3

-2

-1

0

1

3

5
2
(xRC - xMC)/s (x)

4

3

5
2
(xRC - xMC)/s (x)

4

0

-5

-4

-3

-2

-1

0

1

0

-5

-4

-3

-2

-1

0

1

2
(tx

3
RC - tx

5
4
MC)/s (tx)

2
(tx

3
RC - tx

5
4
MC)/s (tx)

600

N

(b)

x

500

400

300

200

100

500

400

300

200

100

1000
900
800
700
600
500
400
300
200
100
0

600

N

(d)

tx

N

(f)

1
p

600

N

(a)

x

500

400

300

200

100

500

400

300

200

100

1000
900
800
700
600
500
400
300
200
100
0

600

N

(c)

tx

N

(e)

1
p

-3

-2

-1

0

1

2

5
(1/pRC - 1/pMC)/s (1/p)

3

4

-3

-2

-1

0

1

2

5
(1/pRC - 1/pMC)/s (1/p)

4

3

Figure 54: Distribution of normalized parameter residuals (pulls) for electrons of
100 GeV based on 5000 tracks, where x is the impact parameter in the bending
plane, tx = tan θx is the corresponding track slope, and 1/p the inverse momen-
tum. The track ﬁt was applied to all hits within the spectrometer magnet (region
2 in ﬁg. 51).

86

N

200

150

100

50

0

0

N

160

(a)

δp
p

140

120

100

80

60

40

20

0

0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9

1
c 2 probability

Figure 55: Distribution of χ2 probability from the track ﬁt of 100 GeV electrons
in the main tracker with radiation correction. The non-Gaussian distribution of
the radiated energy leads a non-ﬂat probability distribution with a sharp peak
near zero.

full radiation correction

N

1400

(b)

δp
σp

1200

1000

800

600

400

200

87

-0.4

-0.2

0

0.2

0.4
p (1/pRC - 1/pMC)

0

-5

-4

-3

-2

-1

0

2

5
3
1
(1/pRC - 1/pMC)/s (1/p)

4

Figure 56: Distribution of 1/p parameter residuals multiplied by p as measure
for relative momentum deviation (a), and of normalized 1/p residuals (b) for
100 GeV electrons in the full tracker. The radiation correction was applied in the
whole tracking system, leading to the shift of the peaks described in the text.

shape is not modiﬁed by radiation, which means that the ﬁt will only apply the
on-average correction according to the traversed radiation thickness. This can
lead to bizarre results as seen in ﬁg. 56, which shows the distribution of the 1/p
parameter residual multiplied by the momentum itself as well as the correspond-
ing pull distribution. The peak has moved away from zero to negative residual
values, implying that electrons in the peak obtain an overcorrected energy value.
In ﬁg. 56b, the mean value of the pull is near zero, and the RMS width is close
to one, indicating that the compensation works correctly in the statistical sense.
For intuitive plausibility, however, it is relevant that a large fraction of measure-
ments are in the immediate vicinity of the quoted value. A test of this criterion is
shown in table 3, which summarizes the fraction of ﬁts with momentum deviation
of within 10% or 20% of the real value for the three correction scenarios. With
the 10% criterion, the full spectrometer correction appears worse than even in
the uncorrected case, while the correction restricted to the magnet gives the best
description in the intuitive sense.
In conclusion, the magnet-based correction
appears to be provide the best compromise, though this will in general have to
be evaluated in each speciﬁc application.

5.4 Robust Estimation

The preceding sections have shown how intrinsically non-Gaussian inﬂuences, as
multiple scattering, or radiative energy loss of electrons, can complicate the esti-
mate of essential kinematic parameters and their interpretation. A fully adequate
treatment of profoundly non-Gaussian variables is in general beyond the capabil-
ities of least squares estimation. Likelihood methods, on the other hand, are in
principle able to cope with random variables of any distribution, but often cannot
be used with as eﬃcient a machinery, in particular when it comes to computation
of error matrices.

During the last years, promising concepts have been developed that permit
treatment of non-Gaussian random variables, but still allow to use much of the
powerful machinery developed with least squares estimation. These methods are
called robust estimation techniques. One very attractive idea is based on the fact
that non-Gaussian distributions can often be approximated as superposition of
a limited number of Gaussian distributions [81, 82]. For example, a distribution
resembling a Gaussian in the centre, but featuring long tails, as is common with
multiple scattering, can be approximated by a sum of a narrow Gaussian dis-
tribution and a wide one. If one performs two parallel least squares estimates,
each based on one of the Gaussians, the resulting parameter estimates, combined
with appropriate weights, will reﬂect the underlying statistics better than a single
estimate with a single Gaussian approximation. Thus, the occurence of random
variables in the tail of the distribution does not pull the estimate as far away
as it would with a traditional least square estimator, leading to a more robust
behaviour of the ﬁt.

88

This is the basic idea of the Gaussian Sum Filter (GSF) [81, 82, 83, 84, 85],
which uses the Kalman ﬁlter to incorporate the individual Gaussian components.
Upon each occurrence of process noise, the distribution of which is approximated
by a sum of N Gaussians, the ﬁlter splits into N parallel branches each of which
In a detector geometry with many scattering
obtains a corresponding weight.
elements, this will lead to a repeated multiplication of the number of linear ﬁlters
to be evaluated. To avoid the explosion of the computing eﬀort, the number of
parallel components is limited by collapsing or clustering components of similar
shape. It has been shown that the algorithm can be designed such that the com-
puting eﬀort increases linearly with the maximum number of parallel components
(M), and that M
8 already gives good results [84]. In a similar way, radia-
tive energy loss of electrons can be treated by approximating the radiated energy
distribution by superposition of several Gaussians [86].

≈

−

6

6 Event Reconstruction

After particle tracks have been reconstructed, they form the basis for the recon-
struction of the whole event. This will ultimately include particle identiﬁcation
based on dE/dx, time-of-ﬂight, ˇCerenkov or transition radiation, muon chambers
and calorimetry, as well as kinematical reconstruction of composite particles and
jets. This article will restrict itself to a brief discussion of vertex reconstruction
and kinematical constraints.

6.1 Vertex Pattern Recognition

B+

B-

Primary 
vertex

Figure 57: Schematic view of the event structure in an interaction of the type
e+e−

B+B− + X

→

The vertex is an essential element of the space-time structure of an interac-
tion. Vertices indicate either the location where an interaction has taken place,
for example the primary interaction that is the ultimate origin of all emerging
particles, or the place where an unstable particle has decayed. This is illustrated

89

in ﬁg. 57, which schematically sketches the ﬁnal state of an interaction with as-
sociated production of two beauty mesons, as it can occur for example at a high
energy e+e− collider. The beauty hadrons, here a B+ and a B−, are produced
together with accompanying charged particles at the interaction point, travel in-
visibly for some distance that is, on average, determined by their lifetime and
momentum, whereupon they decay into daughter particles. The charged tracks
coming from these decays can be used to reconstruct the decay locations of the B
mesons as secondary vertices7. The other tracks, together with the reconstructed
B mesons form the primary vertex, which indicates the interaction point.

Beam spot

n = 0

n = 1

n = 2

n = 3

Figure 58: Illustration of the iterative construction of a (primary) vertex, where
n is the number of tracks used to deﬁne the vertex in each step. The shaded
area indicates the covariance ellipse of the projected vertex after each step. The
dashed line indicates an outlier track.

In many practical applications, the vertex is constructed by an iterative pro-
cedure as it is illustrated in ﬁg. 58. In most cases, some a-priori knowledge about
the vertex position exists, for example the shape of the beam spot, in which in-
teractions occur in the ﬁrst place. Then a ﬁrst track is selected as a vertex seed,
which already narrows down the covariance ellipsoid in two dimensions. When
a second suitable track is added, the vertex is already closely deﬁned in all co-
ordinates. This provides strong rejection power against oﬀ-vertex particles when

7We neglect here the complication that the B meson is likely to decay to a ﬁnal state with

a charmed particle which again has a non-negligible lifetime.

90

adding more tracks.

As in the track pattern recognition case, the danger lies in the dependence
on the starting point.
It is therefore necessary to use iterative criteria which
ensure that the track forming the vertex seed is well chosen, and even then it
must be possible to scrutinize the track ensemble of a vertex, to remove tracks
that have turned out to be oﬀ the mark, and to reconnect tracks that had been
discarded at an earlier stage of the construction. The vertex algorithm used in
the ZEUS experiment [87], which internally uses the ﬁtting methods of [88] may
serve as an example: it uses the proton beam line as a soft constraint, and then
produces a set of all track pairs that would be compatible with a common vertex
together with the beam line constraint within a suitable χ2 margin. The track
pairs are then ordered according to their degree of compatibility with other track
pairs, deﬁned by the criterion above. The track pair of highest compatibility
forms then the ﬁrst vertex seed to be used, though also other track pairs of high
compatibility level are tried, and in the end the best set is chosen based on a
criterion of number of tracks and total χ2. Other approaches start by connecting
all tracks to a diﬀuse master vertex, which is then successively split into vertices of
smaller multiplicities and isolated tracks. A systematic investigation of diﬀerent
methods for vertex reconstruction in the context of the CMS experiment can be
found in [89].

An entirely diﬀerent approach is pursued in the topological vertex ﬁnding
algorithm [90] developed for the vertex detector of the SLD experiment [17].
This method assigns a Gaussian tube around each track extrapolation to indicate
the likelihood of an assigned vertex on a single track basis. The Gaussian tubes
of all tracks are then combined to ﬁnd points with maximum probability of a
vertex. This method resembles the Fuzzy Radon Transform for tracks discussed in
section 3.2. The search for maxima is then performed by sophisticated clustering
algorithms. A particularly intriguing feature is the eﬃcient resolution of heavy
ﬂavour cascade decays.

Direct vertex search by Hough transform is possible in cases where the vertex
location is already strongly constrained in some coordinates, for example through
the shape of a wire target [91].

6.2 Vertex Fitting

The least-squares principle can also be readily applied for vertex ﬁtting [92, 93,
94]. The parameters of the tracks ~p1 . . . ~pn at a given reference surface plus the
a-priori knowledge of the vertex are the input, and the calculated vertex position
together with the reduced track parameters of each particle, which contain only
directional and momentum information at the common vertex, are the output.
A general property of vertex ﬁtting is the fact that, unlike track ﬁtting, the ﬁt
is always non-linear, since even with straight-line tracks the extrapolation to the
vertex introduces a coupling between positional and directional parameters.

91

As noted earlier, already vertex pattern recognition requires incremental, pro-
It is therefore not
gressive ﬁtting, with tracks added or removed one by one.
surprising that also for vertex ﬁtting, the Kalman ﬁlter is in many cases the
method of choice [95]. In the vertex ﬁtting case, the transport becomes trivial,
and also process noise does not have an equivalent. The ﬁlter step adds another
track to the vertex and updates the vertex position as well as the reduced track
parameters. It is very easy to remove an already ﬁltered track from the vertex
candidate, since in the ﬁlter equations, the inverse covariance matrix of the track
acts as the weight of the track information, and setting its sign to negative will
subtract the track from the vertex ﬁt. We prefer not to display the Kalman ﬁlter
equations for vertex ﬁtting here explicitly, but refer to the literature [27].

6.3 Kinematical Constraints

Pattern recognition deals with merging of measured information with a-priori
knowledge. For example, in track pattern recognition the track model enhances
the measurement power of each individual hit, while vertex assignment improves
the spatial information of each associated track. In similar fashion, a-priori knowl-
edge can be used in many cases in the further reconstruction of the event. A typ-
ical example is the beam energy constraint: in e+e− b-physics experiments which
operate at the Υ(4S) energy, as BaBar, BELLE, CLEO and the earlier ARGUS,
the B mesons are produced in an exclusive decay of the Υ(4S) resonance, and the
energy of the B mesons is precisely the beam energy, which is known to a much
better precision than the B meson energy reconstructed from its measured decay
particles. Imposing the beam energy constraint improves then also the resolution
of the B candidate mass; this method has been a vital tool in the investigation
of exclusive B decays (see for example [96]).

→

→

D0π+, D0

Also masses of intermediate particles in a decay chain, for example B0

→
D∗+π+π−π−, D∗+
K −π+ can be used to imply kinematical
constraints. In this case, the D0 is a rather stable particle whose width is too small
to resolve by direct kinematical reconstruction in a spectrometer. Therefore,
the established knowledge of the D0 mass [97] can be imposed as a kinematical
constraint. For example, if ~α denotes the reconstructed parameters of the K − and
π+ particles and Vα their covariance matrix, the reconstructed D0 mass will be
a function M(α) of these parameters, and introduction of a Lagrange multiplier
µ leads to the expression

X 2 = (~αc

~α)T V −1

α (~αc

~α) + 2µ(M( ~αc)

mD0)

−

−

−

(55)

which has to be minimized with respect to the constrained parameters ~αc. If the
daughter particles form a secondary vertex, its parameters can be optimized as
well. The D0 mass constraint leads in general to a considerable improvement of
the D∗ mass peak, which becomes much narrower than the experimental resolu-
tion. In comparison to the popular mass diﬀerence method, which beneﬁts from

92

the correlation in the errors of the reconstructed D and D∗ masses, this approach
has the advantage that the result can be used in turn to reconstruct more com-
plex decay chains of angular excitations in the D systems, or of B hadrons. In a
next step of B reconstruction, even the tabulated D∗ mass could be imposed as
another independent constraint.

7 Concluding Remarks

The variety of pattern recognition tasks in particle physics tracking detectors
has lead to a multitude of diﬀerent approaches. Several of the global methods,
as template matching or Hough transform/histogramming play an unchallenged
rˆole in special applications, while Hopﬁeld networks and deformable templates
frequently appear to be either limited to favourable scenarios (e.g. with 3D
measurements and moderate occupancy), or need an excellent initialization or
combination with a track following algorithm to become applicable at production
scale.
In the case of elastic arms, also the choice of an eﬃcient minimization
technique is essential. Local methods of pattern recognition are still going strong,
with the Kalman ﬁlter as the mathematical backbone, and accompanied by subtle
arbitration techniques they can cope well even with high track densities and
sizable amounts of material in the tracking area. The new generation of high
energy hadron colliders, in particular the LHC with huge track densities in piled-
up events will become an important benchmark for algorithm performance. It can
be expected that sophisticated combination of both global and local approaches
in diﬀerent passes of the procedure, matched to the particular layout of each
experiment, will become a promising path to achieving the best performance.

The increasing abundance of material in radiation hard detectors poses also
additional challenges to track ﬁtting. While the correction of multiple scatter-
ing with the Kalman ﬁlter has become the accepted general standard, Moli`ere
scattering tails require a careful interpretation of the results. Electron energy re-
construction with sizable radiative energy loss is a major challenge and requires
very careful treatment, and becomes a rewarding subject for robust methods be-
yond least square estimation. Also vertex pattern recognition can be expected
to receive increasing attention in very complex event topologies at LHC, where
reliable tagging of heavy ﬂavour is a crucial prerequisite to scientiﬁc discovery.

Acknowledgement

It is a pleasure to thank E. Lohrmann for his valuable comments on the manuscript.

93

References

[1] H. Grote, Review of Pattern Recognition in High Energy Physics, Reports

on Progress in Physics 50 (1987) 473-500.

[2] H. Albrecht et al., Search for Rare B Decays, Phys. Lett. B 353 (1995)

[3] ATLAS Collaboration, ATLAS Inner Detector Technical Design Report

Vol.I, CERN/LHCC/97-16, CERN (1997).

[4] C. Grupen, Particle Detectors, Cambridge Monographs on Particle Physics,

[5] K. Kleinknecht, Detectors for Particle Radiation, Cambridge University

[6] D. Green, The Physics of Particle Detectors, Cambridge University Press

554-562.

1996.

Press (1999).

(2000)

[7] R.L. Gluckstern, Uncertainties in Track Momentum and Direction, Due
to Multiple Scattering and Measurement Errors, Nucl. Instr. and Meth. 24
(1963) 381–389.

[8] R. Carlin et al. (ZEUS Collaboration), The ZEUS Microvertex Detector,

Nucl. Instr. and Meth. A511 (2003) 23–37.

[9] M. Danilov et al., The ARGUS Drift Chamber, Nucl. Instr. and Meth. 217

(1983) 153-159.

[10] G. Sciolla et al. (BaBar Collaboration), The BaBar Drift Chamber, Nucl.

Instr. and Meth. A419 (1998) 310-314.

[11] F. Bruyant, J.M. Lesceux and R.J. Plano, The Butterﬂy Drift Chamber
Geometry: an Optimal Four-Plane Drift Chamber for Use in a High Track
Multiplicity Environment, Nucl. Instr. and Meth. 176 (1980) 409.

[12] O. Kind et al., A ROOT-Based Client-Server Event Display for the ZEUS
Experiment, Proc. Computing in High Energy Physics Conference, La Jolla
2003, Preprint hep-ex/0305095.

[13] P. Kriˇzan et al., HERA-B, an Experiment to Study CP Violation at The
HERA Proton Ring Using an Internal Target, Nucl.Instr. and Meth. A351
(1994) 111-131.

[14] E. Hartouni et al., HERA-B: an Experiment to Study CP Violation in The
B System Using an Internal Target at The HERA Proton Ring. Design
Report, DESY-PRC-95-01 (1995).

94

[15] R. Mankel, The HERA-B Experiment: Overview And Concepts, Proc. In-
ternational Conference on High-Energy Physics (ICHEP 98), Vancouver
1998 (Canada), Vol. 2, 1513–1518.

[16] H. Wieman et al., STAR TPC at RHIC, IEEE Trans. Nucl. Sci. NS-44

(1997) 671–678.
J.H. Thomas, A TPC for Measuring High Multiplicity Events at RHIC,
Nucl. Instr. and Meth. A478 (2002) 166-169.
M. Anderson et al., The STAR Time Projection Chamber: a Unique Tool
for Studying High Multiplicity Events at RHIC, Nucl. Instr. and Meth. A499
(2003) 659-678.

[17] F.E. Taylor et al, Design and Performance of a 307 Million Pixel CCD Ver-
tex Detector, Proc. 28th International Conference on High Energy Physics
(ICHEP 96), vol. 2* 1739-1742, Warsaw, (1996).

[18] S. Brandt, Datenanalyse

(in German), Bibliographisches

Institut

Mannheim 1992.

[19] V. Blobel and E. Lohrmann, Statistische und Numerische Methoden der

Datenanalyse (in German), Teubner (1998)

[20] P. Bevington and D. Robertson, Data Reduction and Error Analysis for the

Physical Sciences, McGraw/Hill 1992.

[21] W.T. Eadie et al., Statistical Methods in Experimental Physics, North-

Holland 1971.

[22] A.G. Frodesen, O. Skjeggestad and H. Tofte, Probability and Statistics in

Particle Physics, Universitetsforlaget 1979.

[23] R.E. Kalman, A New Approach to Linear Filtering and Prediction Prob-
lems, Transactions of ASME Journ. Basic Engineering 82 (1960) 35-45.
R.E. Kalman and R.S. Bucy, New Results in Linear Filtering Prediction
Theory, Transactions of ASME Journ. Basic Engineering 83 (1961) 95-108.

[24] P. Billoir, Track Fitting with Multiple Scattering: a New Method, Nucl.

Instr. and Meth. 225 (1984) 352-366.

[25] R. Fr¨uhwirth, Application of Kalman Filtering, Nucl. Instr. and Meth. A262

(1987) 444-450.

[26] P. Billoir, S. Qian, Simultaneous Pattern Recognition and Track Fitting by
the Kalman Filtering Method, Nucl. Instr. and Meth. A294 (1990) 219-228.

95

[27] R.H. B¨ock, H. Grote, D. Notz and M. Regler, Data Analysis Techniques
for High-Energy Physics Experiments, Cambridge Univ. Press (1990). 2nd
edition (with R. Fr¨uhwirth) (2000)

[28] D.N. Brown, E.A. Charles and D.A. Roberts, The BaBar Track Fitting
Algorithm, Proc. Computing in High Energy Physics Conference, Padova
(2000).

[29] R. Mankel and A. Spiridonov, Compatibility Analysis, HERA-B Internal

Note 99-111 (1999).

[30] H.D. Schulz and H.J. Stuckenberg, Proc. Topical Conference on the Ap-
plication of Microprocessors in High Energy Physics Experiments, CERN
81-07 (1981).

[31] N. Koch et al., The ARGUS Vertex Trigger, Nucl. Instr. and Meth. A373

(1996) 387-405.

[32] S. Seidel et al. (ARGUS Collaboration), The ARGUS Micro-Vertex Drift
Chamber, Proc. APS Conference Particles and Fields, Vol. 2, 1158-1163,
Vancouver (1991).

[33] M. Dell’Orso and L. Ristori, A Highly Parallel Algorithm for Track ﬁnding,

Nucl. Instr. and Meth. A287 (1990) 436-438.

[34] P. Battaiotto et al., The Tree-Search Processor for Real-Time Track Pattern

Recognition, Nucl. Instr. and Meth. A287 (1990) 431-435.

[35] K. Ackerstaﬀ et al., The HERMES Spectrometer, Nucl. Instr. and Meth.

A417 (1998) 230-265.

[36] J. Blom et al., A Fuzzy Radon Transform for Track Recognition, Proc.
Computing in High Energy Physics Conference, San Francisco (1994).

[37] M. Gyulassy and M. Harlander, Elastic Tracking and Neural Network Al-
gorithms for Complex Pattern Recognition, Comp. Phys. Comm. 66 (1991)
31–46.

[38] A. Antonov (Moscow Engineering and Physics Institute), private commu-

nication.

[39] P.V.C. Hough, Machine Analysis of Bubble Chamber Pictures, Int. Conf.
on High Energy Accelerators and Instrumentation, 554–556, CERN, 1959.

[40] M. Ohlsson, C. Peterson and A.L. Yuille, Track Finding with Deformable
Templates: The Elastic Arms Approach, Comput. Phys. Commun. 71
(1992) 77-98.

96

[41] C. Borgmeier, Global Pattern Recognition in the HERA-B Tracking System

(in German), Diploma thesis, Humboldt University Berlin (1996).

[42] T. Schober, Investigation of Hough Transforms as Global Approaches to
Pattern Recognition in the HERA-B Main Tracking System (in German),
Diploma thesis, Humboldt University Berlin (1996).

[43] J.A.Anderson and E. Rosenfeld, Neurocomputing: Foundations of Research,

MIT Press, Cambridge (1988).

[44] J.J. Hopﬁeld, Neural Networks and Physical Systems with Emergent Col-
lective Computational Abilities, Proc. National Academy of Science, USA,
79 (1982) 2554-2558. Reprinted in [43].

[45] Y. Shrivastava, S. Dasgupta and S.M. Reddy, Guaranteed Convergence in a
Class of Hopﬁeld Networks, IEEE Transactions on Neural Networks Vol.3,
No.6 (1992) 951-961. Reprinted in [43].

[46] B. Denby, Neural Networks and Cellular Automata in Experimental High

energy Physics, Comput. Phys. Commun. 49 (1988) 429-448.

[47] C. Peterson, Track Finding with Neural Networks, Nucl. Instr. and Meth.

A279 (1989) 537-549.

[48] G. Stimpﬂ-Abele and L. Garrido, Fast Track Finding With Neural Net-

works, Comput. Phys. Commun. 64 (1991) 46-56.

[49] R. Mankel, Pattern Recognition Algorithms For B Meson Reconstruction in
Hadronic Collisions, Proc. Computing in High Energy Physics Conference,
Berlin (1997). URL http://www.ifh.de/CHEP97/paper/183.ps

[50] I. Abt et al., Cellular Automaton And Kalman Filter Based Track Search in
The HERA-B Pattern Tracker, Nucl. Instr. and Meth. A490 (2002) 546-558.

[51] I. Abt et al., CATS: a Cellular Automaton for Tracking in Silicon for The
HERA-B Vertex Detector, Nucl. Instr. and Meth. A489 (2002) 389-405.

[52] M. Ohlsson, Extensions and Explorations of the Elastic Arms Algorithm,

Comput. Phys. Commun. 77 (1993) 19-32.

[53] C. Peterson and B. S¨oderberg, A New Method for Mapping Optimization
Problems onto Neural Networks, Int. Journal of Neural Systems 1 (1989)
3-22.

[54] M. Lindstr¨om, Track Reconstruction in The ATLAS Detector Using Elastic

Arms, Nucl. Instr. and Meth. A357 (1995) 129-149.

97

[55] R. Blancenbecler, Deformable Templates – Revised And Extended – With
an OOP Implementation, Comput. Phys. Commun. 81 (1994) 318-334.

[56] A. Paus, Pattern Recognition in the Tracking System of the HERA-B De-
tector With an Elastic Arms Algorithm (in German), Diploma thesis, Hum-
boldt University Berlin (1997).

[57] S.E. Fahlmann, Faster-Learning Variations on Back-Propagation: an Em-
pirical Study, Proc. Connectionist Models Summer School, San Mateo
(1988).

[58] A. Riedmiller and H. Braun, A Direct Adaptive Method for Faster Back-
the RPROP Algorithm, Proc. IEEE International

propagation Learning:
Conference of Neural Networks, San Francisco (1993).

[59] R. Fr¨uhwirth and A. Strandlie, Track Fitting with Ambiguities and Noise:
a Study of Elastic Tracking and Nonlinear Filters, Comp. Phys. Comm. 120
(1999) 197-214.

[60] A. Strandlie and R. Fr¨uhwirth, Adaptive Multitrack Fitting, Comp. Phys.

Comm. 133 (2000) 34-42.

[61] R. Mankel, A Concurrent Track Evolution Algorithm for Pattern Recogni-
tion in the HERA-B Main Tracking System, Nucl. Instr. and Meth. A395
(1997) 169-184.

[62] H. Albrecht, private communication.

[63] A. Khanov et al., Tracking in CMS: Software Framework And Tracker Per-

formance, Nucl. Instr. and Meth. A478 (2002) 460-464.

[64] M.M. Angarano et al. (CMS Tracker Collaboration), The Silicon Strip

Tracker for CMS, Nucl. Instr. and Meth. A501 (2003) 93-99.

[65] R. Mankel and A. Spiridonov, The Concurrent Track Evolution Algorithm:
Extension for Track Finding in The Inhomogeneous Magnetic Field of The
HERA-B Spectrometer, Nucl. Instr. and Meth. A426 (1999) 268-282.

[66] M. Regler, R. Fr¨uhwirth and W. Mitaroﬀ, Filter Methods in Track And

Vertex Reconstruction, Int. Journ. Mod. Phys. C7 (1996) 521-542.

[67] R. Mankel, Online Track Reconstruction for HERA-B, Nucl. Instr. and

Meth. A384 (1996) 201-206.

[68] W.H. Press et al., Numerical Recipes in C: the Art of Scientiﬁc Computing,

2nd edition, Cambridge University Press, 1993.

98

[69] T. Oest, Particle Tracing Through The HERA-B Magnetic Field, HERA-B

Internal Note 97-165 (1997).

[70] H.A. Bethe, Moli`ere’s Theory of Multiple Scattering, Phys. Rev. 89 (1953)

1256-1266.

[71] V.L. Highland, Some Practical Remarks on Multiple Scattering, Nucl. Instr.

and Meth. 129 (1975) 497-499.
Erratum Nucl. Instr. and Meth. 161 (1979) 171.

[72] G.R. Lynch and O.L. Dahl, Approximations for Multiple Coulomb Scatter-

ing, Nucl. Instr. and Meth. B58 (1991) 6-10.

[73] G. Lutz, Optimum Track Fitting in The Presence of Multiple Scattering,

Nucl. Instr. and Meth. A273 (1988) 349-374.

[74] E.J. Wolin and L.L. Ho, Covariance Matrices for Track Fitting With The

Kalman Filter, Nucl. Instr. and Meth. A329 (1993) 493-500.

[75] R. Mankel, The Object-Oriented Track Fit, HERA-B Internal Note 98-079.

[76] G. Baum et al. (COMPASS Collaboration), Common Muon and Proton
Apparatus for Structure and Spectroscopy (Proposal), CERN/SPSLC 96-
14.

[77] S. Amato et al. (LHCb Collaboration), LHCB Technical Proposal, CERN-

LHCC-98-4, CERN-LHCC-P-4 (1998).

[78] V. Papavassiliou et al. (BTeV Collaboration), BTeV: A Proposal for a New
B Physics Experiment at the Fermilab Tevatron Collider La Thuile 2000,
Results And Perspectives in Particle Physics, 843-864 (2000)

[79] D. Stampfer, M. Regler and R. Fr¨uhwirth, Track Fitting With Energy Loss,

Comput. Phys. Commun. 79 (1994) 157-164.

[80] H.A. Bethe and W. Heitler, Proc. Roy. Soc. A146 (1934) 83.

[81] G. Kitagawa, Non-Gaussian Seasonal Adjustment, Comp. and Math. Appl.

18 (1989) 503-514.

[82] G. Kitagawa, The Two-Filter Formula for Smoothing And an Implementa-
tion of The Gaussian-Sum Smoother, Annals Inst. Statist. Math. 46 (1994)
605-623.

[83] R. Fr¨uhwirth, Track Fitting With Long-Tailed Noise: a Bayesian Approach,

Comput. Phys. Comm. 85 (1995) 189-199.

99

[84] R. Fr¨uhwirth, Track Fitting With Non-Gaussian Noise, Comput. Phys.

Comm. 100 (1997) 1-16.

[85] R. Fr¨uhwirth and M. Regler, On the Quantitative Modelling of Tails and
Core of Multiple Scattering by Gaussian Mixtures, Nucl. Instr. and Meth.
A456 (2001) 369.

[86] R. Fr¨uhwirth and S. Fr¨uhwirth-Schnatter, On the Treatment of Energy Loss

in Track Fitting, Comput. Phys. Comm. 110 (1998) 80-86.

[87] G.F. Hartner, VCTRAK Brieﬁng: Program and Math, ZEUS Internal Note

98-058, 1998.

[88] P. Billoir and S. Qian, Fast Vertex Fitting with Local Parametrization of

Tracks, Nucl.Instr. and Meth. A311 (1992) 139-150.

[89] R. Fr¨uhwirth et al., New Vertex Reconstruction Algorithms for CMS, Proc.
Computing in High Energy Physics Conference, La Jolla 2003, Preprint
physics/0306012.

[90] D.J. Jackson, A Topological Vertex Reconstruction Algorithm for Hadronic

Jets, Nucl. Instr. and Meth. A388 (1997) 247-253.

[91] T. Lohse, Vertex Reconstruction and Fitting, HERA-B Internal Note 95-

013, 1995.

[92] D.H. Saxon, Three-Dimensional Track and Vertex Fitting in Chambers with

Stereo Wires, Nucl. Instr. and Meth. A234 (1985) 258-266.

[93] G.E. Forden and D.H. Saxon, Improving Vertex Position Determination
Using a Kinematic Fit, Nucl. Instr. and Meth. A248 (1986) 439-450.

[94] D.H. Saxon, Vertex Detection and Tracking at Future Accelerators,

Hadronic J. 10 (1987) 117-139.

[95] R. Luchsinger and C. Grab, Vertex Reconstruction by Means of the Kalman

Filter, Comput. Phys. Comm. 76 (1993) 263-280.

[96] H. Albrecht et al., Exclusive Hadronic Decays of B Mesons, Z. Phys. C48

[97] Particle Data Group (K. Hagiwara et al.), Review of Particle Physics, Phys.

(1990) 543–551.

Rev. D66 (2002).

100

