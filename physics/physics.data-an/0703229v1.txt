7
0
0
2
 
r
a

M
 
5
2
 
 
]
n
a
-
a
t
a
d
.
s
c
i
s
y
h
p
[
 
 
1
v
9
2
2
3
0
7
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

The Normalized Radial Basis Function Neural
Network and its Relation to the Perceptron

Igor Grabec
Faculty of Mechanical Engineering, University of Ljubljana, Slovenia
igor.grabec@fs.uni-lj.si

Abstract— The normalized radial basis function neural net-
work emerges in the statistical modeling of natural laws that
relate components of multivariate data. The modeling is based
on the kernel estimator of the joint probability density function
pertaining to given data. From this function a governing law is ex-
tracted by the conditional average estimator. The corresponding
nonparametric regression represents a normalized radial basis
function neural network and can be related with the multi-
layer perceptron equation. In this article an exact equivalence
of both paradigms is demonstrated for a one-dimensional case
with symmetric triangular basis functions. The transformation
provides for a simple interpretation of perceptron parameters in
terms of statistical samples of multivariate data.

Index Terms— kernel estimator, conditional average, normal-

ized radial basis function neural network, perceptron

I. INTRODUCTION

Multi-layer perceptrons (MLP) have played a central role
in the research of neural networks [1], [2]. Their study began
with the nonlinear and adaptive response characteristics of
neurons, which have brought with them many difﬁculties
related to the understanding of the collective properties of
MLPs. Consequently, it was discovered rather late that the
MLP is a universal approximator of relations between input
signals [1], [2], [3]. However, supervised training of MLPs
by back-propagation of errors is relatively time-consuming
and does not provide a simple interpretation of MLP param-
eters. The inclusion of a priori information into an MLP is
also problematic. Many of these problems do not appear in
simulations of radial basis function neural networks (RBFN)
[4]. The structure of the normalized RBFN stems from the
representation of the empirical probability density function of
sensory signals in terms of prototype data and can simply be
interpreted statistically [5]. An optimal description of relations
is described in this case by the conditional average estimator
(CA), which represents a general, non-linear regression and
corresponds to a normalized RBFN. A priori information can
also be included in this model by initialization of prototypes.
A learning rule derived from the maximum entropy principle
describes a self-organized adaptation of neural receptive ﬁelds
[5], [6], [7]. The separation of input signals into independent
and dependent variables need not be done before training, as
with MLPs, but it can be performed when applying a trained
network. Because of these convenient properties of RBFNs,
our aim was to compare both NN paradigms and to explore
whether RBFN is equivalent to MLP with respect to mod-
eling of mapping relations. Here we demonstrate their exact

equivalence for a simple one-dimensional case by showing that
the mapping relation of an RBFN can be directly transformed
into that of an MLP, and vice versa. This further indicates
how MLP parameters can also be statistically interpreted in
the case of multivariate data.

II. ESTIMATION OF PROBABILITY DENSITY FUNCTIONS
The task of both paradigms is the modeling of relations
between components of measured data. We assume that D
sensors provide signals (s1, s2, . . . , sD) that comprise a vector
x. The modeling is here based on an estimation of the joint
probability density function (PDF) of vector x. We assume that
information about the probability distribution is obtained by a
repetition of measurements that yield N independent samples
{x1, x2, . . . , xN }. The PDF is then described by the kernel
estimator [6]:

N

1
N

(1)

fe(x) =

w(x − xn, σ)

X
n=1
Here the kernel w(x−xn, σ) is a smooth approximation of the
delta function, such as a radially symmetric Gaussian function
w(x, σ) = const. exp(− k x k2 /2σ2). The constant σ can
be objectively interpreted as the width of a scattering function
describing stochastic ﬂuctuations in the channels of a data
acquisition system and can be determined by a calibration
procedure [5], [7], [8].

However, in an application the complete PDF need not be
stored; it is sufﬁcient to preserve a set of statistical samples
xn. In order to obtain a smooth estimator of the PDF, the
neighboring sample points should be separated in the sample
space by approximately ∼ σ. From this condition one can
estimate a proper number N of samples [5], [7], [8]. In
a continuous measurement the number of samples increases
without
limit, and there arises a problem with the ﬁnite
capacity of the memory in which the data are stored. Neural
networks are composed of ﬁnite numbers of memory cells, and
therefore we must assume that the PDF can be represented by
a ﬁnite number K of prototype vectors {q1, q2, . . . , qK} as

K

1
K

fr(x) =

w(x − qk, σ)

X
k=1
In the modeling of fr the prototypes are ﬁrst initialized by
K samples: {qk = xk , k = 1 . . . K}, which represent a
priori given information. These prototypes can be adapted to
additional samples xN in such a way that the mean-square

(2)

difference between fe and fr is minimized. The corresponding
rule was derived elsewhere, and it describes the self-organized
unsupervised learning of neurons, each of which contains one
prototype qk [6], [7].

The estimator of the PDF given in Eq. 2 can be simply
generalized by assuming that various prototypes are associated
with different probabilities and receptive ﬁelds [7]: 1/K 7→ pk
and σ 7→ σk. This substitution yields a generalized model:

fg(x) =

pk w(x − qk, σk)

(3)

K

X
k=1

However, in this case several advantages of a simple interpreta-
tion of the model Eq. 2 are lost, which causes problems when
analyzing its relation to the perceptron model. Therefore, we
further consider the simpler model given in Eq. 2.

III. CONDITIONAL AVERAGE

In the application of an adapted PDF the information must
be extracted from prototypes, which generally corresponds to
some kind of statistical estimation. In a typical application
there is some partial information given, for instance the ﬁrst
i components of the vector: g = (s1, s2, .., si, ∅), while the
hidden data, which have to be estimated, are then represented
by the vector h = (∅, si+1, .., sD) [5], [8]. Here ∅ denotes the
missing part in a truncated vector. As an optimal estimator
we apply the conditional average, which can be expressed by
prototype vectors as [4], [5], [8]:

K

h =
b

X
k=1

Bk(g)hk,

(4)

(5)

where

Bk(g) =

w(g − gk, σ)
K
j=1 w(g − gj, σ)

.

P

Here the given vector g plays the role of the given condition.
The basis functions Bk(g) are strongly nonlinear and peaked
at the truncated vectors gk. They represent the measure of
similarity between the given vector g and the prototypes gk.
The CA represents a general non-linear, non-parametric
regression, which has already been successfully applied in a
variety of ﬁelds [5], [7], [8]. It is important that selection into
given and hidden data can be done after training the network,
which essentially contributes to the adaptability of the method
to various tasks in an application [5].

The CA corresponds to a mapping relation g → h that can
be realized by a two-layer RBFN [4]. The ﬁrst layer consists
of K neurons. The k-th neuron obtains the input signal g
over synapses described by gk and is excited as described by
the radial basis function Bk(g). The corresponding excitation
signal is then transferred to the neurons of the second layer.
The i-th neuron of this layer has synaptic weights hk,i and
generates the output

hi(g).
b

IV. TRANSITION FROM RBFN TO MLP

In order to obtain a relation with an MLP it is instruc-
tive to analyze the performance of the RBFN in a simple
two-dimensional case, for example as shown in Fig. 1. We

1

2

4

5

6

3
X

Fig. 1. An example of a linear interpolating function through sample points.

 ) 
 , y
( x
i
i

(x) 
B
2

(x) 
S
2

Y

Y

4

3

2

1

0

0

1

0

0

x

 
1

1

x

 
3

3

4

∆ x=1 

 
x
2

2

X

Fig. 2.
functions.

Examples of a triangular and a piecewise linear sigmoidal basis

consider the function y(x) described by a set of sample pairs
{x1, y1; . . . xi, yi; . . . ; xN , yN } with constant spacing between
the sample points: △x = xj+1 − xj for j = 1 . . . N − 1. We
further introduce a triangular and a piecewise linear sigmoidal
basis function, as shown in Fig. 2:

Bi(x) = {

1 −

for xi−1 < x < xi+1 ;

|x − xi|
△x
elsewhere }

. . .

0 . . .

Si(x) = {

0
(x − xi)/△x
1

. . .

. . .
. . .

for x < xi ;
for xi ≤ x ≤ xi+1 ;
for x > xi+1

}

(7)

Using these, we can represent the function y(x) by a linear
interpolating function comprising straight line segments con-
necting the sample points. The CA can in this case be readily
transformed into an MLP expression by utilizing the relations:

Bi+1(x) = Si(x) − Si+1(x)

Si(x) =

Bi+1(x)
Bi(x) + Bi+1(x)

(6)

(8)

(9)

The result is:

y(x) =
b

=

=

y1B1(x) + . . . + yN BN (x)
B1(x) + . . . + BN (x)

y1B1(x)
B1(x) + . . . + BN (x)

+ . . . +

yN BN (x)
B1(x) + . . . + BN (x)

y1B1(x)
B1(x) + B2(x)

+ y2B2(x) + . . .

. . . + yN−1BN−1(x) +

yN BN (x)
BN−1(x) + BN (x)

(10)

In the denominator of the ﬁrst and last terms of this expres-
sion, only those basis functions are kept that differ from zero
in the region where the basis function in the numerator also
differs from zero. The denominator in terms of index 2 to
N − 1 is 1 because of the overlapping of neighboring basis
functions. We insert relations of Eq. (8,9) into Eq. (10) and
obtain

N −1

y(x) = y1 +
b

X
i=1

(yi+1 − yi) Si(x)

(11)

By introducing the parameters: △yi = yi+1 − yi,
ci =
1/(xi+1 − xi), Θi = xi/(xi+1 − xi) and a unique, nor-
malized sigmoidal basis function:

S(x) = {

0

. . . for x < 0 ;

x . . . for 0 ≤ x ≤ 1 ;
. . . for x > 1 }
1

(12)

we can write Eq. (11) in the form of a two-layer perceptron
mapping relation

N −1

y(x) = y1 +
b

X
i=1

△yi S(cix − Θi)

(13)

The ﬁrst layer corresponds to neurons with synaptic weights
ci and threshold values Θi, while the second layer contains a
linear neuron with synaptic weights △yi and threshold y1.

for

The above derivation demonstrates that

the two-
dimensional distribution the mapping x → y determined by
the conditional average is identical with the mapping relation
of a multi-layer perceptron. However, a difference appears
when the operations needed for the mapping are executed.
The operators involved in both cases are described by different
basis functions, which correspond to different neurons in the
implementation. If the prototypes are not evenly spaced, then
the last equation can still be applied, although the transition
regions will be of different spans. However, in this case the
basis functions Bi(x) are no longer symmetric. In applications
it is more convenient to use a Gaussian basis function rather
than a triangular one, and in the perceptron expression this
the estimated
yields the function tanh(. . .). In this case,
function
y(x) generally does not run through the sample points
b
but rather approximates them by a function having a more
smooth derivative than the piecewise linear function. In this
case, the correspondence between RBFN and MLP is not exact
but approximate.

An additional interpretation is needed when the data are not
related by a regular function y(x) but randomly, as described
by a joint probability density function f (x, y). In this case,
various values of y can be observed at a given x. Evaluation

of CA in this case is not problematic, while in the perceptron
relation Eq. (13) the value yi must be substituted by the
conditional average of variable y at xi.

The analysis of the correspondence between RBFN and
MLP can be extended to multi-variate mappings. Let us ﬁrst
consider the situation with just two prototypes qi and qj and
Gaussian basis functions. The CA is then described by the
function

h(g) =
b

2

hi exp( −kg−gik
exp( −kg−gik2

2σ2

) + hj exp( −kg−gjk
2σ2
) + exp( −kg−gjk2
)

2σ2

2σ2

2

)

(14)

We introduce the notation: gi = g−△g , gj = g+△g , hi =
h − △h , hj = h + △h in which the overline denotes the
average value and 2△g is the spacing of the prototypes. If
we express the norm by a scalar product and cancel the term
exp[−(k g − g k2 + k △g k2)/2σ2) in the numerator and
denominator, we obtain the expression:

h(g) = h + △h tanh (cid:2)△g · (g − g)/σ2
b
in which · denotes the scalar product. In order to obtain the
relation between RBFN and MLP, we introduce a weight
vector c = △g/σ2 and a threshold value Θ = g · △g/σ2
into Eq. (15) and obtain:

(15)

(cid:3)

h(g) = h + △h tanh [c · (g − g) − Θ]
b

(16)

This expression again describes a two-layer perceptron: the
ﬁrst layer is composed of one neuron having the synaptic
weights described by the vector c and the threshold value
Θ. The second layer is composed of linear neurons having
synaptic weights △hi and threshold values hi.

The ﬁrst-order approximation of the mapping expression Eq.

16 is :

h(g) = h + △h△g · (g − g)/σ2
b

(17)

This equation represents a linear regression of h on g that runs
through both prototype points if we assign σ2 =k △g k2. Its
slope is determined by the covariance matrix Σ = △h△gT.
However, the nonlinear regression speciﬁed in Eq. (15) follows
a linear regression only in the vicinity of a point determined by
g and h while it exhibits saturation when g runs from g over
given prototypes to inﬁnity. The saturation is a consequence
of the function tanh(. . .), which is basic in the modeling of
a multi-layered perceptron.

The reasoning presented above for a multi-variate case
requires additional explanation when transferred to a situation
consisting of many prototypes. Let us assume that N proto-
types with indexes 1 . . . N can be found in the hyper-sphere of
radius approximately σ around the given datum g, and let these
prototypes be spaced by approximately equal distances. The
CA can now be expressed with leading terms and remainders
as follows :

N

P

i=1 hi exp(− k g − gi k2 /2σ2)
h(g) = P
N
i=1 exp(− k g − gi k2 /2σ2) + Ow
b
Here Oh and Ow represent two remainders, which are small
in comparison with the two leading terms. We again introduce
the average value, but now with respect to N prototypes: gi =

+ Oh

(18)

g + △gi , hi = h + △hi for i = 1 . . . N . With this we obtain
the approximate expression :

h(g) ∼= h + P
b

N

i=1 △hi exp[△gi · (g − g)/σ2]
N
i=1 exp[△gi · (g − g)/σ2]

P

(19)

For g in the vicinity of the average value, a linear approxima-
tion of the exponential function is applicable, which yields

h(g) ∼= h +
b

1
N

N

X
i=1

△hi△gi · (g − g)/σ2

(20)

This expression represents a linear regression of h on g
speciﬁed by N points. If we express the covariance matrix

by two principal vectors △hp and △gp :

Σ =

1
N

N

X
i=1

△hi△gT
i

Σ = △hp△gT
p

(21)

(22)

closest neighbors, and additional smoothing is not needed.
The corresponding parameters of the perceptron for one-
dimensional mapping can then be simply interpreted in terms
of prototypes, as described by the model equations Eq. 4 and
Eq. 24. However, due to the complexity of the self-organized
formation of prototypes determining the RBFN and the back-
propagation learning of the MLP, it would be difﬁcult to ﬁnd
an exact mapping relation between both models, especially in
the multivariate case.

ACKNOWLEDGMENT

This work was supported by the Ministry of Higher Educa-
tion, Science and Technology of the Republic of Slovenia and
EU-COST. The author thanks Prof. W. Sachse from Cornell
University, Ithaca, NY, USA for his valuable suggestions in
the preparation of this article.

REFERENCES

we obtain a simpliﬁed expression of the linear regression

York, NY: Macmillan, 1999.

[1] S. Haykin, Neural Networks, A Comprehensive Foundation, 2nd ed. New

[2] R. Hecht-Nielsen, Neurocomputing,

Reading, MA: Addison-Wesley,

h(g) ∼= h + △hp△gp · (g − g)/σ2
b

(23)

1990.

which is an approximation of an MLP mapping relation

[3] G. Cybenko, ”Approximations by Superpositions of a Sigmoidal Func-

tion,” Math. Cont., Sig. & Syst., vol. 2, pp. 303-314, 1989.

[4] C. M. Bishop, ”Neural Networks and their Applications,” Rev. Sci. Instr.,

(24)

vol. 65, pp. 1830-1832, 1994.

[5] I. Grabec and W. Sachse, Synergetics of Measurement, Prediction and

Control, Berlin: Springer-Verlag, 1997.

[6] I. Grabec, ”Self-Organization of Neurons Described by the Maximum
Entropy Principle,” Biological Cybernetics, vol. 69 (9), pp. 403-409, 1990.
[7] I. Grabec, ”Experimental Modeling of Physical Laws,” Eur. Phys. J. B,

vol. 22, pp. 129-135, 2001.

[8] I. Grabec, ”Extraction of Physical Laws from Joint Experimental Data,”

Eur. Phys. J. B, vol. 48, pp. 279-289, 2005.

[9] R. O. Duda and P. E. Hart, Pattern Classiﬁcation and Scene Analysis,

New York: J. Wiley and Sons, 1973, Ch. 4.

h(g) ∼= h + △hp tanh[△gp · (g − g)/σ2]
b

The parameters of a single neuron in the perceptron expression
thus correspond to the principal vectors of the covariance
matrix Σ = △hp△gT
p determining a local regression around
the center of several neighboring prototypes.

The above expression shows that the transition from RBFN
to MLP can be quite generally performed. However, in the
multi-variate case, the decomposition of CA into a perceptron
mapping is not as simple as in the one-dimensional case,
because the interpretation of perceptron parameters goes over
local regression determined by various prototypes surrounding
the given datum g. In spite of this, our conjecture is that
both paradigms are equivalent with respect to the statistical
modeling of mapping relations, provided that both models
include the same number of adaptable parameters.

V. CONCLUSION

The conditional average representing a linear interpolating
function by the regular function y(x) shown in Fig. 1 can be
exactly decomposed into the multilayer perceptron relation.
When there are a small number of noise-corrupted sample
data points representing the function, the question of proper
smoothing arises. In the case of CA this is done by using sym-
metric radial basis functions and increasing their width. The
basis functions centered at various points then overlap, which
results in a smoother
y(x). Because of multiple overlapping,
b
the relations between radial basis and sigmoidal functions
becomes more complicated, and the transition between the
conditional average and the perceptron relation becomes less
obvious. However, when the prototypes are obtained by self-
organization, they represent a statistical regularity, and the CA
generally does not exhibit statistical ﬂuctuations. In this case,
the proper RBF width corresponds to the distance between

