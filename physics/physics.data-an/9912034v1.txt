9
9
9
1
 
c
e
D
 
6
1
 
 
]
n
a
-
a
t
a
d
.
s
c
i
s
y
h
p
[
 
 
1
v
4
3
0
2
1
9
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Kalman Filter Track Fits and
Track Breakpoint Analysis

Pierre Astier a Alessandro Cardini b Robert D. Cousins b,1
Antoine Letessier-Selvon a Boris A. Popov a,2
Tatiana Vinogradova b

aLPNHE, Laboratoire de Physique Nucl´eaire et des Hautes Energies,
Universit´es de Paris 6 et 7, 75252 Paris Cedex 05, France.
bDepartment of Physics and Astronomy, University of California,
Los Angeles, California 90095, U.S.A.

Abstract

We give an overview of track ﬁtting using the Kalman ﬁlter method in the NOMAD
detector at CERN, and emphasize how the wealth of by-product information can
be used to analyze track breakpoints (discontinuities in track parameters caused by
scattering, decay, etc.). After reviewing how this information has been previously
exploited by others, we describe extensions which add power to breakpoint detection
and characterization. We show how complete ﬁts to the entire track, with breakpoint
parameters added, can be easily obtained from the information from unbroken ﬁts.
Tests inspired by the Fisher F -test can then be used to judge breakpoints. Signed
quantities (such as change in momentum at the breakpoint) can supplement un-
signed quantities such as the various chisquares. We illustrate the method with
electrons from real data, and with Monte Carlo simulations of pion decays.

Key words: breakpoints, Kalman ﬁlter, track ﬁtting
PACS code: 07.05.Kf

1 Introduction

The Kalman ﬁlter is an eﬃcient algorithm for ﬁtting tracks in particle spec-
trometers with many position-sensing detectors [1–6]. It cures many of the
problems of traditional χ2 track ﬁtting using Newton steps, which becomes

1 Email address: cousins@physics.ucla.edu
2 on leave from the Laboratory of Nuclear Problems, JINR, 141980 Dubna, Russia.

Accepted for publication in Nuclear Instruments and Methods 14 December 1999

more and more unwieldy as the number of position measurements increases. In
such situations where Kalman ﬁltering is naturally applied, it can be possible
to detect and characterize track breakpoints, deﬁned as locations where one or
more of the track parameters is discontinuous. Obvious breakpoints, such as
a large kink due to a particle decay, are often found before a full track ﬁt is
performed. More subtle breakpoints may only manifest themselves when the
track is ﬁt to obtain the track parameters.

Fr¨uhwirth[3] has investigated the detection of breakpoints using information
which is a natural by-product of a Kalman ﬁlter track ﬁt. When ﬁtting a drift-
chamber track with N position measurements (“hits”), the idea has been the
following. At the location of hit k, one has the best-ﬁt track parameters (a)
using hits 1 through k and (b) using hits k +1 through N. One constructs a χ2
for the consistency of these two sets of track parameters. This χ2, along with
other χ2’s at hand from the two ﬁts, can be combined to form test statistics
for breakpoints.

Such methods suﬀer a loss of power because of two defects. First, χ2’s by con-
struction throw away information about the arithmetic signs of diﬀerences;
such information is relevant since a track’s momentum should normally de-
crease when the particle decays.

Second, appropriate constraints of a breakpoint hypothesis are not incorpo-
rated. For example, if a particle decays at hit k, a desired quantity is the
mismatch in track parameters describing the momentum vector, under the
constraint that the track position vector from ﬁts (a) and (b) is identical.

In this paper, we describe a procedure which uses information from the Kalman
ﬁlter ﬁt to construct the result of a full track ﬁt which has additional track
parameters to account for the discontinuities at a breakpoint. It is natural
to allow for one, two, or three discontinuous parameters in order to describe
diﬀerent physical processes:

Type I: An electron emitting a bremsstrahlung photon generally changes
only its momentum magnitude, since the photon is essentially collinear with
the electron direction.
Type II: A particle with a hard elastic scatter may have momentum mag-
nitude essentially unchanged, while changing the two angles specifying di-
rection.
Type III: A charged pion or kaon decaying to µν in general changes mo-
mentum magnitude as well as the two angles.

With the method we describe, trial breakpoint ﬁts at every hit (away from
the ends) of the track can be quickly obtained, and used to search for and
characterize breakpoints.

2

Billoir [1] has investigated Type II breakpoints, performing ﬁts which do not
assume an existing breakpointless ﬁt. We show in this paper how the by-
products of a Kalman ﬁlter ﬁt allow one to avoid reﬁtting the hits while
incorporating the constraints.

We discuss these tools in the context of the NOMAD [7] neutrino experiment
at CERN, within which this development took place. However, the results
are generally applicable to any experiment in which the number of position
measurements is large enough to ﬁt the track on both sides of the potential
breakpoint.

In Sec. 2 we introduce some notation and describe our track parameters and
track models, including energy loss. In Sec. 3 a review of the traditional (non-
Kalman) track ﬁt is given. Sec. 4 describes its replacement by the Kalman
ﬁlter. In Sec. 5, we brieﬂy review previous work on breakpoint variables. In
Sec. 6, we introduce the new breakpoint variables, and in Sec. 7, we present
some indicative results of their use. We conclude in Sec. 8.

2 Track parameters and track models

2.1 Parameters

When ﬁtting a track, one typically describes its location in 6D phase space
by choosing a ﬁxed reference surface (a vacuum window, chamber plane, etc.)
and then ﬁtting for the 5 independent parameters of the track at the position
where the track intersects this surface. We let the vector x contain these track
parameters. In a ﬁxed-target experiment with beam direction along the z axis,
the parameterization of x is often taken to be

x = (x, y, dx/ dz, dy/ dz, q/p)

(1)

at a reference plane at ﬁxed z, where q/p is the charge/momentum.

NOMAD is a ﬁxed-target experiment with drift chamber planes perpendicular
to the z direction (nearly aligned with the neutrino beam). However, the
chambers are immersed in a uniform magnetic ﬁeld 3 , so that soft tracks often
loop back, and a helical parameterization similar to collider experiments is

3 Sense wires of one chamber make angles of +5, 0 and –5 degrees with respect
to the magnetic ﬁeld direction providing a space measurement along coordinates
designated u, y, and v.

3

ϕ

R

(x,y,z,t0)

B

Particle’s trajectory

Y

V

U

X

Z

tan  λ

Fig. 1. Deﬁnition of the helix parameters used to describe charged particle trajectory
in the NOMAD setup.

more appropriate. We maintain the reference surface as a plane with ﬁxed z
(the z of the ﬁrst hit of the track), and specify a track there by

x = (x, y, 1/R, tan λ, φ, t),

(2)

where we have introduced the three parameters of a helical curve in the uni-
form magnetic ﬁeld: the signed 4 inverse radius of curvature 1/R, the dip angle
tan λ, and the angle of rotation φ (see Fig. 1). In addition to these 5 traditional
parameters, NOMAD has a sixth parameter, the zero-time-oﬀset for the drift
chamber measurements, called t. It has been introduced because of trigger
time jitters. In the following, unless speciﬁed otherwise, track parameters will
refer to this second parameterization.

The parameter 1/R is related to the momentum p by

1
R

∝

B
p

q

1 + (tan λ)2,

(3)

while the sign of (1/R) only reﬂects the particle charge if the time runs the
right way along the track. In NOMAD the sign convention we used implied
that the product R · φ increases with time along the assumed time direction
given by the ordering of the measurements along the track.

4 In NOMAD, 1/R has a sign opposite to the particle charge.

4

Throughout our work, we use a change in 1/R as an indicator of a change
in p; this is strictly true only when the change in tan λ is negligible, but is
an adequate approximation. (Inhomogeneity in the magnetic ﬁeld B does not
matter, since we compare 1/R estimates at the same point.)

With this parameterization, the three physical processes enumerated in the
Introduction have the following breakpoint signatures:

Type I: An electron emitting a bremsstrahlung photon has a discontinuity
in 1/R.
Type II: A pion with a hard elastic scatter has discontinuities in tan λ and
φ.
Type III: A charged pion or kaon decaying to µν has discontinuities in 1/R,
tan λ, and φ.

From the estimation of the track parameters at the reference plane one needs
a transformation, called the track model, with which one computes the ex-
pected measurements at any position in the detector. This model describes
the dependence of the measurements on the initial values in the ideal case of
no measurement errors and of deterministic interactions of the particle with
matter. Use of a correct description is of the utmost importance for the per-
formance of the ﬁtting procedure, be it traditional or not.

2.2 Equation of motion in a magnetic ﬁeld

The trajectory of a charged particle in a (static) magnetic ﬁeld is determined
by the following equation of motion:

d2r/ d2s = (kq/p) · ( dr/ ds) × B(r(s)),

(4)

where r is the position vector, s is the path length, k is a constant of propor-
tionality, q is the (signed) charge of the particle, p is the absolute value of its
momentum, and B(r) is the static magnetic ﬁeld.

With our parameterization it proved convenient to use φ as the running param-
eter rather than z since particles may loop back in the detector and cross the
same measurement plane several times. The equation of motion can be readily
integrated along a trajectory step (from position 0 to position 1) where R and
tan λ are assumed constant.

x1 = x0 + R0 · tan λ · (φ1 − φ0)
y1 = y0 + R0 · (cos φ1 − cos φ0)
z1 = z0 + R0 · (sin φ1 − sin φ0)

5

(5)
(6)
(7)

R1 = R0
tan λ1 = tan λ0

t1 = t0 + R0 · (φ1 − φ0)/(β cos λ0).

(8)
(9)
(10)

In the last equation, β is the particle velocity and R · ∆φ has the right sign
following our convention.

In NOMAD, detector measurement planes are located at ﬁxed z and Eqn. 7
can be solved,

sin φ1 = sin φ0 + (z1 − z0) · (1/R0),

(11)

to obtain φ1 at the desired z. In practice, among all the possible solutions,
our track model returns the one corresponding to the next crossing in the
requested time direction.

The magnetic ﬁeld strength varies by a few percent in the tracking volume.
This was accommodated by ignoring the minor components of the ﬁeld and
updating 1/R at every tracking step so that the product R·B remains constant,
up to energy losses which are now discussed.

2.3 Energy losses

The ionization losses are accounted for by updating 1/R at every tracking
step 5 :

∆(1/R) =

d(1/R)
dE

dE
dx

∆x =

|1/R|
0.3Bβ

dE
dx

∆φ

(12)

where ∆φ = φend − φstart, and where dE/ dx is given by the Bethe-Bloch
equation, evaluated (by default) with the pion mass, and a local matter density
extracted from the detector model used in the GEANT [8] simulation of the
experiment. In the central tracker part of the detector, the matter density is
about 0.1 g/cm3 : the ionization loss model does not need to include detailed
relativistic corrections.

In NOMAD, bremsstrahlung losses should be accounted for (on average) in the
track model for electron tracks, because the central tracker amounts to about
1 radiation length (X0). In the electron (and positron) track model, one adds

5 The absolute value derives from our sign conventions, so that a track gains energy
if tracked backwards in time.

6

to the ionization losses (evaluated with the electron mass) bremsstrahlung
losses:

∆(1/R) =

∆φ
β2X0 cos λ

,

(13)

where we can readily approximate β = 1. As expressed, these losses include
the whole radiated photon spectrum, although beyond a certain threshold, the
radiated photons can be detected in the downstream electromagnetic calorime-
ter, or sometimes as a conversion pair in the tracker. But no convincing way
was found to deﬁne a threshold that separates continuous small losses from
accidental big ones.

3 Traditional track ﬁts

Given the track model and an estimate (x0) of the parameters at the refer-
ence position, one can compute at each measurement location in the detector
(labeled k = 1, . . . N) the theoretical “ideal measurements” which would be
made in the absence of ﬂuctuations due to the two categories of “noise”: pro-
cess noise (multiple scattering, bremsstrahlung, etc.) and measurement noise
(detector resolution). This computation is represented by the system equation
in the absence of noise,

xk = fk(x0),

(14)

where f is a deterministic function (the track model) giving the values of the
parameters at each location k.

In general the set of parameters xk is not measured directly by the apparatus;
only a function of it, hk(xk), is observed. (In our case hk is a drift chamber
position measurement.) Let

mk = hk(xk) + εk

(15)

be the measurement equation where εk represents the measurement errors.
By convention, hmki = hk(xk) and hεii = 0. In practice, one has to check
that the track model (involved in the calculation of xk) and the measurement
function hk fulﬁll this convention.

7

In a traditional (non-Kalman) track ﬁt, one calculates the N×N covariance
matrix of the measurements 6 :

V (m)
ij = h(mi − hi(xi))(mj − hj(xj))i,

(16)

where the angle-brackets represent an average over an ensemble of tracks with
the same track parameters x. According to the Gauss-Markov theorem, the
minimization of

trk(x) = (m − h(x))T [V (m)]−1 (m − h(x))
χ2

(17)

yields parameter estimates with minimum variance among all linear unbiased
estimates.

Note that when the parameter evolution is not aﬀected by any stochastic noise
(as assumed by Eq. 14), V (m)
ij = hεi εji is diagonal (at least block diagonal, if
the apparatus provides multidimensional correlated measurements), and may
depend weakly on x via the detector response (for example, the spatial reso-
lution of drift chambers depends on the track angle w.r.t the anode plane).

The system equation becomes non deterministic when the track experiences
stochastic processes such as multiple scattering, bremsstrahlung or ionization
losses. The system equation (Eq. 14) becomes :

xk = fk(x0) + wk

(18)

where wk is a random vector representing the ﬂuctuation of the parameters
along the path from location 0 to location k. This process noise translates, via
the track model, into oﬀ-diagonal elements in V (m) (the noise from location 0
to k depends on the noise from location 0 to k − 1 and k − 1 to k).

More importantly, V (m) now depends on the reference location z0 at which the
parameters will be estimated. Of course the average value of the perturbing
eﬀects have to be included in fk but the ﬂuctuations (e.g. track scattering or
energy loss straggling when relevant) have to be described by the p.d.f of wk.
In fact only the covariance matrix of the wk is needed in practice. (See Sec. 4.)

Given particular data m, the track ﬁt consists in ﬁnding the value of x which
minimizes Eq. 17. Minimization is typically an iterative process with some
convergence criteria to decide when to stop iterating. The matrix V (m) can
be calculated by Monte Carlo techniques or sometimes analytically. If one is

6 The superscript in parentheses in V (m) is to make clear which vector it corre-
sponds to; this will be the convention in this paper.

8

fortunate, the calculation depends only weakly on x, so it can be done once
per ﬁt using the initial guess for x, and not changed at each iteration. Note
that the N×N matrix V (m) must be inverted, where N is the number of
measurement positions.

Let χ2
trk (written without explicit argument x) be the minimum value after
x the value of the estimated
convergence of the minimization procedure and
parameters (the value of x at the minimum). The covariance matrix of the
estimates is then approximated by the inverse of the curvature matrix at the
minimum :

b

−1

1
2

∂2χ2
trk
∂xi∂xj #

"

V (
x)
ij =

b

(19)

x only at the ﬁxed reference z0, say
A traditional ﬁt gives the track parameters
at the beginning of the track. In order to ﬁnd the best-ﬁt track parameters at
the end of the track, one has to recompute V (m) using the new reference and
perform a completely independent ﬁt. Due to multiple scattering, the results
of two ﬁts using diﬀerent reference z0’s are not related by the track model,
and cannot be obtained from one another. This eﬀect is already present in a
perfectly linear ideal case, where the detector resolution does not depend on
x. It just reﬂects the fact that the weights of measurements to estimate the
track parameters depend (eventually strongly) on z0.

b

This is unfortunate, since in practice, track extrapolation is often desired from
both ends of the track. Furthermore, optimal track estimates at every possible
sensor position can be quite useful, either to detect outliers eﬃciently, or to
optimally collect hits left over during a ﬁrst pass.

Finally, if one attempts such a traditional track ﬁt in an experiment with large
N (such as NOMAD, where N ranges up to 150) N can be too big to make
inversion of V (m) practical.

Given these diﬃculties, in NOMAD the Kalman ﬁlter was implemented in-
stead [9].

4 The Kalman Filter

The Kalman ﬁlter is a least-squares stepwise parameter estimation technique.
Originally developed in the early 60’s to predict rocket trajectories from a
set of their past positions, it can be used to handle multiple scattering while
estimating track parameters. We try here to brieﬂy shed light on the features of

9

the Kalman ﬁlter for track ﬁtting and refer to the literature for more details [1–
4].

The Kalman ﬁlter technique gives, mathematically speaking, exactly the same
result as a standard least squares minimization. In the framework of track ﬁt-
ting, it essentially avoids big matrix inversion and provides almost for free an
optimal estimate of track parameters at any location, allowing the detection
of outlying measurements, extrapolation and interpolation into other subde-
tectors.

The set of parameters x is called the state vector in Kalman ﬁltering.

Starting from Eq. 18 we rewrite the system equation in a stepwise form, where
the state vector at location k is obtained from its value at previous location 7
k − 1.

xk = fk(xk−1) + wk

(20)

We shall assume in the following that both wk and εk (the measurement
errors from Eq. 15) are independent random variables with mean 0 and a
ﬁnite covariance matrix.

Linearizing the system in the vicinity of xk−1, one obtains:

fk(xk−1) = Fk · xk−1

hk(xk) = Hk · xk

(21)

(22)

for the track model and the measurement equation.

We can now recall keywords used in the Kalman ﬁlter estimation technique:

• Prediction is the estimation of the state vector at a “future” time, that is
the estimation of the state vector at time or position (k + 1) using all the
measurements up to and including mk.

• Filtering is estimating the “present” state vector based upon all present
and “past” measurements. For Forward ﬁltering, this means estimating track
parameters at k using measurements up to and including mk. For Backward
ﬁltering, this means estimating track parameters at k using the measure-
ments mN down to mk.

7 One has to assume that the measurements are ordered with respect to time to
handle multiple scattering because the covariance matrix of measurement residuals
depends on this order. Without multiple scattering, the ordering does not aﬀect the
ﬁlter result as in the case of a traditional ﬁt.

10

• Filter. The algorithm which performs ﬁltering is called a ﬁlter and is built
incrementally: ﬁltering m1 to mk consists in ﬁltering m1 to mk−1, propa-
gating the track from mk−1 to mk and including mk. A ﬁlter can proceed
forward (k increases) or backward (k decreases).

• Smoothing means using all the measurements to provide a track param-
eter estimate at any position. The smoothed estimate can be obtained as
a weighted mean of two ﬁltered estimates: the ﬁrst one using m1 to mk
(forward), the other using mN to mk+1 (backward). 8

One can understand the basic idea of the Kalman ﬁlter in the following way.
If there is an estimate of the state vector at time (location) tk−1, it is extrap-
olated to time tk by means of the system equation. The estimate at time tk
is then computed as the weighted mean of the predicted state vector and of
the actual measurement at time tk, according to the measurement equation.
The information contained in this estimate can be passed back to all previous
estimates by means of a second ﬁlter running backwards or by the smoother.

The main formulas for our linear dynamic system are the following:

System equation:

xk = Fk · xk−1 + wk

E{wk} = 0,

cov{wk} = Qk

(1 ≤ k ≤ N)

Measurement equation:

mk = Hk · xk + εk

E{εk} = 0,

cov{εk} = Vk = G−1

k

(1 ≤ k ≤ N)

where the matrices Qk and Vk represent the process noise (multiple scatter-
ing, bremsstrahlung, etc.) and measurement noise (detector resolution) re-
spectively. The details of Qk calculation for the parameterization adopted in
NOMAD can be found in Ref. [10].

As an example we include here the formulas for making a prediction:

8 This leads to a subtlety in practice, when we actually have in hand the forward
and backward ﬁlter estimates at k; averaging these would lead to double-counting
the information from mk. Hence, to be proper, one must unﬁlter mk from one of the
estimates. This small correction is implemented in our smoother and in the quantity
χ2 (F B)
discussed below, but was deemed negligible and never implemented in the
k
other breakpoint quantities.

(23)

(24)

(25)

(26)

11

• Extrapolation of the state vector:

xk−1
k = Fkxk−1

• Extrapolation of the covariance matrix:

C k−1

k = FkCk−1F T
• Predicted residuals:
k = mk − Hkxk−1
rk−1

k

k + Qk

• Covariance matrix of the predicted residuals:
k H T
k

k = Vk + HkC k−1
Rk−1

Using the Kalman ﬁlter, the computer time consumed for a track ﬁt is propor-
tional to the number of hits on the track, while with the traditional technique
it is proportional to the cube of the same number in case of multiple scattering.

After the Kalman ﬁtting procedure one has the following available informa-
tion :

•

xB

k and

xF
k : the Forward and Backward estimates of the state vector at
position k, i.e., the estimate of the track parameters at location k using
b
measurements 1 up to k (forward) or N down to k (backward).
• χ2 (F )
k

: the minimum χ2 value of the forward and backward ﬁts

b

and χ2 (B)
k
up to measurement k.

• V (
•

xk,F ) and V (
trk and V (
b

xk,B) : the covariance matrices of

xF

k and

xB

k respectively.

xk) : the same quantities, determined from the smoothed

xk, χ2
b
estimates, the equivalent of a full ﬁt done at location k. Note that the χ2
trk
b
minimum does not depends on the location at which the parameter are
estimated (χ2

xk is independent of k).

b

b

b

trk for

b

Thus, much information exists as the by-product of a track ﬁt: at every hit
on the track away from the ends, we have the results of three ﬁts for the track
parameters at that hit: a ﬁt to the part of the track upstream, a ﬁt to the part
of the track downstream, and a ﬁt to the whole track. This information is the
input to breakpoint analyses.

5 Earlier Applications to Breakpoint Searches

xB
A natural way to compare
k is discussed by R. Fr¨uhwirth [3] and
was implemented in NOMAD tracking [9,11] before developing our extensions.
One simply constructs the χ2 of the mismatch of all the forward-backward
parameters at each hit k:

k and

xF

b

b

χ2 (F B)
k

= (

xB

k −

k )T [V (
xF

xk,B) + V (

xk,F )]−1 (

xB

k −

xF

k ).

(27)

b

b

b

b

b

b

12

The value of χ2 (F B)
k
holds for any k:

is easily computed from the following relationship which

trk = χ2 (F )
χ2

k

+ χ2 (B)
k

+ χ2 (F B)
k

.

(28)

After the track ﬁt, we ﬁnd the hit k for which χ2 (F B)
is a maximum, i.e.,
for which the forward-backward mismatch in track parameters has greatest
χ2 (F B). One can assign a breakpoint
signiﬁcance; we call this maximum value
χ2 (F B) is above some threshold. Fr¨uhwirth also investigated
at that k there if
, χ2 (B)
, and degrees of freedom in
various combinations of
k
χ2 (F B) was his best breakpoint test statistic
the track ﬁts, but concluded that
[3,12].

χ2 (F B) with χ2 (F )
e

e

e

k

k

e

6 Some Additional Breakpoint Variables Based on Constrained

Fits to the Speciﬁc Breakpoint Types

One may suspect that previously deﬁned breakpoint tests do not make optimal
use of the available information. Any χ2 quantity is by deﬁnition insensitive to
the arithmetic sign of diﬀerences, while in the processes of interest, a decrease
in the momentum is expected. Furthermore, χ2 (F B)
mixes all the parameter
mismatch information together. The signed forward-backward mismatch in
single quantities such as 1/R can be examined, but it has the problem that
the other 5 parameters are not constrained to be the same. (Physical changes in
1/R can result, for example, in ﬁtted mismatches in φ as well as 1/R.) Finally,
an optimal test should use a more fully developed breakpoint hypothesis, so
that a more meaningful comparison of χ2’s, with and without breakpoints,
can take place.

k

6.1 Constrained Fits to Breakpoints

Here we show how to obtain and examine the result that one would get by
doing a traditional ﬁt which uses all hits, but which allows a subset of the track
parameters to be discontinuous at a particular hit k. We parameterize the full
track with 1 to 3 added parameters in order to incorporate breakpoints of
Types I, II, and III at hit k. E.g., for Type I, we replace the parameter 1/R
by two parameters, a forward value 1/RF just before hit k and a back value
1/RB just after hit k. Thus, our ﬁts to the 3 breakpoint types have 7, 8, and 9
parameters, respectively. We denote these sets with breakpoints by α rather
than x, and they are, respectively for the three types:

13

αI = {x, y, 1/RF , 1/RB, tan λ, φ, t},
αII = {x, y, 1/R, tan λF , tan λB, φF , φB, t},
αIII = {x, y, 1/RF , 1/RB, tan λF , tan λB, φF , φB, t}.

(29)
(30)
(31)

For deﬁniteness, we discuss here the concept in terms of a Type I breakpoint.

One can imagine a cumbersome procedure whereby one puts a Type I break-
point at a particular hit k, and performs a traditional χ2 track ﬁt (with 7
parameters in our case) to all the hits of the track, minimizing the full Type
I track’s χ2, which we call

χ2

full,I,k(αI).

(32)

One would obtain the best estimate of αI, its covariance matrix, and the min-
imum value of χ2
full,I,k, all for a breakpoint at that particular hit k. One could
then repeat this for each possible value of k, obtaining numerous potential
track-with-breakpoint ﬁts.

xF

k and

Essentially the same set of results can be obtained far more economically by
xB
k at each k which already exist as by-
starting from the results
products of the Kalman ﬁlter ﬁt. These results carry all the information that
b
b
we need, since their error matrices contain the information (up to linear ap-
proximation) on how χ2 (F )
and χ2 (B)
change when the track parameters
k
xB
change. We need only perform a linear χ2 minimization in which {
k }
(now playing the role of the “measured data”) is compared to the Type I
breakpoint model prediction HIαI. HI is the model matrix with 12 rows and
7 columns containing only zeros and ones :

xF
k ,

b

b

k

HIαI = {(x, y, 1/RF , tan λ, φ, t), (x, y, 1/RB, tan λ, φ, t)}.

(33)

Or, introducing the two 6 × 7 submatrices H F

I and H B

I of HI :

HIαI = (H F

I αI, H B

I αI).

(34)

Since our 12 pieces of “measured data” {
k } are two independent sets of
6 parameters with their corresponding covariance matrices, the appropriate
chisquare can be written as :

b

b

xF
k ,

xB

χ2 (F B)
k

(α) = (

k − H F α)T [V (
xF
k − H Bα)T [V (
xB
b

xk,F )]−1 (
xk,B)]−1 (
b

k − H F α)
xF
k − H Bα).
xB
b

+ (

(35)

(Here and below, we suppress the subscript I since the equations are true for
all breakpoint types, with Eqns. 33 and 34 suitably changed.)

b

b

b

14

The full χ2 of Eq. 32 can be written as :

full,I,k(α) = (m − h (Hα))T
χ2

(m − h (Hα))

(36)

−1

V (m)
k

h

i

where V (m)
V (m,F )
k
the measurement (mk+1 . . . mN ).

k
of the measurements (m1 . . . mk) and the covariance matrix V (m,B)

is the block diagonal matrix containing the covariance matrix
of

k

As shown in Appendix A, χ2 (F B)
Eqn. 36 in a revealing way. At each hit k,

k

(α) of Eqn. 35 is related to χ2

full,I,k(α) of

full,I,k(α) = χ2 (F )
χ2

k

+ χ2 (B)
k

+ χ2 (F B)
k

(α),

(37)

subject to suﬃcient linearity in the ﬁts. Thus by ﬁnding the minimum of
χ2 (F B)
are
k
known.

(α), we ﬁnd the minimum of χ2

full,I,k(α), since χ2 (F )

and χ2 (B)
k

k

The minimum of χ2 (F B)
relating α to {

(α) is obtained without iteration since the model
k
xB
k } is linear. The set of estimated parameters is given by :

xF
k ,

b

b

αk = V (

αk)H T (V (

k

x)

)−1 X

b

b

b
is the block diagonal matrix containing V (

xk,B); and where the covariance matrix for the new estimate, V (

where X = {
V (
by :
b

xF
k ,

k }; V (
xB

k

x)

b

b

b

(38)

xk,F ) and
αk), is given

b

b

(39)

V (

αk) =

x)

)−1 H

H T (V (
k
(cid:20)

b

−1

.

(cid:21)

The value of χ2 (F B)

k

at its minimum is

χ2 (F B)
k

(

α) = −

x)

)−1 X

·

α.

T

(cid:19)

H T (V (
k
(cid:18)

b

b

(40)

Since the elements of H are mostly 0, and the rest equal to 1, the multiplica-
tions by H and H T were done by hand before coding the software; elements
of (V (
k

)−1 have only one or two simple terms.

x)

b

The computer time to perform the Type I, II, and III breakpoint ﬁts at all hits
k (away from the track ends) was a negligible addition (few per cent) to the
NOMAD track ﬁnding and ﬁtting software. This added time was more than
paid back by the speedup in matrix inversion which was obtained by explicitly
unrolling the loops in the DSINV routine from CERNLIB [13].

b

b

15

6.2 Breakpoint Variables Based on the Constrained Fits

From the wealth of information thus available at each hit, we discuss two
of the most useful categories: 1) signed diﬀerences, in sigma, of breakpoint
parameters, and 2) χ2 comparisons based on the Fisher F -test.

As an example, for Type III breakpoint ﬁts, we let DIII,k(1/R) be the forward-
backward diﬀerence in 1/R, divided by its standard deviation (sigma, com-
puted from the covariance matrix taking account of errors in both quantities
and their correlations). This signed quantity eﬀectively gives the signiﬁcance,
in sigma, of the jump in momentum at that hit. Similar quantities, with analo-
gous notation, are calculated for all components of α, for all breakpoint Types.
Thus, for bremsstrahlung studies, DI,k(1/R) gives the momentum change un-
der the constraint that all other track parameters are continuous at hit k.

The Fisher F statistic [14] is appropriate for testing if adding parameters yields
a statistically signiﬁcant reduction in the χ2 of a ﬁt. It is simply the ratio of
the respective χ2/dof for the two versions of the ﬁts. Thus we naturally apply
it to our track ﬁts with and without breakpoint parameters. For example, for
NOMAD’s Type I ﬁts, we have at each hit,

FI,k = (χ2

full,I,k/(N − 7))

(χ2

trk/(N − 6));

(41)

.

we similarly deﬁne FII,k and FIII,k.

For a true breakpoint at a given hit k, each F statistic in principle obeys the
standard signiﬁcance-table distributions [14]. However, we normally search
through all hits in a track for the lowest value of F , denoted
F . This lowest
value does not of course follow the usual signiﬁcance-table values. Hence, as a
practical matter, we use data or Monte Carlo events to measure the distribu-
tion of

F and the eﬀect of tests based on it.

e

e

7 Eﬀectiveness of the additional breakpoint variables

The eﬀectiveness of any breakpoint search is of course highly dependent on
details of hardware (e.g., number and quality of the position measurements)
and software (e.g., how many tracks with breakpoints are reconstructed as a
single track). We present for illustration some experience with the NOMAD
detector, using both simulated and real data events.

16

s
t
i
n
u
 
y
r
a
r
t
i
b
r
A

-1

10

-2

10

-3

10

-4

10

s
t
i
n
u
 
y
r
a
r
t
i
b
r
A

0.08

0.07

0.06

0.05

0.04

0.03

0.02

0.01

0

10

20

30

40

50

60

70

80

90
Breakpoint χ2 (FB)

100

k

0

-10

-8

-6

-4

-2

0

2

4

6

8

10
DI,k(1/R)

Fig. 2. Test of breakpoint search criteria using real data (muons producing
δ-electrons in the NOMAD setup). Comparison of breakpoint chisquare (χ2 (F B)
)
and normalized diﬀerence between curvatures in backward and forward directions
((1/RB − 1/RF )/(σ1/R)) for muons (solid line) and electrons (dashed line). In both
electron distributions, the excess on the right is evidence of potential breakpoints.

k

7.1 Electron identiﬁcation and reconstruction

Algorithms developed for electron identiﬁcation and reconstruction have been
checked under running conditions using δ-electrons produced by straight-
through muons (5 GeV < pµ < 50 GeV) crossing the NOMAD detector during
slow-extracted beam between neutrino spills. This sample of selected electrons
from real data can be used to check the subdetector responses compared to
simulations and to tune breakpoint search criteria taking into account the
eﬀect of the drift chambers alignment quality (see Fig. 2).

A special approach to deal with electrons emitting bremsstrahlung photons
(Type I breakpoints) in the NOMAD detector has been developed [10]. If one
has identiﬁed a reconstructed track in drift chambers as being an electron 9 ,

9 Transition Radiation Detector (TRD) is used for electron identiﬁcation in the

17

Fig. 3. A reconstructed event from real data (the projection onto the yz plane, in
which tracks bend) before an attempt to apply the breakpoint search algorithm.
The track at the bottom was identiﬁed as an electron by TRD. The triangles are
track extrapolations used to search for more hits and to match information from
diﬀerent subdetectors.

Fig. 4. The same event as before after applying a recursive breakpoint search al-
gorithm. Two breakpoints are found along the electron trajectory and they are
associated with two photons (dashed lines): one built out of a conversion inside the
drift chambers ﬁducial volume and the other from a stand-alone cluster in electro-
magnetic calorimeter. The bars on the right are proportional to energy deposition
in the electromagnetic calorimeter.

then hard bremsstrahlung photons can be looked for and neutral tracks can
be created requiring further matching with preshower and electromagnetic
calorimeter. A successful application of this approach to an event from real
data is shown in Fig. 3 and Fig. 4. A recursive breakpoint search algorithm has
been applied to a track identiﬁed as an electron. As a result two breakpoints

NOMAD experiment.

18

have been found, each associated with an observed hard bremsstrahlung pho-
ton (one of which converts to a reconstructed e+e− pair). When applying the
breakpoint search algorithm to an electron track one must keep in mind a
potential problem related to a possible presence of several kinks along the tra-
jectory (since it can bias the calculation of variables used for the breakpoint
search). Details are in Ref. [10].

7.2 Studies using simulated pion decays

As another example of using the breakpoint variables described in Sec. 6.2,
we compare several tests for detecting the Type III breakpoint (discontinuity
of 1/R, tan λ, and φ) of the decay π → µν, and for locating the position of
the decay.

The results shown here are for Monte Carlo (MC) simulation [7] of muon neu-
trino interactions in the NOMAD detector. From the collaboration’s standard
MC samples, we selected two samples of reconstructed tracks:

• 25000 pions which did not decay and which were reconstructed.
• 2000 pions which did decay via π → µν, and for which a single track was

reconstructed consisting of hits left by both the pion and the muon.

Neither of these two samples contains the pion decays which were broken
into separate tracks by the track-ﬁnding algorithm, with a vertex assigned at
the decay point. The selected tracks were chosen to have more than 20 hits
(N > 20) and no backward looping, and with the MC pion decays within
these hits. Track-ﬁnding mistakes (for example use of hits from other tracks
in the event) were included, but to obtain the pion track, we required that at
least 90% of the hits be correctly assigned.

Figure 5 contains histograms of momentum×charge for the two samples. In
order to have samples with similar momenta, we consider here only tracks
with momentum less than 6 GeV.

Figure 6 shows, for one of the decaying negative pion tracks, the values of
χ2 (F B)
, FIII,k, DIII,k(1/R) and DIII,k(φ) at every hit where they are computed.
k
They are plotted at the z-positions of the hits, which in the NOMAD detector
are every few cm. The decay point in the MC is indicated by the line at 360
cm. The dotted lines are at the z-positions of the extreme values (maximum
or minimum, as relevant for a breakpoint) of the respective variables. Near the
MC decay point, both χ2 (F B)
and FIII,k reach their extreme values, indicating
respectively: a large forward-backward mismatch in the Kalman ﬁts, and a
marked improvement in the track χ2 by adding a three-parameter breakpoint.
The sign of the change in 1/R corresponds to a decrease in momentum, as

k

19

Pion tracks

Pion decays

s
e
i
r
t
n
E

3000

2500

2000

1500

1000

500

1000

s
e
i
r
t
n
E

800

600

400

200

0

-20

0

-10
20
Momentum × q, GeV

10

0

-20

0

-10
20
Momentum × q, GeV

10

Fig. 5. Histogram of momentum×charge for simulated pions without decay (left)
and with decay (right).

expected in a decay. DIII,k(φ) also shows an extremum near the breakpoint;
however, we have generally not used it as the primary breakpoint indicator.

7.3 Tests for Existence of a Breakpoint

For testing the existence of a breakpoint, we compare the following test statis-
tics:

• χ2/dof for the breakpointless ﬁt. (This test gives no additional information

•

•

•

on the location of the breakpoint.)
χ2 (F B). The breakpoint is located at the maximum value of the forward-
backward mismatch chisquare (χ2 (F B)
) for breakpointless ﬁt among hits in
e
the track;
F . The breakpoint is located at the minimum value Fisher F among hits in
the track (applicable separately to the diﬀerent breakpoint types if desired).
e
FIII combined with the forward-backward mismatch in radius of the curva-
FIII gives the breakpoint location and
ture DIII,k(1/R) or angle DIII,k(φ).
e
DIII,k(1/R), DIII,k(φ) are computed at that location.

k

trk/dof,

full,I/dof,

Fig. 7 contains histograms of χ2
full,III/dof
for decaying and non-decaying pions, with the means shown. The χ2/dof is
in general reduced by adding breakpoint parameters. A measure of the signif-
icance of the improvement is the Fisher F (Eq. 41), which is shown in Fig. 8
χ2 (F B), the maximum
for the same ﬁts. Also shown in Fig. 8 is a histogram of
forward-backward mismatch from the breakpointless ﬁt.
e

full,II/dof, and

χ2

χ2

e

e

e

e
χ2

20

)

B
F

(
 
2
χ∼

)

R
/
1
(

k
,
I
I
I

D

100

90

80

70

60

50

40

30

20

10

0

0

-2

-4

-6

-8

e

200

250

300

200

250

300

350
400
Zhit , cm

350
400
Zhit , cm

-10

200

250

300

350
400
Zhit , cm

200

250

300

350
400
Zhit , cm

χ2 (F B), FIII,k, DIII,k(1/R) and DIII,k(φ) as a function of the z of the DC

Fig. 6.
hit. The MC decay point is shown in solid line.

e

From the histograms in Fig. 8, one can calculate the eﬃciency of labeling tracks
as pion decays using “cuts” on these variables. For tabulating a comparison,
F such that 10% of non-decaying pions are falsely
we choose a cut value for
called pion decays. We then ﬁnd the eﬃciency for identifying real pion decays,
i.e., the percentage of pion decay tracks which are called pion decays when
using the same cut value. This cut value in principle depends on the dof, but
for illustration we use the same cut value for all track lengths. The results
are given in the ﬁrst ﬁve columns of Table 1. We include for comparison the
result for testing for pion decay simply by using χ2
trk/dof, i.e., the test one
would naturally use if one had only a traditional non-Kalman track ﬁt. As
χ2 (F B)-test
observed by Fr¨uhwirth [3], this test is quite competitive with the
for detecting the existence of a breakpoint, even though it gives no information
FIII. We ﬁnd this
about the location. The highest eﬃciency is obtained using
to be true for various other comparisons, although one is cautioned that the

e

e

1

k
,
I
I
I

F

0.9

0.8

0.7

0.6

0.5

0.4

0.3

10

7.5

2.5

5

0

-2.5

-5

-7.5

-10

)
φ
(

k
,
I
I
I

D

21

Meandecays     1.28
Meanno decays 1.00

s
e
i
r
t
n
E

Meandecays     1.03
Meanno decays 0.93

0

1

0

1

2

3
∼ 2
χ
trk /dof

3
2
∼ 2
χ
full,I /dof

Meandecays     1.07
Meanno decays 0.91

s
e
i
r
t
n
E

Meandecays     0.99
Meanno decays 0.90

s
e
i
r
t
n
E

s
e
i
r
t
n
E

400

350

300

250

200

150

100

50

0

400

350

300

250

200

150

100

50

0

0

1

0

1

2
3
∼ 2
χ
full,II /dof

2
3
∼ 2
χ
full,III /dof

Fig. 7. Histograms of χ2
χ2
full,III/dof for the sample
of pion decays (shaded) and pions with no decay (white). The samples are normal-
ized to the same number of events.
e

full,II/dof, and

full,I/dof,

trk/dof,

χ2

χ2

e

e

particular eﬃciencies listed are for the sample of decaying pions which were
not detected by the standard track ﬁnding/ﬁtting, and are hence expected to
be highly experiment-dependent.

Next we add the signed information available in the new ﬁts: the diﬀerence
in radius of curvature DIII,k(1/R), and/or the angular diﬀerences DIII,k(φ)
and DIII,k(tan λ). We recommend that DIII,k(1/R) not be used to locate the
breakpoint, but rather we evaluate this diﬀerence at the location dictated
FIII vs DIII,k(1/R) for decays and
by
non-decays. Because true decays have a decrease in momentum, a judicious
FIII. An even
cut on this scatter plot is more eﬀective than a cut solely on
more powerful technique is to construct likelihood functions based on these 2D
densities, and use the constructed likelihood ratio as a test of pion decay. The

FIII. Fig. 9 contains scatter plots of

e

e

e

400

350

300

250

200

150

100

50

0

400

350

300

250

200

150

100

50

0

22

-decays
-no decays

1000

s
e
i
r
t
n
E

0

0

20

40

60

0

0

0.5

1

80
100
∼ 2 (FB)
χ

1.5

∼
F
I

s
e
i
r
t
n
E

s
e
i
r
t
n
E

500

400

300

200

100

800

700

600

500

400

300

200

100

0

0

0.5

1

0

0

0.5

1

1.5

∼
F

II

1.5

∼
F

III

Fig. 8. Histograms of the
pions with no decay (white).
e

e

e

e

χ2 (F B) and

FI,

FII,

FIII for pion decays (shaded) and

Table 1
Eﬃciency of the detection of pion decays, using the various test statistics. The ﬁrst
ﬁve columns are for simple cuts on the respective variables. The last column is for
a cut on a 2D likelihood-ratio test for
FIII vs DIII,k(1/R) described in the text. The
cut value for each test is chosen so that 10% of non-decaying pions are wrongly
called decays. The eﬃciency is computed with respect to the sample which contains
only tracks which were not detected as decaying by the original track-ﬁnding/ﬁtting
algorithms.

e

χ2

trk/dof

χ2 (F B)

FI

FII

FIII

FIII vs DIII,k(1/R)

45%

41%

e

38% 40% 49%
e

e

e

e

56%

800

600

400

200

700

600

500

400

300

200

100

s
e
i
r
t
n
E

23

I
I
I

F∼

decays

I
I
I

F∼

no decays

0

-10

-5

0

0

-10

-5

0

5
10
DIII,k (1/R)

5
10
DIII,k (1/R)

I
I
I

F∼

decays

I
I
I

F∼

no decays

1.4

1.2

1

0.8

0.6

0.4

0.2

1.4

1.2

1

0.8

0.6

0.4

0.2

0

-10

-5

0

0

-10

-5

0

5

10

DIII,k (φ)

5

10

DIII,k (φ)

FIII vs DIII,k(1/R) and

Fig. 9.
FIII vs DIII,k(φ) histograms for the pion decays and
pion with no decays simulated tracks. In order to superimpose negative and positive
tracks on the same plots, we have changed the sign of DIII,k(1/R) for one charge.
(Recall that 1/R is a signed quantity reﬂecting the charge of the track.)

e

e

result of such a procedure (applied with simple smoothing of the 2D densities,
and tested on an independent sample) is given in the last column of Table 1.
The improvement over previous breakpoint tests [3] is most signiﬁcant. Nearly
FIII vs DIII,k(φ) (also
as good eﬃciencies are obtained from scatter plots of
shown in Fig. 9), and from

FIII vs DIII,k(tan λ).

e

7.4 Finding the Location of the Breakpoint

e

One may also ask which of the variables gives the best determination of the
location of the breakpoint. We studied in particular the diﬀerence between the

1.4

1.2

1

0.8

0.6

0.4

0.2

1.4

1.2

1

0.8

0.6

0.4

0.2

24

s
e
i
r
t
n
E

450

400

350

300

250

200

150

100

50

0

-200

0

∼ 2 (FB)) - Z(MC), cm

Z(χ

200

-200

0

200

∼
Z(F

III) - Z(MC), cm

χ2 (F B) and

Fig. 10.
FIII resolutions for MC pion decay sample in z. The white
histograms are for the initial sample; the shaded histograms are for events in which
detected breakpoints passed the selection criteria.

e

e

MC decay point and the z position of the hit corresponding to the extrema
χ2 (F B) or
FIII. These are histogrammed in Fig. 10 for pions which decay. The
white histograms show the resolution for the initial samples, with no selection
e
e
FIII vs DIII,k(1/R)). The shaded histograms show the
made using
(more relevant) resolutions for tracks remaining after decay selection using the
respective variables. There was not a signiﬁcant diﬀerence, within the limited
scope of this study.

χ2 (F B) or (

e

e

8 Conclusions

Replacement of mismatch chisquare for all the forward-backward parameters
by the breakpoint variables introduced in Sec. 6.2 can give added power to
breakpoint detection in the framework of Kalman ﬁltering technique. We show
in particular above that this is the case in a realistic simulation of pion decays
in the NOMAD detector. In addition, these breakpoint variables have been
successfully used to reconstruct electron hard bremsstrahlung in real data. As
expected on theoretical grounds, our most powerful breakpoint detection is
based on a scatter plot of a Fisher F -test vs. an appropriate signed diﬀerence
of a track parameter across the breakpoint.

s
e
i
r
t
n
E

350

300

250

200

150

100

50

0

25

Acknowledgements

This work was performed within the NOMAD collaboration and hence bene-
ﬁted from numerous aspects of NOMAD’s simulation and event reconstruction
codes. The authors are grateful to Emmanuel Gangler, Kyan Schahmaneche,
and Jean Gosset for their contributions to the NOMAD Kalman ﬁlter. We
gratefully acknowledge some early investigations by Mai Vo [11] on track
breakpoints in NOMAD.

References

[1] P. Billoir, Nucl. Instr. Meth. 225, 352 (1984);

[2] P. Billoir, R. Fr¨uhwirth and M. Regler, Nucl. Instr. Meth. A241 (1985) 115-131.

[3] F. Fr¨uhwirth, “Application of Filter Methods to the Reconstruction of Tracks
and Vertices in Events of Experimental High Energy Physics”, HEPHY-PUB
516/88 (Vienna, Dec. 1988)

[4] P. Billoir and S. Qian, Nucl. Instr. Meth. A294 (1990) 219-228; P. Billoir and

S. Qian, Nucl. Instrum. Methods A295 (1990) 492-500.

[5] D. Stampfer, M. Regler and R. Fr¨uhwirth, “Track ﬁtting with energy loss,”

Comput. Phys. Commun. 79 (1994) 157-164.

[6] M. Regler, R. Fr¨uhwirth and W. Mitaroﬀ, “Filter methods in track and vertex

reconstruction,” J. Phys. G G22, 521 (1996).

[7] NOMAD Collaboration, J. Altegoer et al., Nucl. Instr. and Meth. A 404 (1998)
96; NOMAD Collaboration, J. Altegoer, et al., Phys. Lett. B 431 (1998) 219;
NOMAD Collaboration, P. Astier, et al., Phys. Lett. B 453 (1999) 169.

[8] GEANT : Detector Description and Simulation Tool, CERN Programming

Library Long Writeup W5013, GEANT version 3.21

[9] P. Astier, A. Letessier-Selvon, B. Popov, M. Serrano, “NOMAD Reconstruction
Software: Drift Chamber Package”, version 5 release 2, unpublished (1994), and
later releases with additional authors.

[10] Boris Popov, Ph.D. thesis, U. Paris VII, (unpublished, 1998).

http://www-lpnhep.in2p3.fr/Thesards/lestheses.html
http://nuweb.jinr.ru/∼popov

[11] Mai Vo, NOMAD collaboration communication (unpublished, 1995) and Ph.D.

thesis, Saclay, (unpublished, 1996).

[12] Fr¨uhwirth refers to
(Ck/n1)/((χ2 (F )

k

χ2 (F B) as Ck. He deﬁnes a related quantity, Fk =
χ2 (F B) and n2 is

)/n2), where n1 is the d.o.f. for

+ χ2 (B)
k
e

26

e

the sum of the d.o.f. for χ2 (F )
. Fr¨uhwirth concludes that the Fk-test
is less powerful than the Ck-test, and that the χ2 is almost as good an indicator
of the existence of a kink as the Ck-test.

and χ2 (B)
k

k

[13] CERN Program Library routine number F012. A modiﬁed version of the routine

was used to write the source code of the unrolled loops.

[14] P.R. Bevington and D.K. Robinson, Data Reduction and Error Analysis for the
Physical Sciences, (New York: McGraw-Hill, 1992), pp. 205-209, 261-267.

A Derivation of Eq. 37: χ2

full,I,k = χ2 (F )

k

+ χ2 (B)
k

+ χ2 (F B)
k

k

In Eqn. 36, V (m)
V (m,F )
k
matrix V (m,B)
right-hand side of Eqn. 36 can thus be split into two terms:

is the block diagonal matrix containing the covariance matrix
of the ﬁrst k measurements mF = (m1 . . . mk) and the covariance
of the last N − k measurements mB = (mk+1 . . . mN ). The

k

χ2

full,I,k(α) =

T

T

mF − h(H F α)
h

i
mB − h(H Bα)
h

i

+

[V (m,F )]

−1

[V (m,B)]−1

mF − h(H F α)
h

i
mB − h(H Bα)

h

(A.1)

,

i

where one recognizes, in analogy with Eqn. 17, the forward and backward χ2
k , and
terms. We can expand each around their respective minima
recall that covariance matrices are the inverse of curvature matrices, giving :

k and

xB

xF

b

b

full,I,k(α) = χ2 (F )
χ2
k
+χ2 (B)
k

+ (∆xF )T [V (
+ (∆xB)T [V (

xk,F )]−1 ∆xF
xk,B)]−1 ∆xB,
b

where ∆xF =
Combining this with Eqn. 35 yields Eq. 37.

k − H F α and ∆xB =
xF

b
k − H Bα.
xB

b

b

(A.2)

27

