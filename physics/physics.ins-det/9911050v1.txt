9
9
9
1
 
v
o
N
 
3
2
 
 
]
t
e
d
-
s
n
i
.
s
c
i
s
y
h
p
[
 
 
1
v
0
5
0
1
1
9
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

A fast programmable trigger for isolated
cluster counting in the BELLE experiment

H.J.Kim, 1 S.K.Kim, S.H.Lee, T.W.Hur, 2 C.H.Kim, F.Wang, 3
I.C.Park, 4

Department of Physics, Seoul National University, Seoul 151-742, Korea

Department of Physics, Yonsei University, Seoul 120-749, Korea

Hee-Jong Kim,

B.G.Cheon,

E. Won. 5,6

KEK, Tsukuba, Ibaraki 305-0801, Japan

Research Institute for Basic Sciences, Seoul National University, Seoul 151-742,
Korea

Abstract

We have developed a fast programmable trigger processor board based on a ﬁeld
programmable gate array and a complex programmable logic device for use in the
BELLE experiment. The trigger board accommodates 144 ECL input signals, 2
NIM input signals, 24 ECL output signals, and the VME bus speciﬁcation. An
asynchronous trigger logic for counting isolated clusters is used. We have obtained
trigger latency of 50 ns with a full access to input and output signals via a VME in-
terface. The trigger logic can be modiﬁed at any time depending on the experimental
conditions.

Key words: Trigger; FPGA; CPLD; VME
PACS: 07.05.Hd, 07.50.Qx, 07.50.Ek

Preprint submitted to Elsevier Preprint

17 December 2013

1 Introduction

Fast, complex, general-purpose trigger systems are required for modern parti-
cle physics experiments. Although custom-made CMOS gate arrays are used
for extremely fast applications such as ﬁrst-level triggers (∼ 25 ns) for LHC
experiments[1], ﬁeld programmable gate arrays (FPGAs) are an attractive op-
tion for environments that require a less demanding speed (< 100 ns) but a
more ﬂexible trigger logic implementation. The logic of FPGA-based trigger
systems can be readily changed as the nature of signal and background con-
ditions vary. Such trigger systems are ﬂexible and can be adapted to many
diﬀerent applications. Commercial products that have these functionalities ex-
ist (for example, the Lecroy 2366 Universal Logic Module, Lecroy Co.) and
can be used for implementing rather simple trigger logic. In the case of the
calorimeter trigger for the BELLE experiment, the number of channels, data
transfer rates, and the complexity of the trigger logic preclude the use of
commericially available devices. We developed a 9U VME[2] module that ac-
commodates more than a hundred ECL signals for the triggering purpose.
The resulting board is a general purpose asynchronous programmable trigger
board that satisﬁes VME speciﬁcations.

2 Trigger requirements for the BELLE Experiment

The BELLE experiment[3] at KEK in Japan, is designed to exloit the physics
potential of KEKB, a high luminosity, asymmetric e+e− collider operating at
a cm energy (10.55 GeV) corresponding to the Υ(4S) resonance. In partic-
ular, BELLE is designed to test the Kobayashi-Maskawa mechanism for CP
violation in B meson sector. The KEKB design luminosity is 1 × 1034cm−2s−1
with a bunch crossing rate of 2 ns. The BELLE detector consists of seven sub-
systems; a silicon vertex detector (SVD), a central drift chamber (CDC), an
aerogel Cherenkov counter (ACC), an array of trigger and time of ﬂight scintil-
lation counters (TOF/TSC), an electro-magnetic calorimeter (ECL), KL and

1 Also aﬃliated with Department of Physics and Astronomy, Louisiana State Uni-
versity, Baton Rouge, LA 70803, USA
2 Permanent Address : SsangYong Information & Communications Corp., 24-1 Jeo-
dong 2-ga, Jung-gu, Seoul 100-748, Korea
3 Permanent Address : Institute of High Energy Physics Academia Sinica, China
4 Permanent Address : LG Semicon Co.,Ltd. 1, Hyangjeong-dong, Hungduk-gu,
Cheongju-si 361-480, Korea
5 Corresponding author; E-mail: eiwon@bmail.kek.jp; Tel: +81 298 64 5351; FAX:
+81 298 64 2580
6 Also aﬃliated with KEK, Tsukuba, Ibaraki 305-0801, Japan

2

muon detectors (KLM) and extreme forward calorimeters (EFC). A 1.5 Tesla
axial magnetic ﬁeld is produced by a superconducting solenoid located outside
of the ECL. The KLM is outside of the solenoid and provides a return yoke for
the detector’s magnetic ﬁeld. The BELLE trigger system requires logic with
a level of sophistication that can distinguish and select desired events from
a large number of background processes that may change depending on the
conditions of the KEKB storage ring system. Figure 1 shows a schematic view
of the BELLE trigger system. As shown in Fig. 1, the trigger information from
individual detector components is formed in parallel and combined in one ﬁ-
nal stage. This scheme facilitates the formation of redundant triggers that rely
either only on information from the calorimeter or from the tracking systems.
The ﬁnal event trigger time is determined by requiring a coincidence between
the beam-crossing RF signal and the output of the ﬁnal trigger decision logic.
The timing and width of the subsystem trigger signals are adjusted so that
their outputs always cover the beam-crossing at a well deﬁned ﬁxed delay of
2.2 µs from the actual event crossing.

The ECL is a highly segmented array of ∼ 9000 CsI(Tl) crystals with silicon
photodiode readout installed inside the coil of the solenoid magnet. Pream-
pliﬁer outputs from each crystal are added in summing modules located just
outside of the BELLE detector and then split into two streams with two dif-
ferent shaping times (1 µs and 200 ns): the slower one for the total energy
measurement and the faster one for the trigger. For the trigger, signals from
a group of crystals are summed to form a trigger cell (TC), discriminated,
digitized (as diﬀerential ECL logic signals), and fed into ﬁve Cluster Counting
Modules (CCMs) that count the number of isolated clusters in the calorime-
ter. In total, the ECL has 512 trigger cells: 432 in the barrel region and 80 in
the endcaps. The trigger latency of the CCM trigger board is ∼ 150 ns. Each
module accepts 132 inputs and outputs 16 logic signals. (The actual board can
accommodate a maximum of 144 inputs and provide as many as 24 output
signals; for BELLE we have chosen to use 132 input and 16 output lines per
board).

Given the complexity discussed above and the required ﬂexibility, we chose to
use a complex FPGA to apply the isolated clustering algorithm and a CPLD
device in order to match the VME bus speciﬁcations. For the FPGA, we use
an XC5215-PG299 chip that has 484 conﬁgurable logical blocks (CLBs), and
for the CPLD, an XC95216-5PQ160, which provides 4,800 usable gates. Once
the CPLD is loaded, it permanently holds all of the VME bus speciﬁcation
logic. In contrast, the trigger logic contained in the FPGA is lost during a
power down, and must be reconﬁgured during start-up, either from an on-
board PROM or from a computer (VME master module) through VME bus.
This takes a few milliseconds. In the following we describe in some detail the
trigger logic design of the CCM board and how we achieve our performance
requirements.

3

3 Logic Design

We used XACTTM software provided by Xilinx[4] to design, debug and simu-
late our logic. The trigger processor board accepts the diﬀerential ECL logic
signals from the calorimeter trigger cells. There are many possible strategies
for ﬁnding and counting the number of isolated clusters (ICN) among the
calorimeter trigger cells. But, since the trigger decision has to be made within
a limited time period, a simple algorithm is desirable. We devised simple logic
that counts only one cluster from a group of connected clusters. For the case
of a number of connected clusters, we count only the upper most cluster in the
right most column among them. This is demonstrated for a 3 × 3 trigger cell
array in Fig. 2. Here, the trigger cell under the counting operation is num-
bered as “0”. If the cell “0” satisﬁes the logic diagram shown in Fig. 2, it is
considered to be a single isolated cluster. We have applied this simple logic
to the output of GEANT-based[5] full Monte Carlo simulation of various B
decay modes as well as Bhabha scattering events and compared the perfect
cluster number and the cluster number returned by the above logic. The re-
sults are summarized in Table 6. In all the cases, the discrepancies between
the perfect cluster counting and the isolated cluster counting logic are below
the 1 % level; despite its simplicity, the counting logic works exceptionally
well. This simple clustering logic is applied to over 132 input signals and the
number of isolated clusters are then tallied. In addition to the cluster counting
logic, we also delay the 132 input and 16 output signals and register them in
a set of FIFO RAMs (the pattern register) located on the board. The signals
are delayed (in order for them to be correctly phased) by approximately 800
ns by means of an 8 MHz delay pulse and stored in FIFO RAMs at the trigger
decision. The delay time can be easily changed by modifying the logic. The
pattern register allows a continuous monitoring of the operation of the CCM
module. The recorded cluster and ICN bits are read out through the VME bus
independently of the ICN counting system. The FPGA counts the number of
clusters asynchronously and the simulated timing diagram in Fig. 3 indicates
that the time needed for the ICN counting is 47 ns.

In order to satisfy the complete VME bus speciﬁcation, a set of logical blocks
(Address Decoder, Interrupter, Control Logic, Conﬁguration Control Logic,
CSR, and FIFO RAM Control) are developed and downloaded into the CPLD.
The logical blocks are designed as a VME A24/D32 slave interface. Compara-
tors are used to decode addresses being probed by the master module. Status
bits are implemented in order to check the status of the conﬁguration comple-
tion of FPGA chip and triggering process itself. Control bits are implemented
to stop the output of the triggering signal, to start the output of the triggering
signal, to enable the reconﬁguration of the FPGA chip via a PROM or the
VME bus, and to control the FIFO RAM that serves as the pattern register.
All the functionalities were tested extensively during the development phase

4

and completely debugged before they were implemented in the experiment.

4 Hardware Implementation

The CCM module houses the main FPGA chip for the ICN counting, the
CPLD chip for implementing the VME bus speciﬁcations, ECL-TTL and
NIM-TTL converters, the PROM holding the FPGA conﬁguration, and the
FIFO RAM pattern register. A schematic diagram and an assembled board
are shown in Figs. 4 and 5, respectively. The printed circuit board is a VME
9U size four-layer board. All connectors, switches, components, and download-
ing circuitry are mounted on one side of the board. The logic signals to and
from the FPGA are TTL CMOS, and are interfaced with the diﬀerential ECL
logic signals to the rest of the trigger and data acquisition system. Standard
10124 (10125) chips with 390 Ω pull down resisters (56 × 2 Ω termination
resisters) are used to convert TTL to ECL (ECL to TTL). The input polarity
is such that a positive ECL edge produces a negative TTL edge at the FPGA
input. Also on-board are several discrete-component, NIM-TTL converters
that interface with two external NIM control signals: the master trigger signal
(MTG) and the external clock. Three 7202 CMOS asynchronous FIFO chips
( 3 × 1024 Bytes ) provide the pattern register. The actual registration for
one event includes 132 inputs, 16 outputs, 8 reserved bits, 10 memory address
bits, and 2 unsed bits; a total of 146 bits are registered in the three FIFO
chips.

Programs for the FPGA chip can be downloaded from an on-board PROM
(Master Serial Mode) or via the VME bus (Peripheral Asynchronous Mode).
We use an XC17256D Serial Conﬁguration PROM and the clustering logic
is downloaded by a PROM writer that is controlled by a personal computer.
The choice of the VME master module is the FORCE[6] SUN5V, a 6U VME
bus CPU board that has a 110 MHz microSPARC-II processor running Solaris
2.5.1. Accessing the CCM from the VME master module is simply done by
mapping the device (in our case, the CCM) into the memory of the master
module. From there, the clustering logic can also be loaded into the FPGA
chip. All of the control software was developed in this master module with
GNU[7] gcc and g++ compilers. An object-oriented graphical user interface
based on the ROOT[8] framework was also developed. Resetting the module,
downloading the logic to FPGA from the PROM or the VME bus, and the
FIFO reading are all implemented in the graphical user interface. Programs
for the CPLD chip are downloaded through an on-board connector from the
parallel port of a personal computer and it enables the downloading of the
CPLD program whenever necessary.

The base address of the board is set by a 8-pin dip switch on board. A hardware

5

reset switch that resets the FPGA, the CPLD, and the FIFO RAMs is provided
on the front panel. There are four LEDs indicating power on/oﬀ, MTG in, and
two conﬁguration of FPGA completion (LDC and SX1). Two fuses (250V 2A)
and four capacitors (100 µF) are on ± 5 V lines for the protection purpose.

The trigger board has been fully tested and the results have been compared
with software simulations. Test results are shown in Fig. 6, where a cluster-
counting time of approximately 50 ns is found, which is in good agreement
with the 47 ns time predicted by the simulation.

5 Performance with e+e− collisions

The BELLE detector started taking e+e− collision data with all subsystems,
the data acquisition systems, and accompanying trigger modules operational
in early June of 1999. Six CCM modules installed in the electronics hut counted
isolated clusters from the e+e− collision in the calorimeter. Five CCM modules
were used to count isolated clusters from the ﬁve sections of the calorimeter;
the sixth module collected and summed the outputs from the other ﬁve. The
ﬂexibility inherent in the design of the board allowed the use some of the input
and ouput channels of the sixth module to generate triggers for Bhabha events
as well as calorimeter timing signals.

In a ∼ 100K event sample of actual triggers, we found a nearly perfect cor-
respondence between the numbers of isolated clusters provided by the trigger
logic and those inferred from TDC hit patterns that are available at the oﬄine
analysis stage. Figure 7(a) shows the correlation between the number of iso-
lated clusters from TDC hit patterns and ICN numbers from CCM modules.
As is shown here, there are few cases that ICN numbers from CCM modules
are smaller than numbers from TDC hit patterns. Figure. 7 (b) shows the
mismatch rate between the TDC-based and-CCM based cluster numbers as
a function of the TDC-based cluster numbers. For more than 99.8 % of the
cases, the two numbers are identical. We attribute the small level of inconsis-
tency to the limitations of the clustering counting logic (see section 3) and the
infrequent occurence of timing oﬀset on the input signals.

6 Conclusions

We have developed a fast trigger processor board utilizing FPGA and CPLD
technology. It accommodates 144 ECL input signals and provides 24 ECL
output signals. It functions as a 9U VME module that enables the loading
of revised trigger logic and the online resetting of the module. In addition,

6

a pattern register on the board contains all of the input/output ECL signals
that were used in a process. The isolated clustering logic is measured to have
a time latency of 50 ns, in good agreement with the prediction of the simu-
lation. Suﬃcient hardware and software ﬂexibility has been incorporated into
the module to make it well suited for dealing with a variety of experimental
conditions.

We would like to thank thr BELLE group for their installation and mainte-
nance of the detector, and acknowledge support from KOSEF and Ministry of
Education (through BSRI) in Korea.

Acknowledgements

References

[1] Annu. Rev. Nucl. Sci. 44 609 (1994).

[2] VME bus International Trade Association, VMEbus Speciﬁcation Manual

ANSI/IEEE STD 1014-1987 (1987).

[3] The BELLE Collaboration, Technical Design Report, KEK report 95-1 (1995).

[4] Xilinx Inc., San Jose, CA, USA.

[5] GEANT, Detector Description and Simulation Tool, CERN program library

long writeup W5013.

[6] Force Computers Inc. 2001 Logic Drive, San Jose, CA, USA.

[7] Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111,

USA.

[8] ROOT - An Object Oriented Data Analysis Framework, Proceedings
AIHENP’96 Workshop, Lausanne, Sep. 1996, Nucl. Inst. & Meth. in Phys. Res.
A 389 (1997) 81-86. See also http://root.cern.ch/.

7

Table 1
The testing of the isolated cluster counting logic using simulations. The numbers
in the ﬁrst row indicate the diﬀerence between the perfect cluster number and the
isolated cluster number from the logic.

ICN(logic)-ICN(perfect)

0

1

2

Bhabha

100 %

0 %

0 %

B0 → JψKS → l+l−π+π− 99.15 % 0.85 % 0.00 %
B0 → JψKS → l+l−πoπo

98.55 % 1.45 % 0.00 %

B0 → π+π−
B0 → πoπo
B+ → π+πo

B0 → K ∗γ

B0 → ρ±π∓

99.15 % 0.85 % 0.00 %

98.95 % 1.05 % 0.00 %

98.95 % 1.05 % 0.00 %

99.15 % 0.80 % 0.05 %

99.15 % 0.85 % 0.00 %

8

SVD

R phi

R phi Track

Z

Z Track

Cathod Pads

Combined Track

CDC

Stereo Wires

Z Finder

Z Track

Axial Wires

Track Segment

R phi Track

Topology

TSC

Hit

TSC Trigger

Low Threshold

Cluster Count

ECL

4x4 Sum

High Threshold

Cluster Count

EFC

Amp.

Low Threshold

Bhabha Logic

E Sum

Threshold

High Threshold

Two gamma

KLM

Hit

mu hit

l

G
o
b
a

l
 

i

i

D
e
c
s
o
n
L
o
g
c

i

 

Trigger Signal

Gate/Stop

2.2 micro sec after event crossing

Beam Crossing

Fig. 1. A block diagram of the BELLE trigger system. Information from all sub
detectors is gathered in the GDL, where the trigger decision is made.

9

0 : final signal

   

  

  

 1

 0

 3

  

 2

 4

0

1

2

3

4

Fig. 2. A logic diagram for the isolated cluster number counting. Among nine trigger
cells, only the three center cells and center and bottom right cells are considered in
isolated cluster counting logic.

10

2.3 us

2.35 us

2.4 us

2.45 us

2.5 us

2.55 us

2.6 us

2.65 us

2.7 us

2.75 us

i     MCLK..............

l     LTRIG30.........

l     LCCN0............

l     LCCN1............

l     LCCN2............

l     LCCN3............

Fig. 3. The simulated timing for ICN counting. From the top, the system clock
(MCLK), the input trigger signal (LTRIG30), and the four ICN bits (lowest to
highest, LCCN0-3) are shown. The time diﬀerence between LTRIG30 and LCCN0
is measured to be 47.3 ns (One unit on the top is 5 ns).

11

EXT CLK
ETM IN

NIM-TTL

MCLK0

CLOCK selection

SYSCLK

IN/

IN*

[0:143]

M
C
1
0
1
2
5

TRIG

I
/

 

O
C
O
N
N
E
C
T
O
R
S

CCN/
CCN*

[0:23]

M
C
1
0
1
2
4

MTG

clock

configuration 

control

CPLD

pattern

register-1

XC95216-PQ160

DATA
address

VME 

DTACK*
BERR*

FPGA

XC5125-PG299

PROM
control

pattern
register-2

configuration
by PROM

PROM

FIFO
control

DATA

OCCN

DATA (24bits)

configuration by VME

FIFO RAM
IDT 7202

Fig. 4. A simpliﬁed schematic of the CCM trigger board.

V
M
E
b
u
s

 
I

 

N
T
E
R
F
A
C
E
a
n
d
C
O
N
N
E
C
T
O
R
S

 

12

Fig. 5. An assembled CCM trigger board. The FPGA chip is the big square-shaped
chip near the center (gray color) and the CPLD is smaller square surface-mounted
chip near the top (black color).

13

 

 

 

 

 

 

 
 

 
 

 
 

 
  T I M I N G   D I A G R A M  
 
 
 
 
 
 
 
 
 
 
i
  A C Q M E M  
 
 
s p l a y e d :
  0 0 0  
s p l a y e d :
 
 
 
 
 
 
 
 

  2 0   n S  
 
 
 

 
 

 
 

 
 

 

 

 

 

 

 
 
 
 
 
 

 
 
 
 
 
 

 
 
 
 
 
 

 
 
 
 
 
 

27 Dec 1998 23:26
ððððððððððð

ððððððð

 
 
 
 
¬åå(cid:127)(cid:127)(cid:127)(cid:127)(cid:127)(cid:127)(cid:127)(cid:127)(cid:127)(cid:127)(cid:127)(cid:127)(cid:127)
 
 
 
 
 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 

 
 
 

 
 
 
 
 
 
  C u r s o r  
 
 
 
 

 

 

 

 

 

 

 

 
 
À
 

 

 

 

 

 

 

 

 

 

 

 

 
 

  K n o b   =   S c r o l
l
¿
 
 
 
 
 
 
 
 
C u r s o r   1   =   + 0 0 0 9 1 6 1   µ s  
 
 
  C u r s o r   2   =   + 0 0 0 0 0 0 0   µ s  
 
 
  9 . 1 6 1 9 8 5  m s  
  =  
 
 
 
 
 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

 
 
 

                                       
ðð

 

 

 

  D I S P L A Y :
i
 
 
 

v :
 
 
 
 

 
 
 
 
i
  M em o r y   D
i
i
r s t
  F
  T r a c e   D
 
 
 
 
m e / D
  T
_
 
 
 
 
 
 
 
 
 
 
 
_
 
: 1  
 
0 5  
  A
_
_
_
_

0 4  

0 3  

0 2  

0 1  

: 1  

: 1  

: 1  

: 1  

  A

  A

  A

  A

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

  A

0 0  

: 1  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

  O F F  

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 
 
 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 
 
 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 
 

 
 
 
 
 

 
 
Ÿ 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
S e a r c h  
S e a r c h  
 
 
 

 

 

 

 

 

 

 
 
 
¾
 
¿
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 
 

 
 
 
 
 

 
 
Ÿ¡
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
  C h a n g e  
  C u r s o r s  
 
 
 

 

 

 

 

 

êî±îîïî±îîïîúîîïî±îîïî±îîêî±îîïî±îîïîúîîïî±îîïî±îîêî±îîïî±îîïîúî

Ÿ¢

Ÿ£

ððððŸ¦ððð

 

 

 

 
 
 
 
 
 
 
  A c qm em  
  T o   R e fm em  

 
 

 

 
 
 
 
i
  D e f a u l
  D

 
 
s p l a y  

 
t

 
 
 

 
 
 

 
 

  S e a r c h  
 
 

  D e f

 

.

ððððŸ§ððð
i
i

 
  A u x
 
 

l
  D a t a  

 
a r y  
 
 
 

ððððŸ©ððð

i

  D
s p l a y  
  F o rm a t s  

Ÿª
i

 
 
 

 
 
  D

 
 
 
i
  S p l

 
 
t
 
s p l a y  

 
 

 

 

 

 

 

 

 

 

 

 

 

Fig. 6. Measured timing results for ICN counting. Starting from the top, two input
ECL signals and output ICN bits (lowest to highest bits) are displayed. Each time
 
 
division is 20 ns.

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

14

Fig. 7. The ICN-counting performace of the CCM modules. (a) ICN from TDC hit
patterns vs. ICN from CCM modules, (b) mismatch rates between ICN from TDC
hit patterns and from CCM as a function of the ICNs from CCM modules.

15

