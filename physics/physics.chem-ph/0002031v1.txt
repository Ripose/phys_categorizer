0
0
0
2

 

b
e
F
7
1

 

 
 
]
h
p
-
m
e
h
c
.
s
c
i
s
y
h
p
[
 
 

1
v
1
3
0
2
0
0
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Path-integral Monte Carlo Simulations without the Sign Problem: Multilevel

Blocking Approach for Eﬀective Actions

R. Egger1, L. M¨uhlbacher1,2, and C.H. Mak2

1 Fakult¨at f¨ur Physik, Albert-Ludwigs-Universit¨at, D-79104 Freiburg, Germany

2 Department of Chemistry, University of Southern California, Los Angeles, CA 90089-0482

(Date: February 2, 2008)

The multilevel blocking algorithm recently proposed as a
possible solution to the sign problem in path-integral Monte
Carlo simulations has been extended to systems with long-
ranged interactions along the Trotter direction. As an appli-
cation, new results for the real-time quantum dynamics of the
spin-boson model are presented.

PACS numbers: 02.70.Lq, 05.30.-d, 05.40.+j

I. INTRODUCTION

Path-integral Monte Carlo (PIMC) simulations are
useful for extracting exact results on many-body quan-
tum systems [1].
In principle, PIMC methods can be
used to study both equilibrium as well as dynamical
problems. But in the cases of fermions and real-time
dynamics, PIMC suﬀers from the notorious “sign prob-
lem” which renders such simulations unstable. This sign
problem manifests itself as an exponential decay of the
signal-to-noise ratio for large systems or long real times
[2–4]. Its origin is at the heart of quantum mechanics it-
self, namely the interference of diﬀerent quantum paths
contributing to the path integral might be destructive
due to exchange eﬀects or due to the oscillatory nature
of the real-time evolution operator. Besides approximate
treatments [2] the sign problem has remained unsolved.
Very recently, a new strategy has been proposed as a
possible approach to a complete solution of the sign prob-
lem. This so-called multi-level blocking (MLB) algorithm
[5,6] is a systematic implementation of the simple block-
ing idea — by sampling “blocks” instead of single paths,
one can always reduce the sign problem [7]. Deﬁning a
suitable hierarchy of blocks by grouping them into dif-
ferent “levels”, crucial information about the phase can-
cellations among diﬀerent quantum paths can then be
recursively transferred from the bottom to the top level.
Given suﬃcient computer memory, such an approach was
shown to be able to eliminate the sign problem in a sta-
ble and exact manner [5]. But to date, the MLB algo-
rithm has only been formulated to solve the sign problem
in PIMC simulations with nearest-neighbor interactions
along the Trotter direction. This situation is encountered
under a direct Trotter-Suzuki breakup of the short-time
propagator.

In this paper, we report an extension of the MLB ap-

proach to the case of eﬀective actions that may include
arbitrarily long-ranged interactions. Such eﬀective ac-
tions that are non-local in Trotter time may arise from
degrees of freedoms having been traced out, e.g., a har-
monic heat bath [8], or through a Hubbard-Stratonovich
transformation, e.g., in auxiliary-ﬁeld MC simulations of
lattice fermions [3]. Remarkably, because such eﬀective
actions capture much of the physics, e.g., symmetries or
the dissipative inﬂuence of the traced-out degrees of free-
dom, the corresponding path integral very often exhibits
a signiﬁcantly reduced “intrinsic” sign problem compared
to the original (time-local) formulation. The present gen-
eralization of the MLB algorithm was developed to take
advantage of this fact. We note that in a PIMC simu-
lation with only nearest-neighbor interactions along the
Trotter direction, the original MLB approach [5] is more
eﬃcient than the method described below, which there-
fore should be used only for time-non-local actions.

To be speciﬁc, we focus on the dynamical sign problem
arising in real-time PIMC computations here. The mod-
iﬁcations required to implement the method for fermion
simulations are then straightforward. The structure of
this paper is as follows. In Sec. II the general strategy
to deal with long-ranged interactions in a MLB scheme
is outlined. A detailed exposition of the computational
method can be found in Sec. III. We have studied the
real-time dynamics of the celebrated spin-boson system
[8] using this approach. Details about this application,
performance issues related to the sign problem, and nu-
merical results are presented in Sec. IV. Finally, Sec. V
oﬀers some conclusions.

II. GENERAL CONSIDERATIONS

We consider a discretized path integral along a certain
contour in the complex-time plane.
In a typical real-
time calculation, there is a forward branch from t = 0
to t = t∗, where t∗ is the maximum time studied in the
simulation, followed by a branch going back to the ori-
gin, and then by an imaginary-time branch from t = 0
to t = −i¯hβ. We focus on a “factorized” initial prepara-
tion where the relevant degrees of freedom, denoted by
r(t), are held ﬁxed for t < 0 [8,9]. That implies that
the imaginary-time dynamics must be frozen at the cor-
responding value, and we only need to sample on the two
real-time branches. Note that such a nonequilibrium cal-

1

culation cannot proceed in a standard way by ﬁrst doing
an imaginary-time QMC simulation followed by analytic
continuation of the numerical data [1]. The quantum
numbers r(t) at a given time may be discrete or contin-
uous variables.

Using time slices of length t∗/P , we combine for-
ward [r(tm)] and backward [r′(tm)] path conﬁgurations
at time tm = mt∗/P into the conﬁguration sm, where
m = 1, . . . , P . The conﬁguration at t = 0 is held
ﬁxed, and for t = t∗ we must be in a diagonal state,
r(t∗) = r′(t∗). For an eﬃcient application of the cur-
rent method, it is essential to combine several neighbor-
ing slices m into new “blocks”. For instance, think of
m = 1, . . . , 5 as a new “slice” ℓ = 1, m = 6, . . . , 10
as another slice ℓ = 2, and so on. Combining q ele-
mentary slices into a block sℓ, instead of the original P
slices we have L = P/q blocks, where L is the number
of MLB “levels”. In actual applications, there is consid-
erable freedom in how these blocks are deﬁned, e.g.
if
there is hardly any intrinsic sign problem, or if there are
only few variables in r, one may choose larger values of q.
Additional ﬂexibility can be gained by choosing diﬀerent
q for diﬀerent blocks.

Say we are interested in sampling the conﬁgurations
sL on the top level ℓ = L according to the appropriate
matrix elements of the (reduced) density matrix,

ρ(sL) = Z −1 Xs1,...,sL−1

exp{−S[s1, . . . , sL]} ,

(2.1)

where S is the eﬀective action under study and Z is a
normalization constant so that

ρ(sL) = 1 .

(2.2)

XsL

Due to the time-non-locality of this action, there will be
interactions among all blocks sℓ. The sum in Eq. (2.1)
denotes either an integration over continuous degrees of
freedom or a discrete sum. In the case of interest here,
the eﬀective action is complex-valued and e−S/|e−S| rep-
resents an oscillatory phase factor (±1 for the fermion
sign problem). The “naive approach” to the sign prob-
lem is to sample conﬁgurations using the positive deﬁnite
weight function

P ∼ | exp{−S}| ,

(2.3)

and to include the oscillatory phase in the accumulation
procedure. Precisely this leads to the exponentially fast
decay of the signal-to-noise ratio with t∗.

The proposed MLB simulation scheme starts by sam-
pling on the ﬁnest level ℓ = 1, so only variables in the ﬁrst
block corresponding to m = 1, . . . , q are updated. During
this procedure, interference among diﬀerent paths will
take place. Since only relatively few degrees of freedom
are sampled, however, the resulting interference informa-
tion can be quantiﬁed in a controlled way by employing

so-called “level-ℓ bonds” (here ℓ = 1). As long as q is
chosen suﬃciently small, the interference cannot lead to
numerical instabilities, and the sign cancellations occur-
ing while sampling on level ℓ = 1 can thus be synthesized
and transferred to the level ℓ = 2, where the sampling
is carried out next. Here the procedure is repeated, and
by proceeding recursively up to the top level ℓ = L, this
strategy can eliminate the sign problem. The main bot-
tleneck of the method comes from the immense memory
requirements, since one needs to store and update the
level-ℓ bonds on all levels during the Monte Carlo sam-
pling (see below for details). To summarize, the main
idea of our approach is to subdivide the allowed inter-
ferences among the quantum paths into small subunits
(blocks) such that no sign problem occurs when (stochas-
tically) summing over the paths within each subunit. The
basic observation underlying our method is therefore al-
most trivial: The sign problem does not occur in a suﬃ-
ciently small system. The nontrivial computational task
then consists of bringing together the interference sig-
nals from diﬀerent blocks, which is done by recursively
forming blocks on subsequent higher levels.

Instead of the “circular” structure of the time con-
tour inherent in the trace operation, it is actually more
helpful to view the problem as a linear chain, where the
proposed MLB scheme proceeds from left to right.
In
the case of local actions with only nearest-neighbor inter-
actions along Trotter time, a diﬀerent recursion scheme
was implemented in Refs. [5,6] which is close in spirit to
the usual block-spin transformations used in renormal-
ization group treatments of spin chains. For both MLB
implementations, however, the underlying blocking idea
is identical, and the non-locality of the eﬀective action
studied here only requires one to abandon block-spin-like
transformations in favor of the “moving-along-the-chain”
picture.

Below we assume that one can decompose the eﬀective

action according to

S[s1, . . . , sL] =

L

Xℓ=1

Wℓ[sℓ, . . . , sL] .

(2.4)

All dependence on a conﬁguration sℓ is then contained
in the “partial actions” Wλ with λ ≤ ℓ. One could, of
course, put all Wℓ>1 = 0, but the approach becomes more
powerful if a nontrivial decomposition is possible.

III. MULTILEVEL BLOCKING APPROACH

In the following, we describe in detail how the MLB
algorithm for eﬀective actions is implemented in prac-
tice. The MC sampling starts on the ﬁnest level ℓ = 1,
where only the conﬁguration sℓ=1 containing the elemen-
tary slices m = 1, . . . , q will be updated with all sℓ>1 re-

2

maining ﬁxed at their initial values s0
function

ℓ . Using the weight

0
0
P0[s1] = | exp{−W1[s1, s
2, . . . , s
L]}| ,

(i)
1 , where i = 1, . . . , K, and
we generate K samples s
store them for later use. To eﬀectively solve the sign
problem and to avoid a bias in the algorithm, the sample
number K should be chosen large enough, see below and
Ref. [5]. For K = 1, the algorithm simply reproduces the
naive approach.

The stored samples are now employed to generate in-
formation about the sign cancellations. All knowledge
about the interference that occured at this level is en-
capsulated in the quantity

B1 =(cid:28) exp{−W1[s1, . . . , sL]}

| exp{−W1[s1, s0

2, . . . , s0

L]}|(cid:29)P0[s1]

(3.1)

= C−1

= K −1

0 Xs1
Xi=1

K

exp{−W1[s1, . . . , sL]}

exp{−W1[s

| exp{−W1[s

(i)
1 , s2, . . . , sL]}
(i)
1 , s0
L]}|

2, . . . , s0

= B1[s2, . . . , sL] ,

the normalization constant C0 = Ps1

which we call “level-1 bond” in analogy to Ref. [5], with
P0[s1]. The third
(i)
line follows by noting that the s
1 were generated ac-
cording to the weight P0. This equality requires that K
is suﬃciently large and that q is suﬃciently small in or-
der to provide a good statistical estimate of the level-1
bond.

Combining the second expression in Eq. (3.1) with
Eq. (2.1), we rewrite the density matrix in the follow-
ing way:

ρ(sL) = Z −1 Xs2,...,sL−1
= Z −1 Xs1,...,sL−1

exp(−Xℓ>1
P0B1Yℓ>1

e−Wℓ .

Wℓ) C0B1

(3.2)

When comparing Eq. (3.2) with Eq. (2.1), we see that
the entire sign problem has now formally been trans-
ferred to levels ℓ > 1, since oscillatory phase factors only
arise when sampling on these higher levels. Note that
B1 = B1[s2, . . . , sL] introduces couplings among all lev-
els ℓ > 1, in addition to the ones already contained in
the eﬀective action S.

We now proceed to the next level ℓ = 2 and, according
to Eq. (3.2), update conﬁgurations for m = q + 1, . . . , 2q
using the weight

0
0
0
0
P1[s2] = |B1[s2, s
3, . . . , s
L] exp{−W2[s2, s
3, . . . , s
L]}| .

(3.3)

3

Under the move s2 → s′
update the level-1 bonds, B1 → B′
that the stored K samples s
for the original conﬁguration s0
be computed according to

2, we should then resample and
1. Exploiting the fact
(i)
1 are correctly distributed
2, the updated bond can

B′

1 = K −1

K

Xi=1

exp{−W1[s

| exp{−W1[s

(i)
1 , s′
(i)
1 , s0

2, . . . , sL]}
2, . . . , s0
L]}|

.

(3.4)

Again, to obtain an accurate estimate for B′
1, the number
K should be suﬃciently large. In the end, sampling under
the weight P1 implies that the probability for accepting
the move s2 → s′

2 under the Metropolis algorithm is

p =(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

Pi
Pi

′

(i)
0
exp{−W1[s
2,s
3,...]}
1 ,s
(i)
1 ,s0
2,...]}|
| exp{−W1[s
(i)
1 ,s2,s0
3,...]}
(i)
1 ,s0
2,...]}|

exp{−W1[s
| exp{−W1[s

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

×(cid:12)(cid:12)(cid:12)(cid:12)

exp{−W2[s′
2, s0
exp{−W2[s2, s0

3, . . .]}

3, . . .]}(cid:12)(cid:12)(cid:12)(cid:12)

(3.5)

.

Using this method, we generate K samples s

(i)
2 , store

them, and compute the level-2 bonds,

B2 =(cid:28) B1[s2, s3, . . .] exp{−W2[s2, s3, . . .]}

3, . . .] exp{−W2[s2, s0

3, . . .]}|(cid:29)P1[s2]

|B1[s2, s0

(3.6)

= C−1

B1[s2, . . .] exp{−W2[s2, . . .]}

1 Xs2
Xi=1

K

= K −1

|B1[s
= B2[s3, . . . , sL] ,

B1[s

(i)
2 , s3, . . .] exp{−W2[s
(i)
2 , s0
3, . . .] exp{−W2[s

(i)
2 , s3, . . .]}
(i)
2 , s0
3, . . .]}|

with C1 =Ps2

P1[s2]. Following our above strategy, we
then rewrite the reduced density matrix by combining
Eq. (3.2) and the second line of Eq. (3.6). This yields

ρ(sL) = Z −1 Xs3,...,sL−1
= Z −1 Xs1,...,sL−1

exp(−Xℓ>2
P0P1B2Yℓ>2

Wℓ) C0C1B2

e−Wℓ .

(3.7)

Clearly, the sign problem has been transferred one block
further to the right along the chain. Note that the nor-
malization constants C0, C1, . . . depend only on the initial
conﬁguration s0
ℓ so that their precise values need not be
known.

This procedure is now iterated in a recursive manner.

Sampling on level ℓ using the weight function

0
0
ℓ+1, . . .]}|
ℓ+1, . . .] exp{−Wℓ[sℓ, s
Pℓ−1[sℓ] = |Bℓ−1[sℓ, s

(3.8)

requires the recursive update of all bonds Bλ with λ <
ℓ. Starting with B1 → B′
1 and putting B0 = 1, this
recursive update is done according to

B′

λ = K −1
K
B′

×

Xi=1

λ−1[s
|Bλ−1[s

(i)
λ , sλ+1, . . .] exp{−W ′
(i)
λ , s0

λ[s
λ+1, . . .] exp{−Wλ[s

(i)
λ , sλ+1, . . .]}
(i)
λ , s0
λ+1, . . .]}|

,

(3.9)

where the primed bonds or partial actions depend on s′
ℓ
and the unprimed ones on s0
ℓ . Iterating this to get the
(i)
ℓ−1, the test move sℓ → s′
updated bonds Bℓ−2 for all s
ℓ
is then accepted or rejected according to the probability

ℓ, s0
Bℓ−1[s′
Bℓ−1[sℓ, s0

ℓ, s0
ℓ+1, . . .] exp{−Wℓ[s′
ℓ+1, . . .] exp{−Wℓ[sℓ, s0

p =(cid:12)(cid:12)(cid:12)(cid:12)

ℓ+1, . . .]}

ℓ+1, . . .]}(cid:12)(cid:12)(cid:12)(cid:12)

. (3.10)

(i)
ℓ , store

On this level, we again generate K samples s
them and compute the level-ℓ bonds according to

Bℓ[sℓ+1, . . .] = K −1

(3.11)

×

K

Xi=1

Bℓ−1[s

|Bℓ−1[s

(i)
ℓ , sℓ+1, . . .] exp{−Wℓ[s
(i)
ℓ , s0
ℓ+1, . . .] exp{−Wℓ[s

(i)
ℓ , sℓ+1, . . .]}
(i)
ℓ , s0
ℓ+1, . . .]}|

.

This process is iterated up to the top level, where the
observables of interest may be computed.

λ for all s

Since the sampling of Bℓ requires the resampling of all
lower-level bonds, the memory and CPU requirements of
the algorithm laid out here are quite large. For λ < ℓ − 1,
(i)
one needs to update Bλ → B′
ℓ′ with λ < ℓ′ < ℓ,
which implies a tremendous amount of computer mem-
ory and CPU time, scaling approximately ∼ K L at the
top level. Fortunately, an enormous simpliﬁcation can
often be achieved by exploiting the fact that the inter-
actions among distant slices are usually weaker than be-
tween near-by slices. For instance, when updating level
(i)
ℓ = 3, the correlations with the conﬁgurations s
1 may
be very weak, and instead of summing over all K samples
in the update of the bonds Bλ<ℓ, we may select only
a small subset. When invoking this argument, one should
be careful to also check that the additional interactions
coming from the level-λ bonds with λ < ℓ are suﬃciently
short-ranged. From the deﬁnition of these bonds, this is
to be expected though.

(i)
1

s

Remarkably, this algorithm can signiﬁcantly relieve the
severity of the sign problem. Let us ﬁrst give a simple
qualitative argument supporting this statement for the
original MLB method of Ref. [5], where P = 2L with
L denoting the number of levels. If one needs K sam-
ples for each slice on a given level in order to have sat-
isfactory statistics despite of the sign problem, the total
number of paths needed in the naive approach depends
exponentially on P , namely ∼ K P . This is precisely the
well-known exponential severity of the sign problem un-
der the naive approach. However, with MLB the work
on the last level [which is the only one aﬀected by a
sign problem provided K was chosen suﬃciently large]
is only ∼ K L. So in MLB, the work needed to sample
the K P paths with satisfactory statistical accuracy grows

∼ K log2 P = P log2 K, i.e., only algebraically with P . Pro-
vided the interactions along the Trotter time decay suﬃ-
ciently fast, a similar qualitative argument can be given
for the generalized MLB algorithm proposed here. For
the application described below, we have indeed found
only algebraic dependences of the required CPU times
and memory resources with the maximum real time t∗,
instead of exponential ones as encountered in the naive
approach. Further details of the simulation procedure
are provided in the next section.

IV. APPLICATION: SPIN-BOSON DYNAMICS

To demonstrate this MLB algorithm for path integral
simulations with long-range interactions in the Trotter
direction, we study the real-time dynamics of the spin-
boson model,

H = −(¯h∆/2) σx + (¯hǫ/2) σz

(4.1)

+Xα " p2

α
2mα

+ 1

2 mαω2

α(cid:18)xα −

cα

mαω2
α

σz(cid:19)2# .

This archetypical model has a number of important ap-
plications, e.g., the Kondo problem, interstitial tunnel-
ing in solids [8], quantum computing [10], and electron
transfer reactions [11], to mention only a few. The bare
two-level system (TLS) has a tunneling matrix element
∆ and the asymmetry (bias) ǫ between the two localized
energy levels (σx and σz are Pauli matrices). Dissipation
is introduced via a linear heat bath, i.e., an arbitrary col-
lection of harmonic oscillators {xα} bilinearly coupled to
σz. Concerning the TLS dynamics, all information about
the coupling to the bath is contained in the spectral den-
α/mαωα) δ(ω − ωα), which has a
quasi-continuous form in typical condensed-phase appli-
cations. J(ω) dictates the form of the (twice-integrated)
bath correlation function (β = 1/kBT ),

sity J(ω) = (π/2)Pα(c2

Q(t) =Z ∞

0

dω
π¯h

J(ω)
ω2

cosh[ω¯hβ/2] − cosh[ω(¯hβ/2 − it)]

sinh[ω¯hβ/2]

.

(4.2)

For the calculations here, we assume an ohmic spectral
density of the form J(ω) = 2π¯hαω exp(−ω/ωc), for which
Q(t) can be found in closed form [7]. Here ωc is a cutoﬀ
frequency, and the damping strength is measured by the
dimensionless Kondo parameter α. In the scaling limit
∆ ≪ ωc, and assuming α < 1, all dependence on ωc
enters via a renormalized tunnel splitting [8]

∆eﬀ = [cos(πα)Γ(1 − 2α)]1/2(1−α)(∆/ωc)α/(1−α)∆ ,

(4.3)

and powerful analytical [8,12] and alternative numerical
methods [13,14] are available for computing the nonequi-
librium dynamics.

4

At this point some remarks are in order. Basically
all other published numerical methods except real-time
PIMC can deal only with equilibrium quantities, see,
e.g., Refs.
[15,16], or explicitly introduce approxima-
tions [13,14,17,18]. Regarding the latter class, mostly
Markovian-type approximations concerning the time-
range of the interactions introduced by the inﬂuence func-
tional have been implemented. Our approach is computa-
tionally more expensive than other methods [13–18], but
at the same time it is unique in yielding numerically exact
results for the nonequilibrium spin-boson dynamics for
arbitrary bath spectral densities. It is particularly valu-
able away from the scaling regime where important appli-
cations, e.g., coherent (nonequilibrium) electron transfer
reactions in the adiabatic regime, are found but basically
all other methods fail to yield exact results. Finally we
brieﬂy compare the present approach to our previously
published PIMC method [7]. For not exceedingly small
α, it turns out that the latter method is just equivalent
to the K = 1 limit of the present method. From Table I
and the discussion below, it is thus apparent that MLB
is signiﬁcantly more powerful in allowing for a study of
much longer real times than previously.

We study the quantity P (t) = hσz(t)i under the
nonequilibrium initial preparation σz(t < 0) = +1.
P (t) gives the time-dependent diﬀerence of the quantum-
mechanical occupation probabilities of the left and right
states, with the particle initially conﬁned to the left state.
To obtain P (t) numerically, we take the discretized path-
integral representation of Ref. [7] and trace out the bath
to get a long-ranged eﬀective action, the “inﬂuence func-
tional”. In discretized form the TLS path is represented
by spins σi, σ′
i = ±1 on the forward- and backward-paths,
respectively. The total action S consists of three terms.
First, there is the “free” action S0 determined by the
bare TLS propagator U0,

P −1

exp(−S0) =

U0(σi+1, σi; t∗/P ) U0(σ′

i+1, σ′

i; −t∗/P ) .

Yi=0

′′

where Lj = L′
Lj = [Q((j + 1)t∗/P ) + Q((j − 1)t∗/P ) − 2Q(jt∗/P )]/4

j is given by [7]

j + iL

for j > 0, and L0 = Q(t∗/P )/4. In the scaling regime
at T = 0, this eﬀective action has interactions ∼ α/t2

(4.6)

5

(4.4)
The second is the inﬂuence functional, SI = S(1)
I + S(2)
,
which contains the long-ranged interaction among the
spins,

I

(σj − σ′

j−m (σm − σ′

m)

(4.5)

S(1)

I = Xj≥m

+ iL

′′

j−m (σm + σ′

j)nL′

m)o ,

between the spins (“inverse-square Ising model”). The
contribution

S(2)

I = i(t∗/P )Xm

γ(mt∗/P )(σm − σ′

m)

(4.7)

gives the interaction with the imaginary-time branch
[where σz = +1], where the damping kernel

γ(t) =

2

π¯hZ ∞

0

dω

J(ω)

ω

cos(ωt) .

(4.8)

For clarity, we focus on the most diﬃcult case of an un-
biased two-state system at zero temperature, ǫ = T = 0.
To ensure that the Trotter error is negligibly small, we
have systematically increased P for ﬁxed t∗ until conver-
gence was reached. Typical CPU time requirements per
104 MC samples are 4 hours for P = 26, L = 2, K = 1000,
or 6 hours for P = 40, L = 3, K = 600, where the simula-
tions were carried out on SGI Octane workstations. The
memory requirements for these two cases are 60 Mbyte
and 160 Mbyte, respectively. Data were collected from
several 105 samples.

For α = 0, the bare TLS dynamics P (t) = cos(∆t) is
accurately reproduced. As mentioned before, the perfor-
mance is slightly inferior to the original MLB approach
[6] which is now applicable due to the absence of the in-
ﬂuence functional and the associated long-ranged inter-
actions. Turning to the situation where a bath is present,
we ﬁrst study the case α = 1/2 and ωc/∆ = 6. The exact
α = 1/2 result [8], P (t) = exp(−∆eﬀ t), valid in the scal-
ing regime ωc/∆ ≫ 1, was accurately reproduced, indi-
cating that the scaling regime is reached already for mod-
erately large ωc/∆. Typical parameters used in the MLB
simulations and the respective average sign are listed in
Table I. The ﬁrst line in Table I corresponds to the naive
approach. For α = 1/2, it turns out that our previous
PIMC scheme [7] yields a comparable performance to the
K = 1 version of this MLB method. It is then clear from
Table I that the average sign and hence the signal-to-
noise ratio can be dramatically improved thus allowing
for a study of signiﬁcantly longer timescales t∗ than be-
fore. For a ﬁxed number of levels L, the average sign
grows by increasing the parameter K. Alternatively, for
ﬁxed K, the average sign increases with L. Evidently,
the latter procedure is more eﬃcient in curing the sign
problem, but at the same time computationally more ex-
pensive. In practice, it is then necessary to ﬁnd a suitable
compromise.

Figure 1 shows scaling curves for P (t) at α = 1/4 for
ωc/∆ = 6 and ωc/∆ = 1. According to the α = 1/2
results, ωc/∆ = 6 is expected to be within the scaling
regime. This is conﬁrmed by a comparison to the non-
interacting blip approximation (NIBA) [8]. The minor
deviations of the NIBA curve from the exact result are
in accordance with Refs. [7,12] for α ≤ 1/2. However,
for ωc/∆ = 1, scaling concepts (and also NIBA) are ex-

pected to fail even qualitatively. Clearly, the MLB re-
sults show that away from the scaling region, quantum
coherence is able to persist for much longer, and both
frequency and decay rate of the oscillations diﬀer signif-
icantly from the predictions of NIBA. In electron trans-
fer reactions in the adiabatic-to-nonadiabatic crossover
regime, such coherence eﬀects can then strongly inﬂuence
the low-temperature dynamics. One obvious and impor-
tant consequence of these coherence eﬀects is the break-
down of a rate description, implying that theories based
on an imaginary-time formalism might not be appropri-
ate in this regime. A detailed analysis of this crossover
regime using MLB is currently in progress.

V. CONCLUSIONS

In this paper, we have extended the multilevel block-
ing (MLB) approach of Refs.
[5,6] to path-integral
Monte Carlo simulations with long-ranged eﬀective ac-
tions along the Trotter direction. For clarity, we have
focussed on real-time simulations here, but believe that
a similar approach can also be helpful in many-fermion
computations, e.g., in auxiliary-ﬁeld fermion simulations
of lattice fermions. The practical usefulness of the ap-
proach was demonstrated by computing the nonequi-
librium real-time dynamics of the dissipative two-state
system. Here the eﬀective action (inﬂuence functional)
arises by integrating out the linear heat bath. For a heat
bath of the ohmic type, at T = 0 the corresponding in-
teractions among diﬀerent time slices decay only with a
slow inverse-square power law.

In the present implementation of MLB, the basic block-
ing idea operates on multiple time scales by carrying out
a subsequent sampling at longer and longer times. Dur-
ing this procedure, the interference information collected
at shorter times is taken fully into account without in-
voking any approximation. Under such an approach, at
the expense of large memory requirements, the severity
of the sign problem can be signiﬁcantly relieved. The
proposed approach allows to study time scales not acces-
sible to previous real-time path-integral simulations for
the spin-boson system.

ACKNOWLEDGMENTS

We wish to thank M. Dikovsky and J. Stockburger for
useful discussions. This research has been supported by
the Volkswagen-Stiftung, by the National Science Foun-
dation under Grants No. CHE-9257094 and No. CHE-
9528121, by the Sloan Foundation, and by the Dreyfus
Foundation.

[1] See, e.g., Quantum Monte Carlo Methods in Condensed
Matter Physics, edited by M. Suzuki (World Scientiﬁc,
Singapore, 1993), and references therein.

[2] D.M. Ceperley and B.J. Alder, Science 231, 555 (1986).
[3] E.Y. Loh, Jr., J. Gubernatis, R.T. Scalettar, S.R. White,
D.J. Scalapino, and R.L. Sugar, Phys. Rev. B 41, 9301
(1990).

[4] D. Thirumalai and B.J. Berne, Annu. Rev. Phys. Chem.

37, 401 (1986).

[5] C.H. Mak, R. Egger, and H. Weber-Gottschick, Phys.

Rev. Lett. 81, 4533 (1998).

[6] C.H. Mak and R. Egger, J. Chem. Phys. 110, 12 (1999).
[7] R. Egger and C.H. Mak, Phys. Rev. B 50, 15 210 (1994).
For a review, see C.H. Mak and R. Egger, Adv. Chem.
Phys. 93, 39 (1996).

[8] A.J. Leggett, S. Chakravarty, A.T. Dorsey, M.P.A.
Fisher, A. Garg, and W. Zwerger, Rev. Mod. Phys. 57, 1
(1987); U. Weiss, Quantum Dissipative Systems (World
Scientiﬁc, Singapore, 1993), and references therein.

[9] The calculation of thermal correlation functions is possi-

ble after minor modiﬁcations.

[10] A. Garg, Phys. Rev. Lett. 77, 964 (1996).
[11] D. Chandler, in Liquids, Freezing, and the Glass Tran-
sition, Les Houches Lectures, ed. by D. Levesque et al.
(Elsevier Science, 1991).

[12] F. Lesage and H. Saleur, Phys. Rev. Lett. 80, 4370 (1998)
[13] J. Stockburger and C.H. Mak, Phys. Rev. Lett. 80, 2657

(1998).

[14] D. Makarov and N. Makri, Chem. Phys. Lett. 221, 482

(1994).

[15] T.A. Costi and C. Kieﬀer, Phys. Rev. Lett. 76, 1683

(1996); T.A. Costi, ibid. 80, 1038 (1998).
[16] K. V¨olker, Phys. Rev. B 58, 1862 (1998).
[17] M. Winterstetter and W. Domcke, Chem. Phys. Lett.

236, 445 (1995).

[18] H. Wang, X. Song, D. Chandler, and W.H. Miller, J.

Chem. Phys. 110, 4828 (1999).

1

0.5

0

-0.5

-1

0

2

4

8

10

6

eff t

6

FIG. 1. Scaling curves for P (t) for α = 1/4 with ωc/∆ = 6
(closed diamonds) and ωc/∆ = 1 (open circles). The solid
curve is the NIBA prediction. The approach of Ref. [7] be-
comes unstable for ∆eﬀ t > 4 in both cases. Statistical errors
are of the order of the symbol sizes.

TABLE I. MLB performance for α = 1/2, ωc/∆ = 6,
∆t∗ = 10, P = 40, and several L. qℓ denotes the number of
slices for ℓ = 1, . . . L.

K
1
200
800
200
600

L
1
2
2
3
3

qℓ
40
30 - 10
30 - 10
22 - 12 - 6
22 - 12 - 6

hsgni
0.03
0.14
0.20
0.39
0.45

7

