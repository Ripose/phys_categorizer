7
9
9
1
 
t
c
O
 
9
2
 
 
]
h
p
-
m
e
h
c
.
s
c
i
s
y
h
p
[
 
 
1
v
1
4
0
0
1
7
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Parallel Tempering Algorithm for

Conformational Studies of Biological Molecules

Ulrich H.E. Hansmann 1

Department of Theoretical Studies, Institute for Molecular Science
Okazaki, Aichi 444, Japan

ABSTRACT

The eﬀectiveness of a new algorithm, parallel tempering, is studied for numerical
simulations of biological molecules. These molecules suﬀer from a rough energy landscape.
The resulting slowing down in numerical simulations is overcome by the new method. This
is demonstrated by performing simulations with high statistics for one of the simplest
peptides, Met-enkephalin. The numerical eﬀectiveness of the new technique was found
to be much better than traditional methods and is comparable to sophisticated methods
like generalized ensemble techniques.

1 e-mail: hansmann@ims.ac.jp

1. INTRODUCTION

One way of investigating biological molecules is by means of computer experiments. How-

ever, such numerical simulations can be notoriously diﬃcult when the molecule is de-

scribed by “realistic” energy functions where interactions between all atoms are taken

into account. For a large class of molecules (for instance, peptides or proteins) the var-

ious competing interactions yield to frustration and a rough energy landscape. Hence,

at low temperatures simulations based on canonical Monte Carlo [1] or molecular dy-

namics techniques will get trapped in one of the multitude of local minima separated by

high energy barriers. Only small parts of conformational space are sampled and physical

quantities cannot be calculated accurately. One way to overcome this diﬃculty is to per-

form a simulation in a so-called generalized ensemble, which is based on a non-Boltzmann

probability distribution. Multicanonical algorithms [2] and simulated tempering [3] are

prominent examples of such an approach which also includes the new ensemble introduced

in Refs. [4, 5]. Application of these techniques to the protein folding problem was ﬁrst

addressed in Ref. [6] and over the last few years the generalized ensemble approach has

become an often used method for simulation of biological molecules and other complex

systems [6]-[10]. A numerical comparison of diﬀerent generalized ensemble algorithms can

be found in Ref. [11].

Another way to alleviate the multiple minima problem is to look for improved updates

of conﬁgurations in the numerical simulation. The cluster algorithm [12] is an example of

global updates that enhances thermalization and has been very successful in spin systems.

However, for most other systems with frustration, no such updates are known. Here, a

new algorithm, parallel tempering, is described which introduces improved updates by

means of constructing a special generalized ensemble. It is shown that the new method

can be successfully applied to the simulation of molecules with complex energy landscape.

By simulating one of the simplest peptides, Met-enkephalin, with high statistics its eﬀec-

tiveness is compared with canonical simulations and sophisticated generalized ensemble

techniques like the multicanonical algorithm [2]. Both Monte Carlo and molecular dy-

namics versions of parallel tempering are studied and it is shown that the new method

can be combined with other generalized ensemble techniques.

2

2. METHODS:

in Refs. [14, 15].

Let me start by brieﬂy summarizing the parallel tempering algorithm which was originally

introduced in the context of spin glass simulations [13]. Similar ideas were also proposed

In a regular canonical simulation, a conﬁguration of one copy of the molecule under

consideration is updated by Monte Carlo [1] or molecular dynamics. Each conﬁguration C

is characterized by a set of (generalized) coordinates and is assigned a Boltzmann weight

wB(β, C) = e−βE(C) ,

(1)

where we have introduced the inverse temperature β = 1/kBT with kB the Boltzmann

constant. The so realized Markov - chain yields to a canonical distribution at one tem-

perature T .

On the other hand, in parallel tempering one considers an artiﬁcial system build up

of N non–interacting copies of the molecule, each at a diﬀerent temperature Ti. A state

of the artiﬁcial system is speciﬁed by

=

C1, C2, ..., CN

, where each Ci is a set of

C

{

}

(generalized) coordinates which describes the conﬁguration of the i

th copy. Since the

−

N copies of the molecule are not interacting with each other, one can assign to a state

of the compound system a weight:

N

βiE(Ci)

) = e−

Xi

wP T (

C

=

wB(βi, E(Ci)) .

N

i
Y

Without lack of generality one can assume β1 < β2 < .... < βN . For a numerical simulation

of the artiﬁcial system one has to construct a Markov-chain which will ensure that the

corresponding equilibrium distribution will be approached. Such a Markov-chain can be

realized with the following two sets of moves [13]:

1. Standard MC moves which eﬀect only one, say the i-th, copy. These moves are

called local updates because they change only one coordinate of the conﬁguration in

solely one copy. Since the copies are non-interacting it follows from Eq. 2 that the

transition probability depends only on the change in potential energy of the i

th

−

3

C

(2)

copy. Hence, such local MC moves are accepted or rejected according to the usual

Metropolis criterion [1] with probability:

wP T (

old

new) = wB(C old

C

→ C

i →

C new
i

) = min(1, e

−βi∆iE) ,

(3)

where ∆iE is deﬁned as ∆iE = E(C new

)

i

E(C old
i

).

−

2. Exchange of conformations between two copies i and j = i + 1:

C new
i

= C old

j

C new
j

= C old

i

.

(4)

(5)

(6)

(7)

(8)

(9)

Such exchange is a global update in the sense that for the i

th copy the whole

conﬁguration changes (and the same for the j

th copy). Since this move introduces

−

−

conﬁgurational changes in two copies of the molecule, it follows from Eq. 2 that

the exchange is accepted or rejected according to the Metropolis criterion with

probability:

old

w(

C

→ C

new) = min(1, e−βiE(Cj )−βjE(Ci)+βiE(Ci)+βj E(Cj ))

= min(1, e(βj−βi)(E(Cj )−E(Ci)))

= min(1, e∆β∆E)

= min(1, e∆) ,

where ∆ = ∆β∆E, ∆β = βj

βi and ∆E = E(Cj)

E(Ci). While it is not

−

−

necessary to restrict the exchange to pairs of copies associated with neighboring

inverse temperatures βi and βi+1, this choice will be optimal, since the acceptance

ratio will decrease exponentially with the diﬀerence ∆β = βj

βi.

−

It is interesting to observe that from the view point of the artiﬁcial compound system

the above set of moves realizes a generalized ensemble simulation with (non-canonical)

weights given by Eq. 2. However, one can also choose the point of view that parallel tem-

pering realizes for each of the copies a canonical simulation at corresponding temperature

Ti. The exchange of conformations is then a new and improved update which decreases

the correlation between conﬁgurations (for each copy or temperature) and hence increases

4

thermalization of the canonical simulation for each copy (temperature). This guarantees

in turn that each of the copies will approach its equilibrium distribution (i.e. the Boltz-

mann distribution at temperature Ti) much faster than without that global update. From

this point of view it is also obvious that expectation values of a physical quantity A are

calculated as usual according to:

< A >Ti=

A(Ci(k)) ,

(10)

1
MES

M ES

Xk

where MES is the number of measurements taken for the i-th copy. Using re-weighting

techniques [16] it is also possible to calculate expectation values for intermediate inverse

temperatures β with βi < β < βi+1.

While parallel tempering is not restricted to the use on parallel computers, it is obvious

that the new technique is well suited for them. A parallel implementation can be easily

realized by setting each of the copies on a diﬀerent node. On each node the molecule is

simulated simultaneously and independent from the other nodes with Boltzmann weights
e−βiE(Ci) by common Monte Carlo techniques. After a few MC steps pairs of conﬁgurations

Ci and Cj are exchanged between the nodes i and j with a probability given by Eq. 9.

While the exchange of conformations has to be done by a Monte Carlo procedure, it

is not necessary to use Monte Carlo for the local updates of the conformations on each

node. Instead one can also evaluate on each node for some time τ a molecular dynamics

trajectory, using one of the common canonical molecular dynamics techniques, before

an exchange of conformations between two nodes is tried. It is also possible to replace

the exchange of conﬁgurations between diﬀerent nodes by an exchange of temperatures

between nodes. For a parallel implementation of the algorithm this has the advantage

that less messages have to be passed between the diﬀerent nodes (two temperature values

instead of two sets of coordinates).

The main advantage of parallel tempering over generalized ensemble methods is that

the weights are a priori known, since the weight for a state of the artiﬁcial system of non-

interacting copies (see Eq. 2) is solely the product of the Boltzmann weights for each of

the copies. However, to ensure that an exchange of either conformation or temperatures

between two copies will happen with suﬃcient probability the diﬀerences in (inverse)

temperatures ∆β in Eq. 9 have to be small. With βj = βi+1 = βi +∆β and approximating

5

the energy E(Ci) (E(Ci+1)) by the thermal expectation value < E >βi (< E >βi+1) one
can write the logarithm of probability e−∆ of an exchange in Eq. 9 as

∆

≈

(∆β)2 d
dβ

< E > .

(11)

It is obvious from this equation that parallel tempering is not suitable for simulations of

ﬁrst order phase transitions, since in that case < E > is not continuous at the critical

temperature Tc (and the distribution of energies P (E) bimodal). For all other cases it

follows from the above equation that an exchange of conﬁgurations between two copies

will happen with suﬃcient probability, as long as ∆ is of order of one. Since the average

energy grows roughly proportional with the number of residues N, ∆β should be of order

of 1/√N to satisfy that condition. Hence, the number of temperatures to simulate should

also increase roughly proportional to √N with the number of residues. However, the

problem remains of ﬁnding the number and distribution of temperatures which guaran-

tees optimal performance of the algorithm. The lowest temperature will depend on the

molecule under consideration and physical quantities one is interested, but it will in gen-

eral be a temperature where usual canonical simulations get trapped in local minima. In

the present algorithm, escape from these minima is possible through the exchange of con-

formation between two copies associated with diﬀerent temperatures. Hence, the highest

temperature has to be chosen such that any energy barrier can be crossed at this tem-

perature. In this way it is guaranteed that by the successive exchange of conformations

between copies any energy barrier can be overcome and all of the replica will thermalize.

It is easy to combine parallel tempering with other generalized ensemble techniques,

since the algorithm only requires that the copies are non interacting and therefore the

weight of the compound system factorizable into a product of weights for each copy.

Hence, one can generalize Eq. 2 to

wP T (

) =

wGE(f (Ci)) ,

(12)

where wGE(f (Ci)) is a generalized ensemble weight for the i-th copy. The modiﬁcations in

the transition probabilities Eq. 3 and 9 which follow from this generalization are straight

forward. Performing a parallel tempering simulation with generalized ensemble weights

N

i=1
Y

C

6

for the copies will yield to corresponding non-canonical distributions. Hence, to calculate

thermodynamic quantities at temperatures Ti one has to use re-weighting techniques [16].

In the present article one examples of such a combination of parallel tempering with

generalized ensemble techniques is studied. For this the ensemble of Refs. [4, 5] (which is

closely related to Tsalis generalized mechanics formalism [17]) was chosen and to some of

the copies the following weight

wGE(E(βi, Ci)) =

1 + βi

 

−m

E0

E(Ci)
m

−

!

(13)

was assigned. Here, E0 is an estimate for the ground state energy of the molecule and

m a free parameter. Obviously, the new weight reduces in the low-energy region to the
βE) for β(E−E0)

1. On the other hand, high-energy

canonical Boltzmann weight exp(

−

m ≪

regions are no longer exponentially suppressed but only according to a power law, which

enhances excursions to high-energy regions.

It is expected that the so-deﬁned weights

increase the probability of an exchange of conﬁgurations between copies.

3. RESULTS AND DISCUSSION

The eﬀectiveness of the new simulation technique was tested for Met-enkephalin, one of

the simplest peptides, which has become a often used model to examine new algorithms.

Met-enkephalin has the amino-acid sequence Tyr-Gly-Gly-Phe-Met. The potential energy

function Etot that was used is given by the sum of the electrostatic term Ees, 12-6 Lennard-

Jones term EvdW , and hydrogen-bond term Ehb for all pairs of atoms in the peptide

together with the torsion term Etors for all torsion angles:

Etot = Ees + EvdW + Ehb + Etors,
332qiqj
ǫrij

Ees =

,

EvdW =

Ehb =

Aij
r12
ij −

Bij
r6
ij !

Cij
r12
ij −

Dij
r10
ij !

,

,

Etors =

Ul (1

cos(nlχl)) ,

X(i,j)

X(i,j)  

X(i,j)  

Xl

±

7

(14)

(15)

(16)

(17)

(18)

where rij is the distance between the atoms i and j, and χl is the l-th torsion angle. The

parameters (qi, Aij, Bij, Cij, Dij, Ul and nl) for the energy function were adopted from

ECEPP/2.[18] The computer code SMC2 was used. The peptide-bond dihedral angles
ω were ﬁxed at the value 180◦ for simplicity, which leaves 19 angles φi, ψi, and χi as

independent variables.

Parallel tempering simulations with 7 copies were performed. The corresponding tem-

peratures were T1 = 1000 K, T2 = 500 K, T3 = 330 K, T4 = 250 K, T5 = 170 K, T6 = 100

K and T7 = 50 K. The simulation consists of 144,000 sweeps for each copy where in every

sweep each of the 19 angles is updated once. After one sweep for each copy an exchange

of conformations between pairs of copies at neighboring temperatures was tried simula-

tanously for each of the three pairs. Hence, the total number of updates in the parallel

tempering simulation was (19 + 3)

7

144, 000 = 22, 176, 000. This large number was

×

×

chosen to ensure high statistics and is similar to the 1,000,000 sweeps (= 19, 000, 000

updates) used in earlier work where also Met-enkephalin was used to compare the ef-

fectiveness of various numerical algorithms [11]. For the above number of updates 15

hour CPU time were needed on a Silicon Graphics Indigo 2 workstation. While parallel

tempering is best suited for parallel computers the workstation was used because it was

easier accessible than the parallel machine at IMS computer center.

The results of the parallel tempering simulation was compared with that of a multi-

canonical simulation and canonical simulations keeping the number of updates constant

(preliminary runs had shown that all methods need roughly the same amount of CPU time

for a ﬁxed number of updates). In the case of the multicanonical simulation this number

includes the 100,000 sweeps (1,900,000 MC updates) necessary to obtain the weights by

the iterative procedure described in Ref. [7]. The canonical simulations were performed at

the same 7 temperatures as used in the parallel tempering method and each temperature

was simulated with same number of updates (3,168,000 MC updates).

To compare the performance of the various algorithms the potential energy and the

overlap with the (known) ground state was measured. The latter quantity indicates how

2The program SMC was written by Dr. Frank Eisenmenger (eisenmenger@rz.hu-berlin.de)

8

much a given conﬁguration diﬀers from the ground state and is given by

O(t) = 1

1
90 nF

−

nF

i=1 |
X

α(t)
i −

α(GS)
i

,

|

where α(t)

i and α(GS)

i

(in degrees) stand for the nF dihedral angles of the conformation at

t-th Monte Carlo sweep and the ground-state conformation, respectively. Symmetries for
the side-chain angles were taken into account and the diﬀerence α(t)

was always

α(GS)
i

i −

projected into the interval [

180◦, 180◦]. The above deﬁnition guarantees that one has

−

with the limiting values

0

≤

< O >T

1 ,

≤

< O(t) >T
< O(t) >T

(

1 ,
0 ,

→
→

T
T

0 ,

→
→ ∞

.

(19)

(20)

(21)

I start presenting my results by showing in Fig. 1 the histogram of energies as obtained

from the parallel tempering simulation with Monte Carlo updates. Note the overlap be-

tween the Boltzmann distributions which correspond to neighboring temperatures. The

energies where the two histograms have a common overlap are the ones where the tran-

sition probabilities of Eq. 9 are large enough to allow for an exchange of conﬁgurations.

The larger the overlap of histograms the higher is the probability for an exchange of con-

formations. Hence, the temperatures Ti of the copies have to be chosen such that there

is suﬃcient overlab between Boltzmann distributions which correspond to neighboring

temperatures.

To demonstrate the time evolution of states in the parallel tempering algorithm the

start conﬁgurations of each of the seven copies were marked by a label. The labeled

conﬁgurations were called “replicas” and their evolution through the whole parallel tem-

pering simulation was followed. Note that the “replicas” are independent from each

other. Through the exchange moves of parallel tempering the seven “replicas” are shuf-

ﬂed between the seven temperatures (copies), however, these moves do not introduce any

correlation between them. In Fig. 2a it is shown for one of the “replicas” how the seven

9

diﬀerent temperatures are visited in the course of the simulation. Due to this random walk

in temperatures the replica changes dramatically between ground state like conformers

and random coils. This can be seen from the corresponding “time series” of the overlap

of the studied replica with the ground state in Fig. 2b. The overlap varies through the

simulation between O << 1 = (disordered states) and O

1 (ordered state). Note that

≈

the values of overlap in Fig. 2b and temperature in Fig. 2a are correlated. Ground state

like conformations (O close to 1) were observed when the “replica” stayed at low tem-

peratures, while disordered structures (small values of O) appeared together with high

temperatures.

To visualize the exchange of conformations by parallel tempering for a single copy

(temperature), the label of the “replicas” which is visiting the copy associated with the

lowest temperature (T = 50 K), is displayed in Fig. 3 as a function of simulation time

(in MC sweeps). Since the “replicas” are independent from each other, each change of

the “replica”-label indicates that the new conformation is no longer correlated with the

previous conformation. Hence, through the exchange of conformations the Markov chain

converges much faster to the stationary distribution than it does in the case of a regular

canonical simulation with only local Monte Carlo updates. This can be seen in Fig. 4a

where the “time series” in energy is displayed for both a regular canonical simulation at

T = 50 K and for the copy with T = 50 K of a parallel tempering simulation. Obviously

the regular canonical Monte Carlo got stucked in a local minimum and was not able

to thermalize. From previous simulations (see Ref. [5]) it is known that even 1,000,000

sweeps are not enough to thermalize Met-enkephalin at T = 50 K. On the other hand,

with the exchange of conﬁgurations by parallel tempering the simulation thermalizes at

that temperature in less than 10,000 sweeps. This follows also from Fig. 4b where the

“time series” of the overlap function is displayed for both simulations.

In the case of

parallel tempering at T = 50K most of the conformations are close to the ground state

which is consistent with observations from previous simulations [6, 7]. On the other

hand the regular canonical simulation got stucked in a conformation far from the ground

state showing again that the regular Monte Carlo simulation never converged to the true

distribution.

10

Hence, ignoring in the parallel tempering simulation the ﬁrst 10,000 sweeps necessary

for thermalization one can calculate expectation values for average energy and the overlap

with the (known) ground state. The obtained values were in all cases within the errorbars

identical with the ones obtained by the multicanonical simulation and agree with the

results of earlier work [9, 10]). On the other hand, the regular canonical simulations yield

at low temperatures to diﬀerent and unreasonable values, since for these temperatures the

simulations never thermalized. The data for the two quantities are summarized in Tab. 1

and 2 for all three methods.

An important question is how the eﬀectiveness of new approach compares with other

methods and under which conditions it is optimal. To answer this question, further paral-

lel tempering simulations with same number of updates were performed, but where either

the local Monte Carlo updates in Eq. 3 were replaced by molecular dynamics trajectories

or the canonical weights for the copies in Eq. 2 by the the generalized ensemble weights

of Eq. 13. The molecular dynamic updates were performed in dihedral space. The tra-

jectories followed for each copy consisted of 19 leap frog steps with time step ∆t = 0.005

(in arbitrary units). As an example for a combination of parallel tempering with gener-

alized ensemble techniques, a simulation was done where for the 3 lowest temperatures

(T = 50, 100 and 170 K) the weights of Eq. 13 were used and Boltzmann weights for

the higher temperatures. The generalized ensemble weights for the three lowest temper-

atures were chosen such that the resulting deviation from a canonical distribution would

be small. This was ensured by choosing m = 5

nF = 95 (with nF the number of degrees

of freedom) and an arbitrary value E0 =

20.72 kcal/mol.

×

−

In each case expectation values for physical quantities were obtained which were within

the errorbars the same as the one given in Tab. 1 and 2. However, the transition probabil-

ities varied. It did not depend on whether Monte Carlo or molecular dynamics techniques

were used as local updates, but only on the chosen weights. This can be seen in Tab. 3

where these transition probabilities are summarized. As one can see the probabilities

for exchange of conformations between copies can be enhanced by choosing suitable non-

canonical weights like the ones deﬁned in Eq. 13 and used here. To measure the eﬀective-

ness of parallel tempering and to compare it with other sophisticated methods like the

11

multicanonical algorithm the number of “tunneling events” was measured. This quantity

gives a lower bound for the number of independent ground state conformers found in the

simulation. A tunneling event is deﬁned as a random walk between a ground state like

conformer (deﬁned by the condition that the overlap O

0.9 and that the potential en-

ergy is not more than 1 kcal/mol above the ground state energy EGS =

10.72kcal/mol)

and a coil conformer (O

0.3). Using Monte Carlo updates, only two tunneling events

≤

(at T = 250 K) were observed for all seven canonical simulations but 22 events in the case

≥

−

of parallel tempering. This number should be compared with that of a multicanonical run

of same statistics where 26 tunneling events were found. Hence, one can conclude that

both parallel tempering and multicanonical algorithms are of similar eﬃciency and much

better than regular canonical Monte Carlo with solely local updates. The eﬀectiveness

of parallel tempering can be improved by choosing suitable generalized ensemble weights.

With the generalized ensemble weights used here the number of tunneling events could

be increased by a factor 1.5 to 34 events (reﬂecting the increased transition probabili-

ties betweeen the copies, see Tab. 3). However, a drawback of such a combination with

generalized ensemble methods is that the weights are no longer a priori given for paral-

lel tempering. The gained improvement requires careful choice of additional parameters

and may not always be worth the additional eﬀort. For some other combinations of the

exponent m and the constant E0 in Eq. 13 it was found that the eﬃciency became even

worse than for the case where canonical weights were assigned to all copies (data not

shown). Hence, by assigning generalized ensemble weights to all or only some copies, the

eﬀectiveness of parallel tempering can be increased, but whether such approach is useful

or not, may depend on the molecule under investigation.

4. Conclusions

It was shown that a new algorithm, parallel tempering, can be successful applied to simu-

lation of molecules and helps to overcome the multiple minima problem. The new method

can be used with both Monte Carlo and molecular dynamics updates. Its eﬀectiveness is

comparable to generalized ensemble techniques like the multicanonical algorithm. How-

ever, unlike for the case of generalized ensemble techniques, the weights are a priori

known for parallel tempering, which makes application of the new method technically

12

easier than that of generalized ensembe algorithms. Further, the two techniques can be

combined which allows to increase their eﬃciency.

Acknowledgements:

The simulation were performed on the computers at the Computer Center at the Institute

for Molecular Science (IMS), Okazaki, Japan. The article was written when I was fellow

at the Center for Interdisciplinary Research (ZiF) of the Bielefeld University. I like to

thank ZiF and specially F. Karsch, head of the research group “Multiscale Phenomena

and their Simulation”, for the kind hospitality extended to me.

References

[1] N. Metropolis, A.W. Rosenbluth, M.N. Rosenbluth, A.H. Teller, and E. Teller, J.

Chem. Phys., 21, 1087 (1953).

[2] B.A. Berg and T. Neuhaus, Phys. Lett. B 267, 249 (1991); Phys. Rev. Lett. 68, 9

(1992); B. Berg, Int. J. Mod. Phys. C 3, 1083 (1992).

[3] A.P. Lyubartsev, A.A.Martinovski, S.V. Shevkunov, and

P.N. Vorontsov-

Velyaminov, J. Chem. Phys. 96, 1776 (1992); E. Marinari and G. Parisi, Euro-

phys. Lett. 19, 451 (1992).

[4] U.H.E. Hansmann, Physica A, 242 250 (1997).

[5] U.H.E. Hansmann and Y. Okamoto, Phy. Rev. E 56 2228 (1997).

[6] U.H.E. Hansmann and Y. Okamoto, J. Comp. Chem. 14, 1333 (1993).

[7] U.H.E. Hansmann and Y. Okamoto Physica A 212, 415 (1994).

[8] Y. Okamoto and U.H.E. Hansmann, J. Phys. Chem. 99, 11276 (1995).

[9] U.H.E. Hansmann, Y. Okamoto and F. Eisenmenger, Chem. Phys. Lett. 259, 321

(1996).

[10] F. Eisenmenger and U.H.E. Hansmann J. Phys. Chem. B 101 3304 (1997).

13

[11] U.H.E. Hansmann and Y. Okamoto, J. Comp. Chem. 18, 920 (1997).

[12] R.H. Swendsen and J.S. Wang, Phys. Rev. Lett. 58, 86 (1987).

[13] K. Hukushima and K. Nemoto, J. Phys. Soc. (Jap.) 65 1604 (1996).

[14] G.J. Geyer, Stat. Sci. 7, 437 (1992).

[15] M.C. Tesi, E.J.J. van Rensburg, E. Orlandini and S.G. Whittington, J. Stat. Phys.

82, 155 (1996).

[16] A.M. Ferrenberg and R.H. Swendsen, Phys. Rev. Lett. 61, 2635 (1988); Phys. Rev.

Lett. 63 , 1658(E) (1989), and references given in the erratum.

[17] C. Tsallis, J. Stat. Phys. 52, 479 (1988).

[18] M.J. Sipple, G. N´emethy, and H.A. Scheraga, J. Phys. Chem. 88, 6231 (1984), and

references therein.

14

•

•

•

Tables:

Tab. 1: Average potential energy < E > as function of temperature.

T
1000
500
330
250
170
100
50

Canonical Multicanonical Parallel Tempering
17.48 (1)
8.65 (6)
1.44 (22)
-3.23 (76)
-4.27 (18)
-1.08 (9)
-2.54 (5)

17.51 (6)
8.75 (8)
1.56 (11)
-2.84 (16)
-6.27 (4)
-8.49 (3)
-9.68 (2)

17.50 (2)
8.65 (5)
1.64 (12)
-2.85 (15)
-6.36 (7)
-8.50 (5)
-9.69 (3)

Tab. 2: Average overlap function (deﬁned in Eq. 19) as function of temperature.

T
1000
500
330
250
170
100
50

Canonical Multicanonical Parallel Tempering
0.29 (1)
0.34 (1)
0.48 (3)
0.62 (2)
0.10 (1)
0.34 (1)
0.42 (1)

0.29 (1)
0.34 (1)
0.44 (2)
0.60 (1)
0.78 (1)
0.89 (1)
0.94 (1)

0.29 (1)
0.34 (1)
0.45 (1)
0.61 (1)
0.78 (1)
0.89 (1)
0.94 (1)

Tab. 3: Probability for an exchange of conﬁguration between two temperatures for

various variants of the parallel tempering method.

Molecular Dynamics

Monte Carlo

Canonical weights Generalized Ensemble weights

Monte Carlo
Canonical weights
0.14
0.17
0.31
0.22
0.15
0.10

500 K
330 k
250 k
170 k
100 k
50 k

↔
↔
↔
↔
↔
↔

1000 K
500 K
330 K
250 K
170 K
100 K

0.14
0.18
0.28
0.29
0.16
0.10

0.14
0.18
0.29
0.74
0.21
0.31

15

Figure Captions:

•

•

•

•

•

•

Fig. 1: Histogram of Energies for diﬀerent temperatures as obtained from a parallel

tempering simulation with 7 copies and 144,000 Monte Carlo sweeps for each copy.

Fig. 2a: “Time series” of temperatures which one of the seven “replicas” encountered

over the 144,000 Monte Carlo sweeps in the parallel tempering simulation.

Fig. 2b: “Time series” of the overlap function, deﬁned in Eq. 19, for one of the seven

“replicas” over 144,000 Monte Carlo sweeps in the parallel tempering simulation.

Fig. 3: “Time series” of “replicas” over 144,000 Monte Carlo sweeps in the parallel

tempering simulation as encountered for T = 50 K.

Fig. 4a: “Time series” of energy for T = 50 K over 144,000 Monte Carlo sweeps as

obtained from the parallel tempering algorithm and a regular canonical simulation.

Fig. 4b: “Time series” of the overlap function (deﬁned in Eq. 19) for T = 50 K over

144,000 Monte Carlo sweeps as obtained from the parallel tempering algorithm and

a regular canonical simulation.

16

HISTOGRAM OF ENERGIES

0.7

50 K

100 K

170 K

)

E
P

(

0.6

0.5

0.4

0.3

0.2

0.1

0

250 K

330 K

500 K

1000 K

-10

-5

0

5

10

15

20

E [Kcal/Mol]

 REPLICA 7

]

K
T

[

1000

800

600

400

200

0

0

20000

40000

60000

80000

100000

120000

140000

MC SWEEPS

 REPLIKA 7

 

O
P
A
L
R
E
V
O

1

0.8

0.6

0.4

0.2

0

0

20000

40000

60000

80000

100000

120000

140000

MC SWEEPS

T=50K

A
C
I
L
P
E
R

7

6

5

4

3

2

1

0

20000

40000

60000

80000

100000

120000

140000

MC SWEEPS

T=50 K

Regular Canonical MC

2

0

-2

-4

-6

-8

-10

 

E
Y
G
R
E
N
E
 
L
A
T
N
E
T
O
P

I

Parallel Tempering

0

20000

40000

60000

80000

100000

120000

140000

MC SWEEPS

 

O
P
A
L
R
E
V
O

1

0.8

0.6

0.4

0.2

0

0

T=50K

Parallel Tempering

Regular Canonical MC

20000

40000

60000

80000

100000

120000

140000

MC SWEEPS

