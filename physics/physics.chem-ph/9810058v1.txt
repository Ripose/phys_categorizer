8
9
9
1
 
t
c
O
 
7
2
 
 
]
h
p
-
m
e
h
c
.
s
c
i
s
y
h
p
[
 
 
1
v
8
5
0
0
1
8
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

A Multilevel Blocking Approach to the Sign Problem in Real-Time Quantum Monte
Carlo Simulations

C.H. Mak1 and R. Egger2
1Department of Chemistry, University of Southern California, Los Angeles, CA 90089-0482
2Fakult¨at f¨ur Physik, Albert-Ludwigs-Universit¨at, D-79104 Freiburg, Germany
(Date: February 2, 2008)

We propose a novel approach toward the general solution
of the sign problem in real-time path-integral simulations.
Using a recursive multilevel blocking strategy, this method
circumvents the sign problem by synthesizing the phase can-
cellations arising from interfering quantum paths on multiple
timescales. A number of numerical examples with one or a
few explicit degrees of freedom illustrate the usefulness of the
method.

Path integrals [1] provide an elegant alternative to the
operator formulation of quantum mechanics. Because
they are easily adapted to many-body systems, quantum
Monte Carlo (QMC) simulations based on path integrals
can potentially yield exact results for the dynamics of
condensed phase quantum systems. A number of early
attempts to use QMC simulations for real-time dynamics
[2] demonstrated their potential, but these studies also
uncovered the ubiquitous “dynamical sign problem” —
interference among quantum paths leads to large statisti-
cal noise that increases linearly with the number of pos-
sible paths, which in turn grows exponentially with the
timescale of the problem. Consequently, real-time QMC
simulations have been limited to problems of very short
timescales. Several attempts to extend the timescale of
real-time QMC simulations have appeared [3–5], all of
which rely on a common idea — by using various ﬁlter-
ing schemes, the phase cancellations can be numerically
stabilized by damping out the non-stationary regions in
conﬁguration space. Such ﬁltering methods were able to
extend the timescale somewhat, but they were generally
unable to reach timescales of interest in typical chemical
systems.

Here we propose a novel approach based on a blocking
strategy which may provide a general solution to the dy-
namical sign problem for very long times. The blocking
strategy asserts that by sampling groups of paths called
blocks, the sign problem is always reduced compared to
sampling single paths [6]. Though this blocking strat-
egy seems simple, its practical implementation is cum-
bersome, especially when going out to long times. Be-
cause the number of paths grows exponentially with the
timescale, the number of blocks also grows immensely. To
cure this problem, we ﬁrst deﬁne elementary blocks and
then group them together into larger blocks. Blocks of

diﬀerent sizes are introduced on several timescales called
levels. After taking care of the sign cancellations within
all blocks on a ﬁner level, the entire sign problem can then
be transferred to the next coarser level. By recursively
proceeding from the bottom level (shortest timescale) up
to the top (longest timescale), the troublesome numeri-
cal instabilities associated with the sign problem can be
systematically avoided. In a slightly diﬀerent form, this
multilevel blocking (MLB) algorithm has recently been
applied to treat the “fermion sign problem” in many-
fermion imaginary-time simulations [7]. As most techni-
cal details of the MLB scheme can be found in [7], we only
give a brief description of the algorithm below, stressing
the main ideas and its diﬀerences from the fermion for-
mulation.

For concreteness, we describe the MLB method for the

calculation of an equilibrium time-correlation function,

hA(0)B(t)i =

Tr (cid:8)e−(β¯h+it)H/¯hAe+itH/¯hB(cid:9)
Tr (cid:8)e−(β¯h+it)H/¯he+itH/¯h
(cid:9)

.

(1)

to other dynamical properties

With minor modiﬁcations, the MLB method also ap-
plies
like the ther-
mally symmetrized correlation function [8], Cs(t) =
Z −1Tr{e−(β¯h/2+it)H/¯hAe−(β/¯h/2−it)H/¯hB}, with Z being
the partition function.
In terms of path integrals, the
traces in (1) involve two quantum paths, one propagated
backward in time for the duration −t and the other prop-
agated in complex time for the duration t − iβ¯h. Dis-
cretizing each of the two paths into P slices, the entire
cyclic path has a total of 2P slices. A slice on the ﬁrst
half of them has length −t/P , and on the second half
(t − iβ¯h)/P . We require P = 2L which deﬁnes the total
number of levels L. Denoting the quantum numbers (e.g.,
spin or position variables) at slice j by rj, {r1, · · · r2P }
is a discrete representation of a path, and the correlation
function (1) reads

R dr1 · · · dr2P B(r2P )A(rP ) Q
R dr1 · · · dr2P Q

2P

j=1(rj, rj+1)0

2P

j=1(rj, rj+1)0

,

(2)

where the level-0 bond (rj, rj+1)0 is simply the short-time
propagator between slices j and j + 1, and r2P +1 = r1.
A direct application of the QMC method would sample
these paths using the modulus of the integrand in the
denominator as the weight.

We ﬁrst assign all slices along the discretized path to
diﬀerent levels ℓ = 0, . . . , L (see Figure 1). Each slice

1

(rj, rj+4)2 = hΦ [(rj, rj+2)1(rj+2, rj+4)1]iP0P1 ,

and iterate the process up to the top level by employing
analogously deﬁned level-ℓ bonds. The correlation func-
tion (1) can then be computed from

hB(r2P )A(rP )Φ[(rP , r2P )L(r2P , rP )L]iP
hΦ[(rP , r2P )L(r2P , rP )L]iP

,

(4)

with the positive deﬁnite MC weight P = P0P1 · · · PL.
The denominator in (4) gives the average phase and in-
dicates to what extent the sign problem has been solved.
Under the direct QMC method, the average phase decays
exponentially with t and is typically close to zero. With
the MLB algorithm, however, the average phase remains
close to unity even for long times, with a CPU time re-
quirement ∼ t. The price to pay for the stability of the
algorithm is the increased memory requirement ∼ K 2 as-
sociated with having to store the sampled conﬁgurations.
Now we illustrate the practical usefulness of the MLB
method by several numerical examples. In each of these
examples, we compute a time-correlation function. The
average phase is larger than 0.6 for all data sets shown
below. The decay in the average phase with t is a result
of the ﬁniteness of K [7]. Choosing a larger K allows for
a larger average phase out to longer time at the cost of
increased computer memory and CPU time. Each data
point in even the most intensive calculation took no more
than a few hours on an IBM RS 6000/590.

A. Harmonic oscillator. For H = p2/2m + mω2x2/2,
the real and imaginary parts of hx(0)x(t)i oscillate in
time due to vibrational coherence. In dimensionless units
m = ω = 1, the oscillation period is 2π. Figure 2(a)
shows MLB results for C(t) = Re hx(0)x(t)i. With P =
32 for the maximum time t = 26, K = 200 samples were
used for sampling the coarser bonds. Within error bars,
the data coincide with the exact result and the algorithm
produces stable results free of the sign problem. Without
MLB, the signal-to-noise ratio was practically zero for
t > 2.

B. Two-level system. For a symmetric two-state sys-
tem, H = − 1
2 ∆σx, the dynamics is controlled by tun-
neling. The spin correlation function hσz(0)σz(t)i ex-
hibits oscillations indicative of quantum coherence. Fig-
ure 2(b) shows MLB results for C(t) = Re hσz(0)σz(t)i,
Putting ∆ = 1, the tunneling oscillations have a period
of 2π. With P = 64 for the maximum time t = 64, only
K = 100 samples were used for sampling the coarser
bonds. The data agree well with the exact result. Again
the simulation is stable and free of the sign problem.
Without MBL, the simulation failed for t > 4.

j = 1, . . . , 2P belongs to a unique level ℓ, such that
j = (2k + 1)2ℓ and k is a nonnegative integer. For
instance, slices j = 1, 3, 5, . . . belong to level ℓ = 0,
slices j = 2, 6, 10, . . . to ℓ = 1, etc. The MLB algo-
rithm starts by sampling only conﬁgurations which are
allowed to vary on slices associated with the ﬁnest level
ℓ = 0, using the weight P0 = |(r1, r2)0 · · · (r2P , r1)0|.
The short-time level-0 bonds are then employed to syn-
thesize longer-time level-1 bonds that connect the even-j
slices. Subsequently the level-1 bonds are used to syn-
thesize level-2 bonds, and so on. In this way the MLB
algorithm moves recursively from the ﬁnest level (ℓ = 0)
up to increasingly coarser levels until ℓ = L, where the
measurement is done using r2P and rP .

6

2

7

5

j = 8

4

1

3

FIG. 1.

Example of how slices (circles) are assigned to
various levels for L = 2. The ﬁrst path goes from j = 8 to
4 and the second from j = 4 to 8. The ﬁnest level ℓ = 0
contains j = 1, 3, 5, 7, level ℓ = 1 contains j = 2, 6, and the
top level ℓ = 2 contains j = 4, 8. Coarse bonds are indicated
by dotted (level-1) and dashed (level-2) lines.

Generating a MC trajectory containing K samples for
each slice on level ℓ = 0 and storing these samples, we
compute the level-1 bonds according to

(rj, rj+2)1 = hΦ[(rj, rj+1)0(rj+1, rj+2)0]iP0

(3)

= K −1

Φ[(rj, rj+1)0(rj+1, rj+2)0] ,

X
rj+1

where the summation Prj+1 extends over the K samples,
and Φ[z] = eiarg(z) denotes the phase. For a complete
solution of the sign problem, the sample number K has
to be suﬃciently large [7]. The bonds (3) contain crucial
information about the sign cancellations on the previous
level ℓ = 0. Their beneﬁt becomes clear when rewriting
the integrand of the denominator in (2) as

P0 × (r2, r4)1 · · · (r2P −2, r2P )1(r2P , r2)1 .

Comparing this to (2), we notice that the entire sign
problem has been transferred to the next coarser level.

In the next step, the sampling is carried out on level
ℓ = 1 in order to compute the next-level bonds, using the
weight P0P1 with P1 = |(r2, r4)1 · · · (r2P , r2)1|. Gener-
ating a sequence of K samples for each slice on level ℓ = 1,
and storing these samples, we then calculate the level-2
bonds in analogy with (3),

2

(a)

(b)

(c)

(d)

0

5

10

15

20

25

0

10

20

30

40

50

60

0

5

10

15

20

25

30

)
t
(

C

−1

1

0

1

0

1

0

−1

−1

1

0

−1

)
t
(

C

)
t
(

C

)
t
(
’

C

S

0

2

4

8

10

6

t

FIG. 2. MLB results (closed circles) for various systems.
(a) C(t) for a
Error bars indicate one standard deviation.
harmonic oscillator at β¯h = 1. The exact result is indicated
by the solid curve. (b) Same as (a) for a two-level system
at β¯h = 10.
(c) Same as (a) for a double-well system at
β¯h = 1. This temperature corresponds to the classical barrier
s(t) for a double-well system coupled to two
energy.
oscillators at β¯h = 1. For comparison, open diamonds are for
the uncoupled (α = 0) system. Note that C ′
s(t) is similar but
not identical to C(t) shown in (c). Solid and dashed lines are
guides to the eye only.

(d) C ′

C. Double-well potential. Next, we examine a double-
4 x4.

well system with the quartic potential V (x) = −x2 + 1

3

At low temperatures, interwell transfer occurs through
tunneling motions on top of intrawell vibrations. These
two eﬀects combine to produce nontrivial structures in
the position correlation function. At high tempera-
tures, interwell transfer can also occur by classical bar-
rier crossings. Figure 2(c) shows MLB results for C(t) =
Re hx(0)x(t)i. The slow oscillation corresponds to inter-
well tunneling, with a period of approximately 16. The
higher-frequency motions are characteristic of intrawell
oscillations. In this simulation, K = 300 samples were
used. The data reproduce the exact result well, capturing
all the ﬁne features of the oscillations. Again the calcu-
lation is stable and free of the sign problem, whereas a
direct simulation failed for t > 3.

D. Multidimensional tunneling system. As a ﬁnal ex-
ample, we consider a problem with three degrees of free-
dom, in which a particle in a double-well potential is bi-
linearly coupled to two harmonic oscillators. The quartic
potential in the last example is used for the double-well,
and the harmonic potential in the ﬁrst example is used
for both oscillators. The coupling constant between each
oscillator and the tunneling particle is α = 1/2 in dimen-
sionless units. For this example, we computed the cor-
relation function Cs(t) for the position operator of the
tunneling particle. Direct application of MC sampling to
Cs(t) has generally been found unstable for t > β¯h/2 [8].
In contrast, employing only moderate values of K = 400
to 900, the MLB calculations allowed us to go up to
t = 10β¯h. (Notice that this K is no larger than three,
i.e. the number of dimensions, times the K needed for
one-dimensional systems.) Figure 2(d) shows MLB re-
sults for C′
s(t) = Re Cs(t). For the coupled system, the
position correlations have lost the coherent oscillations
and instead decay monotonically with time. Coupling to
the medium clearly damps the coherence and tends to
localize the tunneling particle.

The data presented here demonstrate that the MLB
method holds substantial promise toward an exact and
stable simulation method for real-time quantum dynam-
ics computations of many-dimensional systems up to
timescales of practical interest. Instead of the exponen-
tially vanishing signal-to-noise ratio in a ordinary appli-
cation of the Monte Carlo method to real-time path inte-
gral problems, the MLB method has a CPU requirement
that grows only linearly with time. Moreover, the data
we have so far seem to suggest that the memory require-
ment K also grows only linearly with the dimensionality
of the system.

This research has been supported by the National Sci-
ence Foundation under grants CHE-9257094 and CHE-
9528121, by the Sloan Foundation, the Dreyfus Founda-
tion, and by the Volkswagen-Stiftung.

[1] R.P. Feynman and A.R. Hibbs, Quantum Mechanics and

Path Integrals (McGraw-Hill, New York, 1965).

[2] For a review, see D. Thirumalai and B.J. Berne, Ann. Rev.

Phys. Chem. 37, 401 (1986).

[3] V.S. Filinov, Nucl. Phys. B 271, 717 (1986).
[4] N. Makri and W.H. Miller, Chem. Phys. Lett. 139, 10

(1987); J. Chem. Phys. 89, 2170 (1988).

[5] J.D. Doll, M.J. Gillan, and D.L. Freeman, Chem. Phys.
Lett. 143, 277 (1988); J.D. Doll, T.L. Beck, and D.L. Free-
man, J. Chem. Phys. 89, 5753 (1988).

[6] C.H. Mak and R. Egger, Adv. Chem. Phys. 93, 39 (1996).
[7] C.H. Mak, R. Egger, and H. Weber-Gottschick, Phys. Rev.

Lett. (in press); see also cond-mat/9810002.

[8] D. Thirumalai and B.J. Berne, J. Chem. Phys. 79, 5029

(1984); ibid. 81, 2512 (1984).

4

