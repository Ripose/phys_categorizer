5
0
0
2
 
v
o
N
 
7
 
 
]
h
p
-
m
e
h
c
.
s
c
i
s
y
h
p
[
 
 
1
v
1
6
0
1
1
5
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Link: http://charles.karney.info/biblio/design.html
E-print: arXiv:physics/0511061

Using binding free energy to guide ligand design

Charles F. F. Karney,∗ Jason E. Ferrara, and Clay D. Spence

Sarnoff Corporation, Princeton, NJ 08543-5300

(Dated: November 7, 2005)

The molecular distributions obtained from canonical Monte Carlo simulations can be used to ﬁnd an approximate
interaction energy. This serves as the basis of a method for estimating the binding free energy for a ligand to a
protein which enables the free energy to be used to direct the design of ligands which bind to a protein with high
afﬁnity.

Keywords: ligand design, binding free energy, molecular distribution, EM-algorithm, molecular symmetry

I. INTRODUCTION

The goal of structure-based drug design is to create a ligand
which binds with high afﬁnity to a protein target. An exciting
prospect is the ability to carry out this design process com-
putationally and thereby obtain a series of drug leads which
are potent and which can be subsequently optimized for drug-
like properties. In an earlier paper, we presented the worm-
hole method [1] which, subject to some limitations, allows the
binding afﬁnity of a given drug ligand to a protein to be com-
puted. For the purposes of structure-based drug design, we
might imagine using the wormhole method to screen a large
number of known molecules against the protein. This suffers
from two serious drawbacks: only a tiny fraction of feasible
drug-like chemicals can be assessed in this way; and it is not
initially known where or how the compounds are likely to bind
to the protein.

One strategy for alleviating these problems is to use a
fragment-based approach [2]. Here fragments are small (usu-
ally rigid) organic molecules. By a judicious choice of frag-
ments, a large and diverse set of drug-like molecules may be
built in silico by forming bonds between them. Because the
number of fragments is small, O(100), and because they are
relatively simple, we can compute maps of where the frag-
ments bind to the protein. These data then serve as the build-
ing blocks to create larger drug-like molecules. The process of
constructing these molecules, of necessity, provides the bind-
ing mode to the protein. The key is, of course, to build the
large molecules in such a way as to optimize the binding afﬁn-
ity.

We face two challenges here. Given a partially built candi-
date molecule, can we quickly assess how a particular frag-
ment can be added? Having grown the molecule with the
addition of a fragment, how can we rapidly compute the re-
sulting binding afﬁnity to evaluate whether the new molecule
is acceptable?

∗Electronic address: ckarney@sarnoff.com

In this paper we describe possible solutions to both these
problems. Let us start by giving an overall description of the
method. Our computational model consists of a protein which
is either kept rigid or is allowed to have a small number of
degrees of freedom interacting with a ligand. We assume that
the ligand is “made” by connecting several simpler organic
fragments together and, for simplicity, we take the fragments
to be rigid and assume that they are joined by rotatable bonds;
however, the method is easily generalized to remove these re-
strictions. This system is described by a conventional force
ﬁeld such as Amber [3] with the effects of the solvent cap-
tured by an implicit solvent model such as GB/SA [4; 5]. In
this model, we can limit the number of degrees of freedom of
the system to a manageable number, O(10). For the purposes
of this discussion, we assume that we have identiﬁed a binding
site on the protein. Our goal is to design a set of ligands (cre-
ated from the fragments) which bind to the protein with high
afﬁnity. It would be possible to build additional criteria into
the design process, e.g., synthesizability, solubility, etc.; how-
ever, these considerations are beyond the scope of this paper.
Our standard for success is that the approximate techniques
we develop lead to ligands with high afﬁnity as predicted by
the full force ﬁeld outlined above. For this purpose it is conve-
nient to regard the full computational model as “exact”. The
degree of agreement with experimental data, while crucial, en-
tails validation of the force ﬁeld which, again, is beyond the
scope of this work.

We begin by performing wormhole Monte Carlo simula-
tions [1] of each of the various fragments binding to the pro-
tein. These calculations give the binding afﬁnity of each
fragment to the protein and equilibrium distributions of the
fragment-protein system. We next ﬁt an analytic function, a
Gaussian mixture, to these molecular distributions. The ﬁts
for two fragments are then used for two purposes: to ﬁnd fea-
sible ways to form a bond between the fragments, creating a
larger ligand and to give an approximate interaction energy
for the newly created ligand with the protein which, in turn,
allows for rapidly computing its binding afﬁnity via the worm-
hole method.

The ﬁrst part of this paper describes techniques for ﬁtting

2

(1)

(2)

(3a)

(3b)
(3c)

(3d)

a Gaussian mixture to a distribution of molecular conﬁgura-
tions. We adopt the well-known EM method [6] for this pur-
pose; however, we have to adapt the method to deal with two
peculiarities of molecular distributions: ﬁrstly, in the presence
of constraints, the distributions lie on a sub-manifold of Carte-
sian space; secondly, for symmetric molecules, we can make
a better ﬁt by respecting the symmetry.

Two applications of Gaussian mixtures for molecular distri-
butions are described next. They may be used to deﬁne suit-
able portals for the wormhole method; this provides a more
robust method than the use of ellipsoidal portals given in [1].
They may also be used to provide an approximation for the
energy of a molecular system.

Finally, we describe how these tools may be combined to
compute an approximate binding afﬁnity which allows the
binding free energy to be used to direct the design of ligands.

log-likelihood

L = hln f (xi); wiii,

where h·; ·ii denotes the weighted arithmetic mean,

hXi; wiii =

wiXi

wi.

n

Xi=1

n

(cid:30)

Xi=1

An EM iteration proceeds as follows:

gij =

,

αjG(xi; yj, Cj)
f (xi)
= hgij ; wiii,
= hxi; gijwiii,
= h(xi − ynew

j

αnew
j
ynew
j
Cnew
j

)(xi − ynew

j

T
)

; gijwiii.

II. GAUSSIAN MIXTURES

There is often an interest in ﬁtting some observed data with
a “model”, an analytic function which approximates the data.
One important category of data is the set of conﬁgurations
of a molecular system given, for example, by the results of
a Monte Carlo simulation. An analytic ﬁt then provides an
approximate but compact representation of the observed data.
Because the samples from a canonical ensemble Monte Carlo
simulation are drawn from a distribution which is proportional
to exp(−βE(x)), where E(x) is the energy of the system in
conﬁguration x, β = 1/(kT ), k is the Boltzmann constant,
and T is the temperature, the analytic ﬁt can also be used to
give an approximate expression for the energy of a molecular
conﬁguration.

An important class of models is the mixture of Gaussians
and the EM (expectation-maximization) algorithm [6] is fre-
quently used to optimize this model based on the maximum
likelihood. We begin by reviewing an iteration of the standard
EM algorithm including the straightforward extension of al-
lowing the samples to have a statistical weight. Assume that
our data is

[x1, x2, x3, . . . , xn],

where xi is a point in Rd and that associated with each of the
samples xi is a scalar weight wi. This weight might arise from
coalescing consecutive identical samples from a Monte Carlo
simulation (because of a run of rejected moves) or because
the Monte Carlo sampling is carried out with a non-physical
energy E∗ in which case we have wi = exp[−β(E(xi) −
E∗(xi))].

Let the current ﬁt be

f (x) =

αjG(x; yj , Cj),

m−1

Xj=0

m−1
j=0 αj = 1 and G(x; yj , Cj) is a d-dimensional
where
Gaussian with unit volume and mean, yj , and covariance, Cj .
The goal is to ﬁnd the set {αj, yj , Cj} which maximizes the

P

With this procedure, the log-likelihood is guaranteed to con-
verge to a local maximum [6]. The quantity gij gives the re-
sponsibility of the Gaussian component G(·; yj , Cj) for xi.

A. Non-Cartesian space

When simulating complex molecules it is important to re-
duce the dimensionality of conﬁguration space by imposing,
for example, constraints on bond lengths and bond angles. For
example, when simulating biphenyl (two benzene rings linked
by a single bond), the energetics of the molecule allows us to
treat it as two rigid rings connected by a bond that permits
only torsional movement. The complete conﬁguration of the
molecule is then given by the position and orientation of one
of the rings together with the torsion angle of the connecting
bond.

We will represent torsion angles as a point on the circle S1.
Orientations are conveniently represented as unit quaternions
[7]; however, because q and −q represent the same orienta-
tion, orientations are deﬁned as a pair of opposite points on
S3. In Mardia and Jupp [8], a distinction is made between a
directed line through the origin, a direction (which can rep-
resent the torsion angle), and an undirected line through the
origin, an axis (which can represent orientations of general
molecules). The orientation of a diatomic molecule, for ex-
ample CO, would be given by a unit vector, i.e., a direction
on S2. The full conﬁguration x is then a mixture of Cartesian
coordinates and “angle-like” coordinates in Sl. Our strategy
for applying Gaussian ﬁts to points in this mixed topology is
to replace eq. (3c) by

ynew

j = hhxi; gijwiiii,

where hh·; ·iii is the appropriate weighted “physical” mean of
xi. For the angle-like coordinates, we ﬁnd the mean by em-
bedding Sl in Rl+1. The mean direction is given by the di-
rection of the weighted sum of the unit vectors [8], while the
mean axis is given by the axis about which the moment of
inertia of the weighted axes is minimum [7; 8].

Similarly, we replace eq. (3d) by

Cnew

j = hd(xi, ynew

j

)d(xi, ynew

j

T
)

; gijwiii,

where d(x, y) is a displacement in Rd from y to x. The op-
eration of d is to map conﬁgurations into a local Cartesian
space centered at y.
In order to make such a mapping for
the angle-like coordinates, we project the sphere (in the case
of directions) or hemisphere (in the case of axes) onto a ball
in Rl using a generalization of the Lambert azimuthal equal-
area projection [1] with the pole of the projection given by
the mean. It is important that the projection preserve area so
that its Jacobian is constant; in this way, integrals in the pro-
jected space are the same (up to a multiplicative constant) as
integrals in the original space.

In carrying out this extension of Gaussians to non-Cartesian
geometries, we have lost an important property of the Gaus-
sian. In Rd, if we ﬁt a single Gaussian to arbitrary data, then
the log-likelihood is maximized by choosing the mean and co-
variance of the Gaussian equal to those of the data. We are not
aware of a generalization of the Gaussian which preserves this
property for our more complex geometries. However, the pre-
scription given above presumably nearly preserves this prop-
erty provided that the covariances of the individual compo-
nents in the mixture are sufﬁciently small that the Gaussians
do not “wrap around” Sl to any great degree. We will address
this issue later.

In the discussion above, we have implicitly assumed that
a uniform measure on Sl is the natural metric for angle-like
coordinates. This is the case for the orientation of a mole-
cule and for torsion angles. However, the situation is more
complex for molecules whose bond angles can vary (for ex-
ample to treat the common conformations of cyclohexane). A
full treatment of such cases is beyond the scope of this paper.
However, the strategy would be the same as given here: de-
termine a suitable mean and then map the samples to a locally
Cartesian space centered at the mean in such a way that con-
ﬁguration space integrals can be expressed in the transformed
space with a constant Jacobian.

B. Incorporation of symmetries

The use of symmetries allows the simpliﬁcation of many
problems.
In describing molecular conﬁgurations, we en-
counter both discrete and continuous symmetries. Examples
of the latter are translational and orientational invariance when
simulating a solute molecule in a large volume of solvent, ro-
tational invariance about the axis in a diatomic molecule, etc.
Such symmetries are best treated by expressing the molecu-
lar conﬁgurations in a lower dimensional space thereby ig-
noring the symmetry coordinates. Thus the “orientation” of a
diatomic molecule can be expressed as a direction on S2 rather
than as an axis on S3.

Let us describe some typical discrete symmetries that arise
in molecular systems. A molecule of methane, CH4, may
be oriented in 12 different ways (the order of the tetrahedral
group T ) that leave like atoms in the same positions. We do
not treat the reﬂection symmetry of methane as an additional
symmetry because such inversions do not occur under normal
conditions.

A more complex example is biphenyl. When bound to a

3

protein, this has 8 symmetries made up of combinations of
180◦ rotations of the benzene rings about the connecting bond
and an interchange of the two rings. When biphenyl is placed
in any of its 8 symmetric positions the resulting system en-
ergy and hence the equilibrium distribution is the same. If,
on the other hand, the biphenyl is free in solution, then we
remove the continuous symmetries by ﬁxing the position and
orientation of one of the rings. There are then 4 symmetries
given by ψ 7→ ±ψ and ψ 7→ ±ψ + π where ψ is the torsion
angle. These correspond to rotating the free ring by 180◦ and
changing the sign of the torsion angle. The latter operation
places the biphenyl into its mirror symmetric conformation
(but not by inverting the molecule). This symmetry is nor-
mally excluded when biphenyl is bound to a protein, because
the protein binding pocket will not exhibit the same symmetry
(because proteins are chiral).

We shall suppose that the system has a k-order symmetry,
which can be described by a symmetry operator S(·, l) where
0 ≤ l < k and

x 7→ S(x, l)

maps the conﬁguration into one of the k symmetric con-
ﬁgurations. We can compose symmetry operations with
S(S(x, l′), l) = S(x, l ⊕ l′). Clearly ⊕ deﬁnes a group of
order k. We will take identity element to be 0 and deﬁne the
inverse of l to be ¯l (thus, l ⊕ ¯l = 0).

In ﬁtting a Gaussian mixture to data, we can use S both to
symmetrize the samples and to symmetrize the ﬁt. However,
by using the properties of S the computational complexity in-
creases only by k (instead of k2). We begin by symmetrizing
the ﬁt,

f (x) =

m−1

k−1

αj

1
k

Xj=0

Xl=0

G(S(x, l); yj , Cj).

For simplicity, we apply the symmetry operation through the
conﬁguration argument of G rather than via yj or Cj. From
this deﬁnition, it is easy to show that

f (S(x, l)) = f (x).

(This follows from the group properties of ⊕.) In forming the
responsibility matrix, we start by computing the responsibility
of the component G(S(·, l′); yj , Cj) for the symmetrized data
point S(xi, l),

giljl′ =

αjG(S(S(xi, l), l′); yj , Cj)
f (S(xi, l))
αjG(S(xi, l′ ⊕ l); yj, Cj )
f (xi)

1
k
1
k
= gij(l′⊕l)

=

,

,

where

gijl =

1
k

αjG(S(xi, l); yj, Cj)
f (xi)

.

We can now update the components using
αnew
j
ynew
j
Cnew
j

= hgijl; wiii,l,
= hhS(xi, l); gijlwiiii,l,
= hd(S(xi, l), ynew

j

)d(S(xi, l), ynew

j

T
)

; gijlwiii,l,

Here in forming h·; ·i and hh·; ·ii, we sum over i ∈ (0, n] and
l ∈ [0, k).

The partial EM update then consists of updating the respon-

sibilities for the new component,

C. Extension of the greedy algorithm

In the foregoing, we have supposed that the number of com-
ponents in the ﬁt is known. In general, this is not the case and
various algorithms have been proposed to grow the number of
components in such a way that a ﬁt close to the global max-
imum for the log-likelihood is tracked. Here we adapt the
greedy EM algorithm [9] for adding components so that sym-
metries can be included. We determine the optimal number
of components by minimizing a cost function involving the
minimal description length [10, §7.4.2],

C = −L +

m

1 + d +

p
2 (cid:20)

(cid:18)

d(d + 1)
2

(cid:19)

− 1

ln n.

(4)

(cid:21)

The term in brackets gives the number of free parameters in
an m-component ﬁt and p, which is normally unity, is a pa-
rameter that can be adjusted to penalize the addition of more
components.

Let us review the greedy algorithm [9]. After the EM al-
gorithm has converged for an m-component ﬁt, we attempt
to add a new component (with index m) as follows. Initially,
each data point xi is assigned to the component j for which
gij is maximum. In this way the data is partitioned into m
sets Aj. We make several splits of each component j by se-
lecting two random samples from Aj and partitioning Aj into
two subsets based on closeness to the two random samples.
A tentative new component is added with αm = αj/2 and
mean and covariance given by one of the two subsets. The
resulting tentative ﬁt undergoes partial EM iterations where
αm, ym, and Cm are adjusted and the αj for 0 ≤ j < m
are merely scaled by 1 − αm (with the corresponding yj and
Cj held ﬁxed). This procedure is repeated several times for
each of the m components and the ﬁt with the maximum log-
likelihood (following the partial EM updates) is selected as
the (m + 1)-component ﬁt which is then subjected to full EM
updates.

When treating weighted samples, we modify the procedure
above by selecting the two components from Aj with proba-
bilities proportional to their weights. Because we do this sev-
eral times, we use the Walker algorithm [11] to make these
selections.

In order to include symmetries, we generalize Aj above to
Ajl′ which contains those S(xi, l) for which giljl′ = gij(l′⊕l)
is maximum.
It is only necessary to consider splitting the
m unsymmetrized components of the existing ﬁt; thus we
only need to determine Aj0. We can do this by assigning
an unsymmetrized sample xi to a symmetrized component by
ﬁnding the j and l′ which maximizes gijl′ , and then adding
S(xi, l = ¯l′) to Aj0.

As before, we partition each Aj0 into two subsets by pick-
ing two random samples from Aj0 (according to the sample
weights) and using the distance as deﬁned by d as the close-
ness metric. For each subset we use an initial αm = αj /2 and
(ym, Cm) computed from the data in the subset.

4

,

giml =

(1 − αm)kf (xi) + αm

l′ G(S(xi, l′); ym, Cm)

αmG(S(xi, l); ym, Cm)

where we need to evaluate giml for l ∈ [0, k) and for i ∈ Aj0,
i.e., for all i, for which S(xi, l) ∈ Aj0 for some l. The update
of the mth component is then

P

αnew
m = hgiml; wiii∗,l,
ynew
m = hhS(xi, l); gimlwiiii∗,l,
Cnew
m = hd(S(xi, l), ynew

T
m )d(S(xi, l), ynew
m )

; gimlwiii∗,l,

where the subscript i∗ indicates that the sums over i should
include only i ∈ Aj0.

D. Loose ends

Finding the 1-component ﬁt with non-symmetric data is a
simple matter of computing the mean and covariance of the
data. However, if we are performing a symmetric ﬁt, we need
to apply EM iterations to obtain a converged one-component
ﬁt. To determine a starting point for these EM iterations we
pick a random “central” sample, and transform the other sam-
ples using the symmetry operator so that they are as close as
possible to the selected sample. The resulting n symmetry-
transformed samples are used to deﬁne a tentative (y0, C0).
This procedure is repeated several times with different cen-
tral samples and the (y0, C0) which yields the maximum log-
likelihood is used as the initial guess for the ﬁrst component.
The EM algorithm can fail with poorly conditioned sam-
ples. For example, one Gaussian component might converge
to a group of samples which are in a lower dimensional space.
We avoid this problem by placing a lower limit on the max-
imum eigenvalue of the covariance matrix and by placing a
lower limit on the ratio of the minimum to maximum eigen-
values. This makes the EM algorithm more robust possibly at
the cost of requiring more components to maximize the log-
likelihood

In Monte Carlo applications, we may wish to avoid Gaus-
sian components where any of the angle-like coordinates
“wrap around”. The presence of such wrapping may destroy
detailed balance because a transition to a wrapped sample
drawn from such a Gaussian is not balanced by a reverse pro-
cess. We can limit the effect of the wrapping by checking
those diagonal elements of the covariance matrix correspond-
ing to the angle-like coordinates.
If these are so large that
wrapping occurs within 3 standard deviations of the mean,
for example, then we can scale the corresponding rows and
columns of the covariance matrix appropriately so that wrap-
ping is limited to the small fraction of samples beyond 3 stan-
dard deviations. Here again, the algorithm can adjust to this
constraint with additional Gaussian components. In the next
section, we will show how detailed balance can be maintained
exactly for wormhole moves even in the face of wrapped
angle-like coordinates.

The result of a canonical Monte Carlo simulation is a set
of conﬁgurations xi drawn from the underlying Boltzmann
distribution proportional to exp(−βE(x)), together with the
corresponding energies E(xi). In the foregoing discussion,
we make the ﬁt to the conﬁgurations, essentially ignoring the
energies. This is an appropriate use of the data from a Monte
Carlo simulation where the sample conﬁgurations constitute
the “primary” data. One application where we could make
use of the energies is when making ﬁts to several indepen-
dent Monte Carlo runs of the same system. In this case, we
can adjust the overall weight of each independent run so that
the difference of βhE(xi)i and hln f (xi)i is approximately
the same across the runs. (Here, h·i denotes a average over a
single run.) This adjustment is important when the individual
runs are not sufﬁciently long to sample conﬁguration space
fully.

III. APPLICATIONS OF GAUSSIAN MIXTURES

We use the procedure for ﬁtting molecular distributions
with a Gaussian mixture in two ways. The ﬁrst is as a method
of deﬁning the portals for wormhole Monte Carlo [1]. In this
case we are ﬁtting the data from several independent Monte
Carlo runs and Gaussian mixtures then offer a robust way of
“clumping” the data with each component of the mixture then
providing a portal for the wormhole method. The other appli-
cation provides an approximation to the energy of the system.
Here we are more concerned about the accuracy of the ﬁt, and
we also need to establish that the arbitrary constant that con-
nects the energy to the logarithm of the ﬁt drops out when
forming physically relevant quantities.

A. Portals for wormhole Monte Carlo

The original description of wormhole Monte Carlo [1] was

specialized to the treatment of molecular dissociation,

A + B ⇋ AB,

where we sought the equilibration between the bound and un-
bound states of molecules A and B. This procedure can be
generalized to deal with other types of interaction, e.g., molec-
ular exchange,

protonation,

or tautomerization,

AB + C ⇋ A + BC,

A + H+ ⇋ AH+,

ABH ⇋ HAB.

5

more interacting molecules. (Thus with molecular dissocia-
tion we have Λ = 2. The unbound system λ = 0 consists of
Φ0 = 2 independent complexes, each consisting of a single
molecule, A or B, while the bound system λ = 1 consists of
Φ1 = 1 complex, AB.)

If the conﬁguration of complex φ in system λ is xλφ, then
the full phase space is given by Υ = {λ; xλ0, xλ1, . . . , xλΦλ }.
Here, we have added a set of “ignorable” coordinates, xλ0; the
energy of the system, and hence the equilibrium distribution
function, is strictly independent of these coordinates. For ex-
ample, in simulating a molecule in a solvent bath, xλ0 would
include the position and orientation of the molecule; or, when
a molecule is deprotonated, it would include the coordinates
of the “missing” proton. Inclusion of these ignorable coor-
dinates is dictated by the requirement that Υ span the same
phase space volume for each λ. In practice, we do not keep
track of xλ0, because the integral over this coordinate is trivial
(the integrand is constant!) and we write

dxλ0 = vλ0.

Z

Wormhole Monte Carlo moves allow the state to switch be-
tween different systems preserving detailed balance. This al-
lows the determination of the ratios,

W0 : W1 : W2 : . . . ,

where Wµ is the statistical weight of system µ,

Wµ = exp(−βFµ) =

δλµ exp(−βΥ) dΥ,

Z

and Fµ is its free energy. In particular, in the case of protein-
ligand binding, the dissociation constant is given by

Kd =

1
V0

W0
W1

,

where V0 is the system volume.

In this more general framework, the wormhole move [1] is
deﬁned as follows. We deﬁne a set of “portal functions,” w,
w′, w′′, . . . , on Υ, with properties

0 ≤ w(Υ) ≤ 1/v < ∞,

dΥ w(Υ) = 1,

R

where v is a representative phase-space volume of the portal
function. A wormhole move consists of the following steps:
select a pair of portals (w, w′) with probability pww′; reject
the move with probability 1 − vw(Υ), where Υ is the current
state; otherwise, with probability vw(Υ), pick a conﬁguration
Υ′ with probability w′(Υ′); and accept the move to Υ′ with
probability

(In practice, the free proton in the second case would be han-
dled by an implicit solvent held at constant pH.) We therefore
consider the equilibrium of Λ “systems” indexed by λ. Each
of the systems is made of Φλ independent molecular “com-
plexes” indexed by φ and each complex is made up of 1 or

Pww′(Υ, Υ′) = min

pw′w
pww′

exp(−βE∗(Υ′))
exp(−βE∗(Υ))

v′
,
v (cid:19)

1,

(cid:18)

(5)

where E∗(Υ) ≈ E(Υ) is the “sampling” energy of conﬁgu-
ration Υ, which is used also for the conventional Monte Carlo

moves (within a system). We term w and w′ the source and
destination portals, respectively. The test involving w(Υ) de-
termines whether the current conﬁguration is “in” the source
portal—note, however, that this test is “fuzzy”. If the test suc-
ceeds, a move is attempted to the destination portal, and the
move is accepted according to a standard Boltzmann factor
modiﬁed by the ratio of the portal volumes. In the limit of a
long Markov chain, we then have

Wµ → Chδλµ exp(−β[E(Υ) − E∗(Υ)])i,

where C is independent of µ and h·i is the average over the
Markov chain.

Although the choice of portal functions is arbitrary, the
method is only effective if vw(Υ) is sufﬁciently large to al-
low wormhole moves. For simplicity, we restrict each portal
function to a particular system λ = µ. Because the complexes
making up a system are independent it is natural to consider
w(Υ) as product of density functions for each complex. Thus
the typical portal function is

w(Υ) = δλµ

wµφ(xµφ),

1
vµ0

Φµ

Yφ=1

where

wµφ(xµφ) dxµφ = 1,

Z

and the factor 1/vµ0 arises from an implicit constant den-
sity in xµ0. For a particular complex φ in system λ we need
to determine a set of portal functions wµφ(xµφ), w′
µφ(xµφ),
w′′
µφ(xµφ), . . . , which reﬂect the probable conﬁgurations for
this complex. We obtain these portal functions using the re-
sults of several conventional canonical Monte Carlo runs on
the complex. We make a Gaussian ﬁt to the resulting sets of
conﬁgurations. If the ﬁt contains m components, then we ob-
tain m portal functions, indexed by j, for this complex each
of which is a symmetrized Gaussian of the form

wλφj (xλφ) =

G(Sλφ(xλφ, l); yλφj , Cλφj),

(6)

1
kλφ

kλφ−1

Xl=0

where kλφ is the symmetry order for the complex, Sλφ is the
corresponding symmetry operator, etc. We take the “volume”
of this portal function to be

vλφj = kλφ/G(yλφj ; yλφj, Cλφj ).

We assume that the choice of source and destination portals
is independent so that the portal probability pww′ can be fac-
tored into probabilities for w and w′; furthermore, we assume
that these probabilities may in turn be factored into choices
for the source and destination systems and for the portals for
the respective complexes for each system. In this case, the
wormhole moves can implemented as follows. Pick a source
portal system µ; if λ 6= µ, the move fails; otherwise consider
each complex in the system µ in turn; for complex φ, pick a

6

random portal function j and pick a random symmetry index
l; with probability

1 − vµφj G(Sµφ(xµφ, l); yµφj, Cµφj)/kµφ,

reject the move; if none of these tests cause the move to
be rejected,
the “in” test succeeds and we proceed with
choosing the destination portal by picking the destination
system µ′, picking a portal function j′ and a symmetry l′
for each complex φ′, and setting the conﬁguration for the
complex to Sµ′φ′(xµ′φ′, l′) where xµ′φ′
is selected from
G(xµ′φ′; yµ′φ′j′ , Cµ′φ′j′ ). In evaluating the acceptance prob-
ability, eq. (5), we express pww′ as the product of the individ-
ual probabilities (of selecting source and destination systems
and of selecting particular portals for the source and destina-
tion complexes). Similarly the volume of the portal is given
by the product of vµ0 and the volumes of the portal functions
for the separate complexes.

In this formulation, the symmetry of a complex is incorpo-
rated into the portal function, eq. (6). However the test for
being in the portal and the operation of selecting a conﬁgura-
tion from it are decomposed into picking a random symmetry
(with equal probabilities) followed by a test or selection on a
unsymmetrized Gaussian.

If, when sampling from the destination portal, any of the
angle-like coordinates are wrapped around, then we immedi-
ately reject the whole move. This is necessary in order to
maintain detailed balance, because the test on the source por-
tal never involves wrapped coordinates. This effectively re-
places the Gaussians in the deﬁnition of the portal functions
by clipped versions which evaluate to zero for wrapped coor-
dinates.

There is a great deal of ﬂexibility in the choice of portal
probabilities offered by the scheme outlined here. Because
the test of being in the source portal is typically very inex-
pensive, it is desirable to arrange that the source portal prob-
abilities are roughly equal. In addition, we usually adjust the
ratio of conventional to wormhole moves so that, on average,
each conﬁguration is tested against all the portals for every
attempted conventional move. On the other hand, the proba-
bilities for the destination portals would usually be adjusted to
reﬂect the statistical weight of the portal.

Let us turn to the details of making the Gaussian ﬁts to
deﬁne the wormhole portals. Because the individual Monte
Carlo runs performed for each complex are independent, it
is natural to consider scaling the overall weight to the results
from each run in order to match the energy samples. In prac-
tice, this procedure results in rather poor ﬁts with too many
components. In this application, Gaussian ﬁtting may viewed
merely as a robust clumping technique and for this purpose if
sufﬁces to attach the same weight to all the samples. For the
same reason, we increase p to 5 in eq. (4) so that a smaller
number of components is used to make the ﬁt.

Gaussian portals offer advantages over the use of ellipsoidal
portals proposed in [1]. With a given number of components,
the EM method does a “global” optimization and is thus likely
to obtain a better ﬁt and than the somewhat ad hoc scheme for
choosing ellipsoids. Also the Gaussian ﬁt to a conﬁguration
of independent complexes naturally factors into a product of

Gaussians for each complex. Thus Gaussian portals reﬂect
the independence of complexes properly. Gaussian portals,
combined with the mean energy for a portal (which can be
readily estimated from the energies of the samples) also offer
a rough a priori estimate of Wλ. This, in turn, allows us to
adjust vλ0 to maximize the probability of transitions between
systems and hence to reduce the error in the eventual estimate
of Wλ. In the case of ligand-protein binding, where we simu-
late single ligand and protein molecules in a system of physi-
cal volume V0, this procedure entails adjusting V0 so that the
fraction of time the molecules are associated is roughly 1
2 .

Finally, we remark that when performing a conventional
Monte Carlo move for a particular system, it is preferable to
select randomly a single complex to move. This will result in
a higher acceptance rate compared to attempting to move all
the complexes simultaneously.

B. Obtaining the energy from the ﬁt

The result of a wormhole Monte Carlo simulation is a set of
conﬁgurations sampled from exp(−βE∗(Υ)). If we ﬁt an an-
alytic function to these samples weighted by exp(−β[E(Υ)−
E∗(Υ)]), then the ﬁt can serve as a basis for approximating
E(Υ). Here we detail how we can use Gaussian mixtures to
carry out this ﬁt and we show how to obtain approximations
for the energies of the individual complexes and how the arbi-
trary offsets for energies cancel whenever energy differences
are computed using the approximate energies.

We begin by making normalized ﬁts, fλφ, to all the com-
plexes in all the systems. If the same complex appears in mul-
tiple systems, the samples may be aggregated in order to per-
mit a ﬁt using more data. The energy of the system is taken to
be the sums of the energies of the complexes, i.e.,

E(Υ) =

E(xλφ),

Φλ

Xφ=1

and similarly for E∗(Υ). The sampled conﬁgurations for
each complex are assigned weights of exp(−β[E(xλφ) −
E∗(xλφ)]).

The normalized ﬁt for a particular system is then given as
the product of the ﬁts for the contributing complexes, multi-
plied by 1/vλ0 and these can be combined weighted by Wλ to
provide a ﬁt in Υ space as

f (Υ) =

fλφ(xλφ),

Wλ
W

1
vλ0

Φλ

Yφ=1

where W =

λ Wλ, and we have

P

−βE(Υ) ≈ D + ln f (Υ),

where D is an arbitrary adjustable constant. This provides an
approximation of the energy of a system. In addition, we can
approximate the energies of the individual complexes by

−βE(xλφ) ≈ Dλφ + ln fλφ(xλφ),

7

where Dλφ are adjustable constants which satisfy

Dλφ = D + ln(Wλ/W ) − ln vλ0,

Φλ

Xφ=1

for all λ.

Let us apply this to the case of molecular dissociation. The
λ = 0 (resp. λ = 1) system contains two complexes (resp. one
complex) each of which is free to move within a system
of 3-dimensional volume V0; thus, we have v00 = (σV0)2
(resp. v10 = σV0), where σ is the volume of orientation space.
In this case, there is one constraint on the choice of energy off-
sets for the ﬁt energies, namely

D10 = D00 + D01 − ln(Kd/σ).

It is also
As expected, this constraint does not involve V0.
apparent from the form of this constraint, that differences in
energy between the unbound and bound systems will be inde-
pendent of the choice of offsets.

IV. MOLECULAR DESIGN

We now have the tools to tackle ligand design. We start the
process by computing the binding afﬁnity of the fragments.
Fragment-based design works on the principle of building a
complex molecule from simpler sub-components. We extend
this idea by also computing the binding afﬁnity of the larger
molecule using data from the calculation of the binding afﬁn-
ity of the simpler molecules. Finally, we describe the process
by which simple molecules can be combined.

A. The single fragment binding afﬁnity

Our starting point is a protein target for which we know the
structure and a set of simple organic fragments. The symme-
tries of the fragment are determined. In the case of a rigid
fragment, this consists of the set of 3-dimensional rotations
which leave the molecule invariant. The energy of the system
is computed using a conventional force ﬁeld with an implicit
solvent model as described in the introduction. The simula-
tion is focused on a certain portion of the protein by adding a
restraint energy which is zero if the fragment is within a re-
gion of interest on the protein (e.g., within a binding site) and
increases parabolically outside this region. It is possible to de-
ﬁne the restraint region to include a few solvent layers about
the entire surface of the protein—but this obviously results
in a longer simulation. Including a parabolic portion to the
restraint potential allows the fragment distribution to fall off
gradually and this allows the distribution to be ﬁt with fewer
Gaussian components than with a hard restraint. The binding
afﬁnity of a molecule will be only weakly dependent on the
precise extent of the restraint region providing that it encom-
passes the true binding site of the protein.

We perform a wormhole calculation to ﬁnd the binding
afﬁnity and to provide the distribution of fragments. In or-
der to determine initial portals for this calculation we system-
atically search for plausible binding modes by inserting the

fragment randomly into the restraint region with a random ori-
entation and random conformations for the protein and frag-
ment (if these molecules are ﬂexible). This process is most
efﬁciently carried out with a tailored restraint region (which
prevents attempts to insert the ligand within the protein) fol-
lowed by a quick steric check (where conﬁgurations are re-
jected as soon as two clashing atoms are found). This can be
followed by a crude energy minimization using the vacuum
energy model. We can make an estimate of how many probes
need to be made in order to explore the surface of the protein
thoroughly and so to ﬁnd all possible binding pockets. This
estimate is based on the volume of the restraint region and
the typical length and orientation scales for energy variation.
A similar exercise is carried out for the unbound system—this
merely consists in ﬁnding allowable conformations of the pro-
tein and ligand. We then drop any of the bound conﬁgurations
whose energy exceeds the minimum unbound energy. The re-
sulting bound and unbound conﬁgurations are used as starting
points for a set of conventional Monte Carlo runs with the
full sampling energy. The initial portion of each run should
be discarded and any bound run whose energy is stuck close
to (or above) the unbound energy should be eliminated. The
resulting data from these Monte Carlo runs is then used to
determine wormhole portals using a Gaussian mixture and to
estimate a starting value of the system volume V0.

In addition, we can add “catch-all” portals for the unbound
and bound systems. For the unbound system, this will allow
the molecules to assume arbitrary conformations (subject to
whatever constraints are imposed by the molecular model).
For the bound system, the molecules would be allowed to
assume arbitrary conformations and in addition the ligands
would be selected from the restraint region with an arbitrary
orientation. These catch-all portals allow new binding modes
to be discovered.

The binding afﬁnity is then calculated using the wormhole
Monte Carlo method. During the course of this simulation,
V0 is adjusted to maintain W0 ∼ W1 and if V0 is increased
(resp. decreased) we reduce W1 (resp. W0) by the same factor.
We may also ﬁnd that the ligand becomes trapped in a local
energy well. Whenever this is detected (by the absence of
successful wormhole moves), new Gaussian portals are found
by rerunning the Gaussian ﬁt adding recent conﬁgurations and
restarting the binding afﬁnity calculation.

The process converges with a sufﬁciently long run with-
out the need to add new portals and with sufﬁciently frequent
wormhole moves between the bound and unbound systems.
This process provides an estimate of the dissociation constant
Kd for this fragment-protein interaction and a set of samples
for the bound and unbound conﬁgurations. From this con-
ﬁgurational data (weighted to reﬂect the difference between
the full and sampling energies), we ﬁt a Gaussian mixture to
the bound and unbound distributions. This provides an ap-
proximation to the energy of the protein and the ligand either
unbound or as a bound complex.

8

B. Approximate energy of combined molecules

Let us consider the case where we have identiﬁed two pos-
sible ligands AB and BC and we wish to combine these via
the “overlap” portion B to form a ligand ABC. We might
form a N -fragment ligand with A and C being fragments and
B being an (N − 2)-fragment overlap ligand. Alternatively,
we might take B to be null and merely add a fragment C to
a (N − 1)-fragment ligand A. (In either case, we form a 2-
fragment ligand by taking A and C to be fragments and B to
be null.)

Because we are concerned here with the energies of differ-
ent combinations of fragments, we adopt a notation for the
energy where we do not explicitly specify the molecular con-
ﬁguration and where E(Z) is the energy for a single molecule
Z and E(X, Y) is the energy for the two interacting molecules
X and Y. We write

E(ABC) = E(AB) + E(BC) − E(B)

E(ABC, P) = E(AB, P) + E(BC, P) − E(B, P)

+ δE(ABC),

+ δE(ABC, P),

(7a)

(7b)

where we expect δE to be small if the energies are approx-
imately additive.
In this and subsequent equations, we un-
derstand the conﬁguration of the molecules to be consistent
throughout the equation, e.g., A is in the same conﬁguration in
all the terms. If B is null, then we can write E(B, P) = E(P).
We now make two approximations. We assume that the en-
ergies involving the simpler molecules AB, BC, and B, are
given by ﬁts to conﬁgurations from prior binding afﬁnity cal-
culations and we assume that δE(ABC, P) and δE(ABC)
If these assumptions hold, then eq. (7) provides
are small.
a method of computing the energy of the more complex mole-
cule ABC very rapidly which, in turn, allows its binding afﬁn-
ity to the protein to be determined quickly. We expect the
neglect of δE(ABC, P) and δE(ABC) to be most easily jus-
tiﬁed when the overlap portion B is as large as possible; i.e.,
when two (N − 1)-fragment ligands are combined to form
an N -fragment ligand. In carrying out this calculation, the
arbitrary constants that enter when converting the ﬁts to ener-
gies cancel when considering energy differences between the
bound and unbound systems.

In our initial implementation, we build ligands by adding
fragments one at a time with no overlap portion (i.e., B is
null). Furthermore the approximate expressions for the energy
are applied recursively so that the energy of a N -fragment
ligand interacting with the protein is found by summing each
of the individual fragment-protein energies.

The accuracy can be improved as follows: Assume that we
have computed the binding afﬁnity of the best ligands with up
to N − 1 fragments using the full energy. Fits to the distribu-
tions of these molecules provide the corresponding approxi-
mate energies which can be used to compute the approximate
energy, using eq. (7), for N -fragment ligands either by adding
a single fragment or, preferably, by using an (N −2)-fragment
overlap. This allows us to compute approximate values for the
binding afﬁnity of the N -fragment ligands. The binding afﬁn-

ity of those ligands with the best approximate binding afﬁni-
ties can then be recomputed using the full energy. Because
this latter binding afﬁnity calculation is carried out following
the similar calculation with the approximate energy, we can
use Gaussian ﬁts to the samples from the approximate calcu-
lation to deﬁne the initial portals for the wormhole method
with the full energy. This procedure can be repeated to create
ligands with an arbitrary number of fragments.

In order to compute the full energy of the enlarged mole-
cule, we may have to determine the Amber atom types afresh,
for example, using the GAFF rules [12; 13].
In addition,
we need to determine the partial charges for the new ligand.
One simple prescription is as follows: when two fragments,
A and C are combined to form a 2-fragment molecule AC,
the charge on the hydrogen removed from A is donated to the
derivatized atom on C and vice versa. This rule, which main-
tains charge neutrality, can be readily generalized for larger
ligands. More realistic charge models could be employed, if
necessary. For example, VC/2003 [14] allows partial charges
to be computed without the need for a quantum calculation,
while AM1-BCC [15; 16] gives the charge on the basis of an
relatively inexpensive AM1 quantum calculation. The over-
all expense of these more detailed charge calculations could
be reduced by carrying them out only for the ligands with the
best predicted binding afﬁnity. Techniques for making con-
strained moves of a molecule made up of rigid fragments and
for efﬁciently evaluating the resulting energy (including the
solvation free energy) are given in [17].

We can further improve the accuracy of the approximate
energy evaluation by including some contributions to δE. For
example, we can set δE(ABC, P) ≈ δE(ABC) and evaluate
δE(ABC) using eq. (7a) together with a direct evaluation of
E(ABC) (which, typically, is fast because it does not involve
the interaction with the large protein). In this way, we expect
to include the main intra-molecular contributions to the en-
ergy including the effects of atom removal and charge redis-
tribution. In this approximation, we still neglect three-body
effects which enter into the solvation energy for the bound
system, e.g., the modiﬁcation of solvation energy of A inter-
acting with P due to the presence of C [4]. Also neglected are
the effects of atom removal and charge redistribution on the
ligand-protein energy.

We might make a further simpliﬁcation to δE(ABC) by in-
cluding only some terms in energies in eq. (7a). For example,
we might include just the torsion energy of the inter-fragment
bonds and a “steric” energy, which is inﬁnite if non-bonded
atoms in ABC overlap and is zero otherwise.

Finally, note that we do not need to include the chemical
bond energies when forming ABC because these energies are
the same in the bound and unbound systems, and so cancel in
the computation of the binding afﬁnity.

C. Combining molecules

When forming a complex ligand ABC from ligands AB
and BC, we need to generate starting conﬁgurations for ABC
for the purposes of identifying the wormhole portals [1]. We

9

consider the problem for the bound (λ = 1) case; the unbound
case (λ = 0) follows as a straightforward simpliﬁcation.

We compute Gaussian mixtures for the conﬁgurations of
AB and BC bound, respectively, to the protein. We draw
several sample conﬁgurations [ΓA, ΓB, ΓP] and [Γ′
B, ΓC, Γ′
P]
from each possible pair of Gaussian components selected
from the two ﬁts. Here ΓM denotes the conﬁguration of mol-
ecule M. We form a “bond” constraint term,

D2 = kΓB − Γ′

Bk2 + kΓP − Γ′

Pk2 ,

where kΓM − Γ′
Mk is some suitable measure of the separation
of the two conﬁgurations of molecule M and we take D ≥ 0.
Bk2 is replaced by a constraint term
If B is null, then kΓB − Γ′
for the new bond between A and C, for example, an appro-
priately weighted sum of the squared deviations of the bond
length and bond angles from their ideal values. In forming D,
we weight the various contributions so that D is an approxi-
mate distance that atoms must move to satisfy D = 0

B, ΓC, Γ′

We now seek nearby conﬁgurations for the two systems
[ΓA, ΓB, ΓP] and [Γ′
P] for which the bond constraint
is zero. This is accomplished by gradually decreasing a
“target” constraint, Dt, from the initial value of D to zero.
For a speciﬁc Dt, we randomly perturb the conﬁgurations in
such a way as to meet the target constraint, D ≤ Dt, and
accept the new conﬁguration with a Boltzmann probability
min[1, exp(−∆E/(kT ′))], where ∆E is the change in the
(ﬁt) energy and T ′ is an annealing temperature. In this way,
we attempt to minimize the energy of the combined system
subject to the bond constraint. This procedure is attempted
at the physiological temperature T ′ = T and then at succes-
sively higher temperatures until either we achieve D = 0 or
an upper temperature, T ′ = 2T , is reached.

If the bond constraint can be satisﬁed and if we include
the steric term for ABC in the approximate binding afﬁnity
calculation, we repeat the above procedure to satisfy a steric
constraint S = 0, where S measures the degree of overlap be-
tween the non-bonded atoms of ABC. In this case, we perturb
the molecule ABC subject to the constraint D = 0 in order
to reduce S to zero following a similar strategy as that used to
meet the bond constraint.

If the bond and (if applicable) steric constraints can be sat-
isﬁed in such a way that both [ΓA, ΓB, ΓP] and [ΓB, ΓC, ΓP]
are within a few standard deviations of one of the components
of their respective Gaussian mixtures, then [ΓA, ΓB, ΓC, ΓP]
gives a conﬁguration for ABC bound to P which serves as one
of the starting points for ﬁnding portals for the bound system.
The scheme described above is appropriate when we have
direct calculations of the ﬁt energies of AB and BC interacting
with the protein. However, if these are given by summing the
contributions over fragments, then the bond minimization of
the new bonds is carried out allowing all the inter-fragment
bonds to relax. In this case, the “old” inter-fragment bonds
would start in the ideal constrained state; however, in allowing
the new bonds to relax, the old bonds are allowed to stretch
so that the ligand can ﬁnd a good pose where all the inter-
fragment bonds meet the constraints.

D. Implementation

The preceding sections describe the physical basis for using
binding free energy to direct ligand design. The implementa-
tion entails additional challenges. There is a need for book-
keeping to associate a molecule with the smaller molecules
out of which it was created. Care must be taken to match up
the conﬁgurations of the molecules in order to implement the
approximate energy evaluations. In order to avoid building the
same molecule multiple times (e.g., putting the fragments to-
gether in a different order), we use the USMILES representa-
tion [18] as a unique tag for the molecule. (Unfortunately, this
representation has shortcomings for our purposes. It does not,
in fact, provide a unique representation of a molecule; e.g.,
C1C2CC2CC3CC13 and C1C2CC3CC3CC12 are two dif-
ferent USMILES representations of the same molecule. Fur-
thermore, USMILES only deals with the 2-dimensional struc-
ture of a molecule and for the purposes of binding afﬁnity,
stereoisomers should be treated as distinct.)

In our current implementation, we build molecules by
adding one fragment at a time. The approximate binding afﬁn-
ity of the molecules is computed by summing the ﬁt energy of
the individual fragments and including the steric energy. Any
intermediate molecule meeting a threshold binding afﬁnity is
recorded and is used as a base from which to build larger mol-
ecules (up to a given size) in a depth-ﬁrst fashion.

We have tested this procedure by building ligands which
bind to botulinum neurotoxin type B [19] starting with 35 or-
ganic fragments. A subsequent evaluation of the binding afﬁn-
ity using the full energy shows that good agreement with the
approximate binding afﬁnity in the case of 2-fragment ligands,
with 90% of the pairs having an approximate binding afﬁnity
within 1–2 log units of the full binding afﬁnity. However the
agreement is poor for ligands made up of 3–5 fragments. We
attribute this to basing the approximate energy of N -fragment
ligands purely on the energies of single fragments. The errors
in the use of the approximate energies may become excessive
so that the approximate binding afﬁnity is no longer close to
the full binding afﬁnity. Alternatively, it’s possible that the
approximate energy is still reasonably accurate but that the
binding mode is slightly wrong so that using the approximate
distributions to provide the initial portals for the full binding
afﬁnity calculation may be inadequate; if the binding mode is
quite tight, the full binding afﬁnity calculation may never ﬁnd
it. Both of these problems would be largely overcome by bas-
ing the approximate energy for N -fragment ligands on the ﬁt
energy for (N − 1)-fragment ligands.

V. DISCUSSION

We have described a way to determine the approximate
binding afﬁnity of a ligands based on knowledge of the bind-
ing afﬁnity of simpler ligands and the associated equilibrium
distributions. This procedure correctly accounts for the loss
of entropy associated with connecting molecules together to
form a larger molecule and allows the binding free energy to
be used to direct the design of ligands.

10

The predictive capability of our initial implementation (de-
scribed above) is limited to ligands made up of just 2 frag-
ments. However, we believe that this limitation could be
removed by computing the full binding afﬁnity of the best
(N − 1)-fragment ligands and using this as the basis of
building N -fragment ligands. Such a scheme would allow a
breadth-ﬁrst search which would allow the search to be di-
rected toward the molecules with the greatest binding afﬁnity.
In pruning intermediate molecules, we may wish to retain
(N + 1)-fragment molecules which have a worse binding
afﬁnity than their N -fragment parents, with the expectation
that this would enable us to build better (N + 2)-fragment
molecules. This would allow non-functional linkers (with no
intrinsic propensity to bind to the protein) to bridge between
high-afﬁnity functional groups.

The technique described here covers joining fragments in
a simply connected fashion where each added fragment at-
taches at one point.
It would be possible to generalize the
method to allow the formation of rings. For example we might
overlap the molecules ABC, BCD, CDA, DAB to create a 4-
fragment ring (ABCD).

The wormhole technique and the ability to ﬁt distributions
of molecular conﬁgurations with Gaussian mixtures intrin-
sically depends on the system having a “small” number of
degrees of freedom, because we require that phase space be
spanned by a reasonable number of samples. This limits the
degree of ﬂexibility that can be allowed for the protein and
dictates the use of an implicit solvent model. On the other
hand, because we are just interested in describing where sam-
ples are concentrated, one might expect the method to con-
tinue to function well as the number of degrees of freedom is
increased to, say, 20.

Our ability to obtain realistic results is also limited by the
accuracy of the force ﬁeld and the solvent model. There are
several areas of concern. The force ﬁeld, the methods for
determining partial atomic charges, and the solvent models
have all been developed largely independently, and it’s not
clear how consistent these models are. It is also noteworthy
that the data validating the GB models is based on compar-
isons with solutions to the Poisson-Boltzmann equation [20],
which requires speciﬁcation of the atomic radii, or is based
on comparisons with experimental data for the absolute sol-
vation energy (from vacuum to solution) [5]. More relevant
for our purposes would be a comparison against experimental
data for the changes in solvent free energy on molecular as-
sociation. Another area of uncertainty is the charge state of
the protein, which may have a small effect when differences
in binding free energy are being computed (e.g., with the free
energy perturbation method) but which may have a large ef-
fect on the absolute binding free energy. The impact of salt
effects is easily incorporated into GB models [21]. More in-
teresting would be a principled treatment of the protonation of
charged residues in the protein, proton exchange between the
protein and ligand, and tautomerization of the protein or the
ligand. The wormhole method offers a natural vehicle for such
a treatment avoiding the need to treat protonation as a contin-
uous process [22] and avoiding the need to add an uncharged
ghost proton [23].

Acknowledgment

This work was supported by the U.S. Army Medical Re-
No.
search and Materiel Command
DAMD17-03-C-0082.
The views, opinions, and ﬁnd-
ings contained in this report are those of the author and
should not be construed as an ofﬁcial Department of the
Army position, policy, or decision. No animal testing was
conducted and no recombinant DNA was used.

Contract

under

References

[1] C. F. F. Karney, J. E. Ferrara, and S. Brunner, Method for com-
puting protein binding afﬁnity, J. Comput. Chem. 26, 243–251
(2005). E-print arXiv:cond-mat/0401348.

[2] A. Miranker and M. Karplus, Functionality maps of binding
sites: A mulitple copy simultaneous search method, Proteins:
Struc. Func. Gen. 11, 23–34 (1991).

[3] W. D. Cornell, P. Cieplak, C. I. Bayly, I. R. Gould, K. M. Merz,
Jr., D. M. Ferguson, D. C. Spellmeyer, T. Fox, J. W. Caldwell,
and P. A. Kollman, A second generation force ﬁeld for the simu-
lation of proteins, nucleic acids and organic molecules, J. Am.
Chem. Soc. 117, 5179–5197 (1995).

[4] W. C. Still, A. Tempczyk, R. C. Hawley, and T. Hendrickson,
Semianalytical treatment of solvation for molecular mechanics
and dynamics, J. Am. Chem. Soc. 112, 6127–6129 (1990).
[5] D. Qiu, P. S. Shenkin, F. P. Hollinger, and W. C. Still, The
GB/SA continuum model for solvation: A fast analytical method
for the calculation of approximate Born radii, J. Phys. Chem.
A 101, 3005–3014 (1997).

[6] A. P. Dempster, N. M. Laird, and D. B. Rubin, Maximum like-
lihood from incomplete data via the EM algorithm, J. Royal
Statist. Soc. B 39, 1–38 (1977).

[7] C. F. F. Karney, Quaternions in molecular modeling, Tech-
(June 2005). E-print arXiv:

report, Sarnoff Corp.

[8] K. V. Mardia and P. E. Jupp, Directional Statistics (J. Wiley &

nical
physics/0506177.

Sons, 1999).

[9] J. J. Verbeek, N. Vlassis, and B. Kr¨ose, Efﬁcient greedy learn-
ing of Gaussian mixture models, Neural Computation 15, 469–
485 (2003).

[10] G. Deco and D. Obradovic, An Information-Theoretic Approach

to Neural Computing (Springer-Verlag, 1996).

11

[11] A. J. Walker, An efﬁcient method for generating discrete ran-
dom variables and general distributions, ACM Trans. Math.
Software 3, 253–256 (1977).

[12] J. Wang, R. M. Wolf, J. W. Caldwell, P. A. Kollman, and D. A.
Case, Development and testing of a general Amber force ﬁeld,
J. Comput. Chem. 25, 1157–1174 (2004).

[13] J. Wang, W. Wang, P. A. Kollman, and D. A. Case, Antecham-
ber, an accessory software package for molecular mechanical
calculations, J. Chem. Inf. Comput. Sci. (2005). Submitted.
[14] M. K. Gilson, H. S. R. Gilson, and M. J. Potter, Fast assignment
of accurate partial atomic charges: An electronegativity equal-
ization method that accounts for alternate resonance forms, J.
Chem. Inf. Comput. Sci. 43, 1982–1997 (2003).

[15] A. Jakalian, B. L. Bush, D. B. Jack, and C. I. Bayly, Fast, ef-
ﬁcient generation of high-quality atomic charges. AM1-BCC
model: I. Method, J. of Comput. Chem. 21, 132–146 (2000).

[16] A. Jakalian, D. B. Jack, and C. I. Bayly, Fast, efﬁcient gen-
eration of high-quality atomic charges. AM1-BCC model: II.
Parameterization and validation, J. Comput. Chem. 23, 1623–
1641 (2002).

[17] C. F. F. Karney and J. E. Ferrara, Modeling molecules with con-
straints, Technical report, Sarnoff Corp. (August 2005). E-print
arXiv:physics/0508116.

[18] D. Weininger, A. Weininger, and J. L. Weininger, SMILES: 2.
Algorithm for generation of unique SMILES notation, J. Chem.
Inf. Comput. Sci. 29, 97–101 (1989).

[19] M. A. Hanson and R. C. Stevens, Cocrystal structure of
synaptobrevin-II bound to botulinum neurotoxin type B at 2.0
˚A, Nature Struct. Biol. 7, 687–692 (2000).

[20] M. Feig, A. Onufriev, M. S. Lee, W. Im, D. A. Case, and C. L.
Brooks III, Performance comparison of generalized Born and
Poisson methods in the calculation of electrostatic solvation en-
ergies for protein structures, J. Comput. Chem. 25, 265–284
(2004).

[21] J. Srinivasan, M. W. Trevathan, P. Beroza, and D. A. Case, Ap-
plication of a pairwise generalized Born model to proteins and
nucleic acids: Inclusion of salt effects, Theor. Chem. Acc. 101,
426–434 (1999).

[22] M. S. Lee, F. R. Salsbury, Jr., and C. L. Brooks III, Constant-
pH molecular dynamics using continuous titration coordinates,
Proteins: Struc. Func. Bioinf. 56, 738–752 (2004).

[23] J. Mongan, D. A. Case, and J. A. McCammon, Constant pH
molecular dynamics in generalized Born implicit solvent, J.
Comput. Chem. 25, 2038–2048 (2004).

