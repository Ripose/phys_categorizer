Adaptive mesh reﬁnement with spectral accuracy
for magnetohydrodynamics in two space dimensions

D Rosenberg1, A Pouquet1 and P D Mininni1
1 TNT/IMAGe, National Center for Atmospheric Research, P.O. Box 3000, Boulder,
CO 80307-3000, USA

E-mail: duaner@ucar.edu, pouquet@ucar.edu, mininni@ucar.edu

Abstract. We examine the eﬀect of accuracy of high-order spectral element methods,
with or without adaptive mesh reﬁnement (AMR),
in the context of a classical
conﬁguration of magnetic reconnection in two space dimensions, the so-called Orszag-
Tang vortex made up of a magnetic X-point centered on a stagnation point of the
velocity. A recently developed spectral-element adaptive reﬁnement incompressible
magnetohydrodynamic (MHD) code is applied to simulate this problem. The MHD
solver is explicit, and uses the Els¨asser formulation on high-order elements.
It
automatically takes advantage of the adaptive grid mechanics that have been described
elsewhere in the ﬂuid context [Rosenberg, Fournier, Fischer, Pouquet, J. Comp. Phys.
215, 59-80 (2006)]; the code allows both statically reﬁned and dynamically reﬁned
grids. Tests of the algorithm using analytic solutions are described, and comparisons
of the Orszag-Tang solutions with pseudo-spectral computations are performed. We
demonstrate for moderate Reynolds numbers that the algorithms using both static and
reﬁned grids reproduce the pseudo–spectral solutions quite well. We show that low-
order truncation–even with a comparable number of global degrees of freedom–fails
to correctly model some strong (sup–norm) quantities in this problem, even though it
satisﬁes adequately the weak (integrated) balance diagnostics.

Submitted to: New J. Phys.

7
0
0
2
 
r
a

M
 
2
 
 
]
n
y
d
-
u
l
f
.
s
c
i
s
y
h
p
[
 
 
1
v
4
2
0
3
0
7
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Spectral adaptive mesh reﬁnement in MHD

2

1. Introduction

In geophysical and astrophysical ﬂows, the Reynolds numbers are large, and nonlinear
terms appearing in the primitive equations lead to strong mode coupling and multiple
scale interactions. Moreover, magnetic ﬁelds are often in quasi-equipartition with the
velocity, as is the case in the Solar Wind or in the interstellar medium. However, direct
numerical simulations (DNS) using regular grids cannot, even to this day, deal with
such large Reynolds numbers Rv. Doubling the grid resolution (and thus multiplying
the Reynolds number by roughly a factor two) comes at a cost of increase in needed
computer time by a factor of sixteen in three dimensions, assuming the temporal scheme
is explicit; even when taking Moore’s law into account, such an increase in Rv can only
be achieved roughly every six years. Thus, one is led to resort to more sophisticated
techniques, such as, for example, turbulence modeling (see e.g.
[21]). However, in
the case of coupling to a magnetic ﬁeld, and using the magnetohydrodynamic (MHD)
approximation valid for the description of the large-scale dynamics, few such techniques
have been developed and tested (see however [26, 22, 23, 15]). Another venue is to
develop adaptive mesh reﬁnement (AMR) methods. In this context, we examine in this
paper the accuracy of an AMR code using spectral elements by comparing its output
to exact solutions in simpliﬁed cases and to computations using a pseudo-spectral code
at the same Reynolds numbers on a classical conﬁguration of magnetic reconnection in
two-dimensional geometry.

We set up the equations in the next section 2, and in section 3, describe the
numerical method for MHD developed within the context of the adaptive spectral
element method presented in [30] for the two-dimensional Burgers equation. This section
In section 4 we apply the method to the
also presents test results for the method.
Orszag–Tang conﬁguration, and compare with pseudo–spectral results. We consider
eﬀects of low order versus high order local approximations in section 5, and section 6 is
the conclusion, in which we summarize the results, and oﬀer some observations about
the performance of the method and some directions for future work.

2. Setup and theory

2.1. Equations, code, and simulations

For an incompressible ﬂuid with constant mass density ρ0, the magnetohydrodynamic
(MHD) equations read:

∂t~u + ~u

~u =

· ∇

p + ~j

~b + ν

2~u,

∇

∂t~b =

∇ ·

∇ ×
~u = 0,

−∇
~b) + η

×
2~b

∇

(~u

×

~b = 0

∇ ·

(1)

(2)

(3)

where ~u and ~b are the velocity and magnetic ﬁeld (in Alfv´en velocity units, ~b = ~B/√µ0ρ0
with ~B the induction and µ0 the permeability); p is the pressure divided by the mass

Spectral adaptive mesh reﬁnement in MHD

density, and ν and η are the kinematic viscosity and the magnetic resistivity. The mode
with the largest wavevector in the Fourier transform of ~u at initial time is k0. We also
deﬁne the viscous dissipation wavenumber as kν = (ǫ/ν3)1/4, where ǫ
0 /L0 is the
energy dissipation rate, with U0 the r.m.s. velocity and L0 the integral length scale (see
below). The Kolmogorov scale at which dissipation sets in is deﬁned as lD = 2π/kν;
ε2/3k−5/3. A
the expression for kν is based on a kinetic energy spectrum EV (k)
large separation between the two scales (k−1
k−1
ν ) is required for the ﬂow to reach a
turbulent state with signiﬁcant nonlinear interactions.

0 ≫

U 3

∼

∼

In the absence of external forcing, viscosity and magnetic resistivity, the MHD

equations in two space dimensions (2D) conserves the total energy:

The Reynolds number is deﬁned as Rv = U0L0/ν, where the integral length scale of

~b dx2 , and the L2 norm of the magnetic

E =

(u2 + b2)dx2 ,

1
2
together with the cross helicity Hc = 1
2
potential Ma = 1
2

a2 dx2 , with ~b =

Z

~u
~a.
R
∇ ×

·

the ﬂow is deﬁned as

R

L0 = 2π

EV (k)k−1dk
EV (k)dk

.

R

The large scale turnover time can then be deﬁned as τN L = U0/L0. We can also introduce
the Taylor based Reynolds number Rλ = Uλ/ν, where the Taylor length scale λ is given
by

R

EV (k)dk
EV (k)k2dk

1/2

.

(cid:19)

λ = 2π

(cid:18) R
R

Length scales built with ~b and its energy spectrum EM (k) can also be deﬁned; the
magnetic Reynolds number is Rm = U0L0/η.

3. Algorithm description for MHD

For this work, we use a spectral element method [28], encapsulated within the
Geophysical /Astrophysical Spectral–element Adaptive Reﬁnement (GASpAR) code.
Aspects of this code–in particular those regarding the dynamic grid reﬁnement–have
been described elsewhere [30], where results were presented for the multi-dimensional
Burgers (advection–diﬀusion) equation. Here, we extend that development in several
distinct ways in order to solve (1)-(3), speciﬁcally, by adding the pressure term and
the Lorenz force in the momentum equation and by taking into account the magnetic
induction equation, and the divergence–free conditions on velocity and magnetic ﬁeld.

We solve equations (1)-(3) in Els¨asser form [6]:

∂t ~Z ± + ~Z ∓

~Z ± +

p

∇

−

ν±

2 ~Z ±

ν∓

2 ~Z ∓ = 0

∇

−

∇

· ∇

~Z ± = 0 ,

∇ ·

3

(4)

(5)

(6)

(7)

(8)

Spectral adaptive mesh reﬁnement in MHD

4

where

and

~Z ± = ~u

~b

±

1
2
Thus, we solve for ~u and ~b in terms of ~Z ±.

ν± =

(ν

η).

±

Equations (7)-(8) can be recast into an equivalent variational form on domain D

by deﬁning the following function spaces:

H1(D)

µ & ~w = ~w0 on ∂D

∀

)

H1(D) :=

(11)
where ~w = ~u, ~b. Let ~Z ± and p and their test functions, ~ζ ± and q be restricted to
ﬁnite–dimensional subspaces of these spaces:

∈ L2(D)

r ,

µ

(cid:9)

∀

U~b :=

~w =

(

d

µ=1
X

f

(cid:8)

f

UN = U~b
UN
0 = U0
YN −2 = D

± ∈

~Z

~ζ ±

p, q

∈

∈

wµ~e µ

∈

wµ

∈ L2(D) & ∂xµf

PN

\

PN

\

PN −2.

(9)

(10)

(12)

(13)

(14)

The basis for the velocity expansion in PN is the set of Lagrange interpolating
polynomials on the Gauss-Lobatto-Legendre (GL) quadrature nodes, and the basis for
the pressure is the set of Lagrange interpolants on the Gauss-Legendre (G) quadrature
nodes. Then, the equations (7)-(8) can be written in weak form as [9]

\

~ζ ±, ∂t ~Z ±

h

q,

iGL +
h
iG = 0,

~Z ±

h
∇ ·
± := ~Z ± · ~
∇

~ζ ±,

∓ ~Z ±

C

iGL −

1
ρ0 h

p,

~ζ ±

iG =

−

ν±

h

∇

∇ ·

~~
ζ ±,T,

~~
Z ±
∇

iGL(15)
(16)

,

,

C

h·

h·

is the continuous advection operator,

where
·iGL, represents the inner
·iG indicates inner product using
product using quadrature on the GL nodes, and
quadrature on the G nodes. Thus, we use a staggered grid, where the quantities (~u, ~b,
~Z ±), on the GL nodes are continuous, while those on the G nodes (p) are not. This
so-called PN −

PN −2 was chosen to prevent spurious pressure modes [19, 9].
In the spectral element method, functions in UN and YN −2 are represented as
expansions in terms of tensor products of basis functions within each subdomain, or
K
k=1 Ek.
element, the non-overlapping union of which comprises the domain [28]: D =
By expanding ~Z ± and p in terms of their basis functions, inserting these expansions
into (15)-(16), and using the appropriate quadrature rules, we arrive at a set of semi-
discrete equations in terms of spectral element operators:

S

M

dZ ±
j
dt
−
DjZ ±
j = 0,

=

MC∓Z ±

j + DT

j p±

ν±LZ ±

j −

−

ν∓LZ ∓
j

(17)

(18)

Spectral adaptive mesh reﬁnement in MHD

5

In this equation, M, L, and C, are the well–
for the jth components of momentum.
known mass matrix, weak Laplacian and advection operators, respectively (e.g. , [30],
and references therein). The variables ~Z
represent values of the ~Z ± collocated at the
GL node points, while p± are values of the pressures at the G node points. Similarly,
we denote the collocated test functions by q. The Stokes operators, Dj, arise from
the quadrature rule in (16), in which the GL basis function and its derivative must be
interpolated to the G node points, and multiplied by the G quadrature weights. In two
dimensions,

±

q,

h

∇ ·

~Z

iG =

(qk)T(Dk

1Z k

1 + Dk

2Z k
2)

K

Xk=1

k

for ~Z

= ~Z

±,k

. For regular rectangular elements, of lengths Lk
j ,

(19)

where

and

Dk

1 =

Lk
2
2

(cid:18)

(cid:19)

˜D , Dk

2 =

˜I

⊗

Lk
1
2

(cid:18)

(cid:19)

˜D

˜I,

⊗

˜Iij = σiφj(ηi),

˜Dij = σi

dφj
dr |r=ηi

are, respectively, the weighted one-dimensional (1D) interpolation matrix mapping GL
points to the G points, and the weighted 1D GL derivative matrix interpolated to the
G points [9]. In these deﬁnitions σi are the weights corresponding to the G node points.
Just like with the mass and Laplacian operators, the Stokes operators are written as
tensor products of 1D operators.

The above equations, (17)-(18), are correct for a single element, but they are not
complete when we have multiple subdomains.
In this case, we must ensure that all
quantities in UN remain continuous across element interfaces. The manner in which
this is done for advection–diﬀusion on (non)conforming elements was described in [30].
Using the Boolean scatter matrix, Ac, the interpolation matrix from global to local
degrees of freedom, Φ, and the masking matrix (that enforces homogeneous boundary
conditions), Π, that were presented there, we ﬁnd that we must replace the local Stokes
operators above with

Dj →
where DL,j = diagk(Dk
j are the matrices from above. In much of what
follows, we will continue to use the local form of the Stokes operators, and simply
recognize that the multiple subdomain form can be imposed.

j ), and the Dk

DL,jΦAcΠ,

Note in (17) the presence of diﬀerent pressures for ~Z ±. As we show below, we will
maintain the divergence constraints by solving for the pressures for both ~Z ±. While
analytically these pressures are the same, they serve as Lagrange multipliers [7] for
their respective ﬁelds, ~Z ±. Given that each ﬁeld has its own constraint that is solved
independently of the other, numerically they will in general be diﬀerent.

Spectral adaptive mesh reﬁnement in MHD

6

3.1. Time stepping

Because we want to resolve all time scales (as well as spatial scales), we choose an explicit
method for integrating (17)-(18) in time. The method we use is the mth–order Runge–
Kutta (RK), and since the right–hand side of the equations has no explicit dependence
on time, we can use the following formulation [4, p. 109] in order to solve dU/dt = F (U):

Set

U = U n

For k = m, 1,

1
−

U = U n + 1

k ∆tF (U)

End for

U n+1 = U.

Considering one component of the Els¨asser variables and following the above RK

algorithm, we write for each iteration (recall (17))

Z ±

j = Z ±,n

M−1(MC∓Z ±

DT

j p± + ν±LZ ±

j + ν∓LZ∓

j ).

j −

j −
We insist that each RK stage obey (18) in its discrete form, so multiplying (20) by
Dj, summing, and setting the term DjZ ±
j = 0 leads to the following pseudo-Poisson
equation for the pressures, p±:

(20)

DjM−1DT

j p± = Djg±
j ,
where the remaining inhomogeneity

(21)

j = DjM−1(MC∓Z ±
g±

j + ν±LZ ±

j + ν∓LZ ∓
j )

DjZ ±
j .

−

The pseudo–Laplacian operator on the left–hand–side of (21) also arises from a second
order implicit time descretization of the spatially discretized equations (17)-(18) as
shown in [9, 8]. In this formulation, even if Z ±
j is not divergence–free, the partial update
after this RK stage will be. The inverse mass operator, M−1, must be computed for a
given grid conﬁguration. For conforming elements, this matrix is trivially inverted since
it is diagonal. For nonconforming discretizations, the mass matrix is lumped in order
to recover a diagonal matrix that can be inverted straightforwardly [8]. Equation (21)
is solved using a preconditioned conjugate gradient method (PCG; see [33, 36], and also
[30] for modiﬁcations required for nonconforming elements). For preconditioning, we
use a block Jacobi preconditioner computed using either a fast diagonalization method
[5], or a direct inversion.

Thus, at each timestep, m RK stages are computed, and each stage solves (21)
twice, once for Z +, and once for Z − leading to 2m pseudo-Poisson solves at each time
step. The MHD solver is encapsulated within a class as are all solvers in the code.

Currently the solver considers the Els¨asser variables, Z ±, to be auxillary variables,
so a transformation is done from the native u, b, and back. However, it is easy to
create a new constructor for the solver object, so that Z ± are the primary quantities of
interest. In all results presented in this work, we choose m = 2 for the RK order.

Spectral adaptive mesh reﬁnement in MHD

7

1.5

0.5

1

0

0
10

−2

10

r
o
r
r
e

 

L

2

−4

10

−6

10

−8

10

10

−10
3

−0.5

−0.5

0

1

p

4

5

6

7

8

9

10

(left) Elemental decomposition and streamlines of the steady–state

Figure 1.
Kovasznay solution as determined by time marching for a case where p = 6. (right)
2
L
error vs. polynomial degree, showing spectral convergence of the Kovasznay solution.

3.2. Tests with exact solutions

To test the algorithm described above, we ﬁrst consider two test problems that have
analytic solutions. The ﬁrst case tests the algorithm without magnetic ﬁeld (~b
0)
ﬁeld–i.e., solves the Navier–Stokes equations–and the second case tests the full MHD
algorithm.

≡

For Navier–Stokes, we use a steady state solution of a (Kovasznay) ﬂow ﬁeld behind

a periodic array of cylinders [17] (see also [5]):

eλx cos 2πy

ux = 1
−
λ
eλx sin 2πy,
2π

uy =

2

q

Rv
where λ = Rv
4 + 4π2. We initialize the grid with the solution, and march to
2 −
a steady state (typically to t
2), where we compare the numerical solution with
the analytic solution. For the following test, the grid we use is conforming, and non-
10−3, while Rv = 1/ν = 40. Dirichlet
adaptive (see ﬁgure 1); the time step is ﬁxed at 1
boundary conditions are set from the analytic solution. We plot the
L2 norm of the error
as a function of polynomial degree, p in ﬁgure 1 (right), in order to show convergence.
Clearly, the solution is converging spectrally as desired.

≈

×

The next test looks at a steady Hartmann ﬂow, consisting of a ﬂow of viscous
conducting ﬂuid between two parallel plates, with separation 2a, and with a magnetic
ﬁeld, B0, applied in a direction perpendicular to the plates. The solution is [18]:

ux = u0

cosh Ha −

cosh(yHa/a)
1

cosh Ha −

Spectral adaptive mesh reﬁnement in MHD

8

 v
x

 b
x

0
10

−2

10

r
o
r
r
e
 

L

2

−4

10

−6

10

−8

10

10

−10
3

4

5

6

7

8

9

10

p

Figure 2.
Hartmann solution for ux and bx. Similar convergence is seen for uy.

2 error vs. polynomial degree p, showing spectral convergence of the

L

−
where the Hartmann number,

bx =

u0

y/a sinh Ha −

sinh(yHa/a)

ν
η

r

1

cosh Ha −
aB0
√νη

,

Ha =

=

a
δ

and δ represents a boundary layer thickness over which the velocity compared with that
in the central region decreases at the top and bottom plates.

Again, we initialize a grid of K = 4

2-elements–whose lower left and upper
right global grid vertices are (0, 0), and (4, 2)–with the analytic solution, at ﬁxed p and
march to steady–state, comparing the numerical an analytic solutions. For these runs
we use a Courant–limited timestep. Dirichlet boundary conditions are again set from
the analytic solution. To drive the ﬂow, we add a constant x-momentum forcing, γx, to
the right–hand–side of (1) (or, equivalently, to (7)) such that

×

sinh Ha
cosh Ha −
u0a
ν = 40, u0 = 1, and B0 = 1; the choice of
Ha > 1 suggests a ﬂow where the magnetic ﬁeld is dynamically signiﬁcant. In ﬁgure 2
we present our convergence results. As expected, we again see spectral convergence.

For all our tests, we set Ha = 4, Rv

γx =

u2
0 Ha
a Rv

≡

1

.

4. The Orszag-Tang vortex

The Orszag-Tang vortex (hereafter, OT; [27]) is a simple conﬁguration with a magnetic
X-point centered at a stagnation point of the velocity. It is best expressed in terms of
the stream function Ψ (with ~u =

Ψ ˆz) and the magnetic potential. It reads

∇ ×

Ψ = 2 α [cos(2πx) + cos(2πy)]

az = 2 cos(2πx) + cos(2πy).

Spectral adaptive mesh reﬁnement in MHD

9

The total energy ET = EV + EM , for α = 1, is equally divided initially between its
kinetic and magnetic components EV and EM , both equal to 2, and the initial correlation
coeﬃcient ˜ρc is equal to 41%, where ˜ρc = 2~u·~b
u2+b2 . This conﬁguration is known to develop
several current sheets in a time of order unity in these units; such current sheets further
destabilize in time through a tearing mode instability embedded within a turbulent ﬂow
and develop numerous complex small-scale structures (see e.g.[29]).

In this section, we apply the algorithm described in Section 3 to the OT problem.
For adaptive runs, a spectral estimator reﬁnement criterion is used [16, 20, 30] that
estimates the solution error. If, in a given element, this error is greater than a speciﬁed
tolerance, εest, the element is tagged for reﬁnement. The nominal resolution of the
adaptive runs is given by an equivalent resolution, which is computed by

Neq = pN02ℓmax,

where N0 is the initial number of elements in either direction (the base grid), and ℓmax
is the maximum reﬁnement level. All computations are performed on a periodic grid of
dimension [0, 1]2. We compare the spectral element solutions with those obtained from a
well–characterized pseudo–spectral code that has been used to produce numerous results
cited in the literature [13, 14].

The total dissipation in the ﬂow is deﬁned as
ν < ω2 >

−

−

∇ ×

∇ ×

DT =

η < j2 >,
~u is the vorticity and ~j =

(22)
~b is the current density. It is a global
where ω =
quantity, as is the total energy ET , and is characteristic of the dynamical evolution
of the ﬂow as a whole: as small-scale gradients in both the velocity and the magnetic
ﬁeld develop through non-linear interactions, current and vorticity sheets form and
dissipation sets in at a time of order unity. The temporal evolution of ET and
DT are
shown in ﬁgure 3 for the GASpAR MHD run (solid line) and the pseudo-spectral code
(dotted line) for a ﬁducial run with Rv = 103π; the initial grid is K = 8
8 with ℓmax = 3
10−5. The adaptive code reproduces the
and p = 8 (implying Neq = 512), and εest = 1
temporal characteristic times (as well as secondary maxima in
DT at lower Reynolds
number, shown in ﬁgure 10 in the context of a ﬁxed grid, see below); it also reproduces
the amplitude of the global phenomenon of reconnection of magnetic ﬁeld lines and
ensuing dissipation of energy.

×

×

The total number of degrees of freedom (d.o.f.) normalized by the number of modes
in the pseudo-spectral run used in this comparison during the temporal evolution of the
ﬂow is also shown in ﬁgure 3 in black. The d.o.f. quickly increases because the initial
grid was coarse (K = 8
8 elements, at p = 8). After this, the d.o.f. grows regularly
in anticipation of the peak in total dissipation at a slightly later time; note that it is
about one-half that of the pseudo-spectral computation. Other runs at lower Reynolds
numbers indicate that, beyond this peak, the number of d.o.f. is roughly constant until
about t = 1.8, where the grid appears to anticipate a secondary peak in
DT that begins
at about t = 2.5, and corresponds to renewed reconnection of current layers [29] (not
shown).

×

Spectral adaptive mesh reﬁnement in MHD

10

8.2
8.2

8.1
8.1

8
8

7.9
7.9

7.8
7.8

2

2
/
)
>

 

b
<
+
>

 

u
<
(

2

(a)

(b)

2
/
)
>

2

j

 

<
η
+
>

 

 

2
ω
<
 
ν
(

0.4

0.3

0.2

0.1

0

1

.
f
.
o
d

.

0.5

0
0

0.2

0.4

0.6

0.8

1

time

Figure 3. (a) Comparison of enstrophy (red curve) with a pseudo-spectral code with
5122 d.o.f. (black curve), as a function of time. The curves overlie each other. (b)
Degrees of freedom in the adaptive run normalized by the total number of d.o.f. in the
pseudo-spectral run, as a function of time, for the reﬁnement criteria based on ux and
Bx (black), and j and ω (green).

As the relative number of d.o.f. increases toward unity, the AMR becomes less
In this run, the grid reﬁnes on the native solver variables ~u and ~b, and by
eﬃcient.
the time the nonlinear regime begins, the small scales dominate the ﬂow requiring ﬁner
elements to remain on the grid to resolve them. The number of d.o.f. also depends
on the criterion of reﬁnement and on εest; note that here εest is set tightly so that the
grid is more likely to reﬁne. It will be left to future work to investigate this and other
reﬁnement criteria more systematically, in order to determine what range of parameters,
and, indeed, which criteria, are the most robust and eﬃcient for adaptive modeling of
ﬂows such as OT. We have freedom in the code also to deﬁne new variables to which to
apply our reﬁnement criteria, providing yet another avenue for investigation (see also
the discussion below around ﬁgure 6). As an illustration, we also show in ﬁgure 3 the
number of d.o.f. for a spectral criterion of reﬁnement, based this time on the vorticity
and the current. In this case, the reﬁnement of the grid starts at a later time, once
the strong gradients have developed, and thus the run is roughly twice as fast; however,
once we approach the saturation of the growth of small scale production, the number of
d.o.f. for the two reﬁnement criteria are comparable.

Conservation of energy (and that of the other quadratic invariants) is an essential
feature in the detailed dynamical evolution of a turbulent ﬂow; it is at the foundation
of the concept of energy (or invariant) cascade and leads, assuming a constant energy
dissipation rate ǫ within the cascade, to the celebrated Kolmogorov energy spectrum
k−5/3. Note that in MHD, the power law followed by the energy spectrum
EV (k)
in the inertial range is less clear, and other spectra can be postulated a priori on the
basis of Alfv´en wave propagation, including an anisotropic component of the spectrum
linked with the bi-dimensionalization of the ﬂow in the presence of a strong uniform

∼

Spectral adaptive mesh reﬁnement in MHD

11

0
10

−2

10

−4

10

y
g
r
e
n
E

−6

10

−8

10

−10

10

0
10

 Magnetic

 Kinetic

1
10

k

2
10

Figure 4. Energy spectra for the ﬁducial run at a time near the peak in enstrophy.
The black curves represent the spectra computed from the pseudo-spectral method,
and the red, from GASpAR. The upper curves are the magnetic energy, while the lower
are the kinetic energy.

magnetic ﬁeld. Such power laws are barely observable, due to a variety of reasons. In
the laboratory or in observations of geophysical ﬂows, the instrumentation has cut-oﬀ
frequencies, and in numerical simulations, the resolution is barely suﬃcient to be able
to resolve the ranges necessary to follow the evolution of the ﬂow, namely the energy-
containing range around k
k0, the inertial range where loss-less transfer of energy
occurs, and the dissipation range. For example, for ﬂuids in three dimensions, it was
shown in [1] that the Kolmogorov energy spectrum, on resolutions of up to 10243 points,
occurs on a small range of wavenumbers (slightly more than two octaves) and is followed
by a shallower power law, named a bottleneck eﬀect.

∼

The energy spectra close to the maximum of enstrophy, at t

0.85, are given
in ﬁgure 4; the spectra for the AMR run are computed on an irregular grid using the
algorithm derived in [10]. We see that the agreement is quite good between the adaptive
spectral element run and the pseudo-spectral run. It is interesting to note that, while the
pseudo-spectral case uses dealiasing, no explicit dealiasing is required in the GASpAR
run.

≈

A further test of the code is to verify that the nonlinear terms of the primitive
equations do preserve the invariants, as spectral methods are expected to be
conservative. This can be done by computing the time derivative of the invariant (say,
using an algorithm of order 2), and comparing it to its theoretical value. In the case of
DT given in equation (22) is the theoretical
the total energy, for example, the dissipation
value. In ﬁgure 5 we show the degree to which the energy is preserved and observe again

Spectral adaptive mesh reﬁnement in MHD

12

/

t
d
E
d

0

−0.1

−0.2

−0.3

−0.4

−0.5

−0.6

−0.7

−0.8

−0.9

−1
0

0.2

0.4

0.6

0.8

1

time

= 0, η

Figure 5. Time variation of the energy invariant compared to its exact dissipation
when ν
= 0. The blue curve is the time derivative and the red, the dissipation
term. Both curves are normalized by the maximum in the dissipation. There is no
discernible diﬀerence between the two curves.

Figure 6. Contours of current density, j, for the ﬁducial run, showing the reﬁned
grid. Each yellow box is an element; the grid lines indicating the node points within
each element are not shown.

an excellent agreement.

A snapshot of the current density shown in ﬁgure 6 near the peak in enstrophy
indicates that, as expected, the grid reﬁnes in the region of the current sheets (and
vorticity sheets, which are known to be almost co-located). However, when compared
with runs from other authors [11] using ﬁnite diﬀerence methods and conﬁguration space
reﬁnement on the gradients of the basic variables, there appears in our run to be more

6
6
Spectral adaptive mesh reﬁnement in MHD

13

180

160

140

120

0.75

0.8

0.85

0.9

x
a
m

J

200

180

160

140

120

100

80

60

40

20

0
0

0.2

0.4

0.6

0.8

1

time

Figure 7. Plot of Jmax for the ﬁducial run with the reﬁnement criteria on ux and bx
(red curve), and on j and ω (blue). The black curve is the pseudo–spectral run.

reﬁnement than is initially expected outside of the sheets. In the case of the spectral
reﬁnement criterion applied to ~u and ~b, which are native to the solver, the criterion
appears to capture the variation in the curvature of ~u and ~b near the current sheets to
an extent that may not be required since, with the same εest, half the d.o.f. is needed
at early times with the spectral criterion based on j and ω.

−

We now examine the temporal evolution of the current maximum in this ﬁducial
run, as shown in ﬁgure 7. As is well known, the development of singularities in such
ﬂows may be diagnosed by a 1/[t∗
t] behavior [3], with t∗ the time of singularity.
As such, the temporal evolution of extrema is an important feature of turbulent ﬂows;
from a physical point of view, such extreme events are also the locus of anomalous
diﬀusion and concentration of (say, chemical) tracers so that a faithful reproduction of
such events may be required. The linear (exponential) growth of the current instability
is well reproduced but as we enter the nonlinear phase, studied in the literature in the
context of the nonlinear growth of the tearing mode instability [32], errors appear when
using the AMR codes, errors that are comparable for the two reﬁnement criteria just
described (see ﬁgure 7). As already shown in three dimensions [24], the nonlinear phase
is highly nonlocal, which indicates that many scales are interacting in the development
L2 norm) might be
of current instabilities. This discrepancy (not observable in the
remedied by tightening the reﬁnement criteria. However, the accuracy of the code,
as measured primarily by the polynomial order in each element for a ﬁxed number of
elements and without reﬁning the grid, is a parameter that must also be examined, and
this is done in the next section.

Spectral adaptive mesh reﬁnement in MHD

14

Table 1. Parameters used in the simulations described in Section 5; p is the polynomial
order in each direction for each element, Neq is the linear grid resolution, and E is the
number of elements in each coordinate direction such that the total number of elements
is K = E

E.

×
p = 3
129
43

Neq
E

p = 4
128
32

p = 5
130
26

p = 3
258
86

p = 4
256
64

p = 6
258
43

p = 8
256
32

5. High versus low order

We now consider the behavior of the OT solutions when the number of global degrees of
freedom is kept (roughly) constant, while the polynomial truncation (degree) varies. In
the ﬁrst series of runs, we have ν = η = 0.025 (Rv = 80π), and these runs are compared
with a pseudo–spectral run with resolution of 1282 grid points. Here, as stated before,
we use a static conforming mesh for each run so that the results will not be aﬀected by
reﬁnement and coarsening criteria, since we want to focus on the eﬀect the order of the
method has on the results. In table 1, we present the relevant run parameters.

In ﬁgure 8 is shown the proﬁle of Jmax as a function of time for each of the Neq ≈
128
runs. It is seen immediately that the low order truncation does not yield accurate values
for Jmax, particularly as the peak in total dissipation is reached near t = 1.1. Clearly,
Jmax converges to the correct solution as p increases (compare the red curve for p = 5
and the black curve for the pseudo-spectral run). The maximum of vorticity behaves in
much the same way as Jmax.

At this stage, it is desirable to compare the accuracy for a pseudo-spectral code
with N points per linear dimension, ǫps, to the error, ǫse, of a spectral element code with
E elements per linear dimension, each with polynomials of order p. Omitting prefactors
with slower variations in the truncation orders, we have for the pseudo–spectral error
[4, p. 400] that

and for the spectral element error bound [5, p. 273], that

ǫps ∼

∆xN

1/N N

∼

hmin(p,s) p−s

ǫse ∼

∼

1/E is the uniform element length, and s is the smoothness of the exact
where h
solution. It is clear that in practice s
p, since the derivatives for s > p cannot be
computed. We thus choose s = p so that the function is suﬃciently smooth to allow
spectral convergence.

≤

Equating the logarithmic errors immediately shows the relationship between N, E

and p, namely:

The above scaling argument allows for choosing a range of values of polynomial
order under simple assumptions. Let us say the Reynolds number is doubled from a

N log N

p log(p E).

∼

Spectral adaptive mesh reﬁnement in MHD

15

50

45

40

35

30

0.8

1

1.2

x
a
m

40

J

80

70

60

50

30

20

10

0
0

0.5

1

1.5

2

2.5

time

Figure 8. Maximum of current Jmax as a function of time for the ﬁrst series of
Neq
128 runs in Table 1. The black curve is the pseudo–spectral case; red is the
p = 5 run; dark blue is the p = 4 run; green is the p = 3 case. Note that the p = 5 and
pseudo–spectral results are nearly coincident.

≈

well-adjusted run; roughly speaking, we need to double the resolution of the pseudo-
spectral code from N to 2N grid points per linear dimension. Let us also assume
that we double the number of elements in the spectral element code. Then, under the
reasonable assumption of large N, we ﬁnd that the polynomial order needs to be doubled
as well. Though empirical, this criterion does indicate that the polynomial order needs
to increase with Reynolds number. It should be noted that, whereas the pseudo-spectral
code, in the preceding example of ﬁgure 8, uses a truncation of order 128, the equivalent
spectral element code uses polynomials of order 5, substantially smaller, in order to
achieve comparable accuracy.

As a speciﬁc example, an examination of ﬁgure 8 indicates that, with E = 26,
setting p = 5 leads to a satisfactory computation of Jmax. Let us now double the
resolution of the pseudo-spectral code to N ′ = 256 and take E′ = 52. As can be seen in
ﬁgure 9, it is indeed the case that p
8 gives an accurate representation of the dynamics
of the ﬂow at that enhanced Reynolds number. According to the scaling relationship,
if we were to retain p = 5, we would need E
10000 in order to reach the same level
of accuracy at the higher Rv. For completeness, we show in ﬁgure 10 the corresponding
L2 norms for the total energy (top) and the total generalized enstrophy < ω2 + j2 > for
the Neq ≈

256 cases; the diﬀerent runs cannot be discerned.

≥

≈

6. Discussion and Conclusion

We have presented an explicit spectral element method for solving the equations of
incompressible magnetohydrodynamics. The method is developed within the context
of an existing spectral element code (GASpAR) that provides many of the spectral
element operators required of the MHD algorithm, and that also oﬀers an adaptive,

Spectral adaptive mesh reﬁnement in MHD

16

75

70

65

0.8

1

1.2

0.5

1

1.5

2

2.5

time

Figure 9. Maximum of current Jmax as a function of time for the second series of
Neq
256 runs in Table 1. The black curve is the pseudo–spectral case; red is the
p = 8 run; dark blue is the p = 6 run; green is the p = 4 case; cyan is the p = 3 run.
Note that this time the p = 8 and pseudo–spectral results are nearly coincident.

≈

x
a
m

40

J

80

70

60

50

30

20

10

0
0

2
/
>

2
b
+

 

 

2

v
<

5

4

3

2

1

0

100

50

2
/
>
)

j
 

+

 

2

2
ω
(
<

0
0

0.5

1

2

2.5

1.5

time

Figure 10. Plots of total energy (top) and enstrophy (bottom) for the Neq
256 runs
in Table 1. The color scheme is the same as in ﬁgure 9, but the curves lie on top of
one another.

≈

nonconforming mesh algorithm. The new operators that arise in the explicit MHD
treatment, have been deﬁned. Here, we have described tests that compare the
numerical results with analytic solutions and establish that the method achieves spectral
convergence in the case of conforming elements (for preliminary tests on a static
reconnection problem, see [31]). We have then applied the method to a challenging
problem in the literature, the so-called Orszag-Tang ﬂow, which allows for magnetic
reconnection and the development of current sheets. The OT runs are compared with
well-tested pseudo–spectral solutions as a baseline, and found to agree well. We ﬁnd

Spectral adaptive mesh reﬁnement in MHD

17

that the quadratic
L2 diagnostic quantities are insensitive to variations in polynomial
degree, while the sup–norm quantities, such as the maximum current density, are not
accurate at low order truncations. Because such sup-norm quantities are the foundation
for criteria of the development (or not) of singularities in Navier-Stokes and MHD ﬂows
[2, 3], it may be of some importance to be able to solve for them accurately.

It is worth pointing out that the spectral element method described in this paper
is more costly in terms of computational time than the pseudo–spectral method with
which we compare our results, the latter being optimal for periodic boundary conditions.
This is despite the fact that the spectral element method requires only nearest–neighbor
communication, while the pseudo–spectral method requires all–to–all exchange of data
in the fast Fourier transform algorithm. This performance issue can be traced directly
to the solutions of the pseudo–Poisson equation (21) that are required in order to
maintain the divergence constraints. The pseudo–Laplacian operator is known to be
ill–conditioned, primarily because of a one-dimensional null space.
Indeed, for the
Neq = 5122 equivalent runs, we see typical iteration counts for each RK stage of
250, which further increase–albeit reasonably slowly–in the OT runs as the enstrophy
∼
maximum is approached; we see no signiﬁcant reduction in the PCG iteration count
when we attempt to remove this null–space, but more work is needed in this area. [It
should be noted that the scaling of the spectral element code on multiprocessors is very
good, but we refer here to single processor performance.] Furthermore, when dealing
with incompressible MHD ﬂuids at low magnetic Prandtl number, as encountered in the
laboratory and in the liquid core of the Earth, there is a need for accurate simulations
of the generation of magnetic ﬁelds in turbulent ﬂows with complex boundaries, in
conjunction with several ongoing experiments (see e.g., [35, 12, 34, 25]). Spectral element
codes, which encompass easily a variety of boundary conditions and geometries may be
useful in this context.

There are a number of ways to speed up the spectral element solutions. One is
to implement a more sophisticated preconditioner, and we are making progress in this
regard that will be reported on elsewhere. Another is to relax the degree to which the
divergence constraints are maintained, by increasing the PCG convergence tolerance to a
less stringent value. Still another, as alluded to in section 4, is to ﬁnd reﬁnement criteria
that optimize the number of degrees of freedom for a desired quadrature or truncation
error. We have seen that the adaptive mesh code can provide a substantial savings
in work because the number of degrees of freedom, as shown in several instances (e.g.
[30]), can be reduced. The code is presently being extended to include compressibility in
view of the many MHD applications we have in mind in the astrophysical context (solar
wind, magnetosphere, solar convection zone and corona), in which case the performance
problems associated with this divergence-free constraint should be alleviated.

Spectral adaptive mesh reﬁnement in MHD

18

Acknowledgments

We acknowledge helpful discussions with Amik St.Cyr and Aim´e Fournier, and we also
thank the latter for providing some of the analysis and visualization software used in
this work. Computer time was provided by NCAR. The NSF grant CMG-0327888 at
NCAR supported this work in part and is gratefully acknowledged.

References

Lett., 95:264503, 2005.

[1] A. Alexakis and P.D. Mininni. Imprint of large-scale ﬂows on Navier-Stokes turbulence. Phys. Rev.

[2] J. Beale, T. Kato and A. Majda. Remarks on the breakdown of smooth solutions for the 3-D Euler

equations. Comm. Math. Phys. 94:61–66, 1984.

[3] R. Calﬂisch, I. Klapper and G. Steele. Remarks on singularities, dimension and energy dissipation

for ideal hydrodynamics and MHD. Comm. Math. Phys. 184:443–455, 1997.

[4] C. Canuto, M.Y. Hussaini, A. Quarteroni, T.A. Zang. Spectral methods in ﬂuid dynamics, New

York, Springer–Verlag, 1988.

[5] M.O. Deville, P. F. Fischer and E. H. Mund. High-Order Methods for Incompressible Fluid Flow.

Cambridge, Cambridge University Press, 2002.

[6] W.M. Els¨asser. The hydromagnetic equations. Phys. Rev., 79:183, 1950.
[7] J.H. Ferziger & M. Peri´c. Computational methods for ﬂuid dynamics, 3rd ed.. New York, Springer–

[8] P.F. Fischer, G.W. Kruse, and F. Lottis. Spectral element methods for transitional ﬂows. J. Sci.

Verlag, 202-204, 2002.

Comput. 17(1):81-98, 2002.

[9] P.F. Fischer. An overlapping Schwarz method for spectral element solution of the incompressible

Navier–Stokes equations. J. Comp. Phys. 133:84–101, 1997.

[10] A. Fournier. Exact calculation of Fourier series in nonconforming spectral-element methods. J.

Comp. Phys. 215:1–5, 2006.

[11] H. Friedel, R. Grauer, and C. Marliani. Adaptive mesh reﬁnement for singular current sheets in

incompressible magnetohydrodynamic ﬂows. J. Comp. Phys. 134:190–198, 1997.

[12] A. Gailitis et al. . Magnetic ﬁeld saturation in the Riga dynamo experiment. Phys. Rev. Lett. 86,

[13] D. O. G´omez, P. D. Mininni, and P. Dmitruk. MHD simulations and astrophysical applications.

[14] D. O. G´omez, P. D. Mininni, and P. Dmitruk. Parallel simulations in turbulent MHD. Phys.

3024–3027, 2001.

Adv. Sp. Res., 35:899–907, 2005.

Scripta, T116:123–127, 2005.

[15] J. Graham, P. Mininni and A. Pouquet. Cancellation exponent and multifractal structure in

Lagrangian averaged magnetohydrodynamics. Phys. Rev. E, 72:045301(R), 2005.

[16] R.D. Henderson. Dynamic reﬁnement algorithms for spectral element methods. Comput. Methods

Appl. Mech. Engrg., 175:395–411, 1999.

[17] L. Kovasznay. Laminar ﬂow behind a two-dimensional grid. Proc. Cambridge Philos. Soc., 44:58–

62, 1948.

[18] D. Landau, E.M. Lifshitz and L. P. Pitaevski˘ai. Electrodynamics of continuous media, 2nd ed.,
Landau and Lifshitz Course of Theoretical Physics, Volume 8, Oxford, Pergammon Press, 230-
232, 1984.

[19] Y. Maday, A.T. Patera, & E.M. Rønquist. The PN -PN −2 method for the approximation of the
Stokes problem. Pulications du Laboratoire d’Analyse Num´erique, Universit´e Pierre et Marie
Curie, 1992.

[20] C. Mavriplis. Adaptive mesh strategies for the spectral element method. Comput. Methods Appl.

Mech, Engrg., 116:77–86, 1994.

Spectral adaptive mesh reﬁnement in MHD

19

[21] C. Meneveau and J. Katz. Scale-invariance and turbulence models for large-eddy simulations. Ann.

Rev. Fluid Mech. 32:1–32, 2000.

[22] P. Mininni, D. Montgomery and A. Pouquet. A numerical study of the alpha model for two-

dimensional magnetohydrodynamic turbulent ﬂows. Phys. Fluids 17:035112, 2005.

[23] P. Mininni, D. Montgomery and A. Pouquet. Numerical solutions of the three-dimensional MHD

alpha model. Phys.Rev. E 71:046304, 2005.

[24] P. Mininni, A. Pouquet and D. Montgomery. Small-scale structures in three-dimensional

magnetohydrodynamic turbulence. Phys. Rev. Lett. 97:244503, 2006.

[25] R. Monchaux et al. . Generation of magnetic ﬁeld by dynamo action in a turbulent ﬂow of liquid

sodium. Phys. Rev. Lett. 98:044502, (2007).

[26] W.C. M¨uller and D. Carati. Dynamic gradient-diﬀusion subgrid models for incompressible

magnetohydrodynamic turbulence. Phys. of Plasmas 9:824–834, 2002.

[27] S. Orszag and C.M. Tang. Small scale structure of two-dimensional magnetohydrodynamic

turbulence. J. Fluid Mech. 90, 129–143, 1979.

[28] A. Patera. A spectral element method for ﬂuid dynamics: laminar ﬂow in a channel expansion. J.

Comp. Phys., 54:468–488, 1984.

[29] H. Politano, A. Pouquet, P. L. Sulem. Inertial ranges and resistive instabilities in two–dimensional

magnetohydrodynamic turbulence. Phys. Fluids B, 1(12):2330–2339, 1989.

[30] D. Rosenberg, A. Fournier, P. Fischer, & A. Pouquet. Geophysical-astrophysical spectral-element
adaptive reﬁnement (GASpAR): Object-oriented h-adaptive ﬂuid dynamics simulation. J. Comp.
Phys., 215:59–80 2006.

[31] D. Rosenberg, A. Pouquet, K. Germaschewski, C. S. Ng, and A. Bhattacharjee, Spectral-element
adaptive reﬁnement magnetohydrodynamic simulations of the island coalescence instability. Bull.
Am. Phys. Soc. 51(7):167, 2006.

[32] P.H. Rutherford. Nonlinear growth of the tearing mode. Phys. Fluids 16:1903–1908, 1973.
[33] R.J. Shewchuck. An Introduction to the Conjugate Gradient Method Without the Agonizing Pain.

http://www-2.cs.cmu.edu/ jrs/jrspapers.html, 1994.

[34] E. J. Spence, M. D. Nornberg, C. M. Jacobson, R. D. Kendrick and C. B. Forest. Observation of

a turbulence-induced large scale magnetic ﬁeld. Phys. Rev. Lett. 96: 055002, 2006.

[35] R. Steiglitz and U. M¨uller. Experimental demonstration of a homogeneous two-scale dynamo. Phys.

Fluids, 13: 561-564, 2001.

[36] E.W. Weisstein. Conjugate Gradient Method, From MathWorld—A Wolfram Web Resource.

http://mathworld.wolfram.com/ConjugateGradientMethod.html.

