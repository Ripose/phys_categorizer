Comparison of direct and Fourier space techniques in

time-dependent density functional theory

G.F. Bertsch(a) ∗, Angel Rubio(b)†, and K. Yabana(c)‡

(a)Department of Physics and National Institute for Nuclear Theory,

University of Washington

Seattle, WA 98195

b) Departamento de F´ısica Te´orica, Universidad de Valladolid, E-47011 Valladolid, Spain

and Donostia International Physics Center, San Sebastian, Spain

(c)Institute of Physics, University of Tsukuba,

Tsukuba 305-8571, Japan

Abstract

Several techniques have appeared in the literature to solve the equations of

time-dependent density functional theory. We compare the eﬃciency of dif-

ferent methods based on mesh representations of the wave functions (direct

and Fourier space), taking as a test case the calculation of the surface plas-

mon in the cluster Na8. For smaller systems, the methods have comparable

eﬃciency, but for large systems the direct space and time methods have a

decided advantage.

0
0
0
2

 
r
a

 

M
8
2

 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 

1
v
0
9
0
3
0
0
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

∗E:mail: bertsch@phys.washington.edu

†E:mail: arubio@mileto.fam.cie.uva.es

‡E:mail: yabana@nucl.ph.tsukuba.ac.jp

1

I. INTRODUCTION

The time-dependent local density approximation has proven to be a useful tool to cal-

culate the optical properties of ﬁnite systems such as atoms, molecules, and atomic clusters

[1–8]. The basic equation to be solved is conceptually very simple, little more than the

time-dependent Schr¨odinger equation for a particle in a time-varying external ﬁeld. Many

numerical methods are in use to solve the equations. On the one side there are quantum

chemistry methods based on atomic orbital representation for the wave function, and on

another side there are methods based on mesh representations. We only consider the latter

here, but even in this category there are a number of published techniques. Most funda-

mentally, the time evolution can be calculated directly or in Fourier space, i.e.

in terms

of frequencies. The former method is practically a necessity for dealing with very strong

external ﬁelds [10,11] and has been applied by two of us (K.Y. and G.B.) for the weak-ﬁeld

response as well [4]. We shall call this approach the “nuclear physics”(NP) method, since

the algorithms were originally developed in that ﬁeld for describing nuclear reactions [12].

The other methods we will consider [3,8] solve equations in frequency space. The method

described in ref. [3] had its origins in condensed matter theory and uses Fourier represen-

tation for both space and time; we shall call this the “condensed matter” (CMP) method.

We also comment on ref. [8] which uses Fourier space for the time but a real space mesh for

the spatial dependence [13]. Here the problem is cast into a matrix diagonalization in the

particle-hole representation; we shall call it the diagonalization method.

In this work we will compare the CMP code and the NP code for a speciﬁc system and

present arguments for the scaling properties of the respective algorithms for larger systems.

The system we choose to study is the atomic cluster Na8, and in particular the surface

plasmon excitation which is seen as a strong peak at 2.5 eV excitation. The TDLDA is not

an exact theory and it predicts a excitation energy at about 2.7 eV. We shall demand of

both methods that they achieve within 0.1 eV of the converged value. It makes little sense

to calculate to higher precision in view of the intrinsic limitations of the theory.

2

We shall now describe the various methods from a computational point of view. We shall

use the symbol N with subscripts for quantities that scale roughly as the size of the physical

system under study, and M for quantities that may be large but are independent of the size

of the system. Important quantities common to the two codes are the number of electrons Ne

and the number of mesh points, NG and NR for real space and reciprocal space, respectively.

Additional quantities that play a role are the number of frequencies to be calculated Mω, and

the number of time steps to evolute the wave function in the real-time method, MT . Also, in

methods that rely on sparse matrix multiplication, we need the number of nonzero entries in

a row of the Hamiltonian, MH, and in iterative methods to solve large matrix equations we

need the number of iterations for convergence, Mit. Finally, the response function method

usually requires a sum over unoccupied states, Nc. This notation is summarized in Table I.

We will use same energy functional for all methods, so the choice of speciﬁc functional is

not an issue in comparing the methods. As is commonly done, we calculate only the dynamics

of the valence electrons. The core electrons are frozen and their presence is treated by using

a pseudopotential to describe the ionic potential. We use the pseudopotential construction

of Troullier and Martins [15], taking the nonlocal part by the method of Kleinman and

Bylander [16] and including partial core corrections for the exchange-correlation energy

[17]. In this method, the local pseudopotential is ﬁxed to the value in a particular angular

momentum channel, and a nonlocal correction is made for other channels. Here we use

the l = 1 potential as the local potential, and apply the nonlocal correction to the l = 0

and l = 2 channels. The electron-electron interaction is taken in the simple local-density

approximation (LDA) given by Perdew and Zunger [18]. More complicated functionals have

better predictive power for ground state properties [6,7], but give only small improvement

to the optical response of neutral molecules. The proper description of the 1/r asymptotic

behavior of the potential is going to be very important to describe charged systems, however

for the aim of the present work this LDA deﬁciency is not relevant.

The geometry of the Na8 cluster was computed in ref. [6], and the lowest energy struc-

ture found to be the bicapped octahedron (D2d symmetry). We use this structure in our

3

comparison here. It has an average Na-Na bond length of 3.38 ˚A and a slight deviation from

the spherical symmetry. This leads to a polarizability tensor with two diﬀerent components

and two close-lying peaks are obtained in the photoabsorption cross section.

II. THEORETICAL METHODS

Before describing in detail each of the two methods for representing the wave functions

(direct and Fourier space), we need to comment on the choice of the spatial cell size and

mesh size as well as the time/frequency parameters (all are summarized in Table I).

Since the wave functions are sensitive to boundaries, the calculations must be made in

a volume several Angstroms larger than the size of the molecule or cluster. Using both

methods, we determined how large a volume is needed to achieved 0.1 eV accuracy on the

various excitation energies of interest in the system. We found that this is achieved in a

spherical volume of radius R = 8 ˚A using the NP code, and in a simple cubic supercell of

side 12.7 ˚A using the CMP code. These have nearly the same volume, and thus the same

average distance from the cluster to the boundary. We have checked the convergence of

the results by increasing the volume to a sphere of 12 ˚A radius. The value of the plasma

frequency is reduced by a maximum of 0.1 eV, that is, within the required accuracy.

We have used an uniform spatial grid with ∆x = 0.5 ˚A spacing. This corresponds to

a plane-wave cutoﬀ energy of 6 Hartrees in the Fourier space method (see below). Within

this parameters, a stable time-step to perform the time-evolution in the NP method is

∆t = 0.003¯h/eV << ¯h(∆x)2/m. The required 0.1eV accuracy in energy is obtained for total

simulation times of 10 ¯h/eV. Similarly in the Fourier space method we have taken a uniform

frequency grid of Mω = 100 between 0 and 5 eV. Note that if the response is required for

larger frequencies we need to increase the number of points. The whole response is obtained

at once in the time evolution method (unless up to energies of the order of (∆t)−1). This is

a great advantage when the whole response is needed.

4

A. NP method

This method uses a direct solution of the time-dependent single-electron Schr¨odinger

equation,

i¯h

∂φi(r, t)

∂t

= HKS(t)φi(r, t)

(i = 1 . . . occ.)

where HKS is the Kohn-Sham Hamiltonian operator

HKS(t) = −

¯h2
2m

∇2 + Vion(r) + e2 Z d3r′ n(r′, t)

|r − r′|

+ Vxc(r, t)

(1)

(2)

and n is the time-dependent electron density n(r, t) = Pocc

i=1 φ∗

i (r, t)φi(r, t). In the solution

of this equation in the spatial and time variables following the algorithm of ref. [4], there

are two time-consuming operations. One is multiplying the single-electron Hamiltonian

operator by the vector representing the wave function. The dimensionality of the vector is

the number of mesh points NR times the numbers of electron orbitals Ne. The operator is a

sparse matrix with MH nonzero elements per row. Thus the basic operation requires about

NeNRMH complex ﬂoating point operations. The time evolution operator in the NP code is

implements by a power series expansion of the exponential operator exp(−iH∆t) to fourth

order. A predictor-corrector cycle requires two such operations. Thus the method requires

8 Hamiltonian multiplications per time step. Thus for MT time steps the total number of

ﬂoating point operations is given by

NP F P O : 10NeNRMH MT

The sparseness of the Hamiltonian matrix in a real space formulation is determined by

the ﬁnite diﬀerence formula for kinetic energy (nine-point formula in our case); and by the

nonlocal-projection parts of the potential. In total we have a number of non-zero elements

of the each Hamiltonian row MH ≈ 100 for the grid parameters used for Na8.

The other time-consuming part of the NP algorithm is solving the Poisson equation,

which must be done twice at each time step. The NP code uses a multipole expansion

5

combined with a relaxation method to deal with the higher multipoles. It is hard to estimate

the scaling properties of this part, but in the present study this part of the computation takes

1.5 times as many operations as the Hamiltonian multiplication operation. We shall assume

the same factor for estimating the scaling properties of the algorithm.

In principle, the

Poisson equation can be solved by methods that are of order NR or NR log NR, as multigrid

or fast-Fourier transformation, so this part should not dominate for large system.

Storage requirements are small: the vector wave function plus VHartree and Vion local

potentials in Hamiltonian, charge densities and some intermediate arrays. VHartree requires

a slightly larger volume because of the way the Poisson equation is solved.

NP storage : NR(Ne + 4.5)

This NP method is ideal to be combined with molecular dynamics simulations for the

ions because it uses only ground-state occupied information and would scale roughly linearly

with the number of atoms in the system. There is not so much book-keeping as in the usual

perturbative formalism (no need for storing the large set of unoccupied wave-functions and

the large dielectric matrices).

B. CMP method

Here the basic object of the calculation is the linear response to an external ﬁeld of some

frequency ω. The linear response matrix χ is constructed in momentum space with the

following matrix inversion

χ = (1 − χ0K)−1χ0

(3)

where the independent particle response χ0 and the interaction K are matrices deﬁned as

follows. The χ0 has elements G, G′ given by [19]

χ0(G, G′, ω) =

1

Ω Xkj

(fk − fj)

hk|e−iG·r|iihi|eiG′·r|ki

ω − ǫj + ǫi + iη

(4)

6

where Ω denotes the unit-cell volume, i, k label Kohn-Sham eigenfunctions and ǫk and fk

are the corresponding eigenenergies and occupancy factors. The sum goes over Ne occupied

orbitals and Nc empty orbitals. The interaction K is the Fourier transform of the electron-

electron interaction in the Kohn-Sham equation, which is given in coordinate space by

K(r, r′) =

e2

|r − r′|

+

δVxc(r)
δn(r′)

(5)

We now describe the computation starting with the Kohn-Sham wave functions and ener-

gies in a momentum space representation. To evaluate the independent particle response χ0

in eq.( 4), one ﬁrst calculates the particle-hole matrix elements of the momentum operator

and stores them in a table (or in disk). This computational eﬀort is of the order of NeNcN 2
G

operations, and the table size to be stored is NeNcNG complex numbers. Then the evalu-

ation of eq. (4) requires N 2

G matrix elements to be calculated, each requiring particle-hole

summation, to give ≈ 2N 2

GNeNc operations for each frequency. If one were to make full space

calculation, the number of empty orbitals summed in eq. (4) would be of the same order

as the dimensionality of the space. However, the number of empty orbitals can be severely

truncated without eﬀecting the long-wavelength dipole response. In the example, we ﬁnd

Nc = 320 is adequate, which is more than an order of magnitude smaller than the size of the

space and corresponds to include unoccupied states up to 20 eV above the highest-occupied

orbital. This is a reasonable approximation as we are interested only in getting the optical

spectra for excitation energies below 10 eV. This approximation is an important saving in

building up the response matrix.

One also truncates the calculation of the response matrix in another way. We have also

assumed that the oﬀ-diagonal elements of the response function are zero for G-vectors outside

an sphere of 1.25 ˚A (that is to consider ≈ 3200 points in the G-space). This corresponds to

reducing the number of matrix elements to be computed and stored to NG(NG +4)/18. Note

that the necessity to store the N 2

G matrix puts a higher demand on the computer memory

than the NP method. The memory required to store the N 2

G complex, double-precision

numbers in the example problem is 164Mb.

7

There are now three steps to evaluate eq. (3), two matrix multiplications and a matrix

inversion. The matrices are not sparse, so the matrix multiplications each cost 2(NG/3)3

arithmetical operations 1. The matrix inversion is of the same order, requiring (NG/3)3

operations. The total is ≈ 5(NG/3)3. These represent the most computationally demand-

ing steps in the CMP method, given the truncation in the Nc. The computed χ is next

transformed to the coordinate space representation. Using the fast Fourier transform, this

takes ≈ N 2

G log NG operations. The dynamical polarizability can be now computed from

α(ω) = VextχVext as a matrix times vector multiplication. From this one can easily extract

the photoabsorption cross section σ(ω) = 4πω

c Imα(ω).

Then the total computational eﬀort in the CM method is:

CM FPO : Mω(NcNe(NG/3)2 + 5(NG/3)3)

with the last term dominant. The storage requirements for all the occupied and unoccupied

wave functions plus the whole complex response matrix is

CM storage :

(Ne + Nc)NG + 2(NG + N 2

G/9) + NcNeNG/3

To achieve the targeted energy convergence with this algorithm, the momentum space

mesh was chosen to correspond to a simple cubic supercell of L = 12.7 ˚A on a side. This

implies that the mesh spacing in momentum space is δk = 2π/L = 0.137 ˚A. The momentum

space representation takes all the points within a sphere of radius kmax = 1.83 ˚A (that

corresponds to a plane-wave cutoﬀ energy of 12 Ry). The size of the vector in the momentum

representation is thus NG = 4π(kmax/∆k)3/3 ≈ 10, 000. Note that this is slightly smaller

than the number required for the coordinate space representation, however we need to stress

that a larger number of G-vectors are needed to describe the action of the potential on a

1A small technical point should be mentioned, associated with the divergence of the Coulomb

interaction at G = G′. This is dealt with [19] by taking a numerical limit as |G − G′| → 0, and

this adds about 10% to the number of operations for computing the matrix product.

8

wave-function (V ψ corresponds to a convolution in Fourier space). Finally, an additional

numerical parameter is the imaginary part of the frequency η, which we have taken as

η = 0.05 eV to produce a resolution of 0.1 eV in the spectral features.

In the discussion below we have not include the computational requirements to perform

the ground state calculations, occupied and unoccupied orbitals. This could be a major

storage bottle-neck for very large systems as the calculation of a large set of unoccupied

wave functions has a cubic scaling of the number of atoms in memory and computing time.

In the present calculation this initialization process takes 10% of the total computational

time.

C. Other methods

We mention here two other methods from a computational point of view. Since we

have not carried out numerically computations on our test problem with these methods, the

discussion will be brief.

1. Modiﬁed Sternheimer method

The modiﬁed Sternheimer method was ﬁrst applied to the time-dependent Kohn-Sham

equation for atomic excitations [20], and has since been applied to the dielectric response

of crystals using the momentum space representation [21] and to the ﬁnite system C60 [22]

using the coordinate space representation. Here one solves an inhomogeneous equation for

the perturbed wave functions φ±

i using an iterative method. The perturbation is a sinusoidal

potential ﬁeld combining the external ﬁeld Vext and the internal ﬁeld from the time-varying

electron density. The equations are

(ǫI − H 0

KS ± ω + iη)φ±

i = ˆP Vi

(6)

where

Vi = (Vext + Kδn)φi

9

and

δn = ReXi

φi(φ+

i + φ−

i ).

(7)

ˆP is a projection operator removing occupied orbitals. In ref. [22], the two equations are

constructed in coordinate space and solved with a double iteration. One makes a guess for

the density δn, and solves eq. (6) by the conjugate gradient method. δn is reﬁned from

the resulting φ±

i again with the conjugate gradient method, and the process is repeated to

convergence. The numerical cost will thus depend largely on the cost of the Hamiltonian

operation which is ≈ MH NRNe in coordinate space, and the number of iterations Mit re-

quired to get a converged solution. Remembering also that frequency space methods need

Mω, the number of frequencies to be examined, the computational cost of this method is

Modiﬁed Sternheimer (real space) : MωMitMHNRNe

(8)

The method can be used in this form for nonresonant frequencies, but near the eigenfrequen-

cies the nearby singularities in eq. (6) must be removed for the conjugate gradient method

to converge. Thus this method would be similar to methods utilizing the particle-hole rep-

resentation in needing a considerable number of the wave functions and eigenenergies of

unoccupied states. The singularities are removed by projecting on the unoccupied wave

function subspace the right hand side of eq. (6),

V ′
i = Vi − Xj

φi(φi, Vi).

The desired wave functions φ±

i are obtained from the projected solutions φ′±

i by

φ±
i = φ′±

i + Xj

φi(φi, Vi)

ǫj − ǫi − ω − iη

.

It is diﬃcult to give an a priori estimate of Mit or its size-scaling properties (although

with our notation we have assumed that it does not grow with N). Unfortunately, our

implementation of eq. (7) still left the convergence somewhat erratic. Typically it takes of

the order of Mit ≈ 1000 iterations of the double loop to get convergence. Thus it would

require some improvement of the algorithm to make it attractive to apply to large systems.

10

The momentum space implementation of the modiﬁed Sternheimer method is similar.

This method also needs the conditioning step for convergence of the CG iteration. The main

diﬀerence is in the Hamiltonian multiplication, which here requires ≈ 2(NG/3)3 operations

as discussed in Sect. IIB. Thus the total is

Modiﬁed Sternheimer (momentum space) : 2MωMit(NG/3)3

(9)

Because the Hamiltonian operation is more costly in momentum space, this method is prob-

ably not competitive to the others, unless it were the case that the convergence of the

iteration were intrinsically much more reliable.

2. Diagonalization method

The frequency-space methods discussed so far have relied in some way on operator inver-

sion. It is also possible to cast the problem as one of matrix diagonalization. This method

was applied to cluster excitations in the TDLDA by Vasiliev et al. [8]. The authors start

from a basis in coordinate space and construct Kohn-Sham orbitals for both occupied and

empty states as is done in the CMP method, but representing the orbitals in coordinate space

mesh, as in the NP method. The storage requirement for the orbitals is ≈ (Nc + Ne)NR,

which is larger than in the NP method but smaller than in the CMP method.

The next step of the calculation is to construct the matrix to be diagonalized. The

eigenvalue equation to be solved is

RFn = ω2

nFn

where Fn are the eigenvectors and R is a matrix. Its elements are

Rα,α′ = (ǫi − ǫj)2δα,α′ + 2q(ǫi − ǫj)(ǫ′

i − ǫ′

j)Kα,α′

(10)

(11)

where the indices α = (ij), α = (i′, j′) label combinations of unoccupied orbitals i and

occupied orbitals j. The interaction matrix elements Kα,α′ are simply the particle-hole

matrix elements of the residual interaction, eq.(5). There is a substantial computational

11

cost in construct the interaction matrix K. A straightforward transformation from the

coordinate space to the particle-hole representation requires ≈ N 2

RN 2

e N 2

c operations for the

Coulomb interaction. However, this is reduced considerably by using an eﬃcient method to

solve the Poisson equation [9]. For example, using the fast Fourier transform one may ﬁnd

the Coulomb ﬁeld for a given particle-hole state taking only NR log NR operations. Saving

the Coulomb ﬁeld in the coordinate representation, the matrix element to a given ﬁnal state

takes ∼ NR operations. The eﬀort of solving the Poisson equation is thus distributed over

the number of ﬁnal states, and the operations to construct the full matrix has a leading

dependence NRN 2

e N 2

c , the scaling appropriate for the local part of the interaction2. Once

the matrix is constructed, the diagonalization requires ≈ (NcNe)3 operations. However,

taking the N values from Table I, the matrix diagonalization eﬀort is small compared to

that needed to construct the matrix. We have therefore taken that step to assign this

method’s size scaling in Table II.

III. NUMERICAL RESULTS

We will discuss in detail the physical quantities computed in the NP and CMP methods

and refer to [8] for the results using the diagonalization method. We want to stress that the

three approaches must give the same values if the numerical parameters are chosen with ﬁne

enough grids and large enough cutoﬀs to get converged results.

With the parameter sets chosen for the two methods, the results are quite similar. In

Table IV we show calculated Kohn-Sham energies and the surface plasmon energy. The

ﬁrst entry ǫ1 is the Kohn-Sham eigenvalue of the most bound orbital. The absolute energies

have no signiﬁcance in the supercell method, because the absolute Coulomb potential is

undeﬁned. Therefore, for this entry we give the value from the NP code and set the scale

of the CMP energies at that value. The next three rows correspond to the other bound

2However, in the implementation of ref. [8], the Poisson solver in fact is the most costly operation.

12

orbitals use the G = 0 point of the Brillioun zone for the CMP values. We can see that the

methods agree to within less than 0.1 eV. The next entry is the lowest unoccupied orbital.

This is signiﬁcantly diﬀerent for the two methods. This orbital has suﬃcient extension to

have its energy sensitive to the boundary, which of course is diﬀerent for the two methods.

We conﬁrm the boundary sensitivity in the CMP code by calculating the energies at other

points in the Brillouin zone. Diﬀerences are less than 0.1 eV for occupied orbitals, but reach

0.2 eV for the lowest unoccupied orbital. This last point indicates the fact that the empty

orbitals are more sensitive to the boundary conditions and in the periodic supercell they feel

the potential from the other clusters.

We have also presented in Table IV the results of the NP method 3. We have also checked

the convergence of the plasmon frequency with respect to the cell size and found that this

value is converged to less than 0.01eV for a sphere of R=12 ˚A. The fully converged value

in the NP method is 2.65 eV. The diﬀerence with the experimental value of 2.53 eV can be

attributed to deﬁciencies in the LDA approximation as well as for ﬁnite temperature eﬀects

in the experiments [6].

In Table V we summarize the results for the static averaged electrical polarizability of

Na8 obtained by the diﬀerent methods. The agreement among the diﬀerent approaches

is very good and the remaining diﬀerence with experiments can be again assigned to core

polarization, exchange-correlation and temperature eﬀects. These eﬀects tends to increase

the polarizability bringing the computed values close to the experiments [6].

3The plasmon frequency is sensitive to the core-exchange correction at the level of 0.1 eV. We

have included that correction in HKS it improves the description of the structural properties of

Na metal. We note that the result without core corrections (2.89 eV) it is very close to the jellium

value (2.9 eV).

13

IV. CONCLUSIONS

In the theory of electronic excitations of ﬁnite many-electron systems, the time-dependent

Kohn-Sham equation with an adiabatic local density approximation for the interaction en-

ergy function oﬀers an attractive compromise towards the goals of accuracy and computa-

tional practicality. But even within the TDLDA scheme there are several methods in use,

and our purpose was to compare them on the same footing by applying them to the same

physical problem, and demanding the same accuracy. The goal is to gain a general under-

standing of the numerical resources (total numbers of arithmetic operations and computer

memory) required by the diﬀerent methods. One can then extrapolate to large systems and

make a judgment on which methods oﬀer the best prospects.

We have only considered methods based on a grid representation of the electron wave

functions, and have concentrated on two algorithms, the NP method in real time and real

space, and the CMP method in Fourier transformed time and space.

We chose to study the response of the Na8 cluster around the surface plasmon excitation

energy. The two methods turned out to have comparable requirement on arithmetic oper-

ations. However, it should also be noted that the computational work increases with the

range of frequencies that one studies in the CMP method, but not in the NP method. With

latter, the entire response is obtained from a single calculation.

In comparing the two methods to ascertain their scaling with the size of the system N, we

have deliberately ignored the ﬁrst task in either method, the construction of the eigenstates

of the static Kohn-Sham operator. In the NP method only the occupied orbitals are needed,

but in the CMP method one also needs a large number of unoccupied orbitals as well. Their

calculation scales like N 3

e in principle, but in practice this phase of the computation is short

compared to the dynamic calculation and so we ignore it. Let us now compare the scalings

by taking the expressions in Table II, dropping the subscripts on the N quantities. The

NP method thus scales as N 2. This behavior was also found studying the excitations of

long carbon molecules [5]. The CMP method has a poorer scaling behavior, namely N 3.

14

We also considered two other methods without however examining them in as much detail.

In principle, the modiﬁed Sternheimer method in coordinate space can achieve N 2 scaling

without the cost of the large MT factor of the real-time method. However, we did not ﬁnd

a reliably converging iteration procedure to solve the basic inhomogeneous linear equation

set. The ﬁnal method we discussed, the diagonalization method using real space and Fourier

time, seems to have a poorer N-scaling than the others, but may be advantageous in some

circumstances (see below).

Besides arithmetic operations, storage can play a role in the practicality of the diﬀerent

algorithms for large systems. Here we ﬁnd that the storage requirements are grossly diﬀerent

for the NP and CMP methods, favoring the NP approach. From Table II, it has a N 2 scaling

while the CMP method has an N 3 behavior. This is already signiﬁcant in the Na8 system

we studied, as may be seen from Table III.

Thus our results favor the real-time and real-space methods, oﬀering economy in both

storage and arithmetic operations. However, there are a number of caveats. We have not

considered the suitability of the diﬀerent algorithms for parallel computing. In a parallel

computing environment, the frequency-space methods gain favor because the Mω factor can

be trivially absorbed in the parallel processing. In addition, the diagonalization method can

beneﬁt from the parallel computation of diﬀerent rows of the matrix. Also the sparseness

of the Hamiltonian matrix is important for the real space method; this would be lost if for

example the energy functional used the full Fock exchange interaction.

Finally, we mention two nonnumerical beneﬁts of the real-time method: as was said

earlier, it is nonperturbative and therefore allows eﬀects of large ﬁelds to be calculated with

the same eﬀort. And it uses the same energy functional (permitting the program to call

the same subroutine) for the dynamic calculation as for the static calculation to prepare the

ground state.

15

V. ACKNOWLEDGMENT

We are grateful to J. Chelikowsky and I. Vasiliev for communications and providing

us with their computer code. This work was supported by the Department of Energy un-

der Grant FG06-90ER-40561, by the DGES (PB98-0345) and JCyL (VA28/99), and by he

Grant-in-Aid for Scientiﬁc Research from the Ministry of Education, Science and Culture

(Japan), No. 11640372. AR acknowledges the hospitality of the Institute for Nuclear The-

ory where this work was started and the computer time provided by the C4 (Centre de

Computaci´o i Comunicacions de Catalunya).

16

REFERENCES

[1] M. Petersilka, U. J. Gossmann and E. K. U. Gross, Phys. Rev. Lett. 76, 1212 (1996).

[2] E.K.U. Gross, J.F. Dobson, and M. Petersilka, in Density Functional Theory II, edited

by R.F. Nalewajski, “Topics in Current Chemistry”, Vol 181 (Springer, Berlin, 1996)

p.81

[3] A. Rubio, et al., Phys. Rev. Lett. 77 247 (1996).

[4] K. Yabana and G.F. Bertsch, Phys. Rev. B54 (1996) 4484.

[5] K. Yabana and G.F. Bertsch, Int. J. Quantum Chemistry 75 (1999) 55.

[6] A. Rubio, J.A. Alonso, X. Blase, and S.G. Louie, Int. J. Mod. Phys. B 11, 2727 (1997),

and reference therein.

[7] M.E. Casida, et al., J. Chem. Phys. 108 4439 (1998).

[8] I. Vasiliev, S. Ogut, and J. Chelikowsky, Phys. Rev. Lett. 82 1919 (1999).

[9] I. Vasiliev, private communication.

[10] C.A. Ullrich, P.-G. Reinhard and E. Suraud, J. Phys. B: At. Mol. Opt. Phys. 30 5043

(1997).

[11] R. Nagano, K. Yabana, T. Tazawa, Y. Abe, J. Phys. B: At. Mol. Opt. Phys. 32 L65

(1999).

[12] H. Flocard, et al., Phys. Rev. C17 1682 (1978).

[13] Diﬀerent representations of the wave function based on linear combination of atomic or-

bitals (AO) have been used in the literature to address the linear and nonlinear response

of molecules [7,14] with quite a good success. As compare to grid or plane-wave-based

representations, the main advantage of the AO representation stems from the small num-

ber of basis needed to expand the wave functions and Hamiltonian matrix elements. On

17

the other hand, the matrix elements in the response function cannot be calculated as

easily as in a plane-wave reresentation and the check of convergence with respect to the

size of the AO-basis set is rather diﬃcult (usually the number of AO’s is much less than

NG).

[14] S.J.A. van Gisbergen, et al, Phys. Rev. Lett. 83, 694 (1999); Phys. Rev. Lett. 78, 3097

(1997)

[15] N. Troullier and J.L. Martins, Phys. Rev. B43 1993 (1991)

[16] L. Kleinman and D. Bylander, Phys. Rev. Lett. 48 1425 (1982).

[17] S.G. Louie, S. Froyen, and M.L. Cohen, Phys. Rev. B 26, 1738 (1982)

[18] J. Perdew and A. Zunger, Phys. Rev. B 23 5048 (1981).

[19] M.S. Hybertsen and S.G. Louie, Phys. Rev. B 35, 5585 (1987).

[20] M. Stener, P. Decleva and A. Lisini, J. Phys. B28 4973 (1995).

[21] A. Dal Corso, F. Mauri and A. Rubio, Phys. Rev. B 53, 15638 (1996).

[22] J.-I. Iwata, K. Yabana and G.F. Bertsch, Nonlinear Optics, to be published.

[23] W.A. de Heer, et al, Phys. Rev. Lett. 59, 1805 (1987); C.R.C. Wang, et al, J. Chem.

Phys, 93, 3789 (1990); W.A. de Heer, Rev. Mod. Phys. 65, 611 (1993).

[24] W.D. Knight, K. Clemenger, W.A. de Heer, and W.A. Saunders, Phys. Rev. B31 2539

(1985).

[25] P. Calaminici and A. M. K¨oster, J. Chem. Phys. 111 4613 (1999).

18

TABLE I. Symbol deﬁnitions for quantities pertaining to the computational eﬀort required by

the various algorithms discussed in the main text, and their values.

TABLES

NP method

CMP method

Meaning

time steps

number of frequencies

nonzero elements in H matrix row

iterations in conjugate gradient method

104

-

100

-

real-space points

17, 000

reciprocal-space points

number of electron orbitals (occupied states)

unoccupied states

-

4

-

Symbol

MT

Mω

MH

Mit

NR

NG

Ne

Nc

-

10

-

-

-

9,771

4

320

TABLE II. Leading-order for the size scaling of various algorithms for TDLDA–general com-

parison: ﬂoating point operations (FPO) and memory requirements.

Method

NP

CMP

FPO

NeNRMH MT

5Mω(NG/3)3

Modiﬁed Sternheimer

MωMitMH NeNR

Diagonalization

N 2

c N 2

e NR

Memory

NR(Ne + 4.5)

N 3

G/9

NR(Ne + Nc)

(NcNe)2

TABLE III. Comparison of computational diﬃculty of NP and CMP methods for Na8

Resource

Memory (MBy)

Floating point operations

NP

7

1.5 × 1012

CMP

350

1.7 × 1012

19

TABLE IV. Orbital energies ǫi and surface plasmon energy ωM in Na8. For comparison in

parenthesis we show the result of a calculation within the NP method without including partial

core corrections in the pseudopotential generation and time evolution.

Energy

ǫ1

ǫ2

ǫ3

ǫ4

ǫ5(LU M O)

ωM

NP

-4.63

-3.41

-3.00

3.00

-1.88

2.77

CMP

-4.63

-3.35

-2.97

-2.97

-2.01

2.6

Exp. (eV)

2.53 [23]

TABLE V. Static polarizability of Na8 (˚A3)

Exp.

128.7 [24]

NP

103

Atomic

117 [8]

CMP

119

All-electron

114.9 [25]

20

