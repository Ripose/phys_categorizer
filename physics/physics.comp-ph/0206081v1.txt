Implementation of Liu’s procedure in
Mathematica for use in
Relativistic Constitutive Theory

Heiko J. Herrmann

February 21, 2014

Abstract

The aim of this article is to show, how computer algebra can be used

when applying Liu’s procedure.
Although I will use Mathematica (a commercial product by Wolfram Re-
search) it is possible to use other computer algebra systems as well. This
was the reason for me to choose LATEX for this article and not just to
publish my mathematica-notebook.

1 Thermodynamics: Liu’s Procedure

(A very short introduction)

Here I will only present a very short introduction, so that the reader will get a
glance of what the Liu procedure is. For a detailed discussion of Liu’s procedure
[1], [2], [3], [4],
and balance equations please consult the following literature:
[5],[6], [7]

2
0
0
2
 
n
u
J
 
4
2
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
1
8
0
6
0
2
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Balance equations

Liu-Procedure

Constitutive 
equations

State Space

Restrictions by 2nd Law

Coleman-Mizel-
Formulation of the
2nd Law

All solutions of the
Balance equations 
satisfy the 2nd Law

Amendment to 
the 2nd Law

There are no reversible
process-directions in
non-equilibrium

1

Proposition 1 (Coleman-Mizel formulation of the 2nd Law) [8]
If Z is no trap, then the following statement is valid for all X:

A(Z) · X = −B(Z)
⇒ α(Z) · X ≥ −β(Z)

(1)
(2)

For all X, which satisfy the balance equations, the dissipation inequality is full-
ﬁlled automatically.

Proposition 2 (Liu proposition) [1]
Starting with the Coleman-Mizel formulation of the Second Law one can show
that in large state spaces there exist state functions so that the following relations
are valid.

Λ(Z) · A(Z) = α(Z)
−Λ(Z) · B(Z) ≥ −β(Z)

This means that there exist restrictions to the constitutive equations.

2 Application of Liu’s Procedure

For the correct handling of indices I will use the package ”Ricci.m” by John M.
Lee, which can be found on the MathSource server.

<<Ricci‘

2.1 Declaration of Tensors and State Space

First it is necessary to deﬁne a bundle and declare the letters used for indices.

DefineBundle[fiber2,4,g,{i,j,k,l,m,n,o,r,y}]

Next the tensors have to be deﬁned. First I will declare the state space variables
(z0, . . . , z5).

Z = {n0, u, p, e, spa, spv}

(* z0=n0 *) DefineTensor[n0,0] (* particle number density *)
(* z1 =u *) DefineTensor[u,1] (* four velocity *)
(* z2=p *) DefineTensor[p,1] (* momentum flux *)
(* z3=e *) DefineTensor[e,0] (* energy *)
(* z4=spa *) DefineTensor[spa,2, Symmetries -> Skew] (* spin density *)
(* z5=spv *) DefineTensor[spv,1] (* vector spin density *)

2

Then the constitutive functions are declared:

DefineTensor[t,2] (* stress tensor *)
DefineTensor[q,1] (* heat flux *)
DefineTensor[scs,3] (* couple stress *)
DefineTensor[spb,2] (* 2-couple stress *)
DefineTensor[s,0] (* entropy *)
DefineTensor[se,1] (* entropy flux *)
DefineTensor[f,1] (* external force *)

2.2 Balance Equations

The next step is to write down the balance equations, which are for technical
reasons resolve to zero, and the right hand side (= 0) is not written down:
Balance of particle number density:

∂l

nul

= 0

(cid:0)

(cid:1)

D[n0[x] u[U[l]][x],x])

Balance of energy momentum

∂l(til +

piul +

uiql +

euiul) − f i = 0

1
c2

1
c2

1
c4

D[t[U[i],U[l]][x]+1/c^2

p[U[i]][x]u[U[l]][x] + 1/c^2

u[U[i]][x]q[U[l]][x]+1/c^4 e[x]u[U[i]][x]u[U[l]][x],x ] - f[U[i]]

Balance of spin

∂l

scsijl +

spaijul +

u[ispbj]l +

u[ispvj]ul

t[ij] +

p[iuj] +

u[iqj]

= 0

1
c4

−

(cid:19)

(cid:18)

1
c2

1
c2

(cid:19)

1
c2

(cid:18)

1
c2

D[scs[U[i],U[j],U[l]][x] +

1/c^2 spa[U[i],U[j]] u[U[l]] + 1/(2
1/(2 c^2) u[U[j]] spb[U[i],U[l]][x] +
1/(2 c^4) u[U[i]] spv[U[j]] u[U[l]] -
1/(2 c^4) u[U[j]] spv[U[i]] u[U[l]],x] -

c^2)u[U[i]] spb[U[j],U[l]][x] -

1/2 (t[U[i],U[j]] + 1/c^2 p[U[i]] u[U[j]] + 1/c^2 u[U[i]]q[U[j]] -
t[U[j],U[i]] + 1/c^2 p[U[j]] u[U[i]] + 1/c^2 u[U[j]]q[U[i]])

Entropy

D[s [x]u[U[l]][x] + 1/c^2 se[U[l]][x],x]

∂l

sul +

(cid:18)

1
c2

sel

(cid:19)

≥ 0

3

2.3 Balances on State Space

As the constitutive functions are deﬁned on the state space, the derivatives have
to be performed by use of the chain rule. The equations are ”labeled” for further
use.

TB = D[n0[x] u[U[l]][x],x]

∂l

nul

= 0

(cid:0)

(cid:1)

∂l

til(Z) +

piul +

uiql(Z) +

euiul

− f i = 0

(cid:18)

1
c2

1
c2

1
c4

(cid:19)

ImpB=\[Kappa]

D[t[U[i],U[l]][z0[x],z1[x],z2[x],z3[x],z4[x],z5[x]] +

p[U[i]][x]u[U[l]][x] +
u[U[i]][x]q[U[l]][z0[x],z1[x],z2[x],z3[x],z4[x],z5[x]] +

1/c^2
1/c^2
1/c^4 e[x]u[U[i]][x]u[U[l]][x],x] - f[U[i]]

scsijl(Z) +

u[ispbj]l(Z) +

∂l (cid:18)
SpinB=D[scs[U[i],U[j],U[l]][z0[x],z1[x],z2[x],z3[x],z4[x],z5[x]] +

u[ispvj]ul

p[i)uj] +

t[ij] +

u[iqj]

−

(cid:18)

(cid:19)

(cid:19)

= 0

1
c2

1
c2

1
c4

1
c2

1/c^2 spa[U[i],U[j]] u[U[l]] +
c^2)u[U[i]] spb[U[j],U[l]][z0[x],z1[x],z2[x],z3[x],z4[x],z5[x]] -
1/(2
1/(2 c^2) u[U[j]] spb[U[i],U[l]][z0[x],z1[x],z2[x],z3[x],z4[x],z5[x]] +
1/(2 c^4) u[U[j]] spv[U[i]] u[U[l]],x] -

1/2 (t[U[i],U[j]] + 1/c^2 p[U[i]] u[U[j]] + 1/c^2 u[U[i]]q[U[j]] -
t[U[j],U[i]] + 1/c^2 p[U[j]] u[U[i]] + 1/c^2 u[U[j]]q[U[i]])

EntropieB=

D[s [z0[x],z1[x],z2[x],z3[x],z4[x],z5[x]]u[U[l]][x] +

1/c^2 se[U[l]][z0[x],z1[x],z2[x],z3[x],z4[x],z5[x]],x]

2.4 Matrix Formulation

Now the components of the matrices for the matrix formulation of the balances
have to be collected.
Matrix of higher derivatives

X0:=z0’[x]
X1:=z1’[x]
X2:=z2’[x]
X3:=z3’[x]
X4:=z4’[x]
X5:=z5’[x]

4

Then the higher derivatives have to be set correctly by hand.

(z0)’[x_]:=n0[L[l]]
(z1)’[x_]:=u[U[n]][L[l]]
(z2)’[x_]:=p[U[n]][L[l]]
(z3)’[x_]:=e[L[l]]
(z4)’[x_]:=spa[U[n],U[m]][L[l]]
(z5)’[x_]:=spv[U[n]][L[l]]
(n0)’[x_]:=n0[L[l]]
(u[U[i]])’[x_]:=u[U[i]][L[l]]
(u[U[j]])’[x_]:=u[U[j]][L[l]]
(u[U[l]])’[x_]:=u[U[l]][L[l]]
(p[U[i]])’[x_]:=p[U[i]][L[l]]
(p[U[j]])’[x_]:=p[U[j]][L[l]]
(e)’[x_]:=e[L[l]]

Then the coeﬃcient matrix

A00=Coefficient[TB,z0’[x]]
A01=Coefficient[TB,z1’[x]]+g[L[n],U[l]] Coefficient[TB,(u[U[l]])’[x]]
A02=Coefficient[TB,z2’[x]]
A03=Coefficient[TB,z3’[x]]
A04=Coefficient[TB,z4’[x]]
A05=Coefficient[TB,z5’[x]]
A10=Coefficient[ImpB,z0’[x]]
A11=Coefficient[ImpB,z1’[x]]+g[L[n],U[i]] Coefficient[ImpB,(u[U[i]])’[x]]+

g[L[n],U[l]] Coefficient[ImpB,(u[U[l]])’[x]]

A12=Coefficient[ImpB,z2’[x]]+g[L[n],U[i]] Coefficient[ImpB,(p[U[i]])’[x]]
A13=Coefficient[ImpB,z3’[x]]
A14=Coefficient[ImpB,z4’[x]]
A15=Coefficient[ImpB,z5’[x]]
A20=Coefficient[SpinB,z0’[x]]
A21=Coefficient[SpinB,z1’[x]]+g[L[n],U[i]] Coefficient[SpinB,(u[U[i]])’[x]] +

g[L[n],U[j]] Coefficient[SpinB,(u[U[j]])’[x]]+
g[L[n],U[l]] Coefficient[SpinB,(u[U[l]])’[x]]

A22=Coefficient[SpinB,z2’[x]]+g[L[n],U[i]] Coefficient[SpinB,(p[U[i]])’[x]]+

g[L[n],U[j]] Coefficient[SpinB,(p[U[j]])’[x]]

A23=Coefficient[SpinB,z3’[x]]
A24=Coefficient[SpinB,z4’[x]]
A25=Coefficient[SpinB,z5’[x]]

Coeﬃcient matrix of dessipation inequality

\[Alpha]0=Coefficient[EntropieB,z0’[x]]
\[Alpha]1=

5

Coefficient[EntropieB,z1’[x]]+

g[L[n],U[l]] Coefficient[EntropieB,(u[U[l]])’[x]]

\[Alpha]2=Coefficient[EntropieB,z2’[x]]
\[Alpha]3=Coefficient[EntropieB,z3’[x]]
\[Alpha]4=Coefficient[EntropieB,z4’[x]]
\[Alpha]5=Coefficient[EntropieB,z5’[x]]

The residual matrix

B0=Simplify[

A05

z5’[x])]

B1=Simplify[

A15
B2= Simplify[

z5’[x])]

A25

z5’[x])]

\[Beta]= Simplify[
EntropieB - (

2.5 Liu Relations

TB - (A00 z0’[x] + A01

z1’[x]+A02

z2’[x]+A03

z3’[x]+A04

z4’[x]+

ImpB - (A10 z0’[x] + A11

z1’[x]+A12

z2’[x]+A13

z3’[x]+A14

z4’[x]+

SpinB - (A20 z0’[x] + A21

z1’[x]+A22

z2’[x]+A23

z3’[x]+A24

z4’[x]+

\[Alpha]0 z0’[x] + \[Alpha]1 z1’[x]+\[Alpha]2 z2’[x]+\[Alpha]3 z3’[x]+

\[Alpha]4 z4’[x]+\[Alpha]5 z5’[x])]

Now Liu’s proposition (based on Farkash’s lemma) can be applied. The result
are the Liu equations

liu1= \[Lambda]0 A00 + \[Lambda]1 A10 + \[Lambda]2 A20 -\[Alpha]0
liu2= \[Lambda]0 A01 + \[Lambda]1 A11 + \[Lambda]2 A21 -\[Alpha]1
liu3= \[Lambda]0 A02 + \[Lambda]1 A12 + \[Lambda]2 A22 -\[Alpha]2
liu4= \[Lambda]0 A03 + \[Lambda]1 A13 + \[Lambda]2 A23 -\[Alpha]3
liu5= \[Lambda]0 A04 + \[Lambda]1 A14 + \[Lambda]2 A24 -\[Alpha]4
liu6= \[Lambda]0 A05 + \[Lambda]1 A15 + \[Lambda]2 A25 -\[Alpha]5

and the residual inequality

\[Lambda]0 B0 + \[Lambda]1 B1 + \[Lambda]2 B2 -\[Beta]

The Lagrange parameters can be determined

lsg=Solve[{liu1==0,liu2==0,liu5==0},{\[Lambda]0,\[Lambda]1,\[Lambda]2}];
l0b=\[Lambda]0 /.lsg[[1]];
l1b=\[Lambda]1 /.lsg[[1]];

6

l2b=\[Lambda]2 /.lsg[[1]];
l1b=\[Lambda]1/.lsg[[1]];
\[Lambda]0=l0b
\[Lambda]1=l1b
\[Lambda]2=l2b

Now one can insert the Lagrange parameters into the Liu equations and one gets
the restrictions to the constitutive equations. The residual inequality determines
the entropy production density.

References

[1] I-Shih Liu. Method of Lagrange Multipliers for Exploitation of the Entropy

Principle. Arch. Rat. Mech. Anal., 46:131, 1972.

[2] W. Muschik, C. Papenfuß, and H. Ehrentraut. Concepts of Continuum Ther-
modynamics. Technische Universit¨at Berlin und Kielce University of Technol-
ogy, 1996.

[3] W. Muschik. Aspects of Non-Equilibrium Thermodynamics. World Scientiﬁc,

Singapore, 1990.

[4] W. Muschik, C. Papenfuß, and H. Ehrentraut. A sketch of continuum ther-

modynamics. J. Non-Newtonian Fluid Mech., 96:255–290, 2001.

[5] H. Herrmann, W. Muschik, C. Papenfuß, and G. R¨uckner. Liu-technique
for exploiting the dissipation-inequality in case of constrained state space
variables. In Trends in Application of Mathematics to Mechanics. Chapman
& Hall/CRC, 2000.

[6] H. Herrmann, W. Muschik, C. Papenfuß, and G. R¨uckner. Exploiting the
In Pro-
dissipation-inequality in case of constrained state space variables.
ceedings of the International Symposium on Trends in Continuum Physics
TRECOP’98, Singapore, August 17 - 20 1998. World Scientiﬁc.

[7] W. Muschik and H. Ehrentraut. An amendment to the second law. J. Non-

Equilib. Thermodyn., 21:175, 1996.

[8] B.D. Coleman and V.J. Mizel. Existence of caloric equations of state in

thermodynamics. J. Chem. Phys., 40:1116–1125, 1964.

7

