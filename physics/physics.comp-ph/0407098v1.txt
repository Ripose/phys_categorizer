4
0
0
2
 
l
u
J
 
9
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
8
9
0
7
0
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

UPRF-2004-10

BFKL, MM, Alpert-Rokhlin’s transform, FFTW, ARPACK &
all that.

E. Onofri1

Abstract

The evolution equation for q ¯q production introduced by Marchesini and Mueller
posed some intriguing mathematical puzzles, both numerical and analytic. I give
a detailed account of the numerical approach which led eventually to the exact
solution. While part of the work was in fact along a wrong track, it turns out that
some of the techniques involved are interesting in their own and applicable to many
other problems, i.e. to the numerical study of Ricci ﬂows.

1Dipartimento di Fisica, Universit`a di Parma, and I.N.F.N., Gruppo Collegato di

Parma, 43100 Parma, Italy, onofri@unipr.it

1.

Introduction

1

Marchesini and Mueller [1, 2] introduced the following equation for the

evolution of q ¯q evolution in QCD

∂ u(τ, ξ)
∂τ

1

=

Z

0

u(τ, η ξ)/η − u(τ, ξ)
1 − η

dη +

1

Z
ξ

u(τ, ξ/η) − u(τ, ξ)
1 − η

dη

(1.1)

where the unknown function u(τ, ξ) must vanish at ξ = 0 to ensure the
convergence of the integrals involved. If we put u(ξ) = ξ ψ(ξ) (boundary
conditions are then taken into account if ψ is bounded or at least does not
grow too rapidly at ξ → 0)

∂ ψ(τ, ξ)
∂τ

≡ (Kψ)(τ, ξ) =

2

Z

0

dη
|ξ − η|

ψ(τ, η) − min(1, ξ/η) ψ(τ, ξ)
(cid:1)

(cid:0)

(1.2)

I shall refer to K as the mm operator. We can easily discretize K on a lattice
ξn = na, a = 2/(N + 1)

(Kψ)i =

Xj6=i

ψj − min(1, i/j) ψi
|i − j|

.

(1.3)

Any trace of a disappears from the discrete equation which is a sign of the
scale invariance of the original equation: under ξ → λξ only the endpoint
changes, hence the result is insensitive to its actual value. The spectrum
can be estimated numerically. By Richardson extrapolation from dimension
32, 64, . . . , 1024 one gets for the spectrum of K

E =

2.4990
1.7993
0.9604
0.2179
-0.3663

......

K has a negative spectrum except for a few positive eigenvalues, the

largest one dominates the evolution (all others are damped away).

Notice that if (accidentally, by mistake!), you ignore the “min(1, ξ/η)”
factor in Eq.(1.2) the spectrum comes out very simple and, surprisingly
enough, independent from N to all available ﬁgures:

N = 32

-0.0000
2.0000
3.0000
3.6667
4.1667
4.5667
4.9000
5.1857
5.4357

64
-0.0000
2.0000
3.0000
3.6667
4.1667
4.5667
4.9000
5.1857
5.4357

128

-0.0000
2.0000
3.0000
3.6667
4.1667
4.5667
4.9000
5.1857
5.4357

256

-0.0000
2.0000
3.0000
3.6667
4.1667
4.5667
4.9000
5.1857
5.4357

2

What is the secret behind these numbers? Taking the diﬀerences we get

2.0000

1.0000

0.6667

0.5000

0.4000

0.3333

0.2857

0.2500

an easily recognizable sequence. Indeed the eigenvalues are given precisely
n
j=1 j−1 | n > 0} and h0 ≡ 0.
by twice the “harmonic numbers” {hn =
This fact is actually an exact property of the modiﬁed integral equation,
both in its discretized form and on the continuum (a result which goes
back to the sixties [3], see Appendix), the eigenvectors being Tchebyshev
discrete polynomials [4, 5] which converge to Legendre polynomials in the
limit N → ∞.

P

2. Perturbation theory

Following the hint of the previous Section, let us represent K as the sum

of two terms and treat the problem by perturbation theory.

where

(Kψ)(ξ) = (K0ψ)(ξ) − log(ξ) ψ(ξ)

(K0ψ)(ξ) =

1

dη

ψ(η) − ψ(ξ)
|ξ − η|

Z
0

(2.1)

(2.2)

K0 is exactly diagonalizable, with eigenfunctions the Legendre polynomials
Pn(2ξ − 1) and eigenvalues proportional to the harmonic numbers hn =
n
j=1 j−1 (see Appendix A). Second order perturbation theory gives for the
ground state E0 ≈ 1.44754 hence convergence appears to be rather slow.
P
The usual methods to get high order coeﬃcients are not applicable here,
since the matrix hPn| log(ξ)|Pmi is full.

One can do better with a purely numerical approach as we discuss in the
next section (the coeﬃcients, we shall see, decrease only as 1/n log(n), which
would require high orders in p.t. to get a meaningful result).

3. Evolution

I recyvled an old program which was used to study the renormalization
group equation of the non–linear sigma model (the “sausage” [6, 7, 8]). The
equation is now rather popular in the mathematical literature as the Ricci
ﬂow. The idea is to split the evolution of

∂ψ(∆, ξ)
∂∆

= K ψ(∆, ξ)

(3.1)

into two steps

ψtmp(ξ) = ψ(∆, ξ) + τ K0 ψ(∆, ξ)
ψ(∆ + τ, ξ) = ψtmp(ξ) − τ log(ξ) ψ(∆, ξ))

The ﬁrst step is accomplished by going to the representation in terms of
Legendre polynomials (ψ =
ψn Pn(2ξ − 1)) where K0 is diagonal. Coming
back to the ξ-representation one executes the second step. The program is
implemented in matlab.

P

3

(3.2)

0.17576
0.26237
0.36244
0.46967
0.58608
0.71614
0.86815
 1.0557
 1.3205
 1.7141
 2.2352

18

16

14

12

10

8

6

4

2

0

0

0.2

0.4

0.6

0.8

1

1.2

1.4

1.6

1.8

2

Figure 1. Evolution from ξ0 = 1

En passant one can study the spectrum of K within the same program.
We get the result of Tab.3, where the last line is obtained by extrapolating
in the variable n−1/4, which appears at ﬁrst sight as an approximate scaling
law (but see later on). This value should be compared to the approximate
saddle point value 4 ln 2 ≈ 2.77. The strong dependence on the grid size is
not surprising, since we have to deal with a singular scale invariant integral
operator. The similar operator considered by Tuck [9] is not scale invariant
and its cutoﬀ dependence is much ﬂatter (i.e. better!).

4

DLT
N
2.030
32
2.144
64
2.235
128
2.308
256
512
2.368
1024 2.417
2048 2.457
∞ 2.66
Table 1. K ground state by the direct Legendre transform.

4. Alpert-Rokhlin’s Fast Legendre Transform

P

n6N cn Pn(x) to a Tchebyshev expansion

Due to the very slow convergence toward N→ ∞ it is desirable to be able
to calculate the spectrum with a high number of collocation points. This is
totally unfeasible with the direct method. The calculation with n = 4096
required a work space of 1/2 GByte and going further was not possible on
available workstations. The way out is to apply some sparse matrix com-
putational tool which should be able to save memory and time.
It was
shown by Alpert and Rokhlin [10] that it is possible to transform from a Le-
n6N ˜cn Tn(x)
gendre expansion
in O(N ) time, even if the amount of memory required may be rather large
(at least 200 N words). Since Tchebyshev polynomials of the ﬁrst kind
are just trigonometric functions in disguise, the Legendre transform is re-
duced to a combination of Alpert-Rokhlin’s transform (art) and cosine-
Fourier-transform. Using Alpert’s implementation of art2 combined with
fftw in mode REDFT10/01 (see Ref.[11])3 we realized a code essentially
equivalent to the previous one but allowing for high dimensional matrix
representation of the operator. The ground state has been computed for
N = 2k, k = 6, 7, . . . , 18 giving the result of Tab.2. The diﬀerence from
the previous calculation is due to a diﬀerent choice of discretization grid
(Gaussian integration points, i.e. the roots of PN (x), in the former case,
Tchebyshev points, uniformly spaced in acos(x), in the latter). Notice that
the results of the fast method anticipate those of the direct method, that is
the “fast” result at N is close to the “direct” result at 2N . In a sense the
formal dimension of the real fftw (2N ) is the “true” dimension.

P

For the technically–oriented reader we report the approximate timings of

the two algorithms in Appendix B.

2B. Alpert very kindly provided us with his Fortran code.
3http://www.ﬀtw.org/#documentation

The extrapolation at N → ∞ , assuming a power law scaling as before,
seems consistent, giving 2.6733 and 2.6692 (linear and quadratic ﬁt respec-
tively) with the ﬁrst method, 2.6661 and 2.6704 with the second. We would
conclude that the saddle point estimate 4 log(2) is correct within 4%.

5

log2 N DLT

art
-

2.0246
2.1416 2.2436
2.2339 2.3164
2.3076 2.3751
2.3674 2.4232
2.4165 2.4631
2.4572 2.4966
2.4922 2.5249
2.5491
2.5700
2.5880
2.6038
2.6176
2.6298

-
-
-
-
-
-

5
6
7
8
9
10
11
12
13
14
15
16
17
18

Table 2. The ground state from Direct Legendre Transform
(DLT) and from the fast algorithm (art+fftw)

A totally diﬀerent result is however hiding behind these ﬁgures. It must
be realized that the crucial point is to identify the correct N dependence,
since this is going to make a big diﬀerence in the extrapolation at N →
∞. A careful analysis shows that a logarithmic scaling law is much
more accurate than a power law. Looking for a ﬁt of the kind E(N ) ≈
E(∞) − C1/ log(N/Λ) − C2/ log(N/Λ)2 we get a very good interpolation
(the deviation is uniformly less than 1 part in 104) and the value at N = ∞
is compatible with 4 log(2) (within the same accuracy). According to this
idea we should conclude that, surprisingly enough, the saddle point value is
actually exact (see Figg. 3,4). In the case studied by Tuck we ﬁnd a much
steeper scaling law of the kind

E(N ) = E1(∞) + CN −2 log(N )−1

as shown in Fig. 5.

It has been realized [2] that the picture is simply due to the diﬀerent
character of the spectrum: continuous for mm and discrete for Tuck’s op-
erators. This fact is made absolutely transparent by adopting a diﬀerent

← 4 log(2)

6

2.8

2.7

2.6

2.5

2.4

2.3

2.2

2.1

2

0

← direct Legendre 

← Alpert−Rokhlin 

0.05

0.1

0.15

0.2

0.25

0.3

0.35

0.4

Figure 2. Continuum limit for the ground state with a
power scaling law.

representation of the operator K:

(K φ)(x) = (K0 φ)(x) + 2 log(1 + e−x/2) φ(x) − 4 log 2 φ(x)

(K0 φ)(x) ≡

∞

φ(x) − φ(y)

Z

0

2 sinh | 1

2 (x − y)|

dy .

The integral operator K0 is almost local and it is not very diﬀerent from a
kinetic term. If we consider a wave-function with support in a region far
from the origin, the operator reduces to

(4.1)

(4.2)

K0φ(x) ≈

∞

φ(x) − φ(y)

Z

−∞

2 sinh | 1

2 (x − y)|

dy

which is diagonal in Fourier space with eigenvalue −χ(p), the subtracted
Lipatov function, explicitly given by χ(p) = 2(ψ(1) − ℜ(ψ( 1
2 + ip))) − 4 log 2,
ψ being the logarithmic derivative of the Γ function. K0 is well-known, not
necessarily in this form, as the bfkl operator [12].

It has been realized that the representation introduced here is also more
convenient to allow a numerical study of the evolution in the case of mm,
while this is not the case for Tuck’s equation. Essentially the dominant

7

)

N

(

E
−

1

2.55

2.8

2.75

2.7

2.65

2.6

2.5

2.45

2.4

2.35

2.3

0

2

1.5

)
2
g
o
4
+
E

l

(
t
r
q
s

j

1

0.5

0

0

0.002

0.004

0.008

0.01

0.012

0.006
log(N/Λ)−2

Figure 3. Continuum limit with the logarithmic scaling law.

2 )

g

4 l o

+

2

q rt( E

s

+ 4 l o g 2 )

( E 1

t

s q r

0.01

0.02

0.03

0.05

0.06

0.07

0.08

0.04
1/(n+δ
)
j

Figure 4. Extrapolation in log-scale shows the emergence
of a continuous spectrum

eigenvalue 4 log 2 is already built–in, while in the representation of Sec. 3 this
value can only be obtained by extrapolating at very large matrix dimensions
(see Tab. 4).

8

−4

10

−5

10

−6

10

)
3
4
1
2
3
3
2
.
0
−

E
(
4
2

1

−7

10

−8

10

−9

10

−10

10

−11

10

−12

10

−12

10

−10

10

−8

10
(N2 log(N))−1

−6

10

−4

10

Figure 5. Continuum limit with the modiﬁed scaling law,
Tuck’s case.

To make the diﬀerence between mm and bfkl operators more explicit,
it would be desirable to be able to apply the method of images (which is
usually employed with local diﬀerential operators) to get rid of the boundary.
However no simple boundary condition seems to be appropriate. Actually by
solving the eigenvalue equation by standard linear algorithms (matlab’s eig
routine) one ﬁnds that the eigenvectors are essentially shifted trigonometric
functions, i.e., far from the boundary, φk(x) ≈ sin(kx + δ(k)) . By switching
V (x) on and oﬀ, we can easily check that the behavior at x = 0 is strongly
inﬂuenced by V (x).

The phase shift δ(k) is particularly interesting. For example, the asymp-
totic behaviour of φ(∆, x) at large ∆ is strongly inﬂuenced by it. This fact
is well-known in the theory of potential scattering in quantum mechanics.
While the general setup here is quite diﬀerent, nonetheless there are remark-
able analogies which give useful guidelines. For example the vanishing of δ
at k = 0 is a signal of the absence of bound states (Levinson’s theorem),
were we able to extend the theorem to this context. Details can be found in
[2].

The “unbounded” representation helps in understanding what really goes
wrong with the initial approach based on the Legendre basis. Introducing

9

a ﬁnite box of side L (0 6 x 6 L) the energy spectrum is discretized and
at low energy it is given by ∝ (nπ/L)2. In the Legendre expansion of the
previous section all Gaussian points are conﬁned to x . L = 2 log(N ). This
fact explains the logarithmic scaling law depicted in Fig. 3. Also, since a
good description of the evolution at large τ requires L ≫ 100, this cannot
be explored through the Legendre expansion.

5. Further developments

Recent developments pushed our understanding of the problem to a higher
level. A precise characterization of the time–dependent solution of mm equa-
tion was developed by a perturbative technique which can be pushed to all
orders and allows for a full resummation [2]. An exact form for the phase
shift and the continuum eigenfunctions has been derived. A rigorous proof
on purely algebraic grounds, thus avoiding a delicate problem of resumma-
tion, has been later found, thanks to an idea of V. A. Fateev [13].

There exists another representation of the integral operator which avoids
the presence of a boundary. Thanks to the intrinsic scale invariance, the
equation can be remapped on the whole of R by setting exp(x) = exp(x′)+1,
which leaves the kernel invariant and only modiﬁes the potential. In this
representation we may apply a spectral algorithm to the evolution equa-
tion simply based on Fourier transform, more economic than the combined
art+fftw. This will be left as a homework.

6. Conclusions and outlook

The integral equation introduced by Marchesini and Mueller is deeply
related to another problem in mathematical physics studied by E. Tuck
fourty years ago. The connection to Tuck’s equation was used to analyze
mm operator’s spectral properties by an eﬃcient (sparse) matrix computa-
tion, based on Alpert-Rokhlin transform, fftw and arpack. This analysis
suggests that the spectrum is continuous with endpoint 4 log 2. A second
representation of the integral operator makes the spectral properties more
transparent and lends itself to an easier algorithmic implementation which
allows to evaluate the evolution at large ∆.

The application of art to the renormalization group equation for O(3) σ-
model may be useful to achieve greater accuracy than allowed from the direct
transform [8]. More generally, the application of a full group theoretical
transform without axial symmetry, will make it possible to explore the O(3)
Ricci ﬂow in full detail.

Acknowledgments

I would like to thank warmly Prof. G. Altarelli, chairman, and the staﬀ
of the Theory Division of CERN, for the kind hospitality he enjoyed while
I warmly thank B. K. Alpert for making
most of this work was done.
his Fortran implementation of art available, G. E. Andrews and R. A.

10

Askey for pointing out to us Tuck’s relevant paper and E. O. Tuck for
very valuable correspondence. S. Shaw’s header ﬁles, available on the WEB,
proved to be very helpful for an arpack beginner. This work would have
been impossible without the searching capabilities of Google. But, above all,
I’m indebted to my dear friends G. Marchesini and V. A. Fateev, for
constantly providing new ideas, suggestions and insight.

Appendix A

Here is a proof for the discrete form of Tuck’s operator. For the original

problem see [3, 13].

Let

(K (N )
0

v)i =

′

vj − vi
|i − j|

.

X
06j6N
to the vector v(ℓ)

Let’s apply the matrix K (N )

0

i = iℓ. We have

(6.1)

(K (N )
0

v(ℓ))i =

′

jℓ − iℓ
|i − j|

X
06j6N

ℓ−1

k=0

iℓ−k−1 jk

(6.2)

=

−

(cid:18)

=

X

X
ℓ−1

k=0

= −2 hℓ v(ℓ)

i +

N

i−1

j=0

+

iℓ−k−1

X

(cid:18)

j=i+1(cid:19) X
2 ik+1
−
k + 1
cn v(n)
i

Xn<ℓ

+ O(ik)

(cid:19)

j jk, and the
where we used the Euler-MacLaurin summation formula for
constants {cn} are calculable but unnecessary. This proves that K (N ) v(ℓ) is
contained in the linear span of [v(0), v(1), ..., v(ℓ)]. Since K0(N ) is symmetric,
it is diagonable, its eigenvectors are orthogonal, hence they are given by the
orthogonal discrete polynomials with respect to the uniform weight on the
set [0, 1, 2, . . . , N ]. The eigenvalues can be read oﬀ the coeﬃcient of v(ℓ) in
the expansion of K (N )
v(ℓ). The explicit form of the eigenvectors is given by
Tchebyshev polynomials of a discrete variable [14].

P

0

Appendix B

We give here some technical details about the algorithms which we have
applied in the paper. The direct method consists in building the table of
Legendre polynomials {Pn(x(N )
), n = 0, 1, . . . , N-1} at the Gauss points, i.e.
at the roots of PN (x). The technique, exploiting the recurrence relation of
orthogonal polynomials, is due to Golub and Welsch (see Ref.[15]). To ﬁnd
the spectrum of K we simply deﬁne K0 to be diagonal in the basis {Pn(x)}
with eigenvalues −2hn. The matlab routine “eig” is then invoked. The sin-
gularity of the logarithm at the boundary is avoided because the zeros of

j

11

the polynomials are all internal at the interval [−1, 1]. The matrix repre-
sentation of the free part K0 is exact, since the Gauss quadrature formula
is exact on polynomials of low degree. In ﬁnite precision arithmetic K0 is
aﬀected by the accumulation of truncation errors, yielding an error of order
10−13 on its spectrum, which is rather irrelevant. The method is presently
feasible for dimension less than 4000 and it has the advantage that N can
be any integer, not necessarily a power of 2.

The method based on art makes use of the expansion on Tchebyshev’s
polynomials of the ﬁrst kind Tn(x) = cos(n arccos(x)). Again the Gauss
points are interior at the interval and the singularity is avoided. The real
DFT of kind REDF T 10 precisely makes use of this grid of points. Even
if the Gauss-Tchebyshev integration is exact for polynomials of low degree,
still a problem arises, namely that K0 is a symmetric operator with respect
to the Lebesgue measure whereas Tchebyshev’s polynomials are orthogonal
with respect to a diﬀerent measure. It turns out that to restore symmetry
we have to deal with ˜K0 = (1 − x)1/4 K0(1 − x)−1/4, hence we are outside
any polynomial subspace and this introduces a systematic error making ˜K0
only approximately symmetric. This has been checked after realizing that
the spectrum of K0 considered as a symmetric operator contains substantial
error, up to 10%. The strategy we adopt is therefore to relax the symmetry
condition on ˜K0 and compute the spectrum with a version of the Arnoldi
algorithm which allows to deal with non-symmetric operators provided by
arpack[16]. The combination art+fftw+arpack(this latter oﬀers the
routine znaupd which applies to general non–symmetric complex matrices)
turns out to be again in the game with an accuracy on the spectrum of K0
comparable if not superior to the direct method. For example at N = 64
we ﬁnd

E=[

];

1.00047386511033e-18
2.00000000000000e+00
2.99999999999999e+00
3.66666666666666e+00
4.16666666666666e+00
4.56666666666665e+00
4.90000000000001e+00
5.18571428571429e+00

and the reader can verify by herself that the error is only at the last decimal
place. A further (marginal) improvement will be achieved using the real–
non-symmetric routine dnaupd; we use the complex version because it was
already implemented as a C++ header by Scott Shaw.

Let us now comment upon performance. The ﬁrst methods grows in time
and memory rather quickly (O(N 2) in memory and O(N 3) in execution time.
The fast one is much less memory greedy. Notice that in the largest case

12

examined, N = 218, the program requires slightly less than half a Gigabyte
of memory, half of which simply to allocate art’s working array (200N
words). By contrast the direct method requires ≈ 450 MBy at N = 4096
and it would grow to the order of 6 TBytes at N = 218 while the execution
would require 50 years at the present cpu speed.

Tables 3,4 report the execution times on a pentium III with clock at 1.13
GHz and on a Xeon with clock at 2.8 GHz, respectively, using Matlab v.6.5.
Execution times for the “fast” algorithm are inclusive of the preconditioning
(we select the initial vector by executing a number of Trotter steps). As
it is rather clear from the table, the execution time grows as expected as
O(N log(N ), with some expected deviations when the system switches to
virtual memory.

4
10

3
10

2
10

1
10

0
10

−1

10

−2

10

c
e
s
 
n

i
 
e
m

i
t
.
c
e
x
E

DLTpIII
ARTpIII
DLT
ART
N log(N)
N3

1
10

2
10

4
10

5
10

3
10

N

Figure 6. Execution times for the Direct Legendre trans-
form and Alpert-Rokhlin transform.

References

[1] G. Marchesini and A. H. Mueller. BFKL dynamics in jet evolution. Phys. Lett.,

B575:37–44, 2003.

Table 3. Timings (sec) (DLT) direct method and for the
fast algorithm (art+fftw); Pentium-III @ 1.13 GHz

13

log2 N DLT art
0.01
0.04
0.29
2.31
33.6
271.
-
-
-
-
-
-

-
0.08
0.10
0.15
0.4
0.9
2.0
4.7
9.6
22
63
158

5
6
7
8
9
10
11
12
13
14
15
16

log2 N DLT art
-
0.004
0.02
0.02
0.04
0.11
0.93
0.07
11.44 0.17
0.37
98.6
0.76
970.
1.75
-
3.64
-
7.84
-
18.4
-
43.4
-
129.
-
219.
-

5
6
7
8
9
10
11
12
13
14
15
16
17
18

Table 4. Timings (sec) (DLT) direct method and for the
fast algorithm (art+fftw); Xeon @ 2.8 GHz

[2] G. Marchesini and E. Onofri. Exact solution of BFKL equation in jet-physics. JHEP,

[3] E. Tuck. Some methods for ﬂows past blunt slender bodies. J. Fluid Mech., 18(4):619–

[4] A. Erd´elyi, editor. Higher Trascendental Functions. Bateman Manuscript Project.

McGraw-Hill, New York, 1955.

[5] A. Nikiforov and V. Ouvarov. ´Elements de la Th´eorie des Fonctions Speciales. M.I.R.,

0407:31, 2004.

635, 1964.

Moscow, 1976.

14

[6] V.A. Fateev, E. Onofri, and Al.B. Zamolodchikov. Nucl. Phys., B406:521, 1993.
[7] L. Belardinelli and E. Onofri. The numerical sausage. hep-th/9404082, 1994.
[8] L. Belardinelli, C. Destri, and E. Onofri. A numerical study of the rg equation for

the deformed o(3) nonlinear sigma model. Nucl. Phys., B443:607–620, 1995.

[9] E.O. Tuck and J.N. Newman. Longitudinal waves in slender moonpools. In R. Rainey,
editor, 17th Int. Workshop on Water Waves and Floating Bodies, Cambridge, London,
2002. RINA.

[10] B.K. Alpert and V. Rokhlin. A Fast Algorithm for the evaluation of Legendre Ex-

pansions. SIAM J. Sci. Stat. Comput., 12(1):158–179, 1991.

[11] Matteo Frigo and Steven G. Johnson. FFTW: An adaptive software architecture for
the FFT. In Proc. 1998 IEEE Intl. Conf. Acoustics Speech and Signal Processing,
volume 3, pages 1381–1384. IEEE, 1998.

[12] R.K. Ellis, W.J. Stirling, and B. Webber. QCD and Collider Physics. Cambridge

U.P., 1996.

[13] V. ˜A. Fateev, R. De Pietri, and E. Onofri. Exact and semiclassical approach to a class
of singular integral operators arising in ﬂuid mechanics and quantum ﬁeld theory.
math-ph/0407021, 2004. submitted to J.PHys.A.

[14] M. Abramowitz and I. ˜A. Stegun. Handbook of Mathematical Functions. Dover, 1965.
[15] G.H. Golub and J.H. Welsch. Calculation of Gauss Quadrature Rules. Math.Comput.

[16] R.B. Lehoucq, D.C. Sorensen, and C. Yang. ARPACK Users’ Guide. Technical report,

23, pages 221–230, 1969.

Philadelphia, 1998.

