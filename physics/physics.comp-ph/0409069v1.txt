4
0
0
2
 
p
e
S
 
4
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
9
6
0
9
0
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Periodic orbits of the ensemble of cat maps and pseudorandom number generation

L. Barash 1,a) and L.N. Shchur 1,2,b)
1)Landau Institute for Theoretical Physics, 142432 Chernogolovka, Russia
2)Materials Science Division, Argonne National Laboratory, Argonne, Illinois 60439, USA
e-mail: a)barash@itp.ac.ru, b)lev@landau.ac.ru

We propose a method for constructing high-quality pseudorandom number generators (RNG)
based on an ensemble of hyperbolic automorphisms of the unit two-dimensional torus (Sinai-Arnold
map, or cat map) while keeping a part of the information hidden. The single cat map provides
the random properties expected from a good RNG and is hence an appropriate building block
for an RNG, although some unnecessary correlations are always present in practice. We show
that hidden variables suppress these correlations dramatically. Simultaneously, introducing hidden
variables complicates deciphering. Relevant correlations for a single cat map are found by the one-
dimensional directed random walk test. We analyze the nature of these correlations and show how
to diminish them asymptotically. We generalize Percival-Vivaldi theory in the case of the ensemble
of maps, ﬁnd the period of the proposed RNG analytically, and also analyze its properties. We
check our predictions numerically. We also test our RNG using a number of standard statistical
tests and ﬁnd no correlations.

I.

INTRODUCTION

Molecular dynamics and Monte Carlo simulations are important computational techniques in many areas of science:
in quantum physics [1], statistical physics [2], nuclear physics [3], quantum chemistry [4], material science [5], among
many others. The simulations rely heavily on the use of random numbers, which are generated by deterministic
recursive rules. Such rules produce pseudo random numbers, and it is a great challenge to design random number
generators (RNG) that behave as realizations of independent uniformly distributed random variables and approximate
“true randomness” [6].

There are several requirements for a good RNG and its implementation in a subroutine library. Among them are
statistical robustness (uniform distribution of values at the output with no correlations), unpredictability, long period
length, eﬃciency, theoretical support (precise prediction of the important properties), portability and others [6, 7, 8].
The most widely used RNGs can be divided into two classes. The ﬁrst class is represented by the Linear Congruential

Generator (LCG), and the second, by Shift Register (SR) generator.

Linear Congruential Generators (LCG) are the best-known and (still) most widely available RNGs in use today.
An example of the practical realization of an LCG generator is the UNIX rand generator yn = (1103515245 yn−1 +
12345) (mod 231). There are two major imperfections of the LCG scheme. First, the maximum period length of a
multiplicative LCG with modulus 232 can be exhausted in a few seconds of CPU time at a workstation. Second,
LCGs should be avoided for applications dealing with the geometric behavior of random vectors in high dimensions
because of the bad geometric structure of the vectors that they produce [6, 9].

Generalized Feedback Shift Register (SR) sequences are widely used in many areas of computational and simulational
physics. These RNGs are quite fast and possess huge periods given a proper choice of the underlying primitive
trinomials [10]. This makes them particularly well-suited for applications that require many pseudorandom numbers.
But several ﬂaws have been observed in the statistical properties of these generators, which can result in systematic
errors in Monte Carlo simulations. Typical examples include the Wolﬀ single cluster algorithm for the 2D Ising model
simulation [11], random and self-avoiding walks [12], 3D Blume-Capel model using local Metropolis updating [13].

Furthermore, most RNGs used today can be easily deciphered. Perhaps the generator with the best properties
of unpredictability known today is the BBS generator [14, 15], which is proved to be polynomial-time perfect under
certain reasonable assumptions [7, 14] if the size s of the generator is suﬃciently large. This generator is rather slow
for practical use because its speed decreases rapidly as s increases.

We try to use simple nonlinear dynamical systems to construct an RNG. Of course, not all dynamical systems are
useful. For instance, the Bernoulli Shift xn+1 = 2xn ( mod 1), the base of Baker’s transformation, is a simple example
of a chaotic system that is area preserving, bounded, and deterministic. It yields a sequence of random numbers
provided we have a random irrational seed. But in real computation, the seed number has ﬁnite complexity, and the
number of available bits reduces at each step. Obviously, there is no practical use of this scheme for an RNG.

The logistic map [16, 17] also does not help to construct an RNG. First, manipulation with real values of ﬁxed
accuracy leads to signiﬁcant errors during long orbits. Second, the sequence of numbers generated by a logistic map
does not have a uniform distribution [17]. Also, the logistic map represents a chaotic dynamical system only for
isolated values of a parameter. Even small deviations from these isolated values leads to creating subregions in the
phase space, i.e., the orbit of the point does not cover the whole phase space.

2

The next class of dynamical systems is Anosov diﬀeomorphisms of the two-dimensional torus, which have attracted
much attention in the context of ergodic theory. Anosov systems have the following stochastic properties: ergodicity,
mixing, sensitive dependence on initial conditions (which follows from positivity of the Lyapunov exponent), and
local divergence of all trajectories (which follows from positivity of the Kolmogorov-Sinai entropy). These properties
resemble certain properties of randomness. Every Anosov diﬀeomorphism of the torus is topologically conjugate to a
hyperbolic automorphism, which can be viewed as a completely chaotic Hamiltonian dynamical system. Hyperbolic
2 matrixes with integer entries, a unit determinant, and real eigenvalues,
automorphisms are represented by 2
and are known as cat maps (there are two reasons for this terminology: ﬁrst, CAT is an acronym for Continuous
Automorphism of the Torus, second, the chaotic behavior of these maps is traditionally described by showing the result
of their action on the face of the cat [18]). We note that cat maps are Hamiltonian systems. Indeed, if k = Tr(M ) > 2,
then the action of the map (1) on the vector
can be described as the motion in the phase space speciﬁed by the
4)−1/2 sinh
Hamiltonian [19] H(p, q) = (k2
m22)pq). Here, p and q are
taken modulo 1 at each observation (i.e., we preserve only the fractional part of p and q; the integer part is ignored).
Observations occur at integer points of time.

m21q2 + (m11 −

4)1/2/2)(m12p2

−1((k2
(cid:0)
(cid:1)

×

−

−

−

p
q

In this paper, we present an RNG based on cat maps and analyze the requirements for a good RNG with respect
to our scheme. The use of cat maps for a RNG was discussed before [20]. However, a single hyperbolic automorphism
of the torus is not suﬃcient to construct a good generator, because there are signiﬁcant correlations between values
at the output. Also, there is an impressive theoretical basis for relating properties of the periodic orbits of cat maps
and properties of algebraic numbers [21], which to the best of our knowledge has never been directly applied to RNG
theory. Applying the ensemble of toral automorphisms while using only a single bit from the point of each cat map
is a distinctive feature of our generator. As will be seen, this scheme has several advantages. First, it can essentially
reduce correlations and lead to creating a good RNG. Second, both the properties of periodic orbits and the statistical
properties of such generator can be analyzed both theoretically and empirically.

The generator is introduced in Sec. II. In Sec. III, we present the results of a series of standard statistical tests and
conclude that the RNG shows good statistical behavior with respect to most reasonable empirical tests. Correlations
for a single cat map are also analyzed thoroughly.
In particular, the one-dimensional random walks test is very
important because it can reveal single-map correlations from the output of the RNG made from the ensemble of cat
maps. Indeed, some correlations are found by the random walks test. We analyze the mechanism of these correlations
in Sec. IV; they appear to be associated with the geometric properties of the cat map. We ﬁnd these correlations
analytically (Sec. IV). We provide a method for obtaining quantities such as the periods of cat maps, the number of
orbits with a given period, and the area in the phase space swept by the orbits with a given period (Appendix A).
We also provide a method for obtaining periods of the generator for arbitrary parameters of the map and lattice
(Appendix B). This gives the theoretical support of the generator. In particular, we see that the typical period of the
2m−3. The method is based on the work of Percival and Vivaldi, who
generator for the 2m
transformed the study of the periodic orbits of cat maps into the modular arithmetic in domains of quadratic integers
and showed how to classify periodic orbits of these systems [21]. The key ideas in [21] needed for our consideration
are brieﬂy reviewed in Appendix A. In Sec. V, we discuss ways to improve the quality of RNG further. Appendixes C
and D support the other sections, giving detailed proofs of the underlying results.

2m lattice is Tm = 3

×

×

II. THE GENERATOR

We consider hyperbolic automorphisms of the unit two-dimentional torus (the square (0, 1]

(0, 1] with the opposite
sides identiﬁed). The action of a given cat map R is deﬁned as follows: ﬁrst, we transform the phase space by the
matrix

×

m11 m12
m21 m22

M =

(cid:18)

∈

(cid:19)

SL2(Z);

(1)

second, we take the fractional parts in (0, 1) of both coordinates. The elements of M are integers, det M = 1, and the
eigenvalues of M are λ = (k
4)/2, where k = Tr(M ) is the trace of the matrix M . The eigenvalues should
be real because complex values of λ lead to a nonergodic dynamical process, and hyperbolicity condition is

√k2

> 2.

±

−

It is easy to prove that the periodic orbits of the hyperbolic toral automorphism R consist precisely of those points
that have rational coordinates [18, 19, 21]. Hence, it is natural to consider the dynamics of the map deﬁned on the
set of points with rational coordinates that share a given denominator g. The lattice of such points is invariant under
the action of the cat maps. For an RNG, it is natural to restrict to g = 2m, where m is a positive integer.

k
|

|

The notion of an RNG can be formalized as follows: a generator is a structure

ﬁnite set of states, s0 ∈

S is the initial state (or seed), the map T : S

→

= (S, s0, T, U, G), where S is a
S is the transition function, U is a ﬁnite set

G

of output symbols, and G : S
U is the output function [7]. Thus, the state of the generator is initially s0, and the
generator changes its state at each step, calculating sn = T (sn−1), un = G(sn) at step n. The values un at the output
of the generator are called the observations or the random numbers produced by the generator. In some RNGs, the
output function G uses only a small part of the state information to calculate the random number, the majority of
the information being ignored. In this case, there exist hidden variables, i.e., some part of the state information is
“hidden” and cannot be restored using only the sequence of RNG observations.

→

We consider the generator with S = Ls, where L =

0, 1, . . . , 2m

1

0, 1, . . . , 2m

s is a positive integer. In other words, the state consists of coordinates of s points of the 2m

1

−

}

is the lattice on the torus and
2m lattice on the torus.

−

}×{

For instance, the initial state consists of points
We note that these are points of the integer lattice, i.e., x(0)
on the unit two-dimensional torus (0, 1]

(0, 1] are

(cid:0)

(cid:1)

i

, where x(0)

i

, y(0)
and y(0)

i

i ∈ {

×

0, 1, . . . , 2m

1

}

−

×
and i = 0, 1, . . . , (s

1).

−

are positive integers. The actual initial points

{

x(0)
i
y(0)
i

x(0)
i /2m
y(0)
i /2m

(cid:18)

(cid:19)

, i = 0, 1, . . . , (s

1).

−

The transition function of the generator is deﬁned by the action of the cat map R, i.e., these s points are aﬀected

at every step by the cat map:

x(n)
i /2m
y(n)
i /2m

(cid:18)

= M

(cid:19)

(cid:18)

i

x(n−1)
y(n−1)

i

/2m
/2m

(cid:19)

(mod 1), i = 0, 1, . . . , (s

1).

−

Here the mod 1 operation means taking the fractional part in (0, 1) of the real number. An equivalent description of
the transition function is

x(n)
i
y(n)
i (cid:19)

= M

i

x(n−1)
y(n−1)

(mod 2m), i = 0, 1, . . . , (s

1).

−

(cid:18)

(cid:18)
: α(n)
denote the ﬁrst bit of x(n)
We let α(n)
i
i
s−1
i=0 α(n)
0, 1, . . . , 2s
1
{
−
1 , . . . , x(n)
ﬁrst bits of the integers x(n)
s−1. The sequence of random numbers produced by the generator is

→
2i. In other words, a(n) is the s-bit integer containing precisely the
.

. The output function of the generator G : Ls

(cid:19)
i /2m−1
x(n)

is deﬁned as a(n) =

0 , x(n)

i =

a(n)

}

⌋

⌊

·

i

i

P

We see that the constructed RNG has much hidden information. Namely, s(m

1) bits of

variables; these are the bits that are not involved in constructing the value of a(n).

Thus, applying the chaotic behavior of Anosov motion and introducing an ensemble of systems while keeping
part of the information hidden are the main ingredients of the proposed method. Cat maps provide ergodicity and
hyperbolicity properties, which are obviously necessary for good generators. Introducing hidden variables reduces
correlations (as is shown in Sec. III) and strongly complicates deciphering the RNG.

We note that the concept of the Shift Register Sequence, which is widely used to construct high-quality RNGs,
is connected to dynamical systems. Let the state of the shift register be vn−1 = (an−r, an−r+1, . . . , an−1). At the
next iteration, the state of the shift register is vn = (an−r+1, an−r+2, . . . , an), where an = cran−r + csan−s (mod 2).
In other words, vn+1 = Avn (mod 2), where A is an r
2
,
matrixes. For example, the Fibonacci sequence an = an−1 + an−2 (mod 2) can be described as

r matrix. The simplest cases can be described by 2

= A

×

an
an−1

×
an−1
an−2

where A =

. We note that A2

SL2(Z) is an Arnold cat map.

(cid:0)

(cid:1)

(cid:0)

(cid:1)

−

{
are the hidden

}

x(n)
i
y(n)
i

(cid:0)

(cid:1)

Linear Congruential Generators, the most popular RNG in use today, in some cases can be described by the action
of the hyperbolic toral automorphism [24]. Indeed, we consider the generator xt+1 = cxt ( mod p), where p is a prime
number. Let g denote the primitive element in the group Z∗
1
equals the smallest number s such that gs

p. This means that g is a positive integer such that p

1 (mod p). Usually, there exists a matrix M

SL2(Z) such that

−

∈

1 1
1 0

(cid:18)

(cid:19)

(cid:18)
where l is chosen from the condition bgl + a
q : q2
∃

4 (mod p), 2g

T r(M )2

≡

−

≡

−
T r(M )

g

±

0 (mod p) and the conditions for the map are M

SL2(Z),
≡
q (mod p). This gives the cat map model of the “generator”

∈

gk
gk+l

gk+1
gk+l+1

(cid:19)

≡

(cid:19)

(cid:18)

(mod p),

∈

≡

M

3

(2)

(3)

(4)

(5)

4

xt+1 = gxt (mod p), as well as the generator xt+1 = cxt (mod p). We refer the reader to the original paper [24] for
a detailed discussion.

In the next section it is shown that using the ensemble of transformations while taking only an elder bit from
the point of each cat map suppresses the major correlations of a simple cat-map generator, based on single cat map
(see Sec. III). It was also obtained empirically, that even small deviations from the RNG scheme presented in this
section (e.g., constructing a(n) from diﬀerent and non-ﬁrst bits of the integers x(n)
s−1) result in corellations
appearing and the RNG properties deteriorating.

1 , . . . , x(n)

0 , x(n)

The calculation of the period of the RNG is presented in Appendix B. The typical period length is Tm = 3

2m−3

×

for the 2m

2m lattice.

×

III. STATISTICAL TESTS

2 3
3 5

(cid:18)

(cid:19)

In this section, we present the results of a number of standard statistical tests [6], revealing the correlation properties
of the generator described in Sec. II. Namely, the frequency test, serial test, maximum-of-t test, test for monotonic

subsequences (“run test”), and collision test were applied for M =

, g = 2m = 228, s = 28. All the statistical

tests were passed. All empirical tests except the collision test (CT) are based on either the chi-square test (χ2) or the
Kolmogorov-Smirnov test (KS). We follow Knuth’s notation [6].

}

a(2n), a(2n+1)

The results of the tests are presented in Table I, where n is number of values of a(n) for each test (for the serial
) and ν is the number of degrees of freedom. For the serial test d = 8,
1 = 63. For the run test, ν = 5 means that we sought

test, n is the number of pairs
{
i.e., we used exactly 3 bits of each a(n) number; hence, ν = d2
monotonic subsequences of lengths 1,2,3,4,5 and of length

≥
For all of the KS tests, the empirical distributions of P (K +) and P (K −) were calculated, where P (x) is the
theoretical Kolmogorov-Smirnov distribution [6]. Figure 1 shows these empirical distributions for the frequency test.
These distributions lead to their own values of K + and K −: the values P (K ′+) and P (K ′−) characterizing the
empirical distribution of K + and the values P (K ′+) and P (K ′−) characterizing the empirical distribution of K −.
These values are presented in Table I. Our RNG passes all the KS tests because the values K + and K − are distributed
in accordance with the theory prediction. For each chi-square test, the empirical distribution of 20 values of P (V ) was
calculated. In our tests, it looks similar to those shown in Fig. 1, where P (x) is the theoretical chi-square distribution
and V is the output of the chi-square test. For each collision test, the number of collisions c and the theoretical
probability P (c) that the number of collisions is not larger than c were calculated. The empirical distribution of P (c)
was analyzed, and the results are also presented in Table I.

−
6.

TABLE I: Results of the statistical tests for the RNG based on the ensemble of cat maps (see Sec.II) with parameters M =
g = 2

= 228, s = 28.

m

2 3
3 5

,

(cid:0)

(cid:1)

Test

Parameters

n = 106
Frequency test
n = 106, d = 8
Serial test
n = 106, ν = 5
Run test
Maximum-of-t test n = 106, t = 5
Collision test

m = 220, n = 214

′+) P (K

Number and Tests output values Distribution of V1 Distribution of V2 Conclusion
type of tests
20
20
20
20
20

P (K
0.592392 0.174451 0.457758 0.473379 PASSED
PASSED
n/a
0.837112 0.17128
0.383601 0.805434
PASSED
n/a
0.120912 0.765201 0.704026 0.589702 PASSED
PASSED
n/a
0.150537 0.858955

V1 and V2
V1 = K +, V2 = K
V1 = V
V1 = V
V1 = K +, V2 = K
V1 = c

KS
χ2
χ2
KS
CT

′+) P (K

n/a
n/a

) P (K

n/a

′−

′−

−

−

)

We note that all the empirical tests here except the collision test are essentially multibit. This means that the whole
ensemble of cat maps inﬂuences the test result, and one can guess that hidden variables inside the generator is one
reason for the successful test results. Therefore, this is also useful to analyze the properties of a single-bit cat-map
generator, i.e., properties of a generator from Sec. II with s = 1.

Tests for a single-bit cat-map generator are also successfully passed. Namely, the frequency test and the serial test,
which were modiﬁed for a one-bit generator, and the collision test (which is a single-bit test even in Table I) are
passed. But there are correlations in the single-bit cat-map generator (discussed later in this paper), and the most
convenient method for observing them is the random walks test with µ = 1/2 (see Section IV). The random walks
test is not the only test that can reveal the single-bit cat-map correlations. The same correlations are also observed
by improved versions of some of the standard tests, e.g., the serial test for subsequences of length 5, but this requires
many degrees of freedom and more computer resources.

5

+

K

P

1,0

0,8

0,6

0,4

0,2

0,0

0,0

-(cid:3)

K

P

1,0

0,8

0,6

0,4

0,2

0,0

0,0

0,2

0,4

0,6

0,8

1,0

0,2

0,4

0,6

0,8

1,0

K+

K_

) for the frequency test. The test was performed for the RNG from Sec.II with the

FIG. 1: Distrubution of P (K +) and P (K
2 3
parameters M =
3 5

, g = 2m = 228, s = 28.

−

(cid:0)

(cid:1)

x(n−1)
y(n−1)

Table II shows that the simple generator based on a single cat map, with the transition function deﬁned as

=
(mod 1), and the output function deﬁned as un = x(n), has very bad properties. Of course, the frequency
M
test is passed, since the trajectories of a cat map uniformly ﬁll the phase space. However, all other tests are not
passed. Therefore, the statistical properties of the generator from Sec. II are much better than those of the simple
cat map generator.

(cid:1)

(cid:0)

(cid:1)

(cid:0)

x(n)
y(n)

TABLE II: Results of the statistical tests for a simple RNG based on the single cat map, with parameters M =
g = 2

= 228.

m

2 3
3 5

,

(cid:0)

(cid:1)

Test

Parameters

Number and Tests output values Distribution of V1 Distribution of V2 Conclusion
′+) P (K
type of tests
n = 107
20
Frequency test
n = 5 · 106, d = 8 20
Serial test
n = 106, ν = 5
20
Run test
Maximum-of-t test n = 106, t = 5
20
20
Collision test

P (K
)
0.96235 0.170581 0.787296 0.067341
0.989499 0.006013

V1 and V2
V1 = K +, V2 = K
V1 = V
V1 = V
V1 = K +, V2 = K
V1 = c

PASSED
NOT PASSED
NOT PASSED
NOT PASSED
NOT PASSED

KS
χ2
χ2
KS
CT

m = 220, n = 214

n/a
n/a
0
n/a

n/a
n/a
1
n/a

′+) P (K

) P (K

0
0
0

1
1
1

′−

′−

−

−

IV. THE RANDOM WALKS TEST

The random walks test proved extremely sensitive and powerful for revealing correlations in RNG. In particular,
correlations in the shift register RNG were found by the random walks tests [25, 26, 27]. In addition, random walks
test is easy for analysis and usually provides a clear view of the correlation mechanism in pseudorandom numbers.

There are several variations of the random walks test in diﬀerent dimensions [28]. We consider the one-dimensional
directed random walk model [25]: a walker starts at some site of an one-dimensional lattice, and at discrete times i, he
µ. In the latter case, a new walk
either takes a step in a ﬁxed direction with probability µ or stops with probability 1
begins. The probability of a walk of length n is P (n) = µn−1(1
µ). We
note that the Ising simulations using cluster updates with the Wolﬀ method are closely related to the random walk
problem [26]. Namely, the mean cluster size in the Wolﬀ method equals the mean walk length for µ = tanh(J/kBT ).
Figure 2 shows the correlations in the RNG found by the random walks test. We applied 100 chi-square tests.
Each test performed n = 107 random walks with µ = 1/2. We used only the ﬁrst bit of the RNG with the matrix

µ), and the mean walk length is

= 1/(1

n
h

−

−

−

i

M =

2 3
3 5 !

 

. For each test, the value δPl = (Yl −

npl)/(npl) was calculated for all walk lengths l

7. Here, pl

≤

is the theoretical probability of walk length l for uncorrelated random numbers, Yl is the simulated number of walks

(cid:1)
(cid:2)
(cid:0)
with length l. We note that correlations can be found only for large number of random walks (see Table IV). No
correlations are found even for n = 6

104 random walks.

6

·

0,010

0,005

0,000

l

P

-0,005

-0,010

-0,015

0

1

2

3

5

6

7

8

4

l

FIG. 2: The deviation δPl of the probability of a walk length l from the value for uncorrelated random numbers versus walk
length l. The mean value and the variance for δPl are represented for 100 chi-square random walk simulations.

×

2 , 1]

frequency of appearing in the RNG output. We consider one of them, for example, 10011. Let X = (0, 1
2 ]

These correlations can be explained as follows. There are 32 ﬁve-bit sequences, and they do not have the same
(0, 1] and
x(0)
0
y(0)
0

×
(0, 1], i.e., X and Y are the left and the right halves of the torus. Let x be the initial point

Y = ( 1
of
the generator. For the ﬁrst bits of the ﬁrst ﬁve outputs of the generator to be 10011, it is necessary and suﬃcient to
R−4(Y ). Here, R is the action of the cat map. The set Z10011
have x
consists of polygons. Each polygon can be calculated exactly. The area S(Z10011) equals the probability for the ﬁrst
ﬁve outputs of the generator to be 10011. This shows that the nature of the correlations is found in the geometric
properties of the cat map.

Z10011 = Y

R−2(X)

R−1(X)

R−3(Y )

∩

∈

∩

∩

∩

(cid:0)

(cid:1)

(cid:0)

2 3
3 5

. Each set of polygons, e.g., Z010 = X

Figure 3 (the left picture) represents the polygons corresponding to the subsequences of length three for the cat
R−2(X), represents the region on the torus
map with M =
for the ﬁrst initial point of the RNG and is drawn with its own color. The right picture represents the subsequences
(cid:1)
of length ﬁve for the cat map with M =
. Here, each set of polygons represents the regions on the torus for the
third point of the generator, e.g., ˜Z01001 = R−2(X)
R−1(Y )
R2(Y ), and is drawn with its own color.
Of course, S( ˜Z01001) = S(Z01001) = P (01001) because the cat maps are area preserving. Therefore, the choice of
pictures of Zi or pictures of ˜Zi is unimportant if we only want to calculate the areas. Thus, the geometric structures
in Fig. 3 show the regions of Z000, . . . , Z111 (the left picture) or ˜Z00000, . . . , ˜Z11111 (the right picture) and illustrate
the geometric approach to calculating the probabilities.

R−1(Y )

R(X)

1 1
1 2

X

∩

∩

∩

∩

∩

∩

(cid:0)

(cid:1)

The exact areas S(Z00000), . . . , S(Z11111) can be easily calculated for various toral automorphisms. We prove the

following geometric propositions:

1. In any case, every subsequence of length 3, 2, or 1 respectively has the same probability 1/8, 1/4, or 1/2.

2. If k = Tr(M ) is an odd number, then every subsequence of length 4 has the same probability P0 = 1/16.

3. If k is even, then the probability of the subsequence 0000 depends only on the trace k of matrix M of the cat

map. It equals P = P0 ·

−

k2/(k2

1), where P0 = 1/16.

The line of reasoning is presented in Appendix D and in [31]. Of course, the probability of 0000 automatically gives
the probabilities of all other subsequences of length four. We note that if k is odd, then the ideal
is inert (see
Appendix A 3), and the inert case is the easiest for exact analysis of the RNG period (see Appendix A, B). The
probabilities of the subsequences of length ﬁve for maps with odd traces and of the subsequences of length four for
maps with even traces are calculated exactly and shown in Table III. It can be conjectured from Table III that if k
is odd, then the probability of the subsequence 00000 equals 1 + 1/(3k2

The probabilities can thus be approximated as P/P0 = 1 + Bk−2 for large k, where P0 = 2−n for subsequences of
length n = 4, 5. Here, B = 1 when k is even and n = 4, B = 1/3 when k is odd and n = 5. We conclude that the
deviations found by the random walks test will vanish as the trace k increases.

2
h

6).

−

i

d
7

1

0.8

0.6

0.4

0.2

1

0.8

0.6

0.4

0.2

0.2

0.4

0.6

0.8

1

0.2

0.4

0.6

0.8

1

FIG. 3: (Color online) Left: the regions on the torus for the ﬁrst initial point of the RNG described in Sec. II with M =
.
These regions correspond to the sequences 000, 001, 010, 011, 100, 101, 110, 111 of ﬁrst bits generated by the RNG. Each region
(cid:1)
is drawn with its own color. Right: the regions on the torus for the third point of the RNG, described in Sec. II with M =
.
These regions correspond to the sequences of length ﬁve of ﬁrst bits generated by the RNG. Each region is drawn with its own
(cid:1)
color.

1 1
1 2

(cid:0)

(cid:0)

2 3
3 5

TABLE III: The probabilities of subsequences for diﬀerent cat maps, characterized by the trace k.

k P (0000)/P0
4
6
8
10
12
14
16
18
20
22
24
26
28

16/15
36/35
64/63
100/99
144/143
196/195
256/255
324/323
400/399
484/483
576/575
676/675
784/783

k P (0000)/P0
30
900/899
32 1024/1023
34 1156/1155
36 1296/1295
38 1444/1443
40 1600/1599
42 1764/1763
44 1936/1935
46 2116/2115
48 2304/2303
50 2500/2499
52 2704/2703
54 2916/2915

k P (00000)/P0
3
5
7
9
11
13
15
17
19
21
23
25
27

22/21
70/69
142/141
238/237
358/357
502/501
670/669
862/861
1078/1077
1318/1317
1582/1581
1870/1869
2182/2181

V. POSSIBLE MODIFICATIONS TO THE ALGORITHM

In the previous section, we found correlations for the RNG based on a single cat map. Practically, using the
ensemble of cat maps suppresses these correlations. To reduce the correlations even further, one can increase the
trace k or modify the algorithm, taking the knowledge of the correlation mechanism into account. In this section, we
discuss the latter approach.

TABLE IV: Left: results of the random walks test (i.e. 100 chi-square random walks simulations) for diﬀerent n and for
µ = 1/2, m = 32, s = 1. Right: results of the random walks test for diﬀerent µ and s and for n = 106, m = 32. Here s 6= 1
means using rotation in the RNG output (see Sec.V A). Actually, the same one-bit random walks test is used because µ = 1/2.

8

′−

′−

n
104

Result
PASSED
PASSED
PASSED

′+) P (K
P (K
)
0.746106 0.594428
3 · 104 0.341899 0.675728
6 · 104 0.307433 0.694282

′+) P (K
µ s P (K
1/4 1 0.235776 0.882413 PASSED
3/4 1 0.299174 0.613382 PASSED
1/8 1 0.087016 0.770549 PASSED
0.018332 0.966717 UNCERTAIN 1/16 1 0.67967 0.920998 PASSED
NOT PASSED 1/2 2 0.605407 0.344068 PASSED
NOT PASSED 1/2 3 0.527088 0.645272 PASSED
NOT PASSED 1/2 4 0.558105 0.360828 PASSED

3 · 105 0.0001594
6 · 105 0.0001378

) Result

1
1
1

106

105

0

A. Revolving the RNG output

We have seen that in the scheme in Sec. II, there are correlations between the ﬁrst bits of a(n), correlations between
the second bits of a(n), and so on. Correlations of other natures were not detected. The idea of modifying the
1. In other
2, 2
algorithm is as follows. At each step, we renumber the points of the generator: 1
→
2(i+n) ( mod s)
words, the bits inside a(n) are rotated, and the RNG output function is deﬁned as b(n) =
instead of a(n) =

.
⌋
There are two advantages of the modiﬁed algorithm. First, it leads to decreasing the correlations of the values a(n)
between each other. Second, even the one-bit random walks test with µ = 1/2 deals with the ensemble of cat maps,
and correlations are not found (this can be seen in Table IV).

3, . . . , s
s−1
i=0 α(n)

2i, where α(n)

i /2m−1
x(n)

s−1
i=0 α(n)

i =

P

P

→

→

⌊

·

·

i

i

We note that the rotation of bits in the RNG output does not deteriorate any properties of the RNG provided that
s divides the period of free orbits Tm (in practice, this is very realistic condition). In particular, neither the period of
the generator becomes smaller (see Appendix B), nor the statistical properties become worse.

The rotation of bits in the RNG output is thus a practically useful modiﬁcation. In addition, the rotation makes

deciphering an even more complicated problem.

B. Varying the cat maps

The generator in Sec. II always uses the same cat map for its transition function. We could study changing the
matrix of the cat map at each step of the generator. Changing the cat map “on the ﬂy” could be useful for suppressing
the single-cat-map correlations that were found in the preceding section, because sometimes even long subsequences
can be equiprobable. For instance, it is not hard to ﬁnd sequences of seven cat maps such that all 128 sequences of
seven bits generated by any of them are equiprobable. This can be veriﬁed with the geometric approach.

We consider matrices of the form

. Let A be the class of matrices such that b and c are odd and a is even; let
B be the class of matrices such that a and d are odd and b is even; let C be the class of matrices such that a and b
are odd and either c is even and d is odd or c is odd and d is even. The following statements can then be proved:

(cid:0)

(cid:1)

a b
c d

1. Let a sequence of four bits be generated by four cat maps R1, R2, R3, and R4 with the corresponding matrices
−1
M1, M2, M3, and M4 (e.g., the sequence 0100 is generated if x
4 (X)). Then
the sequence is equiprobable if the matrices M1, M2, M3, and M4 contain an odd number of matrices of the
same class (i.e., there are exactly 1 or 3 matrices of class A or B or C).

−1
3 (X)

−1
1 (X)

−1
2 (Y )

R

R

R

R

∈

∩

∩

∩

2. Let there be n cat maps with the n matrices M1, M2, . . . , Mn. Let iA, iB, and iC be the respective numbers of
these matrices of classes A, B, and C. Let M be the matrix of an arbitrary cat map. Then iA, iB, and iC are
also the numbers of matrices of classes A, B, and C among the matrices M1M, M2M, . . . , MnM .

3. Let a sequence of ﬁve bits be generated by ﬁve cat maps R1, R2, R3, R4, and R5 with the corresponding matrices
M1, M2, M3, M4, and M5. Then the sequence is equiprobable if the numbers of matrices of classes A, B, and
C (in any order) are equal to 3, 1, 1 (in any order).

The proofs are based on the symmetries discussed in Appendix D.

The prospective improvement to this idea could lead to discovering a sequence of cat maps that is inﬁnitely long
and that generates inﬁnite and equiprobable bit sequences. If the equiprobability is proved, then the RNG should

9

have ideal statistical properties. But classifying the matrices (as well as proving it) has not been done for more than
ﬁve matrices.

We note that in any case changing the matrix of a cat map on the ﬂy would at least deteriorate the properties of
the RNG period. The properties of the inﬁnite sequence of matrixes of a cat map should be checked thoroughly. As
Knuth [6] wrote, “Random numbers should not be generated with a method chosen at random.” It is not obvious that
there exists a sequence with good statistical properties and simultaneously good properties of the generator period.
The idea of changing the matrix of a cat map for the single generator could possibly lead to constructing an RNG
that would only seem similar to the one deﬁned in Sec. II, but the properties would in fact have more diﬀerences than
similarities. Most of the results of this paper would not hold for that generator.

VI. DISCUSSION

In this paper, we have proposed a scheme for constructing a good RNG. The distinctive features of this approach are
applying the ensemble of cat maps while taking only a single bit from the point of each cat map and applying methods
that allow to analyse both the properties of the periodic orbits and the statistical properties of such a generator both
theoretically and empirically. We have seen that the algorthm in Sec. II can generate sequences with very large period
lengths and can simultaneously minimize all essential correlations. The techniques used also allow calculating the
period length and correlation properties for a wide class of sequences based on cat maps.

APPENDIX A: PERIODIC ORBITS OF THE CAT MAPS ON THE 2

n × 2

n LATTICE

In this section, we review the key arithmetical methods for studying orbit periods that are described in detail in [21].
Some of the results are presented in a more general form. Although the notation is discussed here, the details and
proofs on the formalism of quadratic integers and quadratic ideals can be found in [29, 30].

1. The dynamics of the cat map and rings of quadratic integers

cat map M =

We consider the unit two-dimensional torus (the square (0, 1]
×
SL2(Z), which acts on a lattice g

m11 m12
m21 m22 ! ∈
k
|
For any given trace k > 2, there exists a unique map M

 
are integers, det M = 1, and

> 2, where k = Tr(M ).

|

×

of periodic orbits of the automorphism and the arithmetic of quadratic integers is the most natural.
consider a matrix M such that

SL2(Z) such that the connection between the properties
Indeed, we

∈

(0, 1] with the opposite sides identiﬁed). We take a

g on the torus, where g = 2n. The elements of M

λ = m11 + τ m21
λτ = m12 + τ m22

.

(

(A1)

Here, τ is the base element of the ring of quadratic integers RD =
that
D

a + bτ : a, b
∈
4 = n2D, where D is a squarefree integer and τ = √D for D

Z : k2
∃
1 (mod 4).

−

∈

n

{

6≡

Z
}
1 (mod 4); τ = 1

that contains λ. This means
2 (1 + √D) for

≡
It easily follows from (A1) that x′ + y′τ = λ(x + yτ ) is equivalent to

Indeed,
λ(x + yτ ) = λx + (λτ )y = (m11x + m12y) + (m21x + m22y)τ = x′ + y′τ . The action of the map M corresponds
to multiplication by the quadratic integer λ, while the action of M −1 corresponds to multiplication by λ−1. Hence,
√k2
we can choose either of the two eigenvalues λ = (k
4)/2, e.g., the largest one, because the exact choice is
unimportant for studying orbit periods.

−
Generally speaking, there are inﬁnitely many maps in SL2(Z) that have identical eigenvalues, and not all the
maps are related by a canonical transformation (share the same dynamics). But arguments presented in [21] strongly
suggest that they still share the same orbit statistics.

for any x, y, x′, y′.

= M

′
x
y′

±

x
y

(cid:1)

(cid:0)

(cid:0)

(cid:1)

10

2.

Invariant sublattices on the torus and the factorization of quadratic ideals

∈

−

η)

We note that each element of RD represents some point of Z2

≡
η (mod A) if (ξ
. It
corresponds to the set of points of a square lattice with the side g. Then the period of an orbit containing the point
x/g
g
y/g
h

). Here, x and y are integers, and z = x + yτ .
i

A. We consider the principal quadratic ideal generated by g:

is the smallest integer T such that λT z

Each quadratic ideal A is associated with some sublattice of Z2

. Because λ is a unit, the sublattice is invariant
(cid:0)
with respect to multiplication by λ: λA = A. Since we are interested in invariant lattices on the unit two-dimensional
torus, we consider only those sublattices of Z2
Z.
ag
, where a, b
bg
thus yields invariant
These sublattices correspond to quadratic ideals that divide
(cid:0)
sublattices on the torus.

that are invariant under an arbitrary translation
g
h

. The factorization of the ideal
i

. Let A be a quadratic ideal. We say that ξ
=

ag + bgτ : a, b

z (mod

Z
}

g
h

g
h

≡

∈

∈

{

(cid:1)

(cid:1)

i

i

3. The classiﬁcation of prime ideals and the orbit periods for the 2

n × 2

n lattice

We consider 2n
2
h

×
. We recall that the ideal
i

2n
h
is already a prime ideal; it is said to be split if
of
2
h
where P1 and P2 are prime ideals; it is said to be ramiﬁed if
inert for D

n, it is suﬃcient to have the ideal factorization
2
h
i
= P1P2,
= P 2
is
2
h

2n lattices on the torus. Because
g
h
is said to be inert if

1 , where P1 is a prime ideal. The ideal

5 (mod 8), split for D

1 (mod 4).

i
2
h

2
h

2
h

=

=

i

i

i

i

i

i

≡

It follows that if the trace k is odd, then

5 (mod 8)

i
≡
2 (mod 4), we obtain (k2

⇒

D

2
h
5 (mod 8); for k

6≡
0 (mod 4), then
0 (mod 4), we have (k2

is ramiﬁed. Indeed, for odd k, we
2
i
h
4)/4 = n2
−

3 (mod 4)

≡
0 (mod 4), i.e., all three possibilities (inert, split, or

1D

⇒

D

≡

≡

≡

1 (mod 8), and ramiﬁed for D
is inert; if k

≡
4)/4 = n2

1D

−

≡

4

have k2
−
3 (mod 4). For k
2
ramiﬁed ideal
h

≡

≡
) can occur.
i

Let Tn denote the period of any of the free orbits for g = 2n and T ′

g = 2n that do not belong to the sublattice g
called an ideal orbit if it belongs to some ideal A such that A

2 ×

The behavior of periodic orbits on the 2

g

2 . We recall that an orbit belonging to a given lattice Z2

n denote the period of those ideal orbits for
is

/gZ2
. Otherwise, it is called a free orbit.
i

2 lattice follows from Propositions B1–B3 in [21]. Namely, we have the

and A

g
|h

1
h

=

i

following:

×

•

•

•

i

If

If

2
h
2
h
If
2
h
i
and T ′

is inert, then either T1 = 3 or T1 = 1; all orbits are free.
is split, then T1 = T ′
is ramiﬁed, then T1 = 2 and T ′
1 = 1; there are two free orbits and an ideal orbit).

i

1 = 1; there are two ideal orbits and one free orbit.

1 = 1; there is an ideal orbit and a free orbit (it is also possible that T1 = 1

To determine the structure of periodic orbits on the 2n
Theorem.

×

2n lattice, we prove the following theorem.

1. For all n, either Tn+1 = 2Tn or Tn+1 = Tn.
2. For all n, either T ′

n = Tn or T ′
3, Tn 6
= Tn−1 ⇒
= Tn−1, and T ′

n = Tn−1.
Tn+1 6
n = Tn/a, where a

= Tn.

3. For all n

4. If n

≥
4, Tn 6

≥

1, 2

, then T ′

n+1 = Tn+1/a.

∈ {

}

This theorem generalizes Propositions C1 and C2 in [21]. The line of reasoning is presented in Appendix C.
Therefore, knowing Tn and T ′

n for small n suﬃces for determining the orbit statistics for all n. There always exist

n1, n2, and n3 such that Tn = T12n−n1 and T ′
is inert, then every ideal that divides
2
i
h
2n−1 sublattice and coincides with a free orbit for some sublattice 2r
×

n = T12n−n2 for all n
n3.
≥
r. Therefore, each ideal orbit belongs to the
2
has the form
i
h
2r, where r < n. We now ﬁnd the
1 points.

If
i
2n−1
number of free orbits in the inert case. There are 22n
Consequently, there are (22n

×
1 points on a lattice. The ideal orbits contain 22n−2

22n−2/Tn free orbits.

22n−2)/Tn = 3

g
h

−

−

−
We suppose that the typical inert case occurs, i.e., Tn = 3

·

2n−3. Then the phase space is divided into the following

·

regions:

•

•

3/4 of the phase space is swept by 2n+1 trajectories of period Tn,

3/16 of the phase space is swept by 2n trajectories of period Tn−1 = Tn/2,

6
3/64 of the phase space is swept by 2n−1 trajectories of period Tn−2 = Tn/4,

and so on. All such statements hold as long as the trajectory length exceeds just a few points.

•

•

Therefore, on one hand, cat map orbits have huge periods; on the other hand, the number of orbits is suﬃciently

large (see Theorem 2 in Appendix B). Both these properties are important for our construction of the RNG.

11

APPENDIX B: THE RNG PERIOD

In this section, we ﬁnd the periods of the generators in Sec. II and Sec. V A. As a result of Appendix A and

Appendix B, the RNG period can be obtained for arbitrary parameters of the map and lattice.

in Sec. II equals the period Tm of free orbits of the cat map for

Theorem 1. The period T of the sequence

}
the overwhelming majority of RNG initial conditions.

{

a(n)

Proof.

belongs to a free orbit. Indeed, the probability of this in the inert case

1. At least one of the initial points
4−s).

equals (1

−

x(0)
i
y(0)
i

(cid:0)

(cid:1)

2. Therefore, T is not less than Tm. Indeed, T is not less than the period of the sequence of ﬁrst bits of x(0)

, . . .
for each i. But the period of the sequence of ﬁrst bits of points of the cat map orbit is equal to the orbit period
for the vast majority of orbits. The probability of the opposite is tiny provided that the orbit is not too short.

, x(1)
i

i

3. Finally, T is not larger than Tm. Indeed, the period of each cat map orbit divides Tm.

Example. In the typical example of the inert case, where M =

2 3
3 5 !

 

, we obtain Tm = 3

2m−3. This fact

×

a(n)
was also tested numerically as follows. First, the initial conditions were set randomly. Second, the period of
}
was accurately found numerically. This operation was repeated 1000 times for m = s = 14. Each time the period of
211. To check the period numerically, we ﬁrst check whether the whole state of
a(i)
{
the RNG (not only the output) coincides at the moments 0 and T and then verify that a smaller period (which could
possibly divide T ) does not exist.

turned out to be 6144 = 3

×

}

{

Theorem 2. The probability that two arbitrary points of the 2m

2m lattice on the torus belong to the same
2m+2). The probability that s arbitrary points of the lattice do not belong to s

orbit of the cat map equals 9/(7
diﬀerent orbits of the cat map (i.e., two of the points belong to the same orbit) is 9s(s

2m+3).

1)/(7

×

·

The proof of Theorem 2 is straightforward. Of course, both these probabilities are tiny if m is suﬃciently large.
Theorem 3. If s

in Sec. V A equals Tm for the overwhelming majority

b(n)

Tm, then the period T of the sequence
|

{

}

−

·

of RNG initial conditions.

Proof.

1. Because s

Tm, we have bi+Tm = bi for all i. Therefore, T
|

Tm.
|

2. If s does not divide T , then

i
∀

∈ {

0, 1, . . . , s

1

j
}∃

−

∈ {

−

}

0, 1, . . . , s

1

, j

= i, such that

and

belong

x(0)
i
y(0)
i

x(0)
j
y(0)
j

to the same orbit of the cat map. It follows from Theorem 2 that this event is highly improbable. Therefore,
s

(cid:1)

(cid:0)

(cid:1)

(cid:0)

T .
|

3. Because T is a period of

b(n)

and s

{

}

T , we have bi+T = bi ⇒
|

ai+T = ai for all i. Therefore, Tm|

T .

APPENDIX C: PROOF OF THE THEOREM IN APPENDIX A 3.

Proposition 1. Tn is the least integer such that λTn

1 (mod

≡

2n
h

). In particular, any free orbit has the same
i

period.

Proof. We suppose that the period of an orbit containing the point z is T . Then λT z

z (mod

z(λT

−

1)

. If the orbit is free, then z
i

2n
∈ h
Proposition 2. Tn|
Proof.
1 (mod
Proposition 3. For all n, either Tn+1 = 2Tn or Tn+1 = Tn.

Indeed, λTn+1

2n+1
h

λTn+1

Tn+1.

)
i

⇒

≡

≡

6∈

1 (mod

P for any ideal P such that P

2n
h

)
i

⇒

Tn+1 = mTn, where m

N.

∈

2n

, P
i

|h

=

1
h

. Therefore, (λT
i

−

≡

2n
h
1)

)
i
2n
∈ h

⇒
.
i

6
6
12

(C1)

(C2)

2n

, we have (λTn + 1) = (λTn
i

−

1) + 2

2
∈ h

. Consequently, λ2Tn
i

−

1 =

Proof.

Because (λTn
2n+1

1)

−

≥

(λTn

Proof.

1)(λTn + 1)
∈ h
Proposition 4. If n

∈ h
−
, i.e., either Tn+1 = 2Tn or Tn+1 = Tn.
i
= Tn−1, then Tn+1 6
3 and Tn 6
λTn−1
It follows from Tn = 2Tn−1 that
λTn−1
Squaring the last equation, we obtain λ2Tn−1 = 1 + z
λ2Tn−1

≡
6≡
2n + z2

1 (mod
1 (mod

= Tn.
⇒
is split, then for all n, T ′
belong to the sublattice 2n−1

Proposition 5. If

2n+1
)
i
h
2
i
h

2n−1, no matter what the ideal is.

Tn+1 6

1 (mod

= Tn.

(

6≡

·

·

≡
n = Tn. In particular, T ′

2n−1
)
i
h
2n
) ⇒
h
i
22n−2
1 + z

λTn−1 = 1 + z

2n−1, where z

2n (mod

·

) for n
i

≥

·
2n+1
h

.
2
6∈ h
i
3. Hence,

n is the same for all ideal orbits that do not

×
is split, we have

i

Proof. Because

1 ( mod P n
1 )
2
h
≡
2 ). We prove that T = S. First, we note that P1 and P2 are conjugate ideals, i.e., P1 = P ∗
1 (mod P n
2 .
2 ), we obtain λ∗S
≡
1 ), i.e., there exists an

0. Taking the conjugate of the congruence λS
λR
λT

and λS
≡
Assume T = S + R and R
≥
1 ), where λ∗ = λ−1. Therefore, λSλ∗SλR
1 (mod P n
0 such that R = lT . Because T = S + lT , we have l = 0
integer l
≥

= P1P2. Let T and S be the smallest integers such that λT

1 (mod P n
1 (mod P n

Let z belong to an ideal orbit of length T ′

. Then T ′

≡
≡

2
h

≡

≡

i

P k
2 , z
6∈
) and λTn

⇒
P k+1
2

1 (mod P n
1 )
⇒
T = S.
, where k
1 (mod P n
≡
1 P n
n = Tn or T ′

1 (mod P n

n and Tn are
1, 2, . . . , n
∈ {
2 ). Therefore, T ′
1 P n
Tn. On the other
n|
n. Therefore, T ′
T ′
2 ), i.e., Tn|
n = Tn.
n = Tn−1.

}

≡

⇒
is ramiﬁed, then for all n, either T ′
i
= P 2. We consider an orbit belonging to P . We now show that the orbit period is either Tn
i

⇒

≡

the smallest integers such that λT
hand, λT

λT

′
n

′
n

≡
Proposition 6. If
Proof. We have

1 (mod P n
1 )
2
h
2
h

or Tn−1.

n and z

′
n

1 (mod P n

≡
1 (mod P n
2 )

∈
1 P n−k
2
λT

′
n

′
n

λTn−1
λT
λTn

≡
≡

1 (mod

≡
1 (mod
1 (mod

)
i
P )
i

2n−1
h
2n−1
h
2n
)
i
h




T
Tn−1|

′
n|

Tn.

⇒

3, and Tn = 2Tn−1, then T ′

n+1 = 2T ′
n.

Using Proposition 3, we complete the proof.

Proposition 7. If
2
≥
h
Proof. Let T = Tn−1. Then we have

i


is ramiﬁed, n

1 (mod A)
1 (mod AP )

,

λT
λT

(

≡
6≡
P for T ′
i

2n−1
where A =
h
that λT = 1 + z, where z
z2

for T ′

i
z2

2n+1

∈ h

i ⇒

2
(
h

∈

n = Tn and A =
A, z
AP ) for n
i

6∈
≥

∈

2n−1
h

n = Tn−1. In any case,

AP . Hence, λ2T = 1 + 2z + z2. We note that 2z
3. Therefore,

2n−1
h

i|

2n
A, AP
|h
2
(
h

∈

. It follows from (C1)
i
AP ), and
2
(
A), 2z
i
h
i

6∈

If T ′
case, T ′

n = Tn, this means that T ′
n+1 = 2T ′
n.

n+1 6

= Tn ⇒

λ2T
λ2T

1 (mod
1 (mod

2
h
2
(
h
n+1 = Tn+1. In the case where T ′
T ′

A)
i
AP )
i

≡
6≡

.

n = Tn−1, we have T ′

n+1 = Tn. In any

APPENDIX D: PROOF OF PROPOSITIONS IN SEC. IV

We here prove the ﬁrst two of the propositions in Sec. IV. The detailed proof of the last one can be found in [31].

Here, we follow the notation in Sec. IV. The construction of the subsequences is also presented in Sec. IV.

(0, 1] and Y = ( 1

Let X = (0, 1
2 ]

Proposition 1. Every subsequence of length two has the same probability 1/4.
Proof.

(0, 1], i.e., X and Y are the left and the right halfs of the torus.
Let R be the cat map (the action of R is deﬁned as transforming the phase space with matrix (1) and taking the
fractional parts of both coordinates in (0, 1)). We consider the set R−1(X). Figure 4 (left) illustrates the structure
a b
of this set. We show that this set is similar for any matrix M =
. Indeed, the frontier of the set X passes into
c d
the frontier of the set R−1(X) with the transformation R−1. We have
(cid:1)

2 , 1]

×

×

(cid:0)

0
a b
y
c d ! (cid:18)

 

1/2
t

(cid:19)

≡

(cid:19)

(cid:18)

(mod 1), where 0 6 t 6 1

⇔

y

∈

(cid:26)

1
2b

,

3
2b

, . . . ,

2b

1

−
2b

(cid:27)

(D1)

 

a b
c d ! (cid:18)
x
a b
0
c d ! (cid:18)
(cid:19)
x
a b
0
c d ! (cid:18)

 

0
t

(cid:19)

0
y

(cid:19)

≡

(cid:18)

≡

(cid:18)
1/2
t

(cid:19)
0
t

(cid:19)

≡

(cid:18)

(cid:19)

 

(mod 1), where 0 6 t 6 1

(mod 1), where 0 6 t 6 1

(mod 1), where 0 6 t 6 1

⇔

y

∈

⇔

⇔

x

x

∈

(cid:26)

∈

(cid:26)

2
2b

,

4
2b

(cid:26)
1
2a

,

3
2a

, . . . ,

, . . . ,

2b
2b

(cid:27)
1

2a

−
2a

(cid:27)

2
2a

,

4
2a

, . . . ,

2a
2a

.

(cid:27)

13

(D2)

(D3)

(D4)

The lines of the slope

a/b pass into vertical lines with the transformation M . Therefore, the slope of the lines in

Fig. 4 is

a/b. If a/b is negative, then all pictures are slightly diﬀerent, but the analogous argumentation holds.

−

−

1

1

1/(cid:144)(2b 1)

1
----- -
2 a1

1
(cid:128)-(cid:128)
-(cid:128)
2

(i+1)/(2b1)
i/(2b1)

1

i
(cid:128)-(cid:128)
(cid:128)---(cid:128)
---(cid:128)
2 a1

i + 1
----(cid:128)
----(cid:128)
2 a1

1
(cid:128)-(cid:128)
-(cid:128)
2

1

FIG. 4: Left: The set R
. This set is similar for arbitrary cat map with positive entries. The
torus is divided into two halfs for convenience. Right: Bottom: the stripe Si. Top: the symmetrical stripe of the same area.
Middle: the stripe Se.

(cid:1)

(cid:0)

−1(X) for the matrix M =

5 12
2 5

The number of stripes in R−1(X)

a symmetry between R−1(X)
. In this case, S(R−1(X)
1/4
1/2

∩

X and R−1(Y )
∩
X) = S(R−1(Y )

∩
∩

∩

X is (a + 2b + 1)/2 for odd a and (a + 2b)/2 for even a. If a is even, then there is
X. This symmetry is the 180-degree turn with respect to the point

X) = 1/4, and the proposition is proved.

(cid:1)

We now show that the areas are also equal for odd a. Let a

2b (the analogous argument holds for a > 2b). Let
(cid:0)
Si and Se be the areas of stripes in Fig. 4 (right). Then S0 = 1/(8ab) is the area of the very ﬁrst “stripe,” which has
a triangular form. Obviously, Si = (2i + 1)S0 and Se = 1/(4b) = 2aS0. Therefore, the set R−1(X)
X occupies the
area S = 2(S0 + S2 + . . . + Sa−1) + 2b−a−1

∩
1)aS0 = 2baS0 = 1
4 .

(4i + 1) + (2b

(a−1)/2
i=0

Se = 2S0

≤

a

2

Proposition 2. Every subsequence of length three has the same probability 1/8.
Proof. Let P (000) = α and P (001) = β. Then α + β = P (00) = 1/4. Consequently, P (011) = 1/4

P

−

−

P (011) = β. On the other hand, P (111) = P (000) = α because R−2(Y )

−
R−1(Y )
. Therefore, α = β = 1/8.

∩

∩

P (001) = α
Y passes

1/2
1/2

X with the 180-degree rotation with respect to the point

and P (111) = 1/4
into R−2(X)

−
R−1(X)

∩

∩

Proposition 3. If k is odd, then every subsequence of length four has the same probability 1/16.
Proof. Let M =
Let P (0000) = α and P (0001) = β. Then α + β = P (000) = 1/8. Because M

(cid:1)
. Here k = TrM = a1 + d1.

, and M 3 =

, M 2 =

a3 b3
c3 d3

a1 b1
c1 d1

a2 b2
c2 d2

(cid:0)

a3 = ka2 −

(cid:0)
a1 = a1(k2
−

(cid:1)
−

1)

k. Hence, there are two possibilities.

(cid:0)

(cid:1)

(cid:0)

(cid:1)

SL2(Z), we have a2 = ka1 −

∈

1 and

1. If a1 is even, then a2 and a3 are odd. Taking the 180-degree rotations with respect to the points

,
and Proposition 2 into account, we have P (0100) = P (0000) = P (1111) = P (1011) = α, P (0101) = P (0001) =
(cid:1)

(cid:1)

(cid:0)

(cid:0)

,

1/2
1/2

1/4
1/2

(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
(cid:128)
P (1110) = P (1010) = β, P (1010) = P (1000) = 1/8
Therefore, 1/4 = P (00) = P (0000) + P (0010) + P (0100) + P (0110) = 4α, i.e., α = β = 1/16.

P (0000) = β, P (0110) = P (0010) = 1/8

−

−

P (1010) = α.

2. If a1 is odd, then a2 is even and a3 is odd. Taking the 180-degree rotations with respect to the points

and Proposition 2 into account, we have P (0010) = P (0000) = P (1111) = P (1101) = α, P (0011) =
(cid:1)
P (1110) = α. Therefore,

1/4
1/2
P (0001) = P (1110) = P (1100) = β, P (0100) = 1/8
(cid:0)
1/4 = P (00) = P (0000) + P (0010) + P (0100) + P (0110) = 4α, i.e., α = β = 1/16.

P (1100) = α, P (0110) = 1/8

−

−

(cid:0)

(cid:1)

The 180-degree rotation with respect to the point

can also be useful in the analysis (the result of this

transformation depends on whether bi are odd or even), although it was not used here.

0
1/4

(cid:0)

(cid:1)

14

1/2
1/2

,

[1] K.S.D. Beach, P.A. Lee, P. Monthoux, Phys. Rev. Lett. 92 (2004) 026401.
[2] D.P. Landau and K. Binder, A Guide to Monte Carlo Simulations in Statistical Physics (Cambridge University Press,

Cambridge, 2000).

[3] S.C. Pieper and R.B. Wiring, Ann. Rev. Nucl. Part. Sci., 51 (2001) 53.
[4] A. L¨uchow, Ann. Rev. Phys. Chem., 51 (2000) 501.
[5] A.R. Bizzarri, J. Phys.: Cond. Mat. 16 (2004) R83.
[6] D.E. Knuth, The art of Computer Programming, Vol. 2, (Addison-Wesley, Cambridge, 1981).
[7] P. L’ecuyer, Uniform Random Number Generation, Annals of Operations Research, 53 (1994), 77–120
[8] R.P.Brent, P.Zimmerman, Random Number Generators with period divisible by a Mersenne prime, Proc.ICCSA (2003).
[9] R.R. Coveyou and R.D. MacPherson, J. ACM 14 100-119 (1967); G. Marsaglia, Proc. Nat. Acad. Sci. USA, 61 (1968)

25-28.

[10] S.W. Golomb, Shift Register Sequences, (Holden-Day, San Francisco, 1967)
[11] A.M. Ferrenberg, D.P. Landau, Y.J. Wong, Phys. Rev. Lett., 69 (1992) 3382.
[12] P. Grassberger, Phys.Lett. 181 (1993) 43
[13] F. Schmid, N. B. Wilding, Int.J.Mod.Phys. C 6 (1995) 781
[14] L. Blum, M. Blum, M. Shub, SIAM Journal of Computing, 15 (1986) 364–383
[15] Moreau, Thierry, Manuscript (1996)
[16] A.J. Lichtenberg, M.A. Lieberman, Regular and Stochastic Motion, (Springer-Verlag, New York, 1983)
[17] H. G. Schuster, Deterministic Chaos, An Introduction, (Physik Verlag, Weinheim, 1984)
[18] V.I. Arnol’d, A. Avez, Ergodic Problems of Classical Mechanics, (Nenjamin, New York, 1968)
[19] J.P. Keating, Nonlinearity, 4 (1991) 277.
[20] N.Z. Akopov, G.G. Athanasiu, E.G. Floratos, G.K. Savvidy, hep-lat/9601003 (1996)
[21] I.C. Percival, F. Vivaldi, Physica D, 25 (1987) 105.
[22] V.I. Arnol’d, Mathematical Methods of Classical Mechanics, (Springer, New York, 1978).
[23] J.H. Hannay, M.V. Berry, Physica D 1 (1980) 267.
[24] A. Bonelli, S. Ruﬀo, Int. J. Mod. Phys. C, 9 (1998) 987–997.
[25] L.N. Shchur, J.R. Heringa, H.W.J. Bl¨ote, Physica A 241 (1997) 579.
[26] L.N. Shchur, H.W.J. Bl¨ote, Phys. Rev. E 55 (1997) R4905
[27] W. Selke, A.L. Talapov and L.N. Shchur, Pis’ma ZhETF, 58 (1993) 684; JETP Lett., 58 (1993) 665;I. Vattulainen, T.
Ala-Nissila, K. Kankaala, Phys. Rev. Lett., 73 (1994) 2513; F. Schmid, N.B. Wilding, Int. J. Mod. Phys. C 6 (1995) 781.

[28] K. Binder, D.W. Heermann, Monte Carlo Simulation in Statistical Physics, (Springer-Verlag, Berlin, 1992).
[29] H. Cohn, A Second Course in Number Theory, (Wiley, New York, 1962); reprinted with the title Advanced Number Theory

(Dover, New York, 1980).

[30] R. Chapman, Notes on Algebraic Numbers, http://www.maths.ex.ac.uk/∼rjc/notes/algn.ps (1995, 2002).
[31] The detailed proof of the third proposition can be found at http://www.comphys.ru/barash/cat-map-details.ps

