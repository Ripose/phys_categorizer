3
0
0
2
 
n
u
J
 
6
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
8
2
1
6
0
3
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Non-local Updates for Quantum Monte Carlo
Simulations

Matthias Troyer∗

†, Fabien Alet∗

†, Simon Trebst∗

† and Stefan Wessel∗

∗Theoretische Physik, ETH Zürich, 8093 Zürich, Switzerland
†Computational Laboratory, ETH Zürich, 8092 Zürich, Switzerland

Abstract. We review the development of update schemes for quantum lattice models simulated us-
ing world line quantum Monte Carlo algorithms. Starting from the Suzuki-Trotter mapping we dis-
cuss limitations of local update algorithms and highlight the main developments beyond Metropolis-
style local updates: the development of cluster algorithms, their generalization to continuous time,
the worm and directed-loop algorithms and ﬁnally a generalization of the ﬂat histogram method of
Wang and Landau to quantum systems.

QUANTUM MONTE CARLO WORLD LINE ALGORITHMS

Suzuki’s realization in 1976 [1] that the partition function of a d-dimensional quantum
spin-1/2 system can be mapped onto that of a (d + 1)-dimensional classical Ising model
with special interactions enabled the straightforward simulation of arbitrary quantum
lattice models, overcoming the restrictions of Handscomb’s method [2]. Quantum spins
get mapped onto classical world lines and the Metropolis algorithm [3] can be employed
to perform local updates of the conﬁgurations.

Just like classical algorithms the local update quantum Monte Carlo algorithm suffers
from the problem of critical slowing down at second order phase transitions and the
problem of tunneling out of metastable states at ﬁrst order phase transitions. Here we
review the development of non-local update algorithms, stepping beyond local update
Metropolis schemes:

• 1993: the loop algorithm [4], a generalization of the classical cluster algorithms to
quantum systems allows efﬁcient simulations at second order phase transitions.
• 1996: continuous time versions of the loop algorithm [5] and the local update al-
gorithms [6] remove the need for an extrapolation in the discrete time step of the
original algorithms (an approximation-free power-series scheme had been intro-
duced for the S=1/2 Heisenberg model already in [2], and a related, more general
method with local updates was presented in [7]).

• from 1998: the worm algorithm [8], the loop-operator [9, 10] and the directed
loop algorithms [11] remove the requirement of spin-inversion or particle-hole
symmetry.

• 2003: ﬂat histogram methods for quantum systems [12] allow efﬁcient tunneling

between metastable states at ﬁrst order phase transitions.

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

1

WORLD LINES AND LOCAL UPDATE ALGORITHMS

The Suzuki-Trotter decomposition

In classical simulations the Boltzmann weight of a conﬁguration c at an inverse
b Ec). Hence

temperature b = 1/kBT is easily calculated from its energy Ec as exp(
the thermal average of a quantity A
classical = (cid:229)

b Ec)/(cid:229)

Ac exp(

b Ec)

exp(

(1)

−

A

h

i

c

−

c

−

can be directly estimated in a Monte Carlo simulation. The key problem for a quantum
Monte Carlo simulation is that the simple exponentials of energies get replaced by
exponentials of the Hamilton operator H:

A

h

i

= Tr [A exp(

b H)] /Tr[exp(

b H)]

−

−

The seminal idea of Suzuki [1], using a generalization of Trotter’s formula [13], was
i Hi so that the exponentials of each of the terms
b Hi) is easy to calculate. Although the Hi do not commute, the error in estimating

to split H into two or more terms H = (cid:229) N
exp(
the exponential

−

exp(

e H)

−

≈

i

exp(

e Hi) + O(e 2)

−

is small for small prefactors e and better formulas of arbitrarily high order can be derived
[14]. Applying this approximation to the partition function we get Suzuki’s famous
mapping, here shown for the simplest case of two terms H1 and H2

Z = Tr [exp(
= Tr [exp(
=

i1,...,i2M

h

−

b H)] = Tr[exp(
t H1) exp(
−
−
i3
U2
i2
U1
i1
|
|
|

t (H1 + H2)]M
t 2)
i2M

t H2)]M + O(D
U1
i2M
|

i · · · h

1
−

ih

−

i2

|

|

ih

i2M

i1

U2
|

|

i

+ O(D

t 2),

where the time step is D
states, and the transfer matrices are Ui = exp(
elements

t = b /M, the

ik

i

i

|

−

U1
|

i′i

|

h

each are complete orthonormal sets of basis
t Hi). The evaluation of the matrix

is straightforward since the Hi are chosen to be easily diagonalized.

(2)

(3)

(4)

The World Line Representation

As an example we consider a one-dimensional chain with nearest neighbor interac-
tions. The Hamiltonian H is split into odd and even bonds H1 and H2, as shown in Fig.
1a). Since the bond terms in each of these sums commute, the calculation of the expo-
nential is easy. Equation (4) can be interpreted as an evolution in imaginary time (inverse
by the “time evolution” operators U1 and U2. Within each
temperature) of the state
time interval D
the operators U1 and and U2 are each applied once. This leads to the fa-
mous “checkerboard decomposition”, a graphical representation of the sum on a square

i1

i

|

t

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

2

(cid:213)
D
D
D
(cid:229)
D
a)

H

H1

H2

=

+

b)

e
m

i
t
 
y
r
a
n
i
g
a
m

i

|i1
|i8
|i7
|i6
|i5
|i4
|i3
|i2
|i1

U2
U1
U2
U1
U2
U1
U2
U1

FIGURE 1.
The “checkerboard decomposition”: a) the Hamiltonian is split into odd and even bond
terms. b) A graphical representation of Suzuki’s mapping of a one-dimensional quantum system to a
two-dimensional classical one, where an example world line conﬁguration is shown.

space direction

lattice, where the applications of the operators Ui are marked by shaded squares (see Fig.
1b). The conﬁguration along each time slice corresponds to one of the states
in the
sum (4).

ik

i

|

This establishes the mapping of a one-dimensional quantum to a two-dimensional
classical model where the four classical states at the corners of each plaquette interact
with a four-site Ising-like interaction. For Hamiltonians with particle number (or magne-
tization) conservation we can take the mapping one step further. Since the conservation
law applies locally on each shaded plaquette, particles on neighboring time slices can
in terms of world
be connected and we get a representation of the conﬁguration
lines. The sum over all conﬁgurations
corre-
ik+1
ik
i}
sponds to the sum over all possible world line conﬁgurations. In Fig. 1b) we show such
a world line conﬁguration for a model with one type of particle (e.g. a spin-1/2, hardcore
boson or spinless fermion model). For models with more types of particles there will be
more kinds of world lines representing different particles (e.g. spin-up and spin-down
fermions).

iki}
with non-zero weights

U
|

{|

{|

ik

h

i

|

Local Updates

The world line representation can be used as a starting point of a quantum Monte
Carlo algorithm [15]. Since particle number conservation prohibits the breaking of world
lines, the local updates need to move world lines instead of just changing local states as
in a classical model.

As an example we consider a one-dimensional tight binding model with Hamiltonian

H =

t (cid:229)
−

i (cid:16)

i ci+1 + c†
c†

i+1ci

,

(cid:17)

(5)

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

3

æ
æ
æ
æ
æ
æ
æ
æ
æ
a)

1

b)

c)

cosh(Dt  t)

sinh(Dt  t)

Examples of the two types of local moves used to update the world line conﬁguration in
FIGURE 2.
a tight-binding model with two states per site and Hamiltonian Eq. (5): a) plaquette weights
ik+1
i
|
of the six possible local world line conﬁgurations in a tight binding model; b) the two types of updates in
discrete time and c) in continuous time.

ik
h

U
|

where c†
the plaquette weights
shaded plaquette in this model.

U
|

ik

h

|

ik+1

i

i creates a particle (spinless fermion or hardcore boson) at site i. Fig. 2a shows
for each of the six world line conﬁgurations on a

The local updates are quite simple and move a world line across a white plaquette
[15, 16], as shown in Fig. 2b). Slightly more complicated local moves are needed for
higher-dimensional models [17], t-J models [18, 19] and Kondo lattice models [19].

Since these local updates cannot change global properties, such as the number of
world lines or their spatial winding, they need to be complemented with global updates
if the grandcanonical ensemble should be simulated [17]. The problem of exponentially
low acceptance rate of such moves was remedied only much later by the non-local update
algorithms discussed below.

The Continuous Time Limit

The systematic error arising from the ﬁnite time step D

t was originally controlled by
an extrapolation to the continuous time limit D
0 from simulations with different
t . It required a fresh look at quantum Monte Carlo algorithms
values of the time step D
by a Russian group [6] in 1996 to realize that, for a discrete quantum lattice model, this
limit can already be taken during the construction of the algorithm and simulations can
be performed directly at D

0, corresponding to an inﬁnite Trotter number M = ¥

→

.

t

t

In this limit the Suzuki-Trotter formula Eq. (4) becomes equivalent to a time-

→

dependent perturbation theory in imaginary time [6, 8]:

Z = Tr exp(

b H) = Tr

exp(

b H0)T exp

dt V (t )

,

−

(cid:20)

−

b

= Tr

exp(

(cid:20)

−

b H0)

1
(cid:18)

− Z

0

b

Z
0
1
2 Z

b

0

(cid:21)
b

Z
t 1

dt V (t )dt +

dt 1

dt 2V (t 1)V (t 2) + ...

(6)

,

(cid:19)(cid:21)

where the symbol T denotes time-ordering of the exponential. The Hamilto-
term H0 and an offdiagonal pertur-
nian H = H0 + V is split
bation V . The time-dependent perturbation in the interaction representation is
t H0). In the case of the tight-binding model the hopping
V (t ) = exp(t H0)V exp(

into a diagonal

−

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

4

term t is part of the perturbation V , while additional diagonal potential or interaction
terms would be a part of H0.

To implement a continuous time algorithm the ﬁrst change in the algorithm is to
keep only a list of times at which the conﬁguration changes instead of storing the
conﬁguration at each of the 2M time slices in the limit M
. Since the probability
for a jump of a world line [see Fig. 2a)] and hence a change of the local conﬁguration is
sinh(D
.
The representation is thus well deﬁned, and, equivalently, in Eq. (6) only a ﬁnite number
of terms contributes in a ﬁnite system.

(cid:181) 1/M the number of such changes remains ﬁnite in the limit M

t t) (cid:181)

→

→

t

The second change concerns the updates, since the probability for the insertion of a

pair of jumps in the world line [the upper move in Fig. 2b)] vanishes as

Pinsert jump = sinh2(D

t t)/ cosh2(D

t t) (cid:181)

t 2 (cid:181) 1/M2

0

→

(7)

in the continuous time limit. To counter this vanishing probability, one proposes to insert
a pair of jumps not at a speciﬁc location but anywhere inside a ﬁnite time interval [6].
The integrated probability then remains ﬁnite in the limit D
0. Similarly instead of
t [the lower move in Figs. 2b,c)] we move it by a ﬁnite time interval
shifting a jump by D
in the continuous time algorithm.

→

t

Stochastic Series Expansion

An alternative Monte Carlo algorithm, which also does not suffer from time dis-
cretization, is the stochastic series expansion (SSE) algorithm [7], a generalization of
Handscomb’s algorithm [2] for the Heisenberg model. It starts from a Taylor expansion
of the partition function in orders of b :

Z = Tr exp(

b H) =

Tr(

H)n

−

n=0

−

b n

n!

=

n=0

i1,...in
{

}

b1,...bn
{

b n

n!

h
}

i1

i2

Hb1|

ih

i2

| −

i3

Hb2|

| −

in

i · · · h

| −

i1

Hbn|

i

(8)

where in the second line we decomposed the Hamiltonian H into a sum of single-bond
terms H = (cid:229) b Hb, and again inserted complete sets of basis states. We end up with
a similar representation as Eq. (4) and a related world-line picture with very similar
update schemes. For more details of the SSE method we refer to the contribution of
A.W. Sandvik in this proceedings volume.

The SSE representation can be formally related to the world line representation by
observing that Eq. (8) is obtained from Eq. (6) by setting H0 = 0, V = H and integrating
over all times (compare also Fig. 3) t i [20]. This mapping also shows the advantages
and disadvantages of the two representations. The SSE representation corresponds to a
perturbation expansion in all terms of the Hamiltonian, whereas world line algorithms
treat the diagonal terms in H0 exactly and perturb only in the offdiagonal terms V of
the Hamiltonian. World line algorithms hence need only fewer terms in the expansion,

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

5

¥
D
¥
D
¥
(cid:229)
¥
(cid:229)
(cid:229)
(cid:229)
a)

e
m

i
t
 

y
r
a
n
i
g
a
m

i

0

b)

e
m

i
t
 

y
r
a
n
i
g
a
m

i

0

c)

n

x
e
d
n
i
 
r
e
g
e
t
n
i

1

space direction

space direction

space direction

FIGURE 3. A comparison of a) world lines in discrete time, b) in continuous time and c) a similar
conﬁguration in the SSE representation. In the SSE representation the continuous time index is replaced
by an integer order index of the operators, at the cost of additional diagonal terms (the dashed lines).

but pay for it by having to deal with imaginary times t i. The SSE representation is thus
preferred except for models with large diagonal terms (e.g. bosonic Hubbard models) or
for models with time-dependent actions (e.g. dissipative quantum systems [21]).

THE LOOP ALGORITHM

While the local update world line and SSE algorithms enable the simulation of quantum
systems they suffer from critical slowing down at second order phase transitions. Even
worse, changing the spatial and temporal winding numbers has an exponentially small
acceptance rate. While the restriction to zero spatial winding can be viewed as a bound-
ary effect, changing the temporal winding number and thus the magnetization or particle
number is essential for simulations in the grand canonical ensemble.

The solution to these problems came with the loop algorithm [4] and its continuous
time version [5]. These algorithms, generalizations of the classical cluster algorithms
[22] to quantum systems, not only solve the problem of critical slowing down, but also
updates the winding numbers efﬁciently for those systems to which it can be applied.

Since there is an extensive recent review of the loop algorithm [23], we will only
mention the main idea behind the loop algorithm here. In the classical Swendsen-
Wang cluster algorithm each bond in the lattice is considered, and with a probability
depending on the local conﬁguration two neighboring spins are either “connected” or
left “disconnected”, as shown in Fig. 4a). “Connected” spins form a cluster and must
be ﬂipped together. Since the average extent of these cluster is just the correlation

a)

b)

a) in the cluster algorithms for classical spins two sites can either be connected (thick line)
FIGURE 4.
or disconnected (thin line). b) in the loop algorithm for quantum spins two or fours spins on a shaded
plaquette must be connected.

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

6

b
b
a)

b)

c)

FIGURE 5. A loop cluster update: a) world line conﬁguration before the update, where the world line
of a particle (or up-spin in a magnetic model) is drawn as a thick line and that of a hole (down-spin) as a
thin line; b) world line conﬁguration and a loop cluster (grey line); c) the world line conﬁgurations after
all spins along the loop have been ﬂipped.

length of the system, updates are performed on physically relevant length scales and
autocorrelation times are substantially reduced.

Upon applying the same idea to world lines in QMC we have to take into account
that (in systems with particle number or magnetization conservation) the world lines
may not be broken. This implies that a single spin on a plaquette cannot be ﬂipped
by itself, but at least two, or all four spins must be ﬂipped in order to create valid
updates of the world line conﬁgurations. Instead of the two possibilities “connected” or
“disconnected”, four connections are possible on a plaquette, as shown in Fig. 4b): either
horizontal neighbors, vertical neighbors, diagonal neighbors or all four spins might be
ﬂipped together. The speciﬁc choices and probabilities depend, like in the classical
algorithm, on details of the model and the world line conﬁguration. Since each spin
is connected to two (or four) other spins, the cluster has a loop-like shape (or a set of
connected loops), which is the origin of the name “loop algorithm” and is illustrated in
Fig. 5.

While the loop algorithm was originally developed only for six-vertex and spin-1/2
models [4] it has been generalized to higher spin models [24], anisotropic spin models
[25], Hubbard [26] and t-J models [27].

Applications of the loop algorithm

Out of the large number of applications of the loop algorithm we want to mention only
a few which highlight the advances made possible by the development of this algorithm
and refer to Ref. [23] for a more complete overview.

• The ﬁrst application of the discrete and continuous time loop algorithms [28, 5]
were high accuracy simulations of the ground state parameteres of the square lattice
Heisenberg antiferromagnet, establishing beyond any doubt the existence of Néel
order even for spin S = 1/2.

• The exponential divergence of the correlation length in the same system could be
studied on much larger systems with up to one million spins [29, 30, 31] and with

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

7

much higher accuracy than in previous simulations [17], investigating not only the
leading exponential behavior but also higher order corrections.

• For quantum phase transitions in two-dimensional quantum Heisenberg antiferro-
magnets, simulations using local updates had been restricted to small systems with
up to 200 spins at not too low temperatures and had given contradicting results
regarding the universality class of the phase transitions [32, 33]. The loop algo-
rithm enabled simulations on up to one hundred times larger systems at ten times
lower temperatures, allowing the accurate determination of the critical behavior at
quantum phase transitions [34, 35].

• Similarly, in the two-dimensional quantum XY model the loop algorithm allowed
accurate simulations of the Kosterlitz-Thouless phase transition [36], again improv-
ing on results obtained using local updates [37].

• In SU(4) square lattice antiferromagnets, the loop algorithm could clarify that a
spin liquid state thought to be present based on data obtained using local update
algorithms on small lattices [38] is actually Néel ordered [39].

• A generalization, which allows to study inﬁnite systems in the absence of long

range order, was invented [40].

• The meron cluster algorithm, an algorithm based on the loop algorithm, solves the

negative sign problem in some special systems [41].

WORM AND DIRECTED LOOP ALGORITHMS

Problems of the loop algorithm in a magnetic ﬁeld

As successful as the loop algorithm is, it is restricted – as the classical cluster algo-
rithms – to models with spin inversion symmetry (or particle-hole symmetry). Terms in
the Hamiltonian which break this spin-inversion symmetry – such as a magnetic ﬁeld
in a spin model or a chemical potential in a particle model – are not taken into account
during loop construction. Instead they enter through the acceptance rate of the loop ﬂip,
which can be exponentially small at low temperatures.

As an example consider two S = 1/2 quantum spins in a magnetic ﬁeld:

H = JS1S2

h(Sz

1 + Sz
2)

−

(9)

−

| ↑↑i

| ↑↑i

) with energy

| ↑↓i − | ↓↑i
h =

with energy 1/4J

In a ﬁeld h = J the singlet state 1/√2(
3/4J is degenerate
with the triplet state
3/4J, but he loop algorithm is
exponentially inefﬁcient at low temperatures. As illustrated in Fig. 6a), we start from the
triplet state
and propose a loop shown in Fig. 6b). The loop construction rules,
which do not take into account the magnetic ﬁeld, propose to ﬂip one of the spins
and go to the intermediate conﬁguration
1/4J shown in Fig. 6c).
| ↑↓i
This move costs potential energy J/2 and thus has an exponentially small acceptance
b J/2). Once we accept this move, immediately many small loops are built,
rate exp(
exchanging the spins on the two sites, and gaining exchange energy J/2 by going to the
spin singlet state. A typical world line conﬁguration for the singlet is shown in Fig. 6d).

with energy

−

−

−

−

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

8

a)

b)

c)

d)

FIGURE 6. A loop update for two antiferromagnetically coupled spins in a magnetic ﬁeld with J = h. a)
Starting from the triplet conﬁguration
, b) a loop is constructed, proposing to go to c), the intermediate
, which has an exponentially small acceptance rate, and ﬁnally into conﬁgurations like
conﬁguration
d) which represent the singlet state 1/√2(
). As in the previous ﬁgure a thick line denotes an
up-spin and a thin line a down-spin.

| ↑↓i − | ↓↑i

| ↑↓i

| ↑↑i

The reverse move has the same exponentially small probability, since the probability to
reach a world line conﬁguration without any exchange term [Fig. 6c)] from a spin singlet
conﬁguration [Fig. 6d)] is exponentially small.

This example clearly illustrates the reason for the exponential slowdown: in a ﬁrst
step we lose all potential energy, before gaining it back in exchange energy. A faster
algorithm could thus be built if, instead of doing the trade in one big step, we could
trade potential with exchange energy in small pieces, which is exactly what the worm
algorithm does.

The Worm Algorithm

The worm algorithm [8] works in an extended conﬁguration space, where in addition
to closed world line conﬁgurations one open world line fragment (the “worm”) is
allowed. Formally this is done by adding a source term to the Hamiltonian which for
a spin model is

Hworm = H

h

−

i

(S+

i + S−i ) .

(10)

This source term allows world lines to be broken with a matrix element proportional to
h
. The worm algorithm now proceeds as follows: a worm (i.e. a world line fragment) is
created by inserting a pair (S+
i , S−i ) of operators at nearby times, as shown in Fig. 7a,b).
The ends of this worm are then moved randomly in space and time [Fig. 7c)], using local
Metropolis or heat bath updates until the two ends of the worm meet again as in Fig.
7d). Then an update which removes the worm is proposed, and if accepted we are back
in a conﬁguration with closed world lines only, as shown in Fig. 7e). This algorithm
is straightforward, consisting just of local updates of the worm ends in the extended
conﬁguration space but it can perform nonlocal changes. A worm end can wind around

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

9

(cid:229)
a)

b)

d)

e)

c)

S+

S–

S+

S–

S+
S–

FIGURE 7. A worm update for two antiferromagnetically coupled spins in a magnetic ﬁeld with J = h.
a worm is constructed in b) by inserting a pair of S+ and S−
a) starting from the triplet conﬁguration
operators. c) these “worm end” operators are then moved by local updates until d) they meet again, when
a move to remove them is proposed, which leads to the closed world line conﬁguration e). As in the two
previous ﬁgures a thick line denotes an up-spin and a thin line a down-spin.

| ↑↑i

the lattice in the temporal or spatial direction and that way change the magnetization and
winding number.

In contrast to the loop algorithm in a magnetic ﬁeld, where the trade between potential
and exchange energy is done by ﬁrst losing all of the potential energy, before gaining
back the exchange energy, the worm algorithm performs this trade in small pieces,
never suffering from an exponentially small acceptance probability. While not being
as efﬁcient as the loop algorithm in zero magnetic ﬁeld (the worm movement follows
a random walk while the loop algorithm can be interpreted as a self-avoiding random
walk), the big advantage of the worm algorithm is that it remains efﬁcient in the presence
of a magnetic ﬁeld.

A similar algorithm was already proposed more than a decade earlier [42]. Instead of
a random walk using fulﬁlling detailed balance at every move of the worm head in this
earlier algorithm just performed a random walk. The a posteriori acceptance rates are
then often very small and the algorithm is not efﬁcient, just as the small acceptance rates
for loop updates in magnetic ﬁelds make the loop algorithm inefﬁcient. This highlights
the importance of having the cluster-building rules of a non-local update algorithm
closely tied to the physics of the problem.

The Directed Loop Algorithm

Algorithms with a similar basic idea are the operator-loop update [9, 10] in the SSE
formulation and the directed-loop algorithms [11] which can be formulated in both
an SSE and a world-line representation. Like the worm algorithm, these algorithms
create two world line discontinuities, and move them around by local updates. The
main difference to the worm algorithm is that here these movements do not follow an
unbiased random walk but have a preferred direction, always trying to move away from
the last change. The directed loop algorithms might thus be more efﬁcient than the worm

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

10

algorithm but no direct comparison has been performed so far. For more details see the
contribution of A.W. Sandvik in this volume.

Applications

Just as the loop algorithm enabled a break-through in the simulation of quantum mag-
nets in zero magnetic ﬁeld, the worm and directed loop algorithms allowed simulations
of bosonic systems with better efﬁciency and accuracy. A few examples include:

• Simulations of quantum phase transitions in soft-core bosonic systems, both for

uniform models [8] and in magnetic traps [43].

• By being able to simulate substantially larger latttices than by local updates [44]
the existence of supersolids in hard-core boson models was clariﬁed [45] and
the ground-state [45, 46] and ﬁnite-temperature phase diagrams [47] of two-
dimensional hard-core boson models have been determined.

• Magnetization curves of quantum magnets have been calculated [48].

FLAT HISTOGRAMS AND FIRST ORDER PHASE TRANSITIONS

r (E) exp(

The main problem during the simulation of a ﬁrst order phase transition is the exponen-
tially slow tunneling time between the two coexisting phases. For classical simulations
the multi-canonical algorithm [49] and recently the Wang-Landau algorithm [50] eases
this tunneling by reweighting conﬁgurations such as to achieve a “ﬂat histogram” in
energy space. In a canonical simulation the probability of visiting an energy level E is
r (E)p(E) (cid:181)
b E) where the density of states r (E) is the number of states
with energy E. While the multi-canonical algorithm [49] changes the canonical distri-
bution p(E) by reweighting it in an energy-dependent way, the algorithm by Wang and
Landau discards the notion of temperature and directly uses the density of states to set
p(E) (cid:181) 1/r (E), which gives a constant probability in energy space r (E)p(E) = const..
The unknown quantity r (E) is determined self-consistently in an iterative way and then
allows to directly calculate the free energy
kBT ln(cid:229)

r (E) exp(

b E)

F =

(11)

−

−

E

−

and other thermodynamic quantities at any temperature. The main change to a simulation
program using a canonical distribution is to replace the canonical probability p(E) =
exp(

b E) by the inverse density of states p(E) = 1/r (E).

This algorithm cannot be straightforwardly used for quantum systems, since the
density of states r (E) is not directly accessible for those. Instead we recently proposed
[12] to start from the SSE formulation of the partition function Eq. (8):

−

F =

kBT ln Tr exp(

b H) =

kBT ln

−

−

−

b n

n!

Tr(

H)n

−

n=0

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

11

¥
(cid:229)
=

kBT ln

−

kBT ln

≡ −

b n

n!

i1,...in
{
b ng(n).

n=0

n=0

b1,...bn
{

}

h
}

i1

i2

Hb1|

ih

i2

| −

i3

Hb2|

| −

in

i · · · h

| −

i1

Hbn|

i

(12)

The coefﬁcient g(n) of the n-th order term in an expansion in the inverse temperature b
now plays the role of the density of states r (E) in the classical algorithm. Similar to the
classical algorithm, by using 1/g(n) as the probability of a conﬁguration instead of the
usual SSE weight, a ﬂat histogram in the order n of the series is achieved. Alternatively
instead of such a high-temperature expansion a ﬁnite-temperature perturbation series
can be formulated [12].

This algorithm was shown to be effective at ﬁrst order phase transitions in quantum

systems and promises to be effective also for the simulation of quantum spin glasses.

WHICH ALGORITHM IS THE BEST?

Since there is no “best algorithm” suitable for all problems we conclude with a guide on
how to pick the best algorithm for a particular problem.

• For models with particle-hole or spin-inversion symmetry a loop algorithm is
optimal [4, 5, 9]. Usually an SSE representation [9] will be preferred unless the
action is time-dependent (such as long-range in time interactions in a dissipative
quantum system) or there are large diagonal terms, in which case a world line
representation is better.

• For models without particle hole symmetry a worm or directed-loop algorithm is

the best choice:

– if the Hamiltonian is diagonally dominant use a worm [8] or directed loop [11]

algorithm in a world line representation.

– otherwise ause directed-loop algorithm in an SSE representation. [9, 10, 11].
• At ﬁrst order phase transition a generalization of Wang-Landau sampling to quan-

tum systems should be used [12].

The source code for some of these algorithms is available on the Internet. Sandvik
has published a FORTRAN version of an SSE algorithm for quantum magnets [51].
The ALPS (Algorithms and Libaries for Physics Simulations) project is an open-source
effort to provide libraries and application frameworks for classical and quantum lattice
models as well as C++ implementations of the loop, worm and directed-loop algorithms
[52].

ACKNOWLEDGMENTS

We acknowledge useful discussions with H.G. Evertz, N. Kawashima, N. Prokof’ev
and A. Sandvik about the relationship between the various cluster-update algorithms for

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

12

¥
(cid:229)
(cid:229)
(cid:229)
¥
(cid:229)
quantum systems. F.A, S.T and S.W acknowledge support of the Swiss National Science
Foundation.

REFERENCES

1. M. Suzuki, Prog. of Theor. Phys. 56, 1454 (1976).
2. D.C. Handscomb, Proc. Cambridge Philos. Soc. 58, 594 (1962).
3. N. Metropolis, A. R. Rosenbluth, M. N. Rosenbluth, A. H. Teller and E. Teller, J. of Chem. Phys. 21,

1087 (1953).

4. H.G. Evertz, G. Lana and M. Marcu, Phys. Rev. Lett. 70, 875 (1993).
5. B.B. Beard and U.-J. Wiese, Phys. Rev. Lett. 77, 5130 (1996).
6. N.V. Prokof’ev, B.V. Svistunov and I.S. Tupitsyn, Pis’ma v Zh.Eks. Teor. Fiz., 64, 853 (1996)

[English translation is Report cond-mat/9612091].

7. A.W. Sandvik and J. Kurkijärvi, Phys. Rev. B 43, 5950 (1991).
8. N.V. Prokof’ev, B.V. Svistunov and I.S. Tupitsyn, Sov. Phys. - JETP 87, 310 (1998).
9. A.W. Sandvik, Phys. Rev. B 59, R14157 (1999).
10. A. Dorneich and M. Troyer, Phys. Rev. E 64, 066701 (2001).
11. O.F. Syljuåsen and A.W. Sandvik, Phys. Rev. E 66, 046701 (2002); O.F. Syljuåsen, Phys. Rev. E 67,

046701 (2003).

12. M. Troyer, S. Wessel and F. Alet, Phys. Rev. Lett. 90, 120201 (2003).
13. H.F. Trotter, Proc. Am. Math. Soc. 10, 545 (1959).
14. M. Suzuki, Phys. Lett. A 165, 387 (1992).
15. M. Suzuki, S. Miyashita and A. Kuroda, Prog. Theor. Phys. 58, 1377 (1977).
16. J.E. Hirsch, D.J. Scalapino, R.L. Sugar and R. Blankenbecler, Phys. Rev. Lett. 47, 1628 (1981).
17. M.S. Makivi´c and H.-Q. Ding, Phys. Rev. B 43, 3562 (1991).
18. F.F. Assaad and D. Würtz, Phys. Rev. B 44, 2681 (1991).
19. M. Troyer, Ph.D. thesis (ETH Zürich, 1994).
20. A. W. Sandvik, R. R. P. Singh and D. K. Campbell, Phys. Rev. B 56, 14510 (1997).
21. A.O. Caldeira and A.J. Leggett, Phys. Rev. Lett. 46, 211 (1981).
22. R.H. Swendsen and J.-S. Wang, Phys. Rev. Lett. 58, 86 (1987).
23. H.G. Evertz, Adv. Phys. 52, 1 (2003).
24. N. Kawashima and J. Gubernatis, J. Stat. Phys. 80, 169 (1995); K. Harada, M. Troyer and N.
Kawashima, J. Phys. Soc. Jpn. 67, 1130 (1998); S. Todo and K. Kato , Phys. Rev. Lett. 87, 047203
(2001).

25. N. Kawashima, J. Stat. Phys. 82, 131 (1996).
26. N. Kawashima, J. E. Gubernatis and H. G. Evertz, Phys. Rev. B 50, 136 (1994).
27. B. Ammon, H.G. Evertz, N. Kawashima, M. Troyer and B. Frischmuth, Phys. Rev. B 58, 4304 (1998).
28. U.-J. Wiese and H.-P. Ying, Z. Phys. B 93, 147 (1994).
29. J.-K. Kim, D.P. Landau and M. Troyer, Phys. Rev. Lett. 79, 1583 (1997).
30. J.-K. Kim and M. Troyer, Phys. Rev. Lett. 80, 2705 (1998).
31. B.B. Beard, R.J. Birgeneau, M. Greven and U.-J. Wiese, Phys. Rev. Lett. 80, 1742 (1998).
32. A.W. Sandvik and D.J. Scalapino, Phys. Rev. Lett. 72, 2777 (1994).
33. N. Katoh and M. Imada, J. Phys. Soc. Jpn. 63, 4529 (1994).
34. M. Troyer, M. Imada and K. Ueda, J. Phys. Soc. Jpn. 66, 2957 (1997).
35. P.V. Shevchenko, A.W. Sandvik and O.P. Sushkov Phys. Rev. B 61, 3475 (2000).
36. K. Harada and N. Kawashima, Phys. Rev. B 55, R11949 (1997).
37. M.S. Makivi´c, Phys. Rev. B 46, 3167 (1992).
38. G. Santoro, S. Sorella, L. Guidoni, A. Parola and E. Tosatti Phys. Rev. Lett. 83, 3065 (1999)
39. K. Harada, N. Kawashima and M. Troyer, Phys. Rev. Lett. 90, 117203 (2003).
40. H.G. Evertz and W. von der Linden, Phys. Rev. Lett. 86, 5164 (2001).
41. S. Chandrasekharan and U.-J. Wiese, Phys. Rev. Lett. 83, 3116 (1999).
42. J.J. Cullen and D.P. Landau, Phys. Rev. B 27, 297 (1983).
43. V. A. Kashurnikov, N. V. Prokof’ev and B. V. Svistunov Phys. Rev. A 66, 031601 (2002).
44. G.G. Batrouni, R.T. Scalettar, A.P. Kampf and G.T. Zimanyi, Phys. Rev. Lett. 74, 2527 (1995), R.T.

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

13

Scalettar, G.G. Batrouni, A.P. Kampf and G.T. Zimanyi, Phys. Rev. B 51, 8467 (1995); G.G. Batrouni
and R.T. Scalettar, Phys. Rev. Lett. 84, 1599 (2000).

45. F. Hebert, G.G. Batrouni, R.T. Scalettar, G. Schmid, M. Troyer and A. Dorneich, Phys. Rev. B 65,

014513 (2001).

65, 104519 (2002).

46. K. Bernardet, G.G. Batrouni, J.-L. Meunier, G. Schmid, M. Troyer and A. Dorneich, Phys. Rev. B

47. G. Schmid, S. Todo, M. Troyer and A. Dorneich, Phys. Rev. Lett. 88, 167208 (2002); G. Schmid and

M. Troyer, Report cond-mat/0304657.

48. V.A. Kashurnikov, N.V. Prokof’ev, B.V. Svistunov and M. Troyer, Phys. Rev. B 59, 1162 (1999).
49. B.A. Berg and T. Neuhaus, Phys. Lett. B. 267, 249 (1991); Phys. Rev. Lett. 68, 9 (1992).
50. F. Wang and D. P. Landau, Phys. Rev. Lett. 86, 2050 (2001); Phys. Rev. E 64, 056101 (2001).
51. http://www.abo.fi/~physcomp/
52. Codes will be available from http://alps.comp-phys.org/ by the end of 2003, before this

article will be published.

Non-local Updates for Quantum Monte Carlo Simulations

February 2, 2008

14

