6
0
0
2
 
v
o
N
 
4
2
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
3
4
2
1
1
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

An Eﬃcient Algorithm for Solving the Phase
Field Crystal Model

Mowei Cheng ∗ and James A. Warren
Metallurgy Division and Center for Theoretical and Computational Materials
Science, National Institute of Standards and Technology, 100 Bureau Drive, Stop
8554, Gaithersburg, Maryland 20899, USA

Abstract

We present and discuss how to develop an unconditionally stable algorithm for
solving the Phase Field Crystal (PFC) model. This algorithm allows for an arbitrar-
ily large algorithmic time step. In order to study the accuracy of the algorithm, we
determine an eﬀective time step in Fourier space, and use this quantity as the basis
of our analysis. Comparing our calculations with a set of representative numerical
results, we demonstrate that this algorithm is an eﬀective approach for the study
of the PFC models. As the PFC model is just a simple example of a wide class
of density function theories, we expect this method will have wide applicability to
modeling systems of considerable interest to the materials modeling communities.

Key words: Unconditionally stable, Phase Field Crystal model
PACS: 05.10.-a, 02.60.Cb, 64.75.+g, 81.15.Aa

1 Introduction

The dynamics of a non-equilibrium system often results in highly complicated
domain structures (microstructures). Typically, as time proceeds, the average
size of these structures grows as a direct consequence of free-energy reduction:
the interface is eliminated resulting in an increase in the size of homogeneous
regions. Traditional non-equilibrium dynamics usually deals with the equi-
librium states that are spatially uniform [1,2,3,4], i.e., the stable phases are
constant phases. Classic, albeit quite simple, examples of models governing

∗ Corresponding author. Tel: +1-301-975-5729; Fax: +1-301-975-5012.

Email address: mowei.cheng@nist.gov (Mowei Cheng).

Preprint submitted to Elsevier

4 October 2013

the evolution of such systems are the Cahn-Hilliard (CH) Equation for con-
served systems [5] and Allen-Cahn (AC) Equation for non-conserved systems
[6]. Examples are found in polymer mixtures [7], alloys [8,9], liquid-crystals
[10,11], and in cosmology [12].

A model that has generated considerable recent interest is Phase Field Crys-
tal (PFC) Equation [13,14], which is a conservative form of the familiar, non-
conserved, Swift-Hohenberg (SH) Equation [15]. These systems diﬀer from the
CH and AC systems in that the stable phase are periodic. In the case of PFC
model, which is a simple version of more elaborate density function theories
of liquid/crystal interfaces [16,17], the model therefore represents more re-
alistic physical properties of atomic systems such as the basic properties of
polycrystalline materials in non-equilibrium processing phenomena. For SH
models, the order parameter is viewed as capturing the inhomogeneities in a
ﬂuid associated with Rayleigh-B´enard convection.

The equations of motion governing these non-equilibrium phenomena are non-
linear partial diﬀerential equations that cannot generally be solved analytically
for random initial conditions. Therefore, computer simulations play an essen-
tial role in our understanding and characterization of non-equilibrium phe-
nomena. The standard Euler integration is known to be unstable for time step
∆t above a threshold ﬁxed by lattice spacing ∆x [18]. In CH and AC systems,
to maintain an interfacial proﬁle, the lattice spacing must be smaller than the
interfacial width ξ, and in PFC and SH systems, ∆x must smaller than the
periodicity selected by the system. Thus, the Euler update is ineﬃcient, and
in practice it is computationally costly to use to evolve large systems. Var-
ious computational algorithms [19,20,21] have been developed by increasing
∆t compared to the simplest Euler discretization. However, these methods
still require a ﬁxed time step, so they eventually become ineﬃcient. Recently,
unconditionally stable algorithms [22,23,24] were developed to overcome this
diﬃculty for CH and AC Equations. These algorithms are a class of stable
algorithms free of the ﬁxed time step constraint for equations with a mix of
implicit and explicit terms. While these algorithms allow for an increasing
time step in CH systems as time proceeds, only a ﬁnite eﬀective time step is
possible for AC systems. A recent study [25], based on this unconditionally
stable algorithm, demonstrated analytically that one can use an accelerated al-
gorithm ∆t = At2/3 to drive the CH Equation, and the accuracy in correlation
is controlled by √A.

In the next part of this manuscript (Section 2) we apply this unconditionally
stable algorithm to the PFC and SH Equations. Section 3 examines the ef-
fectiveness of this approach through some numerical studies of the algorithm,
demonstrating that the algorithm is eﬃcient and accurate for PFC Equation.
Finally, in Section 4 we provide some concluding remarks.

2

2 Unconditionally stable algorithms for PFC Equation

In this section, we apply the unconditionally stable time stepping algorithms
(∆t taken arbitrarily large without the solution becoming unstable) to the
PFC and SH Equations. Although the main purpose of this section is to study
unconditionally stable algorithms on PFC Equation, we include a parallel
discussion of the SH Equation, as the methodology yields unconditionally
stable algorithms on these two equations has only minor diﬀerences.

2.1 Unconditionally Stable Finite Diﬀerences

Both the PFC and SH Equations start from a free energy functional that
describes the conﬁgurational cost of periodic phases in contact with isotropic
phases, and can be expressed as

F [φ] =

dx

Z

1
2

φ

(

r + (1 +
h

∇

i

2)2

φ +

φ4
4 )

,

where the periodic order parameter φ(x, t) has the wave number k0 = 1 in
equilibrium, and r < 0 is a control parameter (scaled temperature diﬀerence
T

TM ) that characterizes the quench depth.

−

In the PFC model the order parameter is conserved, and thus the equation of
j, with current
motion is in the form of a continuity equation, ∂φ/∂t =
j =
(δF/δφ), where M is the mobility. Absorbing M into the time scale,
we obtain the dimensionless form of the PFC Equation

−∇ ·

M

∇

−

∂φ
∂t

=

2 δF
δφ

∇

=

2

∇

r + (1 +

2)2

φ + φ3

.

∇

nh

i
For the SH Equation, on the other hand, the order parameter is not conserved
by the dynamics, and the evolution of the ﬁeld is postulated to have the simple
dissipative form:

o

∂φ
∂t

=

δF
δφ

−

=

r + (1 +

−

h

2)2

φ

φ3.

∇

−

i

Eq. (3) describes that the rate of change of φ is proportional to the gradient
(with an an L2 inner product in functional space) of the free-energy functional.

In order to obtain an unconditionally stable algorithm, we now follow methods
previously developed for the CH and AC Equations [22,23,24], and work out in

(1)

(2)

(3)

3

some detail how to semi-implicitly parameterize the equation of motion both
for Eq. (2):

φt+∆t + ∆t
2

= φt + ∆t

2

(a1
h

−
∇
a1(r + 1)φt + 2a2

1)(r + 1)φt+∆t + 2(a2

2φt + a3

∇

∇

∇

h

1)
−
∇
4φt + φ3
t

,

i

2φt+∆t + (a3

4φt+∆t

1)

−

∇

i
(4)

and for Eq. (3):

φt+∆t −
∆t

= φt −

h

1)(r + 1)φt+∆t + 2(a2

∆t

(a1
h

−
a1(r + 1)φt + 2a2

2φt + a3

∇

∇

1)
∇
−
4φt + φ3
t

,

i

2φt+∆t + (a3

4φt+∆t

1)

−

∇

i
(5)

In order to ﬁnd the constraints for the parameters a1, a2 and a3 for uncondi-
tionally stable algorithms, we perform a standard von Neumann linear stability
analysis on Eq. (4) and Eq. (5). The procedures are quite similar and the re-
sults are identical for these two equations. Here we only show the details for
the PFC model.

Substituting φ = ¯φ + η in Eq. (4), where ¯φ is the uniform solution and η is a
small perturbation, we get

ηt+∆t + ∆t
2

= ηt + ∆t

2

(a1
h

−
∇
a1(r + 1)ηt + 2a2
h

∇
The Fourier transform the above equation gives

∇

∇

1)(r + 1)ηt+∆t + 2(a2

2ηt + a3

−

1)
4ηt + 3 ¯φ2ηt

∇

,

i

2ηt+∆t + (a3

4ηt+∆t

1)

−

∇

i
(6)

ηk,t+∆t

= ηk,t

h
−
Writing this as

1
h

1
−
∆tk2

∆tk2

(a1

{

−
a1(r + 1)

1)(r + 1)

2(a2

−

−

2a2k2 + a3k4 + 3 ¯φ2

1)k2 + (a3

1)k4

−

}

i

{

−

.

}

i

ηk,t+∆t [1 + ∆t

k] = ηk,t [1 + ∆t

k] .

L

R

, which
The von Neumann stability criterion requires that
forces the deviation from the constant phase to decrease in magnitude with
time in Fourier space. We obtain

ηk,t+∆t|

ηk,t|

<

|

|

1 + ∆t

>

1 + ∆t

k

L

|

|

|

Therefore we have

k

L

− R

.

|

k
R
k > 0 and

k +

k > 0. The ﬁrst condition yields

R

L

4

(7)

(8)

(9)

0 < k2[(r + 3 ¯φ2) + (1

k2)2],

−

(10)

and we obtain the restriction r +3 ¯φ2 < 0. This condition has physical meaning
in PFC model — it ensures that the isotropic phase ¯φ is metastable while the
3 ¯φ2 indicates
periodic (crystalline) phase [14] is stable. In other words, r <
an undercooled liquid. The second inequality yields

−

0 <

k2[(r + 1)(2a1

1) + 3 ¯φ2

2(2a2

1)k2 + (2a3

1)k4],

(11)

−

−

−

−

−

and a suﬃcient condition is

a1 <

1
2 −

3 ¯φ2
2(r + 1)

,

a2

≥

1
2

,

a3

≤

1
2

.

(12)

These are the constraints on the parameters a1, a2 and a3 for unconditionally
stable algorithms for all modes. With these choices there is no threshold for
∆t in order to maintain stability. We term ∆t as the algorithmic time step.
Unconditional stability does not mean that the user of such algorithms may
simply take as large a time step as is desired. Indeed, to obtain accurate
physical results, there are additional restrictions on how large ∆t may be.

2.2 Eﬀective time step

To determine how large a time step we may take, and still maintain an ac-
curate solution, we calculate the Fourier space “eﬀective time step”, as will
be described below. We ﬁrst note that when a1 = a2 = a3 = 1, Eq. (4)
corresponds to the traditional Euler update

φ′
t+∆t −
∆tEu

φt

=

2

∇

r + (1 +

2)2

φt + φ3
t

,

∇

i

o

nh

where φ′
t+∆t denotes the ﬁeld obtained after an Euler update on a previous
ﬁeld φt, while we use the unprimed φt+∆t to denote the ﬁeld obtained by
unconditionally stable algorithm on φt throughout.

We now deﬁne the spatial Fourier transform of φk,t =
Fourier space, writing k2
k
|

2, the Euler update becomes
R

≡ |

dx e−ik·x φt(x). In

(13)

(14)

φ′
k,t+∆t −
∆tEu

φk,t

=

k2

−

where (φ3)k,t =

nh
dx e−ik·x φ3

t (x).

R

r + (1

k2)2

φk,t + (φ3)k,t

,

−

i

o

5

In Fourier space, the unconditionally stable algorithms Eq. (4) can be written
in a form that is analogous to Eq. (14):

(15)

(16)

(18)

) =

φk,t+∆t −
∆tP F C

φk,t
ef f (k, ∆t)

=

k2

−

r + (1

k2)2

φk,t + (φ3)k,t

,

nh

−

i

o

where we deﬁne k-dependent eﬀective time step by

∆tP F C

ef f (k, ∆t)

−
For SH Equation, the eﬀective time step is

≡

1 + ∆tk2[(r + 1)(1

a1) + 2k2(a2

1) + k4(1

a3)]

−

−

∆t

∆tSH

ef f (k, ∆t)

≡

1 + ∆t[(r + 1)(1

∆t
a1) + 2k2(a2

1) + k4(1

a3)]

.

(17)

−
∆tef f (k, ∆t) is an eﬀective time step for a mode k, corresponding to an al-
gorithmic time step ∆t. Of particular interest in the case of periodic systems
is the dominant mode (the lattice spacing in the PFC model), which, for the
scaling choices made in Eq. (2) and Eq. (3) is simply k0 = 1. With parameters
0.025, a1 = 0.45, a2 = 0.5,
we employ in the simulation (see next section) r =
a3 = 0.5, we obtain the dominant eﬀective time step for both equations

−

−

−

∆tef f (k0, ∆t) =

∆t
1 + 29∆t/800

.

≈

As ∆t =
, we obtain the maximum dominant eﬀective time step ∆tef f (k0,
∞
∞
27.6. We see that a large algorithmic time step ∆t does not always
800/29
translate into a signiﬁcant amount of system evolution, as the eﬀective time
step remains less than 30 for these parameter choices as the algorithmic time
step diverges. Thus, this value provides us with an upper bound on our ex-
ploration of just how large a algorithmic time step to take, and still obtain
accurate results. For example, if we take algorithmic time steps that yields
an eﬀective time step ∆tef f (k0, ∆t) = ∆tef f (k0,
)/2 = 400/29, then we ﬁnd
∆t = 800/29. In next section, we will show that, when applied to the PFC
Equation, this algorithm realizes a signiﬁcant speedup compared to the tradi-
tional Euler algorithm, while maintaining a controlled level of accuracy.

∞

3 Numerical results

The simulations were performed in two-dimensions. Fig. 1 shows typical snap-
shots of simulations for PFC model with parameters ¯φ = 0.07, ∆x = 1.0, and

6

Fig. 1. Snapshots of simulations of the PFC model. Time increases from left to right.
The ﬁrst row shows the ﬁeld obtained using the Euler algorithm with ∆tEu = 0, 015.
The second to bottom rows show the ﬁelds obtained employing the unconditionally
stable algorithms, with using algorithmic time step ∆t = 3, ∆t = 10, and ∆t = 30.

−

Lsys = 128 with random initial conditions which corresponds to the liquid
state. For comparison, all the simulations start with the same initial con-
dition. The color white represents φ = ¯φ, red represents φ = ¯φ + 0.2 and
blue represents φ = ¯φ
0.2. The top row are obtained with Euler algo-
rithm ∆tEu = 0.015 at time step n = 30000, n = 60000, n = 90000, and
n = 160000. All the following rows are obtained by unconditionally stable
algorithm ∆t = 3, ∆t = 10, and ∆t = 30 from the second to bottom row,
respectively. For illustration and comparison purposes, we show the system
snapshots at the same energy density as the top row — from left, the en-
ergy density E = 0.002374, E = 0.002360, E = 0.002357, and E = 0.002350
from the ﬁrst to fourth column, respectively. We immediately see that, for the
times and energies selected, there are no visible diﬀerences between the Eu-
ler update simulation and the unconditionally stable algorithm with ∆t = 3.

7

r
o
r
r

E

1

0.1

0.01

0.001

0.1

1

10

100 1000 10000

∆t

Fig. 2. A measure of the error
time step ∆t.

(φeu −
h
p

φun)2

(φeu −
/
h
i

¯φ)2

i

versus the algorithmic

However, there are visible diﬀerences between the Euler update and the sim-
ulations with ∆t > 3. We now wish to make these qualitative observations
more quantitative.

i

i

h

/

¯φ)2

φun)2

(φeu −

(φeu −

To study the accuracy, we compare simulations at the same energy density
E = 0.002374 (the ﬁrst column in Fig. 1). We compute a measure of the error:
, where φeu(x) denotes the ﬁelds obtained using
h
Euler algorithm and φun(x) denotes the ﬁelds obtained using the uncondi-
q
tionally stable algorithm. Fig. 2 shows a plot of the error versus a range of
algorithmic time steps ∆t. The snapshots in Fig. 1 and Fig. 2 indicate that,
unsurprisingly, the accuracy decreases as we decrease the algorithmic time
step ∆t. When ∆t
3, the error is below 5%. On the other hand, the er-
ror behavior in Fig. 2 for large algorithmic time step ∆t tends to saturate,
mirroring the saturation in the eﬀective time step ∆tP F C
for dominant mode
ef f
k0 = 1.

≤

Eu/nun, where ttot

Fig. 3 shows a comparison between the dominant eﬀective time step ∆tef f (k0, ∆t)
in Eq. (18) and a numerical estimate of the same quantity. The numerical es-
timate is obtained by calculating ttot
Eu is the total time needed
to reach the ﬁnal state (a crystalline state without dislocations) using Euler
algorithm and nun is the number of computer steps needed to reach the same
state using unconditionally stable algorithms. We ﬁnd good agreement for
∆t
3, while for ∆t > 3, the separation between the analytic and numerical
expressions increases. While the agreement at small times steps in unsurpris-
ing, the curve provides a useful metric for the optimum algorithmic time step,
for these parameters, of ∆t
3. For this choice, the ratio of the number of
time steps needed achieve a particular energy using the unconditionally stable

≈

≤

8

)
t
∆

,
0
k
(
f
f

e
t

∆

10

1

0.1

0.1

1

10

100 1000 10000

∆t

Fig. 3. A comparison between the theoretical dominant eﬀective time step (solid
line) and the numerical estimate of the same quantity (circle).

versus Euler algorithm is approximately 180 (the ratio of the dominant mode
eﬀective time step to the Euler time step). This is a substantial speedup, and
requires minimal analysis to implement the technique.

4 Conclusions

In this paper, we have presented an unconditionally stable algorithm for imple-
mentation of ﬁnite diﬀerence solution to the PFC Equation, and demonstrate
that a ﬁxed algorithmic time step driving scheme provides signiﬁcant speedup
compared with Euler algorithm with controlled accuracy. For the represen-
tative parameters chosen, a speedup of a factor of 180 was obtained. The
analytical results and the numerical results are consistent with an eﬀective
time step analysis. Although this algorithm allows arbitrarily large algorith-
mic time steps, one should be cautious that too large a algorithmic time step
will make the system evolution inaccurate. Additionally, we demonstrated that
the systems energy (and the corresponding microstructures) evolution is gov-
erned by the eﬀective time step, which saturates as the algorithmic time step
increases, suggesting that there is little advantage in too large an algorithmic
time step. A method for obtaining a reasonable value for the algorithmic time
step ∆t is suggested, in which a few test cases are run with diﬀerent values
of ∆t to see which one oﬀers a good speedup and maintains the desired ac-
curacy. The analytic form of the eﬀective time step provides a useful guide
for deciding how large a time step to select when trading oﬀ the obtainable
speedup versus the loss of accuracy.

9

The unconditionally stable algorithms discussed herein can be readily applied
to other systems. Its application to SH Equation is straightforward due to the
similarity with the PFC model. There are many other systems, such as diblock
copolymers, where there is a dominant mode at late scaling regime. We expect
the methodology developed in this paper could ﬁnd extensive application in
non-equilibrium systems.

References

[1] J. S. Langer, in Solids far from Equilibrium, edited by C. Godr`eche (Cambridge

University Press, 1992), pp. 297.

[2] A. J. Bray, Theory of phase-ordering kinetics, Adv. Phys. 43, 357 (1994).

[3] J. D. Gunton, M. San Miguel and P. S. Sahni, in Phase Transitions and Critical
Phenomena, Vol. 8, edited by C. Domb and J. L. Lebowitz (New York Academic
Press, 1983) pp. 267.

[4] H. Furukawa, Dynamic scaling assumption for phase separation, Adv. Phys.,

34, 703 (1985).

[5] J. W. Cahn and J. E. Hilliard, Free energy of a nonuniform system. I. Interface

free energy, J. Chem. Phys. 28, 258 (1958).

[6] S. M. Allen and J. W. Cahn, A microscopic theory for antiphase boundary
motion and its application to antiphase domain coarsening, Acta Metall. 27,
1085 (1979).

[7] P. Wiltzius and A. Cumming, Domain growth and wetting in polymer mixtures,

Phys. Rev. Lett. 66, 3000 (1991).

[8] R. F. Shannon, S. E. Nagler, C. R. Harkless and R. M. Nicklow, Time-resolved
x-ray-scattering study of ordering kinetics in bulk single-crystal Cu3Au, Phys.
Rev. B 46, 40 (1992).

[9] B. D. Gaulin, S. Spooner and Y. Morii, Kinetics of phase separation in

Mn0.67Cu0.33, Phys. Rev. Lett. 59, 668 (1987).

[10] N. Mason, A. N. Pargellis and B. Yurke, Scaling behavior of two-time
correlations in a twisted nematic liquid crystal, Phys. Rev. Lett. 70, 190 (1993).

[11] I. Chuang, N. Turok and B. Yurke, Late-time coarsening dynamics in a nematic

liquid crystal, Phys. Rev. Lett. 66, 2472 (1991).

[12] P. Laguna and W. H. Zurek, Density of Kinks after a Quench: When Symmetry

Breaks, How Big are the Pieces?, Phys. Rev. Lett. 78, 2519 (1997).

[13] K. R. Elder, M. Katakowski, M. Haataja, and M. Grant, Modeling Elasticity

in Crystal Growth, Phys. Rev. Lett. 88, 245701 (2002).

10

[14] K. R. Elder and M. Grant, Modeling elastic and plastic deformations in
nonequilibrium processing using phase ﬁeld crystals, Phys. Rev. E 70, 051605
(2004).

[15] J. Swift and P. C. Hohenberg, Hydrodynamic ﬂuctuations at the convective

instability, Phys. Rev. A 15, 319 (1977).

[16] W. H. Shih, Z. Q. Wang, X. C. Zeng, and D. Stroud, Ginzburg-Landau theory
for the solid-liquid interface of bcc elements, Phys. Rev. A 35, 2611 (1987).

[17] K.-A. Wu, A. Karma, J. J. Hoyt, and M. Asta, Ginzburg-Landau theory of
crystalline anisotropy for bcc-liquid interfaces, Phys. Rev. B 73, 094101 (2006).

[18] T. M. Rogers, K. R. Elder and R. C. Desai, Numerical study of the late stages

of spinodal decomposition, Phys. Rev. B 37, 9638 (1988).

[19] Y. Oono and S. Puri, Study of phase-separation dynamics by use of cell

dynamical systems. I. Modeling, Phys. Rev. A 38, 434 (1998).

[20] L. Q. Chen and J. Shen, Applications of semi-implicit Fourier-spectral method

to phase ﬁeld equations, Comput. Phys. Commun. 108, 147 (1998).

[21] J. Zhu, L. Q. Chen, J. Shen and V. Tikare, Coarsening kinetics from a variable-
mobility Cahn-Hilliard equation: Application of a semi-implicit Fourier spectral
method, Phys. Rev. E 60, 3564 (1999).

[22] D. J. Eyre, in Computational and Mathematical Models of Microstructural
Evolution, edited by J. W. Bullard et al. (The Material Research Society,
Warrendale, PA, 1998), pp. 39-46.

[23] B. P. Vollmayr-Lee and A. D. Rutenberg, Fast and accurate coarsening
simulation with an unconditionally stable time step, Phys. Rev. E 68, 66703
(2003).

[24] M. Cheng and A. D. Rutenberg, Maximally fast coarsening algorithms, Phys.

Rev. E 72, 055701(R) (2005).

[25] M. Cheng and J. A. Warren, Controlling the accuracy of unconditionally stable

algorithms in Cahn-Hilliard Equation, cond-mat/0609354.

11

