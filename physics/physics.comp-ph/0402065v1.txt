4
0
0
2
 
b
e
F
 
3
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
5
6
0
2
0
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Eﬃcient use of non-equilibrium measurement to estimate free energy diﬀerences for
molecular systems

F. Marty Ytreberg and Daniel M. Zuckerman
Center for Computational Biology and Bioinformatics,
University of Pittsburgh, 200 Lothrop St., Pittsburgh, PA 15261
(Dated: October 30, 2013)

A promising method for calculating free energy diﬀerences ∆F is to generate non-equilibrium
data via “fast-growth” simulations or experiments – and then use Jarzynski’s equality. However, a
diﬃculty with using Jarzynski’s equality is that ∆F estimates converge very slowly and unreliably
due to the nonlinear nature of the calculation – thus requiring large, costly data sets. Here, we
present new analyses of non-equilibrium data from various simulated molecular systems exploiting
statistical properties of Jarzynski’s equality. Using a fully automated procedure, with no user-input
parameters, our results suggest that good estimates of ∆F can be obtained using 6-15 fold less
data than was previously possible. Systematizing and extending previous work [1], the new results
exploit the systematic behavior of bias due to ﬁnite sample size. A key innovation is better use of
the more statistically reliable information available from the raw data.

I.

INTRODUCTION

The calculation of free energy diﬀerences, ∆F plays an essential role in many ﬁelds of physics, chemistry and biology
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]. Examples include determination of the solubility of small
molecules, and binding aﬃnities of ligands to proteins. Rapid and reliable estimates of ∆F would be particularly
valuable to structure-based drug design, where current approaches to virtual screening of candidate compounds rely
primarily on ad-hoc methods [18, 19]. Free energy estimates are also critical for protein engineering [20, 21].

The focus of this report is non-equilibrium “fast-growth” free energy calculations [1]. These methods hold promise
– yet to be fully realized – for very rapid estimation of ∆F . The central idea behind the non-equilibrium methods
is to calculate the irreversible work during a very rapid (thus non-equilibrium) switch between the two systems or
states of interest. Multiple switches are done, and the resulting set of work values can be used to estimate ∆F using
Jarzynski’s equality (detailed in Sec. II) [22].

Somewhat surprisingly, non-equilibrium ∆F calculations are critical for analyzing single-molecule pulling experi-
ments [7, 15]. In essence, these experiments generate non-equilibrium work values, as pointed out by Hummer and
Szabo, so the only way to estimate the free energy proﬁle is to use Jarzynski’s equality [7, 23]. The methods that we
develop in this report should be equally useful for analyzing such experiments.

It has been accepted for some time that there are three sources of error [24] for non-equilibrium ∆F calculation:
(i) inaccuracy of the force ﬁeld [25], (ii) inadequate sampling of the conﬁgurational space [26, 27, 28, 29, 30], and
(iii) bias due to ﬁnite sample size [1, 31, 32, 33, 34, 35]. Error in free energy calculations have been of long-standing
interest, e.g. Refs. [36, 37, 38, 39, 40]

The present study addresses only source (iii), and attempts to determine the most eﬃcient use of fast-growth work
values. In other words, given a (ﬁnite) set of work values generated by simulation or experiment, what is the best
estimate for ∆F ? We do not here attempt to prescribe the best method for generating non-equilibrium work values.
We proceed by ﬁrst introducing two new block averaging techniques, based on the original proposal by Wood et
al. [41]. Block averaging provides well-behaved, but biased, ∆F estimates. We then discuss two distinct schemes for
extrapolating to the “inﬁnite data limit”. Our work systematizes and extends previous work by Zuckerman and Woolf
[1], who originally proposed the use of block averages for extrapolation.

Methods to lessen the eﬀect of bias due to ﬁnite sample size have been proposed for the case when switching
between systems is performed in both directions [42, 43, 44], and for the simpliﬁed case in which the non-equilibrium
work values follow a quasi-Gaussian distribution [16, 45]. Hummer also considered errors in non-equilibrium ∆F
calculations [46]. To our knowledge, however, other workers have not addresses uni-directional switching in highly
non-Gaussian systems.

The techniques outlined in the following sections oﬀer rapid estimates for ∆F for the systems we studied – namely,
the chemical potential for a Lennard-Jones ﬂuid, “growing” a chloride ion in water, methanol → ethane in water,
and palmitic → stearic acid in water. Work values for these systems follow highly non-Guassian distributions. We
compare our extrapolated results to ∆F obtained by using Jarzynski’s equality, ﬁnding a 6-15 fold decrease in the
the number of work values needed to estimate ∆F for the test systems considered here.

II.

FAST-GROWTH

Fast-growth techniques have been described in detail elsewhere [1, 22, 46], so we will simply outline the method.
Consider two systems deﬁned by potential energy functions U0 and U1. To calculate the free energy diﬀerence ∆F
between these two systems, one must simply “switch” the system from U0 to U1. This is readily accomplished by
deﬁning a switching parameter λ such that

U1(x) − U0(x)
Uλ(x) = U0(x) + λ
i
h
where x is a set of conﬁgurational coordinates, and Uλ(x) describes the “hybrid” potential energy function for all
values of λ from 0 to 1. We note that nonlinear scaling with λ is also possible [5, 6, 13, 14, 47] resulting in hybrid
potentials diﬀering from Eq. (1). Our approach here also applies, in principle, to other such choices. Essentially,
the idea behind fast-growth methods is to perform rapid switches from λ = 0 → 1, where each switch is generated
starting from coordinates drawn from the equilibrium ensemble for λ = 0. During each switch, the irreversible work
is accumulated, generating a single work value. Multiple switches are done to generate a distribution of these work
values ρ(W ).

(1)

,

It has been appreciated for some time that the average work obtained over many such switches provides a rigorous

upper bound for the free energy diﬀerence,

...

where the
0 represents an average over many switches starting from the equilibrium ensemble for λ = 0 and ending
at λ = 1. Equality occurs only in the limit of inﬁnitely slow switches. Further, if the distribution of work values
(cid:11)
ρ(W ) is Gaussian (this occurs if the system remains in equilibrium during the switch, but also may occur in certain
far from equilibrium situations), then the high temperature expansion of Zwanzig [48] gives

(cid:10)

where σW is the standard deviation of ρ(W ), and β = 1/kBT where T is the temperature of the system and kB is
the Boltzmann constant.

However, for the fast-growth work values under consideration here, the distribution of work values can be very
broad and non-Gaussian. Thus Eqs. (2) and (3) will not provide reasonable estimates of ∆F ; see Fig. 1. It is possible
to use higher order moments to estimate ∆F (see for example Refs. [16, 45, 48, 49]). These estimators are most useful
in the near-equilibrium regime.

A. Simple Estimators

∆F ≤

W

0,
(cid:11)

(cid:10)

∆F =

W

−

0

1
2

βσ2

W ,

(cid:10)

(cid:11)

B. Jarzynski Equality

e−β∆F =

e−βW

,

0

Due to recent work by Jarzynski [22, 50, 51], it is possible to estimate ∆F using these fast-growth W values via

D
This remarkable relationship is valid for arbitrary switching speed, implying that one can perform switches as rapidly
as desired and still obtain valid estimates of ∆F . The Jarzynski equality thus provides an estimate for ∆F for a set
of N work values given by

E

∆FJarz = −

ln

1
β

1
N

"

N

i=1
X

e−βWi

,

#

The ∆F estimates given by Eq. (5), however, are very sensitive to the distribution of work values ρ(W ) [1, 31, 32].
If the width of the work distribution large, i.e. σW ≫ kBT (this implies a very rapid switch and/or a complex system),
then often thousands, or even tens of thousands of work values are needed to reliably estimate ∆F . An example of
this can be seen in Fig. 1 where a histogram of work values is shown for PAL2STE (described in Sec. IV). The value

2

(2)

(3)

(4)

(5)

3

(6)

<W>-1/2βσ2

W

∆F

<W>

0.07

0.06

0.05

0.04

0.03

0.02

0.01

)

W
(
ρ

 
,
s
e
u
l
a
V
 
k
r
o
W

 
f
o
 
n
o
i
t
u
b
i
r
t
s
i
D

0
-20

-10

0

10

20

30

40

50

60

70

Work Value, W (kcal/mol)

FIG. 1: Distribution of work values for PAL2STE test system (palmitic → stearic acid mutation in water, described in Sec.
IV). Also included in this plot are the estimators given by Eqs. (2) and (3) shown by the blue dot-dash and green dashed
line respectively. The solid black line shows the ∆F estimate obtained by using Jarzynski’s equality in Eq. (5) for all available
data.

of ∆FJarz given by the Jarzynski equality, as well as estimators
W , are shown on this plot.
This graphically demonstrates why Eqs. (2) and (3) are often poor estimates of the free energy for fast-growth work
values.

0 and
(cid:11)

W

W

(cid:10)

(cid:11)

(cid:10)

0

− 1

2 βσ2

If the switch is performed instantaneously, then Eq. (5) becomes

e−β∆F =

e

−β

U1(x)−U0(x)

(cid:28)

(cid:2)

,

(cid:3)(cid:29)0

often called single-stage free energy perturbation [48, 52]. In this limit, the system is not allowed to relax at any
intermediate values of λ. Instead U1(x) is simply evaluated at values of x drawn from the equilibrium ensemble for
λ = 0. The advantage of this method is that data can be generated very quickly. However, in practice, unless there is
suﬃcient overlap between the states described by U0 and U1, the estimate of ∆F will be biased, often by many kBT
[53, 54]. The problem of attaining overlap of states can be improved by drawing from the equilibrium ensemble for
an unphysical “soft-core” state (such as for λ = 0.5) [28, 47].

Recent work by Hendrix and Jarzynski [50] showed that essentially the only determining factor in the accurate
calculation of ∆F was physical CPU time spent during the calculation. So, doing many rapid switches has no
advantage over doing fewer slower switches. This conclusion is based upon using Eq. (5) for all ∆F estimates.

This manuscript describes methods that exploit statistical properties of Jarzynski’s equality, allowing us to do use

work values from very rapid switches and obtain ∆F estimates with 6-15 fold less work values than using Eq. (5).

III. OTHER METHODS

To calculate reliable ∆F estimates using less work values, one can generate a narrower ρ(W ), i.e. perform the
switching process more slowly. However, slower switching speed means that more computational time will be spent
to generate each work value – oﬀsetting some of the advantage gained by doing rapid switches.

If the switch is performed so slowly that the system remains near equilibrium during the switch, then the width of
the distribution will be very small (σW < kBT ), and thus only a few work values are required for accurate estimation
of ∆F [34, 55]. This slow-growth method is, in principle, equivalent to thermodynamic integration [56] where ∆F is

4

(7)

calculated by allowing the system to reach equilibrium for each value of λ. Then ∆F is found using

∆F =

1

dλ

∂Uλ(x)

*

∂λ +λ

.

0
Z

Thermodynamic integration and slow-growth can provide very accurate ∆F calculations, but are also computationally
expensive [6, 14, 29, 57].

As previously mentioned, the equilibrium ensemble, when using the Eq. (5), is generated for λ = 0. Then ρ(W ) is
generated by doing switches from λ = 0 → 1 (forward switches) with conﬁgurations drawn from the λ = 0 ensemble. It
is also possible to generate another equilibrium ensemble for λ = 1 and then perform reverse switches from λ = 1 → 0.
It has been shown that, if one combines the use of the forward and reverse work values, convergence is much more
rapid then doing just forward switches [42, 43, 44, 58]. It has been recently demonstrated that most eﬃcient use of
forward and reverse work values is for Bennett’s method [3, 42, 43].

There is, however, a distinct advantage to using Jarzynski’s estimates with only forward switches, when one considers
the eventual goal of predicting relative binding aﬃnities for application in drug design. In this situation, if using
Jarzynski estimates, one need only generate a single high-quality equilibrium ensemble for a particular ligand-receptor
or reference complex. Then one can determine relative binding aﬃnities for other ligands without generating another
equilibrium ensemble – a signiﬁcant decrease in computational expense.

IV. TEST SYSTEMS

To show the generality of the methods proposed in this study we consider four test systems with varying molecular
complexity: a chemical potential calculation for a Lennard-Jones ﬂuid, “growing” a chloride ion in water, methanol
→ ethane in water, and stearic → palmitic acid in water.

The last two systems are alchemical mutations of fully solvated molecules (see Refs. [1, 59] for simulation details),
and the ﬁrst system is a chemical potential calculation done by the particle insertion method (see Ref. [50] for details).
All three of these data sets were generated previous to this study [60].

The growing chloride system was studied using TINKER version 4.1 [61], with the simulation conditions chosen to
closely match those of Lybrand et al. in Ref. [57]. Stochastic dynamics simulations were carried out in the canonical
ensemble (constant N, V, T ) in a cubic box of edge length 18.6216 ˚A. The temperature was held at 300 K by a Berendsen
thermostat with a time constant of 0.1 [62]. The chloride ion was modeled with Lennard-Jones parameters σ = 4.4463
˚A and ǫ = 0.1070 kcal/mol, and was solvated by 214 SPC water molecules. Ewald summation approximated charge
interactions and RATTLE was used to hold the water molecules rigid [63]. For this test system, the Lennard-Jones
“size” was increased by 1.0 ˚A, from σ = 4.4463 ˚A at λ = 0 to σ = 5.4463 ˚A at λ = 1.

To obtain fast-growth work values, a time step of 1.0 fs was used. The system was equilibrated for at least 10 ps,

after which starting conﬁgurations for each fast-growth trajectory were generated every 100 time steps.

Below we list the notation used to refer to each data set. Also included are statistical features of the data sets –
) and the standard deviation (σW ). These data sets are
W
− ∆F > 10kBT ; see

the total number of work values (Ntot), the mean work (
all considered diﬃcult to use for ∆F calculations owing to the facts that σW ≫ kBT and
Eqs. (2) and (3) and Fig. 1.

W

(cid:11)

(cid:10)

LJ – Chemical potential calculation for a Lennard-Jones ﬂuid in 1 λ-step [50]. This corresponds to instantaneous
switching or free energy perturbation, as described in sec. II. Ntot = 100, 000,
= 305.1 kBT and σW = 83.5
kBT . Using all work values, Eq. (5) gives a best estimate ∆Fbest = 0.7 kBT .

W

GROWCL – Grow chloride by 1.0 ˚A in 10 λ-steps with 1 relaxation step at each value of λ. Ntot = 40, 000,
= 40.1 kcal/mol and σW = 8.6 kcal/mol. Using all work values, Eq. (5) gives ∆Fbest = 18.4 kcal/mol.
W

(cid:10)

(cid:11)

(cid:10)

(cid:11)

(cid:11)

(cid:10)
METH2ETH – Methanol to ethane mutation data using 200 λ-steps with 1 dynamic relaxation step at each
value of λ [1]. Ntot = 9, 600,
= 37.0 kcal/mol and σW = 12.3 kcal/mol. Using all work values, Eq. (5)
gives ∆Fbest = 7.4 kcal/mol.

W

PAL2STE – Palmitic to Stearic acid mutation data using 55 λ-steps with 10 relaxation steps at each value of
λ [59]. Ntot = 20, 000,
= 28.6 kcal/mol and σW = 7.5 kcal/mol. Using all work values, Eq. (5) gives
∆Fbest = 15.2 kcal/mol.

W

(cid:10)

(cid:11)

(cid:10)

(cid:11)

Since the goal is to determine the best analysis for a given set of work values, we assume that the true ∆F is given
by Eq. (5) using all available work values (i.e. ∆Fbest above). Determining whether the distribution of work values
ρ(W ) used in this paper are complete and representative is beyond the scope of this report.

Block Averaged ∆Fn

Running Jarzynski Estimate ∆FJarz

350

300

250

150

100

50

B

200

)
T

k
(
 
s
e
t
a
m

i
t
s
E
F
∆

 

0

1

10

100
Number of Work Values

1000

10000

FIG. 2: The running Jarzynski estimate, given by Eq. (5), as a function of the number of work values used in the estimate,
N is shown as a solid blue line. The dashed red line shows the sub-sampled block averaged free energy estimate given by Eq.
(9), plotted as a function of the number of work values in each block, n. Data used for these estimate were obtained from the
LJ test system (chemical potential for a Lennard-Jones ﬂuid). The Jarzynski estimate displays erratic convergence behavior,
while the block averaged free energy estimate displays a smooth monotonically decreasing estimate

V. BLOCK AVERAGING

The motivation for using block averages can be seen in Fig. 2 (see also Refs. [2, 41]). The solid blue line is a running
estimate for ∆F obtained by using Eq. (5) and the dashed red line is obtained by block averaging. Both curves are
obtained using the LJ test system. The running Jarzynski estimate exhibits very poor convergence behavior, making
it very diﬃcult to establish when a reliable estimate of ∆F has been obtained. The block averaged free energy,
however, displays a smooth monotonically decreasing ∆F estimate, which approaches the true ∆F .

Each block averaged free energy (∆Fn) data point was obtained from a set of N work values (W1, W2, ..., WN ) using

1. Draw n work values at random from the set, generating a subset (W1, W2, ..., Wn). This is now the jth block of

the following scheme [41]:

work values.

2. Use Jarzynski’s equality, Eq. (5) to obtain a free energy estimate Fj for this block

3. Repeat steps 1 and 2 until you have m blocks, each containing n values. Now the average (∆Fn) and standard

deviation (σn) can be calculated using

Fj = −

ln

1
β

e−βWi

.

!

 

i∈ block j
X

∆Fn =

Fj =

1
m

m

j=1
X

m

1
m

j=1"
X

−

ln

1
β

 

i∈j
X

e−βWi

,
!#

σ2
n =

(Fj − ∆Fn)2.

n
N

m

j=1
X

5

(8)

(9)

(10)

6

This process is carried out for every possible value of n (i.e. n = 1, 2, 3, ..., N ).

In previous work [1, 41], m = N/n was chosen, i.e. m is the number of blocks of size n from a data set of size N .
The weakness of this choice is that a reshuﬄing of the data set gives a new (generally diﬀerent) set of ∆Fn values.
To avoid this weakness we choose m large enough that the resulting ∆Fn values do not depend upon the value of m.
This is typically accomplished with m ∼ 100 × N/m.

Since there are two distinct ways of randomly drawing from a data set (i.e. implementing the ﬁrst step above), we
introduce two new block averaging schemes. The ﬁrst is to draw work values from (W1, W2, ..., WN ) at random with
replacement – i.e. it is possible to draw a particular work value more than once. We call this a bootstrapped ∆Fn
[64]. The second is to draw from (W1, W2, ..., WN ) at random without replacement. We call this a sub-sampled ∆Fn
[65].

The diﬀerence between the bootstrapped and sub-sampled methods can be illustrated by considering a data set
of N work values where N − 1 values are large and one value is very small. Due to the highly nonlinear nature of
the Jarzynski equality, the single small work value will dominate Eq. (9). Suppose one calculates ∆Fn for n = N
using both of these methods. The sub-sampled method will only have one ∆FN estimate since reshuﬄing the work
values has no eﬀect when n = N . However, the bootstrapped method calculates a ∆FN value that is larger than the
sub-sampled ∆FN due to the fact that it will draw the small work value only a fraction of the time. A generalization
of this argument shows that the bootstrapped ∆Fn will exceed the sub-sampled ∆Fn for every value of n.

VI. EXTRAPOLATION METHODS

Now that a smooth function has been obtained in the block averaged free energy ∆Fn, shown in Fig. 2, extrapolation
to the inﬁnite data limit becomes feasible, as originally suggested by Zuckerman and Woolf [1]. The basic idea is
to plot ∆Fn as a function of some variable and then extrapolate to the inﬁnite data limit (n → ∞). It is useful to
plot ∆Fn as a function of χ = 1/nτ as shown in Fig. 3 [1]. The plot was generated by choosing 100 work values
at random from the PAL2STE data set. ∆Fn was then computed for this subset of 100 work values following the
steps outlined in Sec. V. In this plot the bootstrapped ∆Fn is shown, and the best estimate ∆Fbest is included as the
solid black line. A value of τ = 0.22 was chosen to minimize the slope of ∆Fn(χ) as discussed below. The errorbars
show the statistical uncertainty of the ∆Fn given by the standard error associated with σn in Eq. (10). The smallest
uncertainty occurs for χ = n = 1 due to the fact that ∆Fn(χ = 1) is simply the average work.

It is useful to plot ∆Fn as a function of χ = 1/nτ as in Fig. 3 (rather than n) because the inﬁnite data limit
(n → ∞) now corresponds to χ = 0. In addition, this simple form gives a bounded interval (χ = (0, 1]), rather than
an inﬁnite one (such as ∆Fn as a function of n). This form allows us to develop two simple extrapolation schemes as
explained in the following sections.

A. Linear Extrapolation

It is known that the block averaged free energy ∆Fn in Eq. (9) guarantees monotonic behavior [1, 2, 24]. Thus, one
can hope to obtain a reasonable estimate of ∆F by simply continuing the curve in Fig. 3 with a straight line. Such a
linear extrapolation guarantees that our extrapolated results will not exceed ∆Fn for n = N – neccessary since ∆Fn
is a rigorous upper bound for the true ∆F [24].

We test this extrapolation method using the test systems described in IV. This fully automated process contains
the following steps: (i) Draw a subset containing N work values (W1, W2, ..., WN ) at random from the data set. (ii)
Plot the bootstrapped ∆Fn as a function of χ = 1/nτ ; vary τ , then choose the value of τ that minimizes the slope of
the tail (i.e. small χ) of ∆Fn. (If one has enough data to get the correct ∆F then, for the right value of τ , the slope
will be nearly zero.) (iii) Extrapolate ∆Fn to χ = 0 using a straight line. The intercept (χ = 0) is our extrapolated
free energy ∆Flin. (iv) Using these same N work values, estimate the free energy ∆FJarz with Eq. (5). This process
is repeated 500 times to obtain the average and standard deviation of our ∆Flin and ∆FJarz.

A simple extension of the linear method shown here, is to ﬁt ∆Fn to a nonlinear function, such as quadratic in χ, as
in previous work by Zuckerman and Woolf [1]. These nonlinear extrapolation methods oﬀer little, if any, improvement
in the average ∆F extrapolations. And, due to the inherent instability of high order ﬁts, the standard deviations for
the extrapolated results are much larger than those obtained for linear extrapolation.

Block Averaged Estimates from 100 Work Values, ∆Fn

30

)
l
o
m

/
l
a
c
k
(
 
s
e
t
a
m

i
t
s
E
F
∆

 

25

20

15

0

0.1

0.2

0.3

0.4

0.7

0.8

0.9

1

0.6

0.5
τ 
(τ=0.22)

χ = 1/n

Best Estimate, ∆Fbest

FIG. 3: Bootstrapped block averaged free energy (∆Fn), given by Eq. (9) as a function of χ are shown as red squares. The solid
black line represents the best estimate ∆Fbest. The value of τ = 0.22 is chosen to minimize the slope of ∆Fn(χ) as described
in Sec. VI A. This plot was generated using 100 work values chosen at random from the PAL2STE test system (palmitic →
stearic acid mutation). In this plot, extrapolating to the inﬁnite data limit cooresponds to continuing the ∆Fn curve to χ = 0
to obtain the intercept. This plot also demonstrates that the large χ (small n) data are more reliable as shown by the errorbars
which represent the standard error of ∆Fn.

B. Reverse Cumulative Integral Extrapolation

As previously metioned (see Fig. 3), the most precise ∆Fn values occur for larger χ ≈ 1 (i.e. smaller n), yet the
previous linear extrapolation scheme relies exclusively on small χ values. Thus, in an eﬀort to use the more precise
large-χ data to extrapolate ∆F , we now formulate an integration scheme which explicity includes all values of χ.

Consider treating ∆Fn in Fig. 3 as a smooth function ∆Fn(χ), from χ = 0 to 1. We are free to consider the area

under this function, re-written using integration by parts,

1

0
Z

dχ∆Fn(χ) =

dχ(1 − χ)

+ ∆Fn(χ = 0).

d∆Fn(χ)
dχ

But ∆Fn(χ = 0) is just the extrapolated free energy estimate ∆Frci, so

1

0
Z

0
Z

 

1

χ

1
Z

 

∆Frci =

dχ

∆Fn(χ) − (1 − χ)

d∆Fn(χ)

.

dχ !

RCI(χ) =

dχ′

∆Fn(χ′) − (1 − χ′)

d∆Fn(χ′)
dχ′

,

!

Now the reverse cumulative integral function can be deﬁned by

where it should be noted that we accumulate in the reverse direction from χ′ = 1, where the data is most precise, to
χ′ = χ, i.e. from right to left in Figs. 3 and 4.

A sample plot of the reverse cumulative integral is shown in Fig. 4. This plot was generated using two subsets
(represented by open and closed symbols) of 100 work values drawn at random from the PAL2STE data set. The
solid black line shows the best estimate ∆Fbest, the blue squares are the sub-sampled ∆Fn and the red circles are
RCI(χ). For each of the two subsets, the value of τ was chosen to minimize the slope of the tail of RCI(χ), as discussed
below. The subset represented by the open symbols slightly overestimates ∆Fbest, while the subset represented by
the closed symbols slightly underestimates ∆Fbest.

7

(11)

(12)

(13)

Block Averaged Estimates from 100 Work Values, ∆Fn(χ)

8

Best Estimate ∆Fbest 

)
l
o
m

/
l
a
c
k
(
 
I

C
R

 
 
,

F
∆

30

25

20

15

10

5

0

0

Reverse Cumulative Integral Estimates from 100 Work Values, RCI(χ)

0.2

0.4

0.6

0.8

1

τ

χ = 1/n

FIG. 4: Examples of the reverse cumulative integral, RCI(χ) are shown for a two subsets of 100 work values drawn at random
from the PAL2STE data set (palmitic to stearic acid mutation). The ﬁrst subset is represented by open symbols and the
second by closed symbols. The solid black line shows the best estimate ∆Fbest, the blue squares are the sub-sampled ∆Fn and
the red circles are the RCI(χ). The strength of using RCI(χ) for extrapolation is its explicit use of all the ∆Fn values. For
each subset, the value of τ was chosen to minimize the slope of the small-χ tail of RCI(χ), as described in Sec. VI B. In this
example, the subset represented by the open symbols slightly overestimates ∆Fbest, while the subset represented by the closed
symbols slightly underestimates ∆Fbest.

To obtain an extrapolated value for ∆F , consider the case where one has more than enough data to obtain ∆F
exactly. In this situation, if τ is chosen carefully, RCI(χ) will have nearly zero slope for small χ, since accumulating
more χ values will not change the estimate. Thus, one can hope to extrapolate ∆F by simply ﬁnding a value of τ
where the slope dRCI(χ)/dχ is the smallest for small χ, then the extrapolated free energy ∆Frci will be the value of
RCI(χ) for the smallest value of χ available, χmin.

Our fully automated test of this new extrapolation method is very similar to that described in the previous section,
with only minor diﬀerences: (i) the sub-sampled ∆Fn is used, (ii) the value of τ is chosen to minimize the slope of the
tail (small χ) of RCI(χ) – see Fig. 4, and (iii) once the value of τ is determined, the free energy is estimated to by
∆Frci = RCI(χmin). Comparison is made with the Jarzynksi estimate ∆FJarz using the same procedure as in the
last section.

VII. RESULTS

The initial results of this study are very positive as shown by the rapid convergence of our extrapolated ∆F estimates
(Fig. 5). Compared to ∆FJarz, estimates of ∆F can be made with 6-15 fold less work values, i.e. less computational
expense.

Fig. 5 demonstrates how the linear and reverse cumulative extrapolation (RCI) methods described above compare
to using the Jarzynski estimate of Eq. (5), for each of the four test systems. For all of the plots shown, the solid
black horizontal line corresponds to the Jarzynski estimate using all available work values and thus represents the best
estimate ∆Fbest from Sec. IV. The red squares are averages of ∆FJarz using Eq. (5), the blue triangles are averages
of ∆Flin from Sec. VI A, and the green circles are averages of ∆Frci from Sec. VI B. The inset for each plot shows the
standard deviation of the ∆F estimates (σ∆F ). Averages and stardard deviations were obtained by performing 500
independent trials for each estimate (∆FJarz, ∆Flin, ∆Frci) for every value of N . Thus σ∆F indicates the expected
statistical uncertainty – that is the range of values one would expect if the calculation was performed de novo.

A glance at Fig. 5 reveals that the linearly extrapolated ∆Flin estimates converge to the best estimate ∆Fbest more
quickly than the Jarzynski estimate ∆FJarz. The larger uncertainty of the linearly extrapolated estimates is, at least
partially, explained by the fact that it relies on the less certain ∆Fn values as explained in Sec. VI A. Also, the linear

LJ - Chemical Potential for a Lennard-Jones Fluid

GROWCL - Growing a Chloride Ion in Water

9

Jarzysnki, ∆FJarz

100

50

)
T

k
(

B

 

F
∆

σ

0

10

1000

100
N
RCI, ∆Frci

10

1000

100
N

Linear, ∆Flin

-50

10

100
Number of Work Values, N (i.e. simulation time)

1000

15

10

Best, ∆Fbest 

1000

METH2ETH - Methanol to Ethane Mutation in Water

PAL2STE - Palmitic to Stearic Acid Mutation in Water

)
l
o
m

/
l
a
c
k
(

 

F
∆

σ

6

3

0

100
N

)
l
o
m

/
l
a
c
k
(

 

F
∆

σ

4

2

0

100
N

1000

10

1000

100
N

35

30

25

20

22

20

18

16

)
l
o
m

/
l
a
c
k
(
 
e
t
a
m

 

i
t
s
E
F
∆
 
e
g
a
r
e
v
A

)
l
o
m

/
l
a
c
k
(
 
e
t
a
m

 

i
t
s
E
F
∆
 
e
g
a
r
e
v
A

250

200

150

100

50

0

B

)
T

k
(
 
e
t
a
m

 

i
t
s
E
F
∆
 
e
g
a
r
e
v
A

30

25

20

15

10

5

)
l
o
m

/
l
a
c
k
(
 
e
t
a
m

 

i
t
s
E
F
∆
 
e
g
a
r
e
v
A

0
10

9

6

)
l
o
m

/
l
a
c
k
(

 

F
∆

3

σ

0

10

100
N

1000

14

10

100
N

1000

FIG. 5: A comparison between ∆F estimates for linear extrapolation, reverse cumulative integral (RCI) extrapolation, and
the Jarzynski equality for all of the test systems. For each of the plots the solid horizontal black line indicates the best estimate
∆Fbest given in Sec. IV, the red squares are averages of Jarzynski estimates given by Eq. (5), the blue triangles are averages
of linearly extrapolated estimates from Sec. VI A, and the green circles are averages of RCI extrapolated estimates from Sec.
VI B. The inset in each plot shows the standard deviation for each of the estimates. Averages and stardard deviations were
obtained by performing 500 independent trials for each estimate for each value of N .

estimates tend to “overshoot” ∆Fbest.

Many of the disadvantages of the linearly extrapolated estimates are somewhat overcome by RCI extrapolation.
Since RCI extrapolation relies heavily on the more precise values of ∆Fn, the uncertainty is generally smaller than
that of the linear estimates. Remarkably, for the LJ system, the RCI extrapolated uncertainty is smaller than the
Jarzysnki estimate uncertainty for N > 40. Also, RCI extrapolated estimates do not tend to appreciably overshoot
∆Fbest.

To obtain a quantitative comparison between RCI extrapolated estimates ∆Frci, and Jarzynski estimates ∆FJarz,
we ask the following question: how many work values are necessary to obtain a ∆F estimate that falls within 1.0
kcal/mol of the best estimate ∆Fbest? Table I summarizes the results of this comparison. The RCI estimates oﬀer
a signiﬁcant improvement over the Jarzynski estimates in all of the test systems, with a 6-15 fold decrease in the
number of work values needed to estimate ∆Fbest within 1.0 kcal/mol.

Due to the fact that the linearly extrapolated estimates tend to overshoot ∆Fbest, often by many kcal/mol, a
quantitative comparison between ∆Flin and ∆FJarz would be diﬃcult and unreliable. Thus, we do not attempt to
make such a comparison here.

TABLE I: A quantitative comparison between the reverse cumulative integral estimates (∆Frci) and the Jarzysnki estimate
(∆FJ arz) shown in Fig. 5. The ﬁrst column shows the test system used in the comparison. The second and third columns are
the number of work values needed to obtain an estimate that falls within 1.0 kcal/mol of ∆Fbest for the reverse cumulative
integral (Nrci) and Jarzynksi (NJ arz) estimates. The rightmost column is the ratio of these two values, i.e. the approximate
improvement of the reverse cumulative integral estimate over the Jarzysnki estimate.

10

Nrci NJ arz

System
800
LJ
GROWCL
200
METH2ETH 400
40
PAL2STE

Improvement
7.5
15
6.25
12.5

6000
3000
2500
500

VIII. CONCLUSION

We have described two methods that improve standard non-equilibrium estimates of free energy diﬀerences, ∆F :
linear extrapolation and reverse cumulative integral (RCI) extrapolation. Four test systems were used in this study:
chemical potential calculation for a Lennard-Jones ﬂuid, growing a chloride ion in water, methanol → ethane mutation
in water, and palmitic → stearic acid mutation in water. Both of the methods rely on block averaged free energies
∆Fn, which are extrapolated to the inﬁnite data limit, and oﬀer more rapid estimates of ∆F than using the Jarzynski
equality alone, for the test systems considered here.

Previous work by Zuckerman and Woolf [1] used a quadratic extrapolation method to estimate ∆F . The present
study oﬀers several improvements: (i) the accuracy and uncertainty of the extrapolated estimates are reduced due
to improved, fully automated methods; (ii) two new methods for calculating the block averaged free energies, ∆Fn
are described; (iii) a key innovation is oﬀered in RCI extrapolation in its use of the more reliable ∆Fn data; (iv)
a systematic quantitative comparison is done between the RCI and Jarzynksi ∆F estimates, showing a 6-15 fold
decrease in the number of work values needed for the RCI estimates; (v) we have tested our extrapolation methods
on four systems of varying molecular complexity.

For the ﬁrst time, bootstrapped and sub-sampled block averaged free energies are introduced. These ∆Fn oﬀer
very smooth convergence properties allowing statistically reliable extrapolation. The ability to generate smooth ∆Fn
data is critical to the extrapolation methods described here.

A quantitative comparison between the RCI extrapolated ∆F estimates and those using Jarzynski’s equality show
a marked decrease in the number of work values needed to estimate ∆F when using the RCI estimates. RCI extrap-
olation can obtain ∆F estimates using 6-15 fold less data than the Jarzysnki estimates. The linear extrapolation
estimates tend to overshoot the best estimate ∆F and has a larger uncertainty than RCI extrapolation. However, the
partial success of the “simple-minded” linear extrapolation does illustrate the power of the underlying idea: systematic
behavior in bias can be exploited.

Other similar extrapolation methods could be developed that may oﬀer improvement over those presented here.
Such methods are currenty under investigation by the authors. Future work by the authors will use extrapolation
methods, such as those described here, to generate ∆F estimates for large molecular systems such as relative protein-
ligand binding aﬃnities.

IX. ACKNOWLEDGEMENTS

We gratefully acknowledge Jay Ponder for granting F. M. Y. permission to write code for TINKER to perform
fast-growth free energy calculations, and to Alan Grossﬁeld for his assistance in writing and implementing this code.
We would like to thank Arun Setty for fruitful discussion and valuable suggestions. Special thanks are due to Hirsh
Nanda and Thomas Woolf for permission to use the raw data for the palmitic to stearic mutation, and to David
Hendrix and Chris Jarzysnki for permission to use the raw data for the Lennard-Jones ﬂuid. Funding for this research
was provided by the Dept. of Environmental and Occupational Health at University of Pittsburgh, and the National
Institutes of Health (T32ES007318).

[1] D. M. Zuckerman and T. B. Woolf, Chem. Phys. Lett. 351, 445 (2002).
[2] D. M. Zuckerman and T. B. Woolf, Phys. Rev. Lett. 89, 180602 (2002).

11

[3] M. R. Shirts, E. Bair, G. Hooker, and V. S. Pande, Phys. Rev. Lett. 91, 140601 (2003).
[4] D. A. Pearlman and P. A. Kollman, J. Chem. Phys. 90, 2460 (1989).
[5] X. Kong and C. L. Brooks, J. Chem. Phys. 105, 2414 (1996).
[6] M. R. Shirts, J. W. Pitera, W. C. Swope, and V. S. Pande, J. Chem. Phys. 119, 5740 (2003).
[7] G. Hummer and A. Szabo, Proc. Nat. Acad. Sci. (USA) 98, 3658 (2001).
[8] P. A. Bash, U. C. Singh, R. Langridge, and P. A. Kollman, Science 236, 564 (1987).
[9] C. J. Woods, J. W. Essex, and M. A. King, J. Phys. Chem. B 107, 13703 (2003).
[10] J. A. McCammon, Curr. Opin. Struc. Bio. 2, 96 (1991).
[11] S. Shobana, B. Roux, and O. S. Andersen, J. Phys. Chem. B 104, 5179 (2000).
[12] B. Isralewitz, M. Gao, and K. Schulten, Curr. Opin. Struc. Bio. 11, 224 (2001).
[13] R. Bitetti-Putzer, W. Yang, and M. Karplus, Chem. Phys. Lett. 377, 633 (2003).
[14] S. Boresch, F. Tettinger, M. Leitgeb, and M. Karplus, J. Phys. Chem. B 107, 9535 (2003).
[15] J. Liphardt, S. Dumont, S. B. Smith, I. Tinoco, and C. Bustamante, Science 296, 1832 (2002).
[16] J. Gore, J. Ritort, and C. Bustamante, Proc. Natl. Acad. Sci. (USA) 100, 12564 (2003).
[17] S. Park, F. Khalili-Araghi, E. Tajkhorshid, and K. Schulten, J. Chem. Phys. 119, 3559 (2003).
[18] J. Bajorath, Nature Rev. Drug Disc. 1, 882 (2002).
[19] D. J. Abraham, ed., Burger’s Medicinal Chemistry and Drug Discovery, Sixth Ed., Volume 1 (Wiley, New York, 2003).
[20] G. A. Lazar, S. A. Marshall, J. J. Plecs, S. L. Mayo, and J. R. Desjarlais, Curr. Op. Struct. Bio. 13, 513 (2003).
[21] W. F. DeGrado and B. O. Nilsson, Curr. Op. Struct. Bio. 7, 455 (1997).
[22] C. Jarzynski, Phys. Rev. Lett. 78, 2690 (1997), Phys. Rev. E 56, 5018 (1997).
[23] J. M. Schurr and B. S. Fujimoto, Science 296, 1832 (2002).
[24] D. M. Zuckerman and T. B. Woolf, J. Stat. Phys., in press.
[25] A. Grossﬁeld, P. Ren, and J. W. Ponder, J. Amer. Chem. Soc. 125, 15671 (2003).
[26] N. Lu and D. A. Kofke, J. Chem. Phys. 114, 7303 (2001).
[27] N. Lu and D. A. Kofke, J. Chem. Phys. 115, 6866 (2001).
[28] C. Oostenbrink and W. F. van Gunsteren, J. Comp. Chem. 24, 1730 (2003).
[29] T. Z. Mordasini and J. A. McCammon, J. Phys. Chem. B 104, 360 (2000).
[30] C. Jarzynski, Phys. Rev. E 65, 046122 (2002).
[31] R. H. Wood, J. Phys. Chem. 95, 4838 (1991).
[32] C. Jarzynski, Phys. Rev. E 56, 5018 (1997).
[33] M. A. Miller and W. P. Reinhardt, J. Chem. Phys. 113, 7035 (2000).
[34] H. Hu, R. H. Yun, and J. Hermans, Molec. Sim. 28, 67 (2002).
[35] J. C. Sch¨on, J. Chem. Phys. 105, 10072 (1996).
[36] A. Hodel, T. Simonson, R. O. Fox, and A. T. Br¨unger, J. Phys. Chem. 97, 3409 (1993).
[37] D. A. Pearlman and P. A. Kollman, J. Chem. Phys. 91, 7831 (1989).
[38] A. Di Nola and A. T. Brunger, J. Comp. Chem. 19, 1229 (1998).
[39] D. A. Pearlman, J. Comp. Chem. 15, 105 (1994).
[40] O. Edholm and I. Ghosh, Molec. Sim. 10, 241 (1993).
[41] R. H. Wood, W. C. F. M¨uhlbauer, and P. T. Thompson, J. Phys. Chem. 95, 6670 (1991).
[42] N. Lu, D. A. Kofke, and T. B. Woolf, J. Chem. Phys. 115, 6866 (2001).
[43] N. Lu, J. K. Singh, and D. A. Kofke, J. Chem. Phys. 118, 2977 (2003).
[44] C. H. Bennett, J. Comp. Phys. 22, 245 (1976).
[45] A. Amadei, M. E. F. Apol, A. DiNola, and H. J. C. Berendsen, J. Chem. Phys. 104, 1560 (1996).
[46] G. Hummer, J. Chem. Phys. 114, 7330 (2001).
[47] J. W. Pitera and W. F. van Gunsteren, J. Phys. Chem. B 105, 11264 (2001).
[48] R. W. Zwanzig, J. Chem. Phys. 22, 1420 (1954).
[49] G. Hummer and A. Szabo, J. Chem. Phys. 105, 2004 (1996).
[50] D. A. Hendrix and C. Jarzynski, J. Chem. Phys. 114, 5974 (2001).
[51] G. E. Crooks, Phys. Rev. E 61, 2361 (2000).
[52] J. G. Kirkwood, J. Chem. Phys. 3, 300 (1935).
[53] H. Liu, A. E. Mark, and W. F. van Gunsteren, J. Phys. Chem. 100, 9485 (1996).
[54] J. M. J. Swanson, R. H. Henchman, and J. A. McCammon, Biophys. J. 86, 67 (2004).
[55] J. Hermans, J. Phys. Chem. 95, 9029 (1991).
[56] A. L. Leach, Molecular Modelling Principles and Applications – Second Ed. (Prentice Hall, Dorset, 2001).
[57] T. P. Lybrand, I. Ghosh, and J. A. McCammon, J. Am. Chem. Soc. 107, 7793 (1985).
[58] D. Frenkel and B. Smit, Understanding Molecular Simulation (Academic Press, San Diego, 1996).
[59] H. Nanda and T. B. Woolf, in preparation.
[60] Thanks to Hirsh Nanda and Tom Woolf for the raw stearic to palmitic acid data, and to David Hendrix and Chris Jarzysnki

for the raw chemical potential data.
[61] J. W. Ponder, St. Louis, MO (2003).
[62] H. J. C. Berendsen, J. P. M. Postma, W. F. van Gunsteren, A. DiNola, and J. R. Haak, J. Chem. Phys. 81, 3684 (1984).
[63] H. C. Andersen, J. Comp. Phys. 52, 24 (1983).
[64] B. Efron and R. J. Tibshirani, An Introduction to the Bootstrap (Chapman and Hall, New York, 1993).
[65] D. N. Politis, J. P. Romano, and M. Wolf, Subsampling (Springer-Verlag, New York, 1999).

