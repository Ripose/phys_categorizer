7
9
9
1
 
b
e
F
 
0
2
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
3
2
0
2
0
7
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Introduction to the Diﬀusion Monte Carlo Method

Ioan Kosztin, Byron Faber and Klaus Schulten
Department of Physics, University of Illinois at Urbana-Champaign,
1110 West Green Street, Urbana, Illinois 61801
(August 25, 1995)

A self–contained and tutorial presentation of the diﬀusion Monte Carlo method for determining
the ground state energy and wave function of quantum systems is provided. First, the theoretical
basis of the method is derived and then a numerical algorithm is formulated. The algorithm is
applied to determine the ground state of the harmonic oscillator, the Morse oscillator, the hydrogen
atom, and the electronic ground state of the H+
2 ion and of the H2 molecule. A computer program
on which the sample calculations are based is available upon request.

E-print: physics/9702023

I. INTRODUCTION

The Schr¨odinger equation provides the accepted de-
scription for microscopic phenomena at non-relativistic
energies. Many molecular and solid state systems
are governed by this equation. Unfortunately, the
Schr¨odinger equation can be solved analytically only in a
few highly idealized cases; for most realistic systems one
needs to resort to numerical descriptions. In this paper
we want to introduce the reader to a relatively recent nu-
merical method of solving the Schr¨odinger equation, the
Diﬀusion Monte Carlo (DMC) method. This method is
suitable to describe the ground state of many quantum
systems.

−

The solution of the time-dependent Schr¨odinger equa-
tion can be written as a linear superposition of stationary
states in which the time dependence is given by a phase
factor exp (
iEnt/¯h), where En is the n-th energy level
of the quantum system in question. The energy scale
can be chosen such that all energies are positive. In the
DMC method one actually considers the solution of the
Schr¨odinger equation assuming imaginary time τ , i.e.,
iτ . The solution is then
after replacing the time t by
given by a sum of transients of the form exp (
Enτ /¯h),
n = 0, 1, . . .. The DMC method is based upon the ob-
servation that, as a quantum system evolves in imag-
inary time, the longest lasting transient corresponds to
the ground state with energy E0 < En, n = 1, 2, . . ... Fol-
lowing the evolution of the wave function in imaginary
time long enough one can determine both the ground
state energy E0 and the ground state wave function φ0
of a quantum system, regardless of the initial state in
which the system had been prepared. The DMC method
provides a practical way of evolving in imaginary time
the wave function of a quantum system and obtaining,
ultimately, the ground state energy and wave function.

−

−

The DMC method can be formulated in two diﬀerent
ways. The ﬁrst one is based on the similarity between
the imaginary time Schr¨odinger equation and a general-
ized diﬀusion equation. The kinetic (potential) energy
term of the Schr¨odinger equation corresponds to the dif-
fusion (source/sink or reaction) term in the generalized

diﬀusion equation. The diﬀusion–reaction equation aris-
ing can be solved by employing stochastic calculus as it
was ﬁrst suggested by Fermi around 19451,2. Indeed, the
imaginary time Schr¨odinger equation can be solved by
simulating random walks of particles which are subject to
birth/death processes imposed by the source/sink term.
The probability distribution of the random walks is iden-
tical to the wave function. This is possible only for wave
functions which are positive everywhere, a feature, which
limits the range of applicability of the DMC method.
Such a formulation of the DMC method was given for
the ﬁrst time by Anderson3 who used this method to cal-
culate the ground state energy of small molecules such as
H+
3 .
A second formulation of the DMC method arises
from the Feynman path integral solution of the time–
dependent Schr¨odinger equation. By means of path in-
tegrals the wave function can be expressed as a multi-
dimensional integral which can be evaluated by employ-
ing the Monte Carlo method. Algorithms to solve the
diﬀusion–reaction equation obeyed by the wave function
and algorithms to evaluate the path integral representa-
tion of the wave function yield essentially one and the
same formulation of the DMC method. Which one of
the two formulations of the DMC method one adopts
depends on one’s expertise: a formulation of the DMC
method based on the diﬀusion–reaction equation requires
basic knowledge of the theory of stochastic processes; a
path integral formulation obviously requires familiarity
with the corresponding formulation of quantum mechan-
ics.

The purpose of this article is to provide a self-contained
and tutorial presentation of the path-integral formula-
tion of the DMC method. We also present a numer-
ical algorithm and a computer program based on the
DMC method and we apply this program to calculate the
ground state energy and wave function for some sample
quantum systems.

The article is organized as follows: The formulation of
the DMC method is presented in Sec. II. In Sec. III a
numerical algorithm for the DMC method is constructed.
The results of the DMC simulation for some simple quan-

1

tum mechanical systems are presented in Sec. IV. Fi-
nally, Sec. V provides suggestions for further numerical
experiments and guides the reader to the literature on
the DMC method.

II. THEORY

→ −

→ ∞

The theoretical formulation of the DMC method, pre-
sented below, follows three steps. These steps will be
outlined ﬁrst, to provide the reader with an overview.
First Step: Imaginary Time Schr¨odinger Equa-
tion. In this step, the solution of the time–dependent
Schr¨odinger equation of a quantum system is expressed
as a formal series expansion in terms of the eigenfunctions
of the Hamiltonian. One then performs a transformation
from real time t to imaginary time τ , replacing t
iτ .
The solution of the obtained imaginary time Schr¨odinger
equation becomes a series of transients which decay ex-
ponentially as τ
. The longest lasting transient
corresponds to the ground state (i.e., the state with the
lowest possible energy) of the system.
Second Step: Path Integral Formulation and
Monte Carlo Integration.
In this step, the imagi-
nary time Schr¨odinger equation is investigated by means
of the path integral method. By using path integrals
the solution of this equation can be reduced to quadra-
ture, provided that an initial state wave function is given.
Standard Monte Carlo methods4 permit one to evaluate
numerically the path integral to any desired accuracy,
assuming that the initial state wave function and, there-
fore, the ground state wave function as well, is positive
deﬁnite. In this case the wave function itself can be inter-
preted as a probability density and the “classical” Monte
Carlo method can be applied. According to the gen-
eral principles of quantum mechanics, only the square of
the absolute value of the wave function has the meaning
of a probability density; the fact that the ground state
wave function has to be a positive deﬁnite real quan-
tity imposes severe limitations on the applicability of
the Monte Carlo technique for solving the Schr¨odinger
equation. An eﬃcient implementation of the standard
Monte Carlo algorithm for calculating the wave function
as a large multi-dimensional integral is realized through
an alternation of diﬀusive displacements and of so-called
birth–death processes applied to a set of imaginary par-
ticles, termed “replicas”, distributed in the conﬁguration
space of the system. The spatial distribution of these
replicas converges to a probability density which repre-
sents the ground state wave function. The diﬀusive dis-
placements and birth–death processes can be simulated
on a computer using random number generators.
Third Step: Continuous Estimate of the Ground
State Energy and Sampling of the Ground State
Wave Function. In this step, the ground state energy
and the ground state wave function are actually deter-
mined. As mentioned above, the Monte Carlo method

samples the wave function after each time step. The
spatial coordinate distribution of the replicas involved
in the combined diﬀusion and birth–death processes, af-
ter each (ﬁnite) time step, provides an approximation
to the wave function of the system at that given time.
The wave function converges in (imaginary) time towards
the (time–independent) ground state wave function, if
and only if the origin of the energy scale is equal to the
ground state energy. Since the ground state energy is ini-
tially unknown, one starts with a reasonable guess and,
after each time step in which a diﬀusive displacement
and birth–death process is applied to all particles once,
one improves the estimate of the ground state energy.
Ultimately, this estimate converges towards the desired
ground state energy and the distribution of particles con-
verges to the ground state wave function.

In the following, we shall provide a detailed account of

the above steps.

A. Imaginary Time Schr¨odinger Equation

For simplicity, let us consider a single particle of mass
m which moves along the x–axis in a potential V (x). Its
wave function Ψ(x, t) is governed by the time-dependent
Schr¨odinger equation5

i¯h

∂Ψ
∂t

= ˆHΨ ,

where the Hamiltonian has the form

ˆH =

¯h2
2m

∂2
∂x2 + V (x) .

−

(2.1)

(2.2)

Assuming that the potential for x
becomes inﬁ-
nite, i.e., the particle motion is conﬁned to a ﬁnite spatial
domain, the formal solution of (2.1) can be written as a
series expansion in terms of the eigenfunctions of ˆH

→ ±∞

Ψ(x, t) =

cn φn(x) e− i

¯h Ent .

(2.3)

∞

n=0
X

The eigenfunctions φn(x), which are square–integrable
in the present case, and the eigenvalues En are obtained
from the time-independent Schr¨odinger equation

ˆHφn(x) = Enφn(x) ,

(2.4)

subject to the boundary conditions limx→±∞ φn(x) = 0.
We label the energy eigenstates by n = 0, 1, 2, . . . and
order the energies

E0 < E1 ≤

E2 ≤
The eigenfunctions φn(x) are assumed to be orthonormal
and real, i.e.,

(2.5)

. . .

dxφn(x)φm(x) = δnm .

(2.6)

∞

−∞

Z

2

The expansion coeﬃcients cn in (2.3) are then

B. Path Integral Formalism

∞

−∞

Z

cn =

dxφn(x)Ψ(x, 0) ,

n = 0, 1, 2, . . . , (2.7)

i.e., they describe the overlap of the initial state Ψ(x, 0),
else assumed real, with the eigenfunctions φn(x) in (2.4).
Shift of Energy Scale. We perform now a trivial,
but methodologically crucial shift of the energy scale in-
troducing the replacements V (x)
ER and
ER. This leads to the Schr¨odinger equation
En

V (x)

En

→

−

∂2Ψ
∂x2 + [V (x)

−

ER] Ψ ,

(2.8)

i¯h

→

−
¯h2
∂Ψ
∂τ
2m
and to the expansion
∞

=

−

Ψ(x, t) =

cn φn(x) e−i

En−ER
¯h

t .

(2.9)

Wick Rotation of Time. Now let us perform a
transformation from real time to imaginary time (also
known as Wick rotation) by introducing the new vari-
able τ = it. The Schr¨odinger equation (2.8) becomes

¯h

∂Ψ
∂τ

=

¯h2
2m

∂2Ψ
∂x2 −

[V (x)

ER] Ψ ,

(2.10)

−

and the expansion (2.9) reads

Ψ(x, τ ) =

cn φn(x) e− En−ER

¯h

τ .

(2.11)

n=0
X

∞

n=0
X

The solution of the imaginary time Schr¨odinger equation
(2.10) can be written

Ψ(x, τ ) =

dx0 K(x, τ

x0, 0) Ψ (x0, 0) ,
|

(2.12)

∞

−∞

Z

where the propagator K(x, τ
x0, 0) is expressed in terms
|
of the well-known path integral6, modiﬁed by the replace-
ment t =

iτ

−

K(x, τ

x0, 0) = lim
|
N→∞

∞

∞

dx1 . . .

dxN −1

−∞

Z

−∞

Z

m
2π¯h∆τ

N
2

×
(cid:17)
(2.13)

(cid:16)

exp

∆τ
¯h

−




N

j=1 h
X

m
2∆τ 2 (xj

−

xj−1)2 + V (xj )

ER

−

.




i




Here ∆τ = τ /N is a small time step. One sets xN
≡
The wave function Ψ(x, τ ) can be written in the form

x.

Ψ(x, τ ) = lim
N→∞

∞

N −1

N

dxj

−∞ 

Z

j=0
Y







n=1
Y

W (xn)

×

Noting the energy ordering (2.5), one can infer from

(2.11) the following asymptotic behavior for τ

P (xn, xn−1) Ψ (x0, 0) ,

(2.14)

×

(i) if ER > E0,

limτ →∞ Ψ(x, τ ) =
tion diverges exponentially fast;

∞

→ ∞
, the wave func-

where we have deﬁned

(ii) if ER < E0,

limτ →∞ Ψ(x, τ ) = 0, the wave func-

tion vanishes exponentially fast;

P (xn, xn−1)

(iii) if ER = E0,

limτ →∞ Ψ(x, τ ) = c0φ0(x), the wave
function converges, up to a constant factor c0 de-
ﬁned through (2.7), to the ground state wave func-
tion.

and

m
2π¯h∆τ

1
2

exp

"−

(cid:17)

≡

(cid:16)

m (xn

xn−1)2

−
2¯h∆τ

This behavior provides the basis of the DMC method.
For ER = E0, the function Ψ(x, τ ) converges to the
ground state wave function φ0(x) regardless of the choice
of the initial wave function Ψ(x, 0), as long as there is
a numerically signiﬁcant overlap between Ψ(x, 0) and
φ0(x), i.e., as long as c0 is not too small. The ground
state wave function, for a single particle, has no nodes (in
case of many fermion systems this might not be true) and
one can always fulﬁll the requirement of non–vanishing
c0 by choosing a positive deﬁnite initial wave function
centered in a region of space where φ0(x) is suﬃciently
large.

We now seek a practical way to integrate equation
(2.10) for an arbitrary reference energy ER and initial
wave function Ψ(x, 0). We shall accomplish this by using
the path integral formalism.

W (xn)

exp

≡

−

(cid:20)

−
¯h

.

(cid:21)

[V (xn)

ER] ∆τ

The function P (xn, xn−1) is related to the kinetic energy
term in (2.2). This function can be thought of as a Gaus-
sian probability density for the random variable xn with
mean equal to xn−1 and variance

σ =

¯h∆τ /m .

(2.17)

p

The so-called weight function W (xn) depends on both
the potential energy in (2.2) and the reference energy
ER. The main diﬀerence between the functions P and
W is that the former can be interpreted as a probability
density since

,

#

(2.15)

(2.16)

3

∞

−∞

Z

dyP (x, y) = 1 ,

(2.18)

while the latter can not.

The path integral (2.14) can be evaluated analyti-
cally only for particular forms of the potential energy
V (x)7. Fortunately, by choosing N suﬃciently large, one
can evaluate (2.14) numerically to any desired accuracy.
However, since a suitable N is necessarily a large number,
the standard algorithms of numerical integration cannot
be employed directly8, instead, one uses the so-called
Monte Carlo method4. According to this method any
(convergent) N –dimensional integral of the form

I =

dxj

f (x0, . . . , xN −1)

(x0, . . . , xN −1) ,

P

∞

N −1

−∞ 

Z

j=0
Y







(2.19)

where

is a probability density, i.e.,

P

(x0, . . . , xN −1)

0 ,

and

P

≥

(cid:17)

and (2.18) the probability distribution (2.22) does indeed
obey the property (2.20). The expression (2.21) can now
be invoked to evaluate Ψ(x, τ ) by means the path inte-
gral (2.14). This requires the generation of sets of co-
, x(i) =
ordinate vectors x(i)

1 , . . . , x(i)

0 , x(i)
x(i)

for

N

i = 1, 2, . . . ,

N

∈ P
, where x(i)

N = x.

(cid:16)

P

ability density
one generates, for a ﬁxed x = x(i)
N −1 with mean value x(i)
number x(i)
dom number distributed about x(i)
cording to the probability density P

In order to obtain vectors x(i) which sample the prob-
one proceeds as follows: In a ﬁrst step
N , a Gaussian random
N (i.e., a Gaussian ran-
N ) and variance σ, ac-
N , x(i)
x(i)
given
(cid:16)

N −2, with mean x(i)
N −1, x(i)
x(i)

by (2.15).
ber x(i)
according to P
to produce random numbers x(i)
(cid:16)
Two consecutive random numbers x(i)
lated through the equation

In a second step, a Gaussian random num-
N −1 and variance σ, is generated
. The steps are continued
n until one reaches x(i)
0 .
n and x(i)
n−1 are re-

N −2

N −1

(cid:17)

(cid:17)

∞

N −1

−∞ 

Z

j=0
Y



P


can be approximated by the expression



dxj

(x0, . . . , xN −1) = 1 ,

(2.20)

=

I

N

1

N

i=1
X
x(i)∈P

f

0 , . . . , x(i)
x(i)
(cid:16)

N −1

(cid:17)

.

(2.21)

∈ P

means that the numbers x(i)
Here the notation x(i)
j ,
i = 1, 2, . . . ,
; j = 0, . . . , N
1, are selected randomly
N
with the probability density
, the bet-
. The larger
N
ter is the approximation I
In fact, according to
the central limit theorem 4, the values of
obtained as
a result of diﬀerent simulations are distributed normally,
i.e., according to a Gaussian distribution, around the ex-
act value I, the standard deviation being proportional to
1/√

−
P
≈ I

I

.

.

In order to evaluate Ψ(x, τ ) in (2.14), for given x, τ

N

and N , one deﬁnes

(x0, . . . , xN −1) =

P (xn, xn−1) ,

(2.22)

P

and

f (x0, . . . , xN −1) = Ψ (x0, 0)

W (xn) ,

(2.23)

such that one can apply (2.19) and (2.21). For this pur-
pose we note that due to

∞

−∞

Z

dyP (x, y)P (y, z) = P (x, z) ,

(2.24)

N

n=1
Y

N

n=1
Y

n = x(i)
x(i)

n−1 + σρ(i)
n ,

(2.25)

where σ is given by (2.17) and ρ(i)
n is a Gaussian ran-
dom number with zero mean and a variance equal to
one. The ρ(i)
n ’s can be generated numerically by means
of algorithms referred to as random number generators.
One can check, using (2.25) and (2.15), that the mean
x(i)
x(i)
and the variance of x(i)
n
n
n−1
and σ, respectively. Therefore, the coordinate vectors
(cid:17)
N −1, . . . , x(i)
x(i)
, obtained through equation (2.25) for
, are distributed according to the probabil-
i = 1, 2, . . . ,
o
n
ity density (2.22). We note in passing that the sequence
of positions xn given by (2.25) deﬁnes a stochastic pro-
cess, namely the well known Brownian diﬀusion process.

are equal to x(i)
n−1

N

(cid:16)

(cid:17)

(cid:16)

0

N

Repeating

the wave func-
times the sampling of
tion Ψ(x, τ ) can be determined according to (2.21) and
(2.14). Unfortunately, the algorithm outlined is imprac-
tical since it provides only a route to calculate Ψ(x, τ ) for
a chosen time τ , but no systematic method to obtain the
ground state energy and wave function, which requires a
description for τ

P

.
→ ∞

Fortunately, the above so-called Monte Carlo algo-
rithm can be improved and used to determine simulta-
neously both E0 and φ0. The basic idea is to consider
the wave function itself a probability density. This im-
plies that the wave function should be a positive deﬁnite
function, a constraint which limits the applicability of the
suggested method. By sampling the initial wave function
Ψ(x, 0) at
N0 points one generates as many Gaussian ran-
dom walks which evolve in time according to (2.22) or,
equivalently, according to (2.25); instead of tracing the

4

motion of each random walk separately, one rather fol-
lows the motion of a whole ensemble of random walks
simultaneously. The advantage of this procedure is that
one can sample the wave function of the system, through
the actual position of the random walks and the products
of the weights W along the corresponding trajectories,
after each time step ∆τ . This procedure, as we explain
below, also provides the possibility to readjust the value
of ER after each time step and to follow the time evolu-
tion of the system for as many time steps as are needed
to converge to the ground state wave function and energy
.

The procedure, the so-called DMC method, interprets

the integrand in (2.14), i.e.,

W (xN )

P (xN , xN −1)

W (x2)

P (x2, x1)

· · ·

×

process 2N

process 2N −1

process 4

process 3

| {z }

|

{z

}

| {z }

|

{z

}

W (x1)

P (x1, x0)

Ψ (x0, 0)

,

(2.26)

×

process 2

process 1

process 0

| {z }

|

{z

}

|

{z

}

as a product of probabilities and weights to be mod-
sequential stochastic processes
eled by a series of
0, 1, 2, . . . 2N . We will explain now how these processes
are described numerically.
Initial State. The 0-th process describes “particles”
(random walks) distributed according to the initial wave
function Ψ (x0, 0), which is typically chosen as a Dirac
δ–function

Ψ (x0, 0) = δ(x

x0) ,

−

(2.27)

where x0 is located in an area where the ground state
of the quantum system is expected to be large. The ini-
tial distribution (2.27) is obtained by simply placing all
particles initially at position x0.
Diﬀusive Displacement. As we explained earlier, the
successive positions xn−1, xn in (2.26) can be generated
through (2.25). The Monte Carlo algorithm produces
then the positions x1 = x0 + σρ1, x2 = x1 + σρ2,
etc by generating the series of random numbers ρn, n =
1, 2, . . ..
Birth–Death Process.
Instead of accumulating the
product of the weight factors W for each particle, it is
more eﬃcient numerically to replicate (see below) the
particles after each time step with a probability propor-
tional to W (xn). In this way, after each time step ∆τ ,
the (unnormalized) wave function is given by a histogram
of the spatial distribution of the particles. The calcula-
tion of the wave function Ψ(x, τ ) can be regarded as a
simulated diﬀusion–reaction process of some imaginary
particles.

In the replication process each particle is replaced by

a number of

mn = min [ int[W (xn) + u] , 3]

(2.28)

particles, where int[x] denotes the integer part of x and
where u represents a random number uniformly dis-
tributed in the interval [0, 1]. In case mn = 0 the particle
is deleted and one stops the diﬀusion process; this is re-
ferred to as a “death” of a particle. In case of mn = 1
the particle is unaﬀected and one continues with the next
diﬀusion step. In case mn = 2, 3 one continues with the
next diﬀusion step, but begins also a new series (in case
of mn = 3 two new series) of diﬀusive displacements
starting at the present location xn. This latter case is
referred to as the “birth” of a particle (of two particles
for mn = 3). From (2.28) one can see that at most two
new particles can be generated whereas one would ex-
pect that for int[W (xn) + u]
4 three or more new
series would be started. This limitation on the birth rate
of the particles is necessary in order to avoid numeri-
cal instabilities, especially at the beginning of the Monte
Carlo simulation, when ER may diﬀer signiﬁcantly from
E0. The error resulting from the limitation mn
3 is
expected to be small since for suﬃciently small ∆τ holds

≥

≤

W (x)

1

≈

−

V (x)

ER

−
¯h

∆τ

(2.29)

which, evidently, assumes values around unity.

C. The Diﬀusion Monte Carlo Method

We want to summarize now the algorithmic steps actu-
ally taken in a straightforward application of the DMC
method. To realize the suggested algorithm one starts
with
N0 “particles”, referred to as “replicas”, which are
placed according to a distribution Ψ (x0, 0). As pointed
out above, the actual numbers of replicas will vary as
replicas “die” and new ones are “born”. The replicas
are characterized through a position x(j)
n where the suf-
ﬁx n counts the diﬀusive displacements and where (j)
counts the replicas. The number of replicas after n dif-
n. In the ini-
fusive displacements will be denoted by
N0 replicas assigning positions x(i)
tial step one samples
0 ,
N0) according to the distribution Ψ (x0, 0).
(i = 1, . . . ,
As mentioned, we actually choose all replicas to begin
at the same point x0.

N

Rather than following the fate of each replica and of its
descendants through many diﬀusive displacements, one
follows all replicas simultaneously. Accordingly, one de-
termines the positions x(j)
following equation (2.25), i.e.,
1
one sets

1 = x(j)
x(j)

0 +

¯h∆τ /m

ρ(j)
1

·

(2.30)

p
for replicas j = 1, 2, . . .
N0 generating appropriate ran-
dom numbers ρ(j)
1 . This can be regarded as a one–step
diﬀusion process of the system of replicas. Once the
new positions (2.30) have been determined, one evalu-
ates the weight W (x(i)
1 ) given by (2.16) and, according
to (2.28), one determines the set of integers m(j)
for
1

5

)

N0. Replicas j with m(j)

1 = 0 are ter-
j = 1, 2, . . .
minated, replicas m(j)
1 = 1, 2, 3 are left unaﬀected, ex-
cept, that in case m(j)
1 = 2, 3 one or two new replicas
j′ are added to the system and their position is set to
x(j′
= x(j)
1 . The number of replicas is counted and,
1
N1 is determined. During the combined diﬀu-
thus,
sion and birth–death process the distribution of replicas
changes in such a way that the corresponding coordinates
x(j)
1 will now be distributed according to a probability
density which will be identiﬁed with Ψ(x, ∆τ ).
Adaptation of the Reference Energy ER. As a re-
sult of the birth–death process the total number
N1 of
replicas changes from its original
N0 value. As discussed
above, for ER values less then the ground state energy
the distribution Ψ(x, τ ) decays asymptotically to zero,
i.e., the replicas eventually all die; for ER values larger
than the ground state energy, the distribution will in-
crease indeﬁnitely, i.e., the number
n will exceed all
bounds. Only for ER = E0 can one expect a stable
asymptotic distribution such that the number of replicas
ﬂuctuates around an average value
N0. The spatial distri-
bution and increases/decreases of the number of replicas
allow one to adjust the value of ER as to keep the total
number of replicas approximately constant. To this end,
one proceeds from (2.29). Averaged over all replicas this
equation reads

N

(2.31)

(2.32)

W
h

i1 ≈

1

−

V
h

i1 −
¯h

ER

∆τ

where the average potential energy is

V
h

i1 =

1

N1

N1

V (x(j)
1 )

j=1
X
The reader should note that this average varies with the
number of diﬀusion steps taken for all replicas; in the
present case we consider the average after the ﬁrst diﬀu-
sive displacement. One would like the value of
to be
eventually always unity such that the number of replicas
remains constant. This leads to the proper choice of ER

W
h

i

E(1)

R =

V
h

i1

(2.33)

N1/

However,
if the distribution of replicas deviates too
strongly from φ0(x) the number of replicas can experi-
ence strong changes which need to be repaired by ‘over-
compensating’ through a suitable choice of ER. In fact,
in case
N0 < 1 one would like to increase subse-
quently the number of replicas in order to restore the
initial number of replicas and, hence, choose an ER value
larger than (2.33); in case
N0 > 1 one would like to
N1/
decrease subsequently the number of replicas and, hence,
choose an ER value smaller than (2.33). A suitable choice
is

E(2)

R =

V
h

i1 +

¯h
∆τ

1
(cid:18)

−

.

N1
N0 (cid:19)

(2.34)

6

In order to justify that (2.34) serves our purpose one
V
notes that exp[
ER)/¯h], for suﬃciently small
∆τ (
h
−
ER)/¯h. In the subsequent birth–
V
∆τ (
∆τ , is 1
i −
h
death process this would lead to an
N1 value (recall that
during the diﬀusion process the number of replicas does
not change) related to ER by

i −

−

ER =

V
h

i1 −

¯h
∆τ

1
(cid:18)

−

.

N1
N0 (cid:19)

(2.35)

However, one would like the total number of replicas dur-
ing the next birth–death process to return to the initial
N0 and ER to be given by an expression similar
value
to (2.33). This can be achieved by adding to both sides
of equation (2.35) the same quantity ¯h (1
N0) /∆τ .
Hence, the redeﬁned value for the reference energy is

− N1/

¯h
∆τ

R +

R = E(1)
E(2)

N1
N0 (cid:19)
which, by taking (2.33) into account,
(2.34).

−

(cid:18)

1

,

(2.36)

is identical to

i

/

V
h

− N

Equation (2.34) should be regarded as an empirical re-
sult rather than an exact one.
In fact, any expression
N0), with arbitrary
+ α (1
of the form ER =
positive α, can be used equally well in place of (2.34)9.
Usually, the actual value of the “feedback” parameter α
is chosen empirically for each individual problem so as
to reduce as much as possible the statistical ﬂuctuations
in
N0 and, at the same time, to diminish unwanted cor-
relations between the successive generation of replicas.
Equation (2.34) suggests that a good starting value for
α is ¯h/∆τ , a value used in our DMC program.
2nd, 3rd, . . . Displacements. The diﬀusive displace-
ments, birth–death processes and estimates for new ER
values are repeated until, after a suﬃciently large number
of steps, the energy ER and the distribution of replicas
becomes stationary. The ground state energy is then

E0 = lim

V

n−>∞h

n
i

(2.37)

n/

since
vides the ground state function φ0(x).

n−1 →

N

N

1. The distribution of replicas pro-

D. Systems with Several Degrees of Freedom

The DMC method described above is valid for a quan-
tum system with one degree of freedom x. However, the
method can be easily extended to quantum systems with
several degrees of freedom. Such systems arise, for exam-
ple, in case of a particle moving in two or three spatial
dimensions or in case of several interacting particles. For
these two cases the DMC method can be readily gener-
alized.
Particle in d Dimensions. The Hamiltonian of a par-
ticle of mass m moving in a potential V (x1, . . . xd) can
be written

ˆH =

¯h2
2m

−

∂2
∂x2
α

d

α=1
X

+ V (x1, . . . , xd) ,

(2.38)

where xα, α = 1, ..., d, denotes the Cartesian coordinates
of the particle and d (= 2, 3) represents the spatial di-
mension. For the Hamiltonian (2.38), the DMC algo-
rithm can be devised in a similar way as for (2.2). The
only diﬀerence to the one degree of freedom case is that
during each time step ∆τ one needs to execute d ran-
dom walks for each replica. Indeed, the kinetic energy
term in (2.38) can be formally regarded as the sum of
kinetic energies of d “particles” having the same mass m
and moving along the xα, α = 1, ..., d, directions. Conse-
quently, the diﬀusive displacements are governed by the
distribution

P (xn,1, xn−1,1; . . . xn,d, xn−1,d) =
m(xn,α−xn−1,α)2
d
α=1
2¯h∆τ

m
2π¯h∆τ

2 exp

1

(2.39)

−

h

.

i

Q

(cid:0)

(cid:1)

The product of probabilities can be described through
independent random processes, i.e., one can reproduce
the probability (2.39) through d independent diﬀusive
displacements applied for each replica to the d spatial
directions.
S Particles. In the case of S interacting particles, which
move in d spatial dimensions, the most general form of
the Hamiltonian is given by (assuming that no internal,
e.g., spin, degrees of freedom are involved)

S

ˆH =

¯h2
2mj

∂2
∂x2
jα

d

α=1
X

j=1 " −
X

+ V (

xjα

)

,

(2.40)

{

}

#

xjα

where V (
) accounts for both an interaction be-
{
tween particles and for an interaction due to an external
ﬁeld;
denotes the dependence on the coordinates
of all particles. By rescaling the coordinates in (2.40)

xjα

{

}

}

xjα =

m
mj

x′
jα ,

r

j = 1, . . . , S , α = 1, . . . , d

(2.41)

×

where m is an arbitrary mass, one can make the Hamil-
tonian (2.40) look formally the same as the Hamiltonian
(2.38) describing a single particle of mass m which moves
in d′ = S
d spatial dimensions. Hence, the generaliza-
tion of the DMC algorithm for this case is again apparent.
Sign Problem. The case in which (2.40) actually de-
scribes a system of identical particles cannot be treated
like that of a single particle moving in d′ = S
d spa-
tial dimensions. For such systems a prescribed boson or
fermion symmetry of the wave function with respect to
an interchange of particles must be obeyed. For bosons
(particles with integer spin) the total wave function (i.e.,
the product of the orbital and the spin wave functions) is
symmetric with respect to any permutation of the parti-
cles while for fermions (particles with half–integer spin)

×

the total wave function is antisymmetric with respect to
such permutation. This constraint determines the sym-
metry of the orbital part of the ground state wave func-
tion for fermionic systems (but not for bosonic ones): in
many cases of interest, the (orbital) ground state wave
function of fermionic systems will have nodes, i.e., re-
gions with diﬀerent signs, which make the DMC method,
as presented here, inapplicable. We shall not address
this issue in further detail and shall consider only cases
where the so-called “sign problem” of the ground state
wave function does not arise.

To summarize, a DMC algorithm for a system with
one degree of freedom can be adopted to a system of S
interacting particles moving in d spatial dimensions with
an eﬀective dimension of d′ = S
d. Exactly this feature
of the DMC method makes it so attractive for the evalu-
ation of the ground state of a quantum system. However,
in the case of identical fermions, one needs to obey the
actual symmetry of the ground state wave function and
the method often is not applicable.

×

III. ALGORITHM

Our goal is to provide an algorithm for the DMC
method presented in the previous section and to apply
this algorithm to obtain the ground state energy and
wave function for sample quantum systems. Some of
the examples chosen below, e.g., the harmonic oscillator,
have an analytical solution and, therefore, allow one to
test the diﬀusion Monte Carlo method. Other examples,
e.g., the hydrogen molecule, can not be solved analyti-
cally and, hence, the DMC method provides a convenient
way of solving the problem. The obtained results turn
out to be in good agreement with results obtained by
means of other numerical methods10.

A. Dimensionless Units

In order to implement the DMC method into a numeri-
cal algorithm, one needs to rewrite all the relevant equa-
tions in dimensionless units. One can go from conven-
tional (e.g., SI) units to dimensionless units by explicitly
writing each physical quantity as its magnitude times the
corresponding unit. In mechanics the unit of any phys-
ical quantity can be expressed as a proper combination
of three independent units, such as, L, T and
, which
denote the unit of length, time and energy, respectively.
By denoting the value of a given physical quantity with
the same symbol as the quantity itself (e.g., xL
x in
the case of coordinate x), the Schr¨odinger equation (2.10)
can be recast

→

E

∂Ψ
∂τ

=

¯hT
2mL2

∂2Ψ
∂x2 −

T
E
¯h

[V (x)

ER] Ψ .

(3.1)

It is convenient to choose L, T , and

such that

−

E

7

¯hT
2mL2 =

1
2

,

T
E
¯h

and

= 1

(3.2)

max = 2000, τ0 = 1000, ∆τ = 0.1, xmin =

N
xmax = 20 and nb = 200.

20,

−

holds. Since there are three unknown units and only two
relationships between them, one has the freedom to spec-
ify the actual value of either L, T ,
while the value of
E
the other two units follows from (3.2).

In dimensionless units obeying (3.2) the original

imaginary–time Schr¨odinger equation reads

∂Ψ
∂τ

=

1
2

∂2Ψ
∂x2 −

[V (x)

ER] Ψ .

−

(3.3)

It is not diﬃcult to transcribe also the other relevant
equations above in dimensionless units; for example, the
functions (2.15, 2.16) become

P (xn, xn−1) =

1
2π∆τ

r

exp

"−

(xn

xn−1)2

−
2∆τ

,

#

and

W (xn) = exp

[V (xn)

{−

ER]
}

−

,

respectively. As a consequence, the diﬀusive displace-
ments (2.25) are described by

xn = xn−1 + √∆τ ρn

(3.4)

B. Computer Program

The ﬂow diagram of the computer program11 imple-
menting the DMC method is shown in Fig. 1. Each
block in the diagram performs speciﬁc tasks which are
explained now.

All external data required for the calculation are col-
lected through a menu driven, interactive interface in the
Input block. First, one has to select the quantum system
on which the calculation is performed. At the program
level this means to deﬁne the right spatial dimensionality
d and the potential energy V (see Sec. IV) which corre-
sponds to the selected system. The quantum systems
covered by our program are the ground state of the har-
monic oscillator, of the Morse oscillator, of the hydrogen
atom, of the H+
2 ion (electronic state) and of the hydrogen
molecule (electronic state). The results of the simulation
for all these cases are presented in Sec. IV below. The
other input parameters are: the initial number of repli-
max), the
cas (
seed value for the random number generators, the num-
ber of time steps to run the simulation (τ0), the value
of the time step (∆τ ), the limits of the coordinates for
the spatial sampling of the replicas (xmin, xmax) and,
ﬁnally, the number of spatial “boxes” (nb) for sorting
the replicas during their sampling. Suggested values for
N0 = 500,
these parameters are (in dimensionless units):

N0), the maximum number of replicas (
N

Initialize replicas

Input

1

2

3

4

walk

branch

count

5

test

6

7

Output

Fig. 1. Flow diagram of the DMC algorithm.

In the next block, Initialize replicas, a two di-
mensional matrix, called psips, is deﬁned with the fol-
lowing structure: The ﬁrst (row) index identiﬁes the
replicas and takes integer values between one and
max.
The second (column) index points to information regard-
ing the replica identiﬁed by the ﬁrst index, and is a posi-
tive integer less or equal to the number of degrees of free-
dom of the system (i.e., d′, see Sec.II D) plus one. For a
given replica, say i, psips[i][1] is used as an existence
ﬂag:
it is zero (one) if the replica is dead (alive). The
other elements psips[i][j], (j = 2, . . . , d′ + 1) are used
to store the coordinates of the replica (i.e., xj,α according
to the notations of Sec.II D) during the simulation.

N

≥ N

To initialize the matrix psips one sets equal to one the
value of the existence ﬂag psips[j][1] for j = 1, . . .
N0
o are not born yet and, accordingly,
( replicas j
their existence ﬂag is set to zero), and then one assigns
the same coordinates for all these replicas (for the actual
values of these coordinates, see Sec.IV). Such a choice
for the initial distribution of the replicas corresponds to
a δ–function for Ψ(x, 0). For a suitable choice of x0 one
can be certain that there is always a signiﬁcant overlap of
Ψ(x, 0) and the ground state wave function φ0(x). The
initial value of the reference energy ER is simply given
by the value of the potential energy at the initial position
of the replicas [c.f. (2.33)].

After initializing the replicas the program enters into

8

a loop which essentially consists of three routines: walk,
branch and count. One loop corresponds to taking one
time step ∆τ .
walk: This routine performs the diﬀusion process of the
replicas by adding to the coordinates of the active (alive)
replicas the value √∆τ ρ, where ρ is a random number
drawn from a Gaussian distribution with mean zero and
standard deviation one [c.f. (3.4)]. The program uses
for this purpose the Gaussian random number generator
gasdev4 .
branch: The birth–death (branching) processes, which
follow the diﬀusion steps of the replicas, are performed
by the routine branch. For each alive replica the number
mn, given by (2.28), is calculated. For the generation
of u in (2.28), a uniformly distributed random number
in the interval [0, 1], the program employs the function
ran34. If a value mn = 0 results, the replica is killed by
setting the corresponding existence ﬂag to zero. If a value
mn = 1 results, the replica is left as it is. If a value n = 2
results, the replica is duplicated (the ﬁrst inactive replica
in psips is set active with the same coordinates as the
original replica). If a value n = 3 results, two identical
copies of the replica are generated in psips. The reader
may note that never more than two copies are born; this
limitation is necessary to prevent the uncontrolled growth
of the number of replicas which psips, due to its ﬁnite
size, might not be able to accommodate. Such growth
might occur when all the replicas are located in (almost)
the same place and when one can expect that large val-
ues mn can arise. Since (by choice) the replicas initially
are located in one and the same point of the conﬁgura-
tion space the ﬁrst diﬀusion process does not spread the
replicas far enough and, for certain initial positions, mn
could then become large for all replicas. The algorithm
also terminates if all the mn’s assume values zero. To
avoid this possibility one needs to choose the initial lo-
In general, any point
cation of the replicas with care.
where the ground state wave function is large is a good
choice.
count: The role of this routine is to return the ground
state wave function of the system (i.e., the spatial dis-
tribution of the replicas) at the end of the simulation.
To this end, the spatial interval (xmin, xmax) is divided
equally into nb “boxes” (sub-intervals) for each degree
of freedom and then, by employing standard numerical
methods8, one counts the distribution of replicas among
these “boxes”. The counting process starts after τ0 (in
units of ∆τ ) time steps when the system has already
reached its stationary state (identiﬁed through a con-
τ ) and is performed in a cumulative way for
verged
i
another τ0 time steps. This strategy can be justiﬁed
as follows: once stationarity is reached, the wave func-
tion Ψ(x, τ )
φ0(x) will practically not change in time;
hence, the replicas will essentially sample one and the
same wave function at any subsequent time and the cu-
mulative counting of the replicas in the “boxes” can be
used; this procedure yields better statistics for φ0(x) than

V
h

∝

sampling of replicas at only one instant in time; by cu-
mulative counting, the eﬀective number of replicas used
to sample the wave function is enhanced by a factor of
τ0 (number of time steps the counting is done).

Once the spatial distribution of replicas is known, one
can normalize the distribution to obtain the ground state
wave function using

φ0(xi)

≈

Ni
nb
i=1 N 2
i

,

i = 1, . . . , nb .

(3.5)

pP

As should be apparent by now, until the completion of
the algorithm the routines walk and branch are called
2τ0 times while the count routine is called only τ0 times,
namely, during the second half of the calculation. This
is controlled by the block test shown in Fig. 1.

i ≈

ER
h

Finally, the Output block returns the results of the
simulation. These results are: (i) the average value of
the reference energy
E0, which is calculated dur-
ing the second part of the simulation (i.e., from τ0 to
2τ0) when the system is already stabilized; (ii) the corre-
sponding standard deviation δER; (iii) the (imaginary)
time evolution of
for the ﬁrst τ0 time steps (used
basically to check how fast stationarity is reached by the
system during the simulation); (iv) the normalized spa-
tial distribution of the replicas, i.e., the ground state wave
function. Note that the average reference energy after n
time steps is deﬁned through

ER
h

i

ER(τ = n∆τ )
i
h

=

ER(i∆τ ) .

(3.6)

1
n

n

i=1
X

IV. EXAMPLES

In this section we report on the results obtained, by
means of the DMC program, for the ground state energy
and wave function of some quantum mechanical systems.
The program was executed on an HP-9000 (series 700)
workstation. In each case we specify the units used and
present numerical results of the simulation. For all sim-
ulations the values of the input parameters suggested in
Sec. III B, have been employed.

A. Harmonic Oscillator

For a one–dimensional harmonic oscillator, character-
ized by the proper angular frequency ω, one has (in SI
units)

V (x) =

mω2x2 .

1
2

(4.1)

Choosing T = 1/ω, one obtains from (3.2) L =
¯h/mω
and
= ¯hω. In corresponding dimensionless units, the
exact ground state energy is E0 = 1/2 and the ground
state wave function is5

p

E

9

)
x
(
o

φ

0.4

0.8

0.6

0.2

0

 

>
R
E
<

 

0.5

0.4

0.3

0.2

0.1

0

0

φ0(x) = π− 1

4 exp

x2
2

.

(cid:19)

−

(cid:18)

(4.2)

E0 =
0.125. The ﬁgure demonstrates also that the
the resulting ground state wave function is in excellent
agreement with (4.4).

−

ER(τ )
i
h

The results of the Monte Carlo simulation for the har-
monic oscillator are given in Fig. 2. At the beginning of
the simulation all replicas are located at the origin. The
main graph shows the rapid convergence of the reference
towards the exact ground state energy
energy
E0. The inset contains the plot of the ground state wave
function: the results of the simulation are represented by
triangles, while the continuous line corresponds to the
analytical result (4.2). The agreement between the dif-
fusion Monte Carlo result and the analytical expressions
is very good.

-0.1

-0.2

 

>
R
E
<

 

-0.3

0.6

0.4

0.2

)
x
(
o

φ

DMC simulation
analytical result

DMC simulation
analytical result

-0.4

0

0

-5

20

0

40

5

x

60

τ

10

15

80

100

Fig. 3. DMC description of the Morse oscillator. The time
evolution of ER is shown. The inset presents the ground state
wave function; the numerical result is represented through
dots, the wave function in the analytical form (4.4) is repre-
sented by a continuous line.

-4

-2

2

4

C. Hydrogen Atom

0

x

60

20

40

80

100

τ 
Fig. 2. Reference energy ER (in dimensionless units) as a
function of the imaginary time τ (in units of time steps ∆τ )
obtained by the DMC method for the harmonic oscillator.
ER converges rapidly towards the exact ground state energy
E0 = 0.5. The inset shows the corresponding ground state
wave function φ0(x). The result of the simulation is repre-
sented by dots while the continuous line corresponds to the
analytical solution (4.2)

B. Morse Oscillator

The Morse potential is deﬁned through

V (x) = D

e−2ax

2e−ax

.

(4.3)

−

(cid:1)

(cid:0)

In this case one has a natural
length scale through
L = 1/a which can be used as the unit of length. As a
= ¯h2a2/m.
result, from (3.2), one has T = m/¯ha2 and
For simplicity we shall consider only the case when (in
dimensionless units) D = 1/2; the exact ground state en-
ergy is E0 =
1/8, and the corresponding wave function
is12

−

E

φ0(x) = √2 exp

(4.4)

e−x

x
2

−

.

(cid:17)

−

(cid:16)

The results of the DMC description are presented in
Fig. 3. Initially, all replicas were positioned in our simu-
lation at the origin. The ﬁgure represents the time evo-
towards the exact ground state energy
lution of

ER
h

i

10

In case of the hydrogen atom it is customary to choose

the unit of length equal to the Bohr radius a = ¯h2/me2(
≈
0.53˚A). Thus, by setting L = a, one ﬁnds T = ¯h3/me4
27.21eV ). The well–known ground
and
1/2 and
state energy (in dimensionless units) is E0 =
the corresponding radial wave function is5

= me4/¯h2(

≈

−

E

φ0(r) = 2e−r .

(4.5)

i

ER
h

We have carried out a DMC simulation for the hydro-
gen atom, generalizing the previous description to three
spatial dimensions. At τ = 0 all the replicas were located
at (0, 0, 1), i.e., at a distance of one Bohr radius from the
origin, along the positive z axis. Figure 4 shows the con-
vergence of
to the exact ground state energy. This
convergence, however, is not as rapid as in the case of the
harmonic oscillator and the Morse oscillator. This is not
surprising since the hydrogen atom has three degrees of
freedom which require more sampling. The running time
of the simulation has also increased (see Table I). The in-
set shows both the radial wave function φ0(r) (triangles)
and the function χ(r) = rφ0(r) (squares). For compari-
son, the corresponding analytical solutions are also plot-
ted with continuous lines. Again the agreement between
the analytical results and those obtained by our algo-
rithm are good. The error of the radial wave function in
the vicinity of the origin is due to insuﬃcient sampling of
the number of replicas in this region of the conﬁguration
space. To improve the wave function for r
0 one may
decrease the size of the counting “boxes” in the vicinity

∼

of the origin, increase the number of replicas, or increase
τ .

trons. In the Born approximation one considers the pro-
ton positions ﬁxed and solves the corresponding station-
ary Schr¨odinger equation for the electrons. The wave
function of the two electrons must be antisymmetric with
respect to exchange of the electrons. In the ground state
the electrons are in a singlet spin state

-0.5

-0.6

 

>
R
E
<

 

-0.7

-0.8

3

2

1

)
x
(
o

φ

-0.9

-1

0

0

0

20

φ0(r): DMC simulation
φ0(r): analytical result
χ(r)=rφ0(r): DMC simulation
χ(r)=rφ0(r): analytical result

2

40

x

4

60

6

80

100

τ 
Fig. 4. DMC description of the hydrogen atom. The time
evolution of ER is shown. The inset presents both the radial
wave function φ0(r) and the function χ(r) = rφ0(r).

D. H+

2 Ion

The H+

±

−

−

−

e2

16.252

ˆH =

2 is E0 =

2 ion is held stabilized through a single electron
moving in the electric ﬁeld of two protons separated, at
equilibrium, by a distance R = 1.06˚A10. The ground
state of this quantum system can not be determined an-
alytically. The numerically determined ground state en-
ergy of H+
0.002 eV10. The DMC
method can be applied in this case as for the hydrogen
atom. The Hamiltonian is
¯h2
2
2m ∇

e2
r + 1
2
|
where R denotes the separation between the two pro-
tons. The results of the DMC description are presented
in Fig. 5. The same dimensionless units as in the case
of the hydrogen atom were employed and replicas were
located initially at the origin, the nuclei being located
R/2), for R = 2. Figure 5 shows that the
at (0, 0,
16.75
ground state energy obtained asymptotically is
eV (see Table I) which diﬀers from the more exact nu-
merical value10 by 0.5 eV, i.e., by about 3%. The inset
in Fig. 5 shows a plot of the spatial distribution of the
replicas, demonstrating that the electronic ground state
wave function is nearly spherically symmetric.

(4.6)

r
|

R

R

−

−

−

±

1
2

|

|

E. H2 Molecule

The H2 molecule is formed by two protons, at equi-
librium separated by R = 0.74˚A10, and by two elec-

-10

-20

-30

-40

-50

-60

 

>
R
E
<

 

6 
6 

y      
y      
3 
3 
0 
0 

-3 
-3 

-6 
-6 

6 

3 
z  

0 
-3 
-6 

-6 
-6 

-3 
-3 

0 
0 
x 
x 

3 
3 

6 
6 

τ 

0

20

40

60

80

100

Fig. 5. DMC description of the H+

2 ion. The time evolution
of ER is shown. The inset presents the spatial distribution of
the replicas, i.e., the electron cloud.

χ(1, 2) =

χ 1

2 ,+ 1

2

(1)χ 1

2 ,− 1

2

(2)

χ 1

2 ,− 1

2

(1)χ 1

2 ,+ 1

2

(2)

−

1
2

r

h

i
(4.7)

which is antisymmetric. Here χ 1
wave function of electron 1, 2 in the spin 1
magnetic quantum numbers
wave function of the electronic ground state

(1, 2) denotes the
2 state with
in the

1
2 . Accordingly,

2 ,± 1

±

2

Ψ0 = Φ(r1, r2) χ(1, 2)

(4.8)

the factor Φ(r1, r2), describing the spatial distribution
of the electrons, must be symmetric. This factor can be
determined through

Φ(r1, r2) =

( φ(r1, r2) + φ(r2, r1) )

(4.9)

1
2

r

where φ(r1, r2) is a solution of

−

(cid:20)

¯h2
2m

−

2
1 +
∇
(cid:0)
e2
r2 −
|

1
2

2
2
∇

(cid:1)

−

R

|

−

e2
r1 −
|
e2
r2 + 1
2
|

R

1
2

R

|

|

|

−

R

e2
r1 + 1
2
|
e2
r1 −
r2| (cid:21)
|
= E0 φ(r1, r2)

+

φ(r1, r2)

(4.10)

11

TABLE I. Results obtained during two diﬀerent simulations performed on four quantum systems listed in the ﬁrst column.
During Simulation I (II) the initial number of replicas was 500 (4000), the time step ∆τ = 0.1 (0.05), the length of simulation
τ = 1000∆τ (2000∆τ ), the random number generator seed 1 and the number of boxes used to calculate the spatial distribution
of the replicas 200 (400). hERi and δER are deﬁned in the text. ∆t represents the actual running time of the simulation on
a HP-9000 (series 700) workstation. For the hydrogen atom the energies are given both in dimensionless units and in eV (in
parenthesis), respectively. For comparison, E0 in the last column represents the exact value (analytical or obtained through an
alternative numerical method) of the corresponding ground state energy.

Quantum system
Harmonic oscillator
Morse oscillator
Hydrogen atom

2 ion

H+
H2 molecule

hERi
0.505
-0.1236
-0.495
(-13.477 eV)
-16.753 eV
-30.973 eV

Simulation I
δER
0.094
0.0749
0.080
(2.186 eV)
2.869 eV
3.638 eV

∆t
8 sec
10 sec
18 sec

40 sec
55 sec

hERi
0.500
-0.1245
-0.505
(-13.752 eV)
-16.476 eV
-31.968 eV

Simulation II

δER
0.048
0.0330
0.040
(1.093 eV)
1.389 eV
1.754 eV

a Numerical values calculated based upon the heat of dissociation given by Hertzberg10.

∆t
4 min
4 min
5 min

11 min
16 min

E0
0.5
-0.125
0.5
(13.6 eV)
-16.25(2) eVa
-31.6(87) eVa

8 
8 

y      
y      
4 
4 
0 
0 

-4 
-4 

-8 
-8 

8 

4 
z  
0 
-4 
-8 

-8 
-8 

-4 
-4 

0 
0 
x 
x 

4 
4 

8 
8 

±

31.688

(0, 0, 1)(0, 0,

The Schr¨odinger equation (4.10) cannot be solved an-
alytically. The available numerical result for the ground
0.013 eV10. The
state energy of H2 is E0 =
−
results of the diﬀusion Monte Carlo simulation for H2 are
shown in Fig. 6. The same dimensionless units as in the
case of the hydrogen atom were employed and the repli-
;
1)
cas at τ = 0 were located initially at
}
{
the position of the protons were (0, 0,
R/2), with R =
1.398. The simulation took about 55 seconds to com-
plete and the obtained ground state energy was E0 =
30.973 eV (see Table I). This result diﬀers from the ex-
−
act energy by 0.715 eV, i.e., by 2.3%. The inset of Fig. 6
shows the spatial distribution of the replicas which is
nearly spherically symmetric. In Fig. 7 we present the
results of a calculation in which an unphysically large R
value of 8.398 was assumed.
In this case the distribu-
tion of the electronic cloud around the protons is clearly
anisotropic, the energy of the electrons is still negative.

−

±

 

>
R
E
<

 

-10

-15

-20

-25

-30

0

 

>
R
E
<

 

-30

-40

-50

-60

-70

8 
8 

y      
y      
4 
4 
0 
0 

-4 
-4 

-8 
-8 

8 

4 
z  
0 
-4 
-8 

-8 
-8 

-4 
-4 

0 
0 
x 
x 

4 
4 

8 
8 

0

20

40

60

80

100

τ 
Fig. 6. DMC description of the electronic ground state of
the H2 molecule. The time evolution of ER is shown. The
inset presents the spatial distribution of the replicas, i.e., the
electron cloud.

20

40

60

80

100

120

140

τ 
Fig. 7. ER vs. τ and the spatial distribution of the replicas
(inset) at the end of the simulation for the H2 molecule for
an unphysically large separation between the two protons of
8.398 Bohr radius.

V. DISCUSSION

In this article, we have presented a detailed account
of the path integral formulation of the DMC method
devised for calculating simultaneously the ground state
energy and wave function of an arbitrary quantum sys-
tem. A simple numerical algorithm based on the DMC
method has been formulated and a computer program,
based on this algorithm, has been applied to determine
numerically the ground state of a few quantum systems
of pedagogical interest.

The DMC algorithm, as presented in this article, is
quite unstable numerically. We want to demonstrate here
the need for an improvement of the method. This need
arises due to the strong ﬂuctuations stemming from the
birth-death processes employed in this method. These
ﬂuctuations aﬀect the reference energy ER(τ ) which is
expected to converge to the ground state energy. This
deﬁned
convergence is observed only for the value of

ER
h

i

12

through equation (3.6). The actual time dependence of
ER is presented in Fig. 8 for the case of the harmonic
oscillator. The ﬂuctuations in ER are large, but symmet-
rically distributed around
which explains the good
ER
h
agreement between the result of the simulation with the
exact result. Attempts to use our DMC program to cal-
culate the electronic ground state energy of the H+
2 ion
and H2 molecule as a function of the separation between
the two protons, which would allow one to determine the
equilibrium separation from the minimum of this depen-
dence, have failed due to large ﬂuctuations in ER.

i

The DMC algorithm can be signiﬁcantly improved re-
sorting to a method called “importance sampling”1,9.
The basic idea of this method is to change the prob-
ability distribution of the replicas in a controlled way.
This can be achieved by reformulating (2.10) such that
the resulting equation has a solution Ψ(x, τ ) multiplied
by an approximation of the ground state wave function,
the latter being obtained, for example, from a variational
method. Application of the DMC method to this new
equation yields then replicas which spend more time in
“important” regions of the conﬁguration space where the
wave function Ψ(x, τ ) is expected to be large. For details
regarding importance sampling the reader is referred to
the literature cited1,2,9.

→

Any implementation of the DMC method leads to sys-
tematic errors due to the use of a ﬁnite time step ∆τ .
Apparently these errors can be reduced to zero by choos-
ing ∆τ
0. Unfortunately, this is not the case. Even
worse: making the time step shorter and shorter does not
only increase the needed computer time, but also renders
the successive generations of replicas more and more cor-
related such that their distribution actually departs more
and more from the ground state wave function. For each
quantum system investigated it is necessary to ﬁnd the
most convenient value of ∆τ which is short enough to
produce small systematic errors and at the same time is
long enough to keep the successive distributions of repli-
cas suﬃciently uncorrelated.

 

R
E

0.8

0.6

0.4

0.2

100

120

140

160

180

200

τ 

13

Fig. 8. Fluctuations of ER about

its average value
hERi ≈ 0.5 well after the distribution of replicas reached its
stationary form. The relatively large ﬂuctuations are due to
the birth–death processes which persist even if the replicas are
distributed according to the exact ground state wave function
φ0(x) and the reference energy ER has been adapted to the
exact ground state energy.

In order to apply the DMC method to calculate the
ground state properties of a system with interacting
fermions one has to treat, as mentioned above, the “sign
problem” due to the antisymmetry property of the many-
fermion wave function. Two principle methods, the ﬁxed–
node method13,1 and the release–node method14,1, have
been proposed to deal with this problem.

Once some kind of importance sampling is imple-
in the case of many–
mented and the sign–problem,
fermion systems, is resolved, the DMC method can be
used to compute ground state properties for molecules
or molecular clusters9 and for quantum spin, boson and
fermion systems15. The method is also applicable to the
study of ground–state phase transitions due to quan-
tum ﬂuctuations, a topic of modern condensed matter
physics15.

Finally we would like to mention that the DMC
method has been extended and successfully applied to
the study of the excited states of molecules and clusters9
and also to the study of ﬁnite temperature properties
of diﬀerent condensed matter systems. Also, the DMC
method has been successfully applied in quantum ﬁeld
theories16.

VI. ACKNOWLEDGMENTS

This work has been supported by a National Science
Foundation REU fellowship to B.F., by funds of the Uni-
versity of Illinois at Urbana-Champaign, and by a grant
from the National Science Foundation (BIR-9318159).

1 D. Ceperley and B. Alder, “Quantum Monte Carlo”, Sci-

ence 231, 555–560 (1986).

2 M. H. Kalos and P. A. Whitlock, Monte Carlo methods (J.

Wiley & Sons, New York, 1986).

3 J. B. Anderson, “A random–walk simulation of the
3 ”, J. Chem. Phys. 63, 1499–1503

Schr¨odinger equation: H+
(1975).

4 W. H. Press, S. A. Teukolsky, W. T. Vetterling and B. P.
Flannery, Numerical recipes in C : the art of scientiﬁc com-
puting (Cambridge University Press, Cambridge, 1992),
2nd edn.

5 L. D. Landau and E. M. Lifshitz, Quantum Mechanics,
vol. 3 of Course of Theoretical Physics (Pergamon Press,
Oxford, 1977).

6 R. P. Feynman and A. R. Hibbs, Quantum mechanics and

path integrals (McGraw-Hill, New York, 1965).

7 D. Khandekar, S. Lawande and K. B. Hagwat, Path Integral
Methods and Their Applications (World Scientiﬁc, London,
1993).

8 S. E. Koonin, Computational Physics (Benjamin, Reading,

MA, 1986).

9 M. A. Suhm and R. O. Watts, “Quantum Monte Carlo
studies of vibrational states in molecules and clusters”,
Phys. Rep. 204, 293–329 (1991).

10 G. Herzberg, Molecular Spectra and Molecular Structure

(Van Nostrand, New York 1950).

11 The program was written is the C programming language.
A copy of the source code is freely available from one of

the authors (K.S.).

12 L. Infeld and T. E. Hull, “The factorization method”, Rev.

Mod. Phys. 23, 21–68 (1951).

13 P. J. Reynolds, D. M. Ceperley, B. J. Adler and J. W. A.
Lester, “Fixed–node quantum Monte Carlo for molecules”,
J. Chem. Phys. 77, 5593–5603 (1982).

14 D. M. Ceperley and B. J. Adler, “Quantum Monte Carlo for
molecules: Green’s function and nodal release”, J. Chem.
Phys. 81, 5833–5844 (1984).

15 M. Suzuki, Quantum Monte Carlo methods in condensed

matter physics (World Scientiﬁc, Singapore, 1993).

16 T. Barnes and G. J. Daniell, “Numerical Solution of Field
Theories Using Random Walks”, Nucl. Phys. B257, 173–
198 (1985).

14

