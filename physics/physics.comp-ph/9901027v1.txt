9
9
9
1
 
n
a
J
 
8
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
7
2
0
1
0
9
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Algorithm for numerical integration of the rigid-body equations of motion

Igor P. Omelyan
Institute for Condensed Matter Physics, National Ukrainian Academy of Sciences,
1 Svientsitsky st., UA-290011 Lviv, Ukraine. E-mail: nep@icmp.lviv.ua

A new algorithm for numerical integration of the rigid-body equations of motion is proposed. The
algorithm uses the leapfrog scheme and the quantities involved are angular velocities and orienta-
tional variables which can be expressed in terms of either principal axes or quaternions. Due to
speciﬁc features of the algorithm, orthonormality and unit norms of the orientational variables are
integrals of motion, despite an approximate character of the produced trajectories. It is shown that
the method presented appears to be the most eﬃcient among all known algorithms of such a kind.

PACS numbers: 02.60.Cb; 95.75.Pq; 04.25.-g

The method of molecular dynamics (MD) plays a
prominent role in studying molecular liquids. All exist-
ing techniques appropriate to simulate such systems can
be categorized in dependence on what type of parameters
are chosen to represent the rotational degrees of freedom
and what kind of numerical algorithm is applied to inte-
grate the corresponding equations of motion.

In the molecular approach, the phase trajectories are
considered in view of translational and rotational mo-
tions. The translational dynamics is deﬁned by motion
of molecular centers of masses, whereas the orientational
motion can be determined in terms of Eulerian angles [1,
2], quaternions [3–8] or principal-axis vectors [4]. The
numerical integration within Eulerian angles is very in-
eﬃcient due to singularities of the equations of motion
[3, 5]. If the quaternions or principal-axis vectors are in-
volved, additional eﬀorts must be paid to conserve their
unit norms or orthonormality.

The atomic approach [9] treats dynamics of the sys-
tem in view of translational motion of individual atoms
which move under the potential-energy forces plus forces
of constraints introduced to hold inter-atomic distances
constant. This approach is believed to have good stabil-
ity properties, because the usual Verlet algorithm can be
applied here. Nevertheless, the atomic approach is so-
phisticated to implement for point molecules and when
there are more than two, three or four atoms in the cases
of linear, planar and three-dimensional molecules, respec-
tively. Moreover, to reproduce the rigid molecular struc-
ture it is necessary to solve complicated systems of non-
linear (in general, six per molecule) equations at each
time step of the integration [10].

It is a common practice to integrate orientational mo-
tion with the Gear predictor-corrector algorithm of a
high-order [11]. Such an algorithm, being accurate at
very small time steps, quickly becomes unstable with in-
creasing the step size [10]. Translational motion is usu-
ally integrated with lower-order Verlet [12], velocity Ver-
let [13] and leapfrog [14] integrators, owing their simplic-
ity and exceptional numerical stability. However, original
versions of these integrators were constructed assuming

that acceleration is velocity-independent and, therefore,
they can not be applied directly to rotational dynamics.
Analogous problems arise with translational motion in
the presence of magnetic ﬁelds.

In order to remedy that situation, Fincham [15] has
derived a rotational-motion version of the leapfrog algo-
rithm in which systems of four nonlinear equations per
molecule for quaternion components are solved by itera-
tion. Ahlrichs and Brode have introduced a method [16]
in which principal axes are considered as pseudo-particles
and constraint forces are introduced to maintain their
orthonormality. But the algorithm is within the Verlet
framework and does not contain angular velocities ex-
plicitly. The quaternion dynamics with constraints was
also formulated [17]. As a result, a new algorithm within
the velocity Verlet framework has been generated. Re-
cently, the principal-axes scheme has been adapted to
this framework as well [18]. Nevertheless, it was con-
cluded that the best numerical stability can be achieved
in the atomic-constraint approach.

In this paper we propose a new leapfrog integrator of
the rigid-body equations of motion. The main idea con-
sists in involving angular velocities, instead of angular
momenta, into the integration. This leads to signiﬁcant
simpliﬁcations with respect to angular-momenta versions
[15]. The algorithm seems to be the most eﬃcient and
simple, exhibiting excellent stability properties which are
similar to those observed within the cumbersome atomic-
constraint technique.

Consider a classical system with N rigid molecules
composed of M point atoms. Translational motion of
the system is described in the usual way, applying New-
ton’s law, whereas two ﬁrst-order equations per molecule
of the rotational dynamics can be obtained as follows.
According to Euler equations [1], the rate of change in
time of principal components, (Ωi
Z) = Ωi, of an-
gular velocity is

Y, Ωi

X, Ωi

Jα

dΩi
α
dt

= K i

α(t) + (Jβ − Jγ) Ωi

β(t)Ωi

γ(t).

(1)

Here (α, β, γ) = (X, Y, Z), (Y, Z, X) and (Z, X, Y), K i
α

1

i −rb

N ;M
j;a,b (ra

are principal components, Ki = Aik+
i , of the torque
i − ri)×f ab
ki =
ij exerted on molecule i with re-
P
spect to its center of mass ri due to the site-site interac-
tions f ab
ij ≡ f (ra
j) with the other molecules, Jα denote
the principal moments of inertia, orientational variables
were collected into the square orthonormal matrices Ai,
the nine elements of each of which (i = 1, . . . , N ) present
coordinates of three principal axes (XYZ) of the molecule
in the laboratory frame, the position of atom a within
i (t) = ri(t) + A+
molecule i in the same frame is ra
i (t)∆a,
3)+ is a vector-column of these
where ∆a = (∆a
positions in the body frame and A+ the matrix trans-
posed to A.

1, ∆a

2, ∆a

The second equation follows from deﬁnition of angular

velocity,

dAi
dt

Z −Ωi
Ωi
0
Y
Ωi
−Ωi
0
X
Z
Y −Ωi
Ωi
0
X





= 


Ai ≡ W(Ωi)Ai,

(2)

where the property AA+ = I of orthonormal matrices
has been used, W(Ωi) is a skewsymmetric matrix asso-
ciated with angular velocity, i.e., W+(Ωi) = −W(Ωi)
and I designates the unit matrix. In an alternative rep-
resentation the matrix Ai ≡ A(qi) is a function of the
four-component quaternion qi ≡ (ξi, ηi, ζi, χi)+ [4, 5].
The time derivatives of quaternions can be cast in the
form

more diﬃcult) arise in the angular-momentum approach
[15], Verlet and velocity Verlet frameworks [17, 18].

The basic idea of our approach lies in involving princi-
pal angular velocities into the integration process. Then,
acting in the spirit of leapfrog scheme and using Euler
equation (1), one obtains

(n+1)

Ωi
α

(t + h

2 ) = Ωi

α(t − h

2 ) +

α(t)

h
Jα hK i
(t)Ωi
γ

(n)

(n)

(t)i.

(4)

+ (Jβ − Jγ) Ωi
β

While the molecular torques K i
α(t) can easily be evalu-
ated via the coordinates ri(t) and Ai(t) or qi(t), a prop-
agation of the products of angular velocities in Eq. (4)
to on-step levels of time is necessary. The obvious choice
for this is

(n)

Ωi
β

(t)Ωi
γ

(n)

(t) =

β(t − h

2 )Ωi

γ(t − h
2 )

1
2 hΩi

(n)

+ Ωi
β

(t + h

2 )Ωi

γ

(n)

(t + h

2 )i.

(5)

α(t+ h

In view of (5), equation (4) constitutes a system of max-
imum three nonlinear equations per molecule for the un-
knowns Ωi
2 ). The system is simple and can be solved
in a quite eﬃcient way by iteration, n = 0, 1, . . . , taking
Ωi
2 ) as an initial guess. We note
α
that the order of truncation errors for angular-velocity
evaluation (4) reduces to three, because approximation
(5) is only second order accurate on h.

2 ) = Ωi

α(t − h

(t + h

(0)

The evaluation of orientational variables can be real-

dqi
dt

=

Ωi
Z −Ωi
0
0 −Ωi
−Ωi
Z
X Ωi
Ωi
0
Y
X −Ωi
Y −Ωi
Ωi
Z

X −Ωi
Y
Y Ωi
X
Ωi
Z
0







1
2







qi ≡ Q(Ωi)qi,

ized by writing

(3)

Si(t + h) = Si(t) + hHiSi(t + h
2 )

(6)

where Q(Ωi) is a skewsymmetric matrix again and the
unit quaternion norm ξ2
i = 1, which follows
from the orthonormality of Ai, has been used.

i + χ2

i + η2

i + ζ2

In the case of translational motion, it is easy to derive
the leapfrog algorithm [14]: vi(t+ h
2 ) = vi(t− h
2 )+hai(t),
ri(t + h) = ri(t) + hvi(t + h
2 ), where h denotes the time
increment, vi = dri/dt is the center-of-mass velocity,
ai(t) = 1
ij (t) the molecular acceleration and
m the mass of a separate molecule. Recently, it has been
shown that contrary to the conventional point of view,
the order of truncation errors for this leapfrog is four
rather than three for both coordinates and velocities due
to a fortunate cancellation of uncertainties [19].

N ;M
j;a,b f ab

m P

The problems with deriving a leapfrog algorithm for
rotational motion are that angular accelerations (1) de-
pend explicitly not only on spatial coordinates via molec-
ular toques but also on angular velocities. Moreover, the
time derivatives of orientational variables do not deﬁne
angular velocities directly (see Eqs. (2) and (3)). These
diﬃculties can not be handled with a simple leapfrog in
which position and velocity are known at diﬀerent times.
It is worth to underline that similar problems (even much

for principal-axis vectors (Si ≡ Ai, Hi ≡ Wi) and
quaternion (Si ≡ qi, Hi ≡ Qi) representations, where
Eqs. (2) and (3) have been used. The matrices Wi ≡
W(Ωi) and Qi ≡ Q(Ωi) are calculated using already de-
ﬁned angular velocities Ωi(t + h
2 ), whereas orientational
variables can be propagated to mid-step levels of time as

Si(t + h

2 ) = 1

2 [Si(t) + Si(t + h)] .

(7)

Equation (6) together with (7) are, in fact, systems of lin-
ear equations with respect to elements of Ai(t + h) and
qi(t + h), which, therefore, can be solved analytically.
The result is

Si(t + h) = (I − h

2 Hi)

−1(I + h

2 Hi)Si(t) ≡ Θi(t, h)Si(t).
(8)

2

2

More explicit expressions for the set Θi ≡ {Di, Gi} of
evolution matrices are: Di = [I (1 − h
i ) + hWi +
2 Pi]/[1+ h
h
16 Ω2
i ]
in the cases of principal axes and quaternion representa-
tions, respectively, where Pi is a symmetric matrix with
β(t + h
the elements Ωi
2 ).

i ] and Gi = [I (1− h

i )+hQi]/[1+ h

2 ) and Ω2

α(t + h

i ≡ Ω2

i (t + h

16 Ω2

2 )Ωi

4 Ω2

4 Ω2

2

2

2

2

This completes the algorithm. It is interesting to remark
that evaluation (8) exhibits the same fourth-order local
accuracy on h as in the case of translational coordinates,
despite the second order of interpolation (7). The reason
for this results again from a cancellation of errors arising
in coordinates and velocities during two neighbor time
steps.

It can be veriﬁed easily that the matrix (I− λH)−1(I+
λH) is orthonormal at arbitrary values of λ, provided
H+ = −H. Then, as follows from construction (8), the
evolution matrices Di and Gi are orthonormal as well.
Therefore, if initially the orthonormality of Ai and unit
norms of qi are satisﬁed, they will be fulﬁlled perfectly at
arbitrary times in future, despite the approximate char-
acter of produced trajectories. This fact can be consid-
ered as the main advantage of the algorithm derived that
distinguishes it from all other singularity free algorithms,
because no additional eﬀorts are needed to preserve the
rigid structure of molecules.

We now test our approach on the basis of MD sim-
ulations on liquid water. The simulations were per-
formed in an NVE ensemble with N = 256 molecules
at a density of N/V =1 g/cm3 and at a temperature of
298 K using the TIP4P potential (M = 4) and reac-
tion ﬁeld geometry [20]. All runs were started from an
identical well equilibrated conﬁguration. The numeri-
cal stability was identiﬁed in terms of ﬂuctuations of
the total energy, E = [h(E − hEi)2i]1/2/|hEi|. The ki-
netic part of the energy was calculated at time t putting
V(t) = 1
2 )] + O(h2) for V ≡ {vi, Ωi},
where the main term O(h2) of uncertainties is in the self-
consistency with the second order of global errors for our
algorithm (one order lower than minimal order of trun-
cation errors for coordinates and velocities).

2 ) + V(t + h

2 [V(t − h

As the atomic-constraint algorithm [9, 10] is inten-
sively exploited and its performances are generally recog-
nized, we have made comparative tests using this method
and our advanced leapfrog algorithm within quaternion
and principal-axes variables, as well as all known other
approaches, namely, the ﬁfth-order Gear algorithm [11],
implicit leapfrog of Fincham [15], pseudo-particle for-
malism [16], quaternion- and matrix-constraint methods
[17,18]. Samples of E(t) as a function of the length of
the simulations at four ﬁxed values of h = 1, 2, 3 and 4
fs are shown in Fig. 1. The usual value of step size for
studying such a system is 2 fs [21].

Despite the Gear algorithm integrates the equations of
motion very well at h = 1 fs, it has a very small region
of stability and can not be used for greater time steps
(see Fig. 1 (b)). Small step sizes are impractical in cal-
culations because too much expensive computer time is
required to cover the suﬃcient phase space. At the same
time, the quaternion- and matrix-constraint methods as
well as the pseudo-particle approach produce much more
stable trajectories and exhibit similar equivalence in the
energy conservation. Worse results are observed for the
Fincham’s leapfrog method. Finally, the best numeri-

cal stability is achieved in the atomic-constraint tech-
nique and our leapfrog scheme within both quaternion
and principal axes representations, which conserve the
energy approximately with the same accuracy (the re-
sults for principal-axis variables and pseudo-particle for-
malism are not included in the ﬁgure to simplify graph
presentation). Quite a few iterations (the mean num-
ber of iterations varied from 3 to 5 at h = 1 ÷ 4 fs)
was suﬃcient to ﬁnd solutions to the system of nonlinear
equations (4) with a precision of 10−12. This contributes
a negligible small computation time additionally into the
total time.

No shift of the total energy was observed for the
atomic-constraint and our leapfrog techniques at h ≤ 4
fs over a length of 10 000 steps. To reproduce features of
an NVE ensemble quantitatively, it is necessary for the
ratio Γ = E/Υ of the total energy ﬂuctuations to the ﬂuc-
tuations Υ of the potential energy to be no more than a
few per cent. We have obtained the following levels of E
at the end of the runs in our leapfrog approach: 0.0016,
0.0065, 0.015 and 0.029 %, corresponding to Γ ≈ 0.29,
1.2, 2.7 and 5.2 % at h= 1, 2, 3 and 4 fs, respectively (for
the system under consideration Υ ≈ 0.56%). Therefore,
the greatest time step considered (4 fs) is still suitable
for precise calculations. The ratio Γ can be ﬁtted with a
great accuracy to the function Ch2 with a coeﬃcient of
C ≈ 0.29 % fs−2. This is completely in line with our the-
oretical prediction about a characteristic square growth
of global errors and, as a consequence, E(t) at t ≫ h. The
square growth was observed in all other approaches, ex-
cepting the Gear algorithm. However, only the advanced
leapfrog algorithm provides a minimum of C and total
energy ﬂuctuations.

The algorithm presented might become popular be-
cause of its great stability, simplicity to implement for
arbitrary rigid bodies and its intrinsic conservation of
rigid structures. These features should be considered as
signiﬁcant beneﬁts of the algorithm with respect to all
the rest approaches.
It can easily be substituted into
existing MD programs on rigid polyatomics. Moreover,
since velocities appear explicitly, the algorithm can be
extended to a thermostat version and to integration in
the presence of magnetic ﬁelds. These problems will be
discussed in a separate publication.

The author thanks the President of Ukraine for ﬁnan-

cial support.

[1] A. Rahman, and F.H. Stillinger, J. Chem. Phys. 55, 3336

(1971); 60, 1545 (1974).

[2] J.P. Ryckaert, and A. Bellemans, Chem. Phys. Lett. 30,

123 (1975).

[3] H. Goldstein, Classical Mechanics, 2nd edn, (Addison-

Wesley, Reading, MA, 1967).

3

[4] D.J. Evans, Mol. Phys. 34, 317 (1977).
[5] D.J. Evans, and S. Murad, Mol. Phys. 34, 327 (1977).
[6] D.J. Tildesley, and P.A. Maden, Mol. Phys. 42, 1137

(1981).

[15] D. Fincham, Molecular Simulation 8, 165 (1992).
[16] R. Ahlrichs, and S. Brode, Comput. Phys. Commun. 42,

[17] I.P. Omelyan, Computers in Physics 12, No 1 Jan/Feb

[7] M.P. Allen, and D.J. Tildesley, Computer Simulation of

(1998) (to be published).

Liquids (Clarendon Press, Oxford, 1987).

[18] I.P. Omelyan, Comput. Phys. Commun. (to be pub-

59 (1986).

lished).

[19] A.K. Mazur, Preprint, physics/9707008 (1997).
[20] I.P. Omelyan, Phys. Lett. A 223, 295 (1996).
[21] D. Bertolini, and A. Tani, Phys. Rev. E 51, 1091 (1995).

[8] D.C. Rapaport, The Art of Molecular Dynamics Simula-
tion (Cambridge University Press, Cambridge, 1995).
[9] J.P. Ryckaert, G. Ciccotti, and H.J.C. Berendsen, J.

Comput. Phys. 23, 327 (1977).

[10] G. Ciccotti, J.P. Ryckaert, and M. Ferrario, Mol. Phys.

47, 1253 (1982).

[11] C.W. Gear, Numerical Initial Value Problems in Ordi-
nary Diﬀerential Equations (Prentice-Hall, Engelwood
Cliﬀs, NJ, 1971).

[12] L. Verlet, Phys. Rev. 159, 98 (1967).
[13] W.C. Swope, H.C. Andersen, P.H. Berens, and K.R. Wil-

son, J. Chem. Phys. 76, 637 (1982).

[14] R.W. Hockney, and J.W. Eastwood, Computer Simula-
tion Using Particles (McGraw-Hill, New York, 1981).

Figure caption

Fig. 1. The total energy ﬂuctuations as functions of
the length of the simulations on liquid water, performed
in various techniques at four ﬁxed time steps: (a) 1 fs,
(b) 2 fs, (c) 3 fs and (d) 4 fs.

4

