1
0
0
2
 
l
u
J
 
2
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
3
2
0
7
0
1
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Unconditionally Stable Algorithms to Solve the
Time-Dependent Maxwell Equations

Sebastiaan Kole, Marc Thilo Figge, and Hans De Raedt
Centre for Theoretical Physics and Materials Science Centre
University of Groningen, Nijenborgh 4
NL-9747 AG Groningen, The Netherlands
E-mail: j.s.kole@phys.rug.nl, m.t.ﬁgge@phys.rug.nl, deraedt@phys.rug.nl
http://rugth30.phys.rug.nl/compphys
(February 2, 2008)

Based on the Suzuki product-formula approach, we construct a family of unconditionally stable
algorithms to solve the time-dependent Maxwell equations. We describe a practical implementation
of these algorithms for one-, two-, and three-dimensional systems with spatially varying permittivity
and permeability. The salient features of the algorithms are illustrated by computing selected eigen-
modes and the full density of states of one-, two-, and three-dimensional models and by simulating
the propagation of light in slabs of photonic band-gap materials.

PACS numbers: 02.60.Cb, 03.50.De, 41.20.Jb, 42.70.Qs

I. INTRODUCTION

Maxwell’s partial diﬀerential equations of electromagnetism describe the evolution of electric and magnetic ﬁelds
in time and space [1]. They apply to a wide range of diﬀerent physical situations that are speciﬁed by the boundary
conditions on the electromagnetic (EM) ﬁelds. In many cases, numerical methods are required to solve Maxwell’s
equations, either in the frequency or time domain. For the time domain, a well-known class of algorithms is based on
a method proposed by Yee [2] and is called the ﬁnite-diﬀerence time-domain (FDTD) method. The FDTD method
has matured during past years and various algorithms implemented for speciﬁc purposes are available by now [3,4].
These algorithms owe their popularity mainly due to their ﬂexibility and speed while at the same time they are easy
to implement. A limitation of Yee-based FDTD techniques is that the stability of the algorithms is conditional. The
stability depends on the mesh size used to discretize space and the time step used to perform the time integration [3].
In this paper we present a family of unconditionally stable algorithms that solve the time-dependent Maxwell
equations (TDME) through the application of orthogonal transformations. That this is possible follows from the
representation of the TDME in matrix form. The exponential of a skew-symmetric matrix plays the role of the time-
evolution operator of the EM ﬁelds. This time-evolution operator is orthogonal. The key to the construction of an
unconditionally stable algorithm to solve the Maxwell equations is the observation that orthogonal approximations
to this operator automatically yield unconditionally stable algorithms. The Lie-Trotter-Suzuki product formulae [5]
provide the mathematical framework to construct orthogonal approximations to the time-evolution operator of the
Maxwell equations. However, this framework does not specify how to implement the algorithm.

Recently, a spectral-domain split-operator technique has been proposed to solve the TDME [6]. The split-operator
approach is based on one of the many forms of the Lie-Trotter-Suzuki product formulae. The spectral-domain
method makes use of Fast Fourier Transforms to compute the matrix exponentials of the displacement operators.
The choice made in Ref. [6] yields an approximation to the time-evolution operator that is no longer orthogonal and
hence unconditional stability is not automatically guarantueed [7]. In contrast, the methodology that we propose
yields eﬃcient, explicit, unconditionally stable schemes that operate on the EM ﬁelds deﬁned on the real space grid
only. This renders the algorithms rather ﬂexible, avoids wrap-around eﬀects [6], and naturally allows for the spatial
variations in both the permittivity and the permeability. On the other hand, the implementation described in this
paper is by no means unique and leaves a lot of room for further improvements.

For EM ﬁelds in a homogeneous medium, Zheng et al. showed that there is an alternating-direction-implicit (ADI)
time-stepping algorithm that is unconditionally stable [8,9]. Conceptually this approach is diﬀerent from ours. The
Fourier-mode stability analysis performed by Zheng et al. [8] does not generalize to the case of spatially varying
permittivity and permeability whereas in our approach, the algorithms are unconditionally stable by construction.

Our presentation is organized as follows: The basic theoretical concepts are given in Sec. II. In Sec. III we explain
the general philosophy that underlies the Suzuki approach to construct algorithms that are unconditionally stable.
In Sec. IV, we show in detail how to implement these ideas for the case of the TDME in one, two and three spatial
dimensions, using algorithms that are accurate up to second and fourth order in the time step. In Sec. V we explain
how we analyze the data generated by these algorithms. In Sec. VI we present the results of numerical simulations
for the physical systems that we selected as examples to test the algorithms. Our conclusions are given in Sec. VII.

1

The model system we consider in this paper describes EM ﬁelds in a d-dimensional (d = 1, 2, 3) medium with
spatially varying permittivity and/or permeability, surrounded by a perfectly conducting box. In the absence of free
charges and currents, the EM ﬁelds in such a system satisfy Maxwell’s equations [1]

II. THEORY

∂
∂t

∂
∂t

H =

1
µ ∇ ×

−

E ,

E =

1
ε ∇ ×

H ,

div εE = 0 ,

div H = 0 ,

where H = (Hx(r, t), Hy(r, t), Hz(r, t))T and E = (Ex(r, t), Ey(r, t), Ez(r, t))T denote the magnetic and electric ﬁeld
vector respectively. The permeability and the permittivity are given by µ = µ(r) and ε = ε(r). For simplicity of
notation, we will omit the spatial dependence on r = (x, y, z)T unless this leads to ambiguities. On the surface of the
perfectly conducting box the EM ﬁelds satisfy the boundary conditions [1]

n

E = 0 , n

H = 0,

×

·

with n denoting the vector normal to a boundary of the surface. The conditions Eq. (5) assure that the normal
component of the magnetic ﬁeld and the tangential components of the electric ﬁeld vanish at the boundary [1]. Some
important symmetries of the Maxwell equations (1)-(4) can be made explicit by introducing the ﬁelds

It is easy to show that

is skew-symmetric, i.e.

, with respect to the inner product

T =

H

−H

X(t) = √µH(t)

, Y(t) = √εE(t).

In terms of the ﬁelds X(t) and Y(t), the TDME (Eqs.(1) and (2)) read

X(t)
Y(t)

∂
∂t

(cid:18)

0

=

(cid:19)

 

1
√ε ∇ ×

1
√µ

−

1
√µ ∇ ×
0

1
√ε

X(t)
Y(t)

! (cid:18)

≡ H

(cid:18)

(cid:19)

X(t)
Y(t)

.

(cid:19)

Writing Ψ(t) = (X(t), Y(t))T , Eq. (7) becomes

∂
∂t

Ψ(t) =

Ψ(t).

H

H
Ψ′ dr,

Ψ
h

Ψ′
|

i ≡

ΨT

·

ZV

Ψ(t) = et

HΨ(0),

U (t) = et

H,

where V denotes the volume of the enclosing box.

The formal solution of Eq. (8) is given by

where Ψ(0) represents the initial state of the EM ﬁelds and the operator

determines their time evolution. By construction

Ψ(t)
k

k

2 =

Ψ(t)
Ψ(t)
i
|
h

=

εE2(t) + µH2(t)

dr,

ZV

(cid:2)

(cid:3)

relating the length of Ψ(t) to the energy density

w(t)

εE2(t) + µH2(t),

≡

of the EM ﬁelds [1]. From U (t)T = U (
=
. Hence the time-evolution operator U (t) is an orthogonal transformation, rotating the vector Ψ(t) without
Ψ(0)
Ψ(0)
i
|
h

U (t)Ψ(0)
U (t)Ψ(0)
i
|
h

t
H it follows that

Ψ(t)
Ψ(t)
i
|
h

1(t) = e−

t) = U −

=

−

2

(1)

(2)

(3)

(4)

(5)

(6)

(7)

(8)

(9)

(10)

(11)

(12)

(13)

changing its length
Ψ
k
time, as expected on physical grounds [1].

k

. In physical terms this means that the energy density of the EM ﬁelds does not change with

The fact that U (t) is an orthogonal transformation is essential for the development of an unconditionally stable
algorithm to solve the Maxwell equations. In practice, a numerical procedure solves the TDME by making use of an
approximation ˜U (t) to the true time evolution U (t) (see below). A necessary and suﬃcient condition for an algorithm
to be unconditionally stable is that [10]

˜U(t)Ψ(0)

k

k ≤ k

Ψ(0)
k

.

In other words, the length of Ψ(t) should be bounded, for arbitrary initial condition Ψ(t = 0) and for any time
t [10]. By chosing for Ψ(0) the eigenvector of ˜U (t) that corresponds to the largest eigenvalue of ˜U (t), it follows from
Eq. (14) that the algorithm will be unconditionally stable by construction if and only if the largest eigenvalue of ˜U (t)
) is less or equal than one [10]. If the approximation ˜U (t) is itself an orthogonal transformation,
(denoted by
˜U(t)
then
k

˜U(t)
k
k
= 1 and the numerical scheme will be unconditionally stable.

Summarizing: Unconditionally stable algorithms to solve Eq. (7) can be constructed by employing orthogonal
H. For the case at hand, unconditional stability is tantamount to the

k

approximations to the time-evolution U (t) = et
exact conservation of the energy density.

III. UNCONDITIONALLY STABLE ALGORITHMS

A numerical procedure that solves the TDME necessarily starts by discretizing the spatial derivatives (see Sec.IV).
This maps the continuum problem described by
onto a lattice problem deﬁned by a matrix H. Ideally, this mapping
should not change the basic symmetries of the original problem. The underlying symmetry of the TDME suggests
to use matrices H that are real and skew-symmetric. Formally the time evolution of the EM ﬁelds on the lattice is
given by

H

Ψ(t + τ ) = U (τ )Ψ(t) = eτ HΨ(t).

The second ingredient of the numerical procedure is to choose an approximation of the time-step operator U (τ ). A

standard procedure is to truncate the Taylor series of the matrix exponential [11,12]

U (τ ) = eτ H =

∞

(τ H)n
n!

.

n=0
X
Retaining terms up to ﬁrst order in τ yields

˜U(τ ) = I + τ H,

where I denotes the identity operator. As ˜U (τ ) ˜U (τ )T = I
= 0, it is clear that the matrix
Eq. (17) is not orthogonal. Making use of the symmetry of H and the positivity of the inner product, we ﬁnd that
, implying that Eq. (14) does
Ψ(0)
Ψ(0)
Ψ(τ )
Ψ(τ )
h
i
|
h
i
|
not hold. Hence, according to the arguments given above, the (Euler) scheme Eq. (17) is unstable, a fact which is of
course well-known [10].

˜U (τ )Ψ(0)
˜U (τ )Ψ(0)
i
|
h

HΨ(0)
HΨ(0)
i
|
h

Ψ(0)
Ψ(0)
i
|
h

= I for τ

(τ H)2

+ τ 2

−

>

=

=

The Yee algorithm is based on a leapfrog arrangement [2] and formally corresponds to an approximation to the

matrix exponential U (τ ) that can be written as

˜UYee(τ ) = I + τ H1 + τ 2H2 ,

where H1 and H2 are matrices, the structure of which depend on the lattice dimensionality. The presence of the
second order contribution can render the algorithm stable under certain conditions. It seems diﬃcult to determine
these conditions for arbitrary (skew-symmetric) H1 and (symmetric) H2, i.e. without making use of very speciﬁc
knowledge about the elements of H1 and H2. For EM ﬁelds moving in free space, a Fourier-space stability analysis of
the Yee algorithm yields

τ

≤

∆
c√d

,

as the condition for stability [3]. Here c is the light velocity in vacuum and ∆ denotes the spatial mesh size [3].

3

(14)

(15)

(16)

(17)

(18)

(19)

6
6
(20)

(21)

(22)

(23)

(24)

(25)

A systematic approach to construct orthogonal approximations to matrix exponentials, i.e. to construct uncondi-

tionally stable algorithms, is to make use of the Lie-Trotter-Suzuki formula [13,14]

and generalizations thereof [5,16]. Applied to the case of interest here, the success of this approach relies on the basic
but rather trivial premise that the matrix H can be written as

et(H1+...+Hp) = lim

etHi/m

p

i=1
Y

m

→∞  

m

,

!

H =

Hi,

p

i=1
X

where each of the matrices Hi is real and skew-symmetric.

The expression Eq. (20) suggests that

U1(τ ) = eτ H1 . . . eτ Hp,

might be a good approximation to U (τ ) if τ is suﬃciently small. Most importantly, if all the Hi are real and skew-
symmetric, U1(τ ) is orthogonal by construction. Therefore, by construction, a numerical scheme based on Eq. (22)
will be unconditionally stable. Using the fact that both U (τ ) and U1(τ ) are orthogonal matrices, it can be shown
that [17]

U (τ )

U1(τ )

k

−

k ≤

[Hi, Hj]
k

k

,

τ 2
2

where [Hi, Hj] = HiHj −
identical up to ﬁrst order in τ . We will call U1(τ ) a ﬁrst-order approximation to U (τ ).

i<j
X
HjHi. From Eq. (23) it follows that, in general, the Taylor series of U (τ ) and U1(τ ) are

The product-formula approach provides simple, systematic procedures to improve the accuracy of the approximation

to U (τ ) without changing its fundamental symmetries. For example the orthogonal matrix

U2(τ ) = U1(

τ /2)T U1(τ /2) = eτ Hp/2 . . . eτ H1/2eτ H1/2 . . . eτ Hp/2,

−

is a second-order approximation to U (τ ) [5,16]. Suzuki’s fractal decomposition approach [5] gives a general method
to construct higher-order approximations based on U1(τ ) or U2(τ ). A particularly useful fourth-order approximation
is given by [5]

U4(τ ) = U2(aτ )U2(aτ )U2((1

4a)τ )U2(aτ )U2(aτ ),

−

41/3). The approximations Eqs.(22) and (24), and (25) have proven to be very useful in many
where a = 1/(4
applications [14–25] and, as we show below, turn out to be equally useful for solving the TDME. In practice an eﬃcient
implementation of the ﬁrst-order scheme is all that is needed to construct the higher-order algorithms Eqs.(24) and
(25).

−

To summarize: Suzuki’s product-formula approach provides the formal machinery to deﬁne algorithms that are
unconditionally stable by construction. The accuracy of these algorithms can be improved systematically, to any
desired order [5]. The only assumption made so far is that the real, skew-symmetric matrix H representing the
TDME can be written as a sum of p real, skew-symmetric matrices Hi. The next step is to choose the Hi’s such that
the matrix exponentials exp(τ H1), ..., exp(τ Hp) can be calculated eﬃciently. This will turn the formal expressions
for U2(τ ) and U4(τ ) into eﬃcient algorithms to solve the TDME.

IV. IMPLEMENTATION

In this section we present the details of our implementation of unconditionally stable algorithms to solve the
TDME based on the Suzuki product-formula approach. For pedagogical reasons we start by considering the simplest
case: A one-dimensional (1D) system. Then we show that the strategy adopted for 1D readily extends to higher
spatial dimensions. The implementation we describe below is by no means unique, leaving a lot of room for further
improvements. In principle any decomposition Eq. (21) of H into real skew-symmetric parts will do. Largely guided
by previous work [17,19,24,25], we have adopted a decomposition that is eﬃcient, ﬂexible, suﬃciently accurate and
easy to program.

4

A. One dimension

We consider a 1D system along the x-direction. Accordingly, Maxwell’s equations contain no partial derivatives with
respect to y or z and ε and µ do not depend on y or z. Under these conditions, the TDME reduce to two independent
sets of ﬁrst-order diﬀerential equations [1]. The solutions to these sets are known as the transverse electric (TE) mode
and the transverse magnetic (TM) mode [1]. As the equations of the TE- and TM-mode only diﬀer by a sign we can
restrict our considerations to the TM-mode and obtain the result for the TE-mode by reversing the time.

From Eq. (7) it follows that the magnetic ﬁeld Hy(x, t) = Xy(x, t)/

µ(x) and the electric ﬁeld Ez(x, t) =

Yz(x, t)/

ε(x) of the TM-mode are solutions of

p

Note that in 1D, the divergence of Hy(x, t) and Ez(x, t) is zero. Hence Eqs.(3) and (4) are automatically satisﬁed.

p

p

Using the second-order central-diﬀerence approximation to the ﬁrst derivative with respect to x, we obtain

∂
∂t

∂
∂t

∂
∂t

∂
∂t

p
Xy(x, t) =

1

µ(x)

∂
∂x  

Yz(x, t)

ε(x) !

Yz(x, t) =

p

1
ε(x)

∂
∂x  

p
Xy(x, t)

µ(x) !

,

.

Xy(i, t) =

Yz(j, t) =

1
δ√µi (cid:18)
1
δ√εj (cid:18)

Yz(i + 1, t)

√εi+1 −

Xy(j + 1, t)

√µj+1 −

Yz(i

−
√εi
Xy(j

1, t)

,

−

1 (cid:19)
1, t)

−
√µj

1 (cid:19)

−

,

where the integer i labels the grid points and δ denotes the distance between two next-nearest neighbor lattice points
(hence the absence of a factor two in the nominator). For notational simplicity we will, from now on, specify the
spatial coordinates through the lattice index i, e.g. Xy(i, t) stands for Xy(x = (i + 1)δ/2, t).

FIG. 1. Positions of the two TM-mode ﬁeld components on the one-dimensional grid.

Following Yee [2] it is convenient to assign Xy(i, t) and Yz(j, t) to the odd, respectively, even numbered lattice site,
as shown in Fig. 1 for a grid of n points. The equations (28) and (29) can now be combined into one equation of the
form Eq. (8) by introducing the n-dimensional vector

Ψ(i, t) =

(cid:26)

Xy(i, t) = √µiHy(i, t), i odd
i even
Yz(i, t) = √εiEy(i, t),

.

The vector Ψ(t) describes both the magnetic and the electric ﬁeld on the lattice points i = 1, . . . , n. As usual the
i-th element of Ψ(t) is given by the inner product Ψ(i, t) = eT
Ψ(t) where ei denotes the i-th unit vector in the
i
n-dimensional vector space. Using this notation, it is easy to show that Eqs.(28) and (29) reduce to

·

where the matrix H is given by

∂
∂t

Ψ(t) = HΨ(t),

n

H =

′

βi+1,i

i=1
X

(cid:2)

(cid:0)

e

i

eT
i+1 −

e

eT
i

i+1

+ βi+1,i+2

e

i+1

eT
i+2 −

e

eT

i+2

i+1

,

(cid:1)

(cid:0)

(cid:1)(cid:3)

with βi,j = 1/(δ√εiµj) and the prime indicates that the sum is over odd integers only. In complete analogy to Eq. (10)
the time evolution of Ψ(t) is formally given by Ψ(t) = U (t)Ψ(0) with U (t) = exp(tH).

(26)

(27)

(28)

(29)

(30)

(31)

(32)

5

The notation introduced above will prove most useful for the case of 2D and 3D for which it is rather cumbersome
to write down matrix representations. For the 1D case it is not diﬃcult and in fact very instructive to write down
the matrix H explicitly. Indeed, we have

0
β2,1

−

β2,1
0
. . .

β2,3
. . .

βn

−

1,n

2

−

−

. . .
0
βn

−

1,n

−

βn

1,n
−
0

,









H = 






∂
∂t

and we immediately see that H is skew-symmetric by construction. Furthermore, for n odd we have

Ψ(1, t) = β2,1Ψ(2, t)

and

Ψ(n, t) =

βn

1,nΨ(n

1, t) ,

−

−

−

∂
∂t

such that the electric ﬁeld vanishes at the boundaries (Yz(0, t) = Yz(n + 1, t) = 0, see also Fig. 1), as required by the
boundary conditions Eq. (5). For this reason we only consider the case of n odd in the sequel.

According to the general procedure outlined in Sec.III, the ﬁnal step in the construction of an unconditionally stable
algorithm is to decompose H. Guided by previous work on Schr¨odinger and diﬀusion problems [17,19,24,25], we split
H into two parts, i.e. H = H1 + H2, where

i.e. we divide the lattice into odd and even numbered cells. In matrix notation we have

H1 =

′

βi+1,i

e

i

eT
i+1 −

e

eT
i

i+1

,

(cid:1)

H2 =

′

βi+1,i+2

e

i+1

eT
i+2 −

e

eT

i+2

i+1

,

(cid:0)

(cid:0)

n

i=1
X
n

i=1
X

0
β2,1

−

β2,1
0
0

H1 =

0
0
β4,3

−

β4,3
0

0

0
. . .
0

(cid:1)

0
0





























and

0
0

0
0
β2,3

−

β2,3
0

0

0
. . .
0

H2 =

βn

−

1,n

2

−

−

βn

−

2

−

1,n
0
0

0
0















0
0

βn

−

3,n

2

−

−

βn

−

2

−

3,n
0
0

.















0
0
βn

−

1,n

−

βn

1,n

−
0

Clearly both H1 and H2 are skew-symmetric block-diagonal matrices, containing one 1
2

2 skew-symmetric matrices.

×
According to the general theory given above, the ﬁrst-order algorithm deﬁned by

×

1 matrix and (n

1)/2 real,

−

U1(τ ) = eτ H1eτ H2.

is all that is needed to construct unconditionally stable second and higher-order algorithms. As the matrix exponential
of a block-diagonal matrix is equal to the block-diagonal matrix of the matrix exponentials of the individual blocks,
the numerical calculation of eτ H1 (or eτ H2) reduces to the calculation of (n
2 matrices.
The matrix exponential of a typical 2

2 matrix appearing in eτ H1 or eτ H2 is given by

1)/2 matrix exponentials of 2

−

×

exp

α

0 1
1 0

Ψ(i, t)
Ψ(j, t)

(cid:20)

(cid:18)

−

(cid:19)(cid:21) (cid:18)

(cid:19)

(cid:18)

−

cos α
sin α

sin α
cos α

Ψ(i, t)
Ψ(j, t)

.

(cid:19)

(cid:19) (cid:18)

×

=

6

(33)

(34)

(35)

(36)

(37)

(38)

(39)

(40)

B. Two dimensions

Assuming translational invariance with respect to the z direction, the system eﬀectively becomes 2D and the TDME
separate into two sets of equations [1]. For conciseness, in this section we only discuss the set of equations for the
TM-modes. The TE-modes can be treated in exactly the same manner.

The relevant EM ﬁelds for the TM-modes in 2D are Ψ(t) = (Xx(x, y, t), Xy(x, y, t), Yz(x, y, t))T , in terms of which

TDME Eq.(7) reads

∂
∂t

Ψ(t) =

Ψ(t) = 

H

0
0
∂
∂x

−

1
√ε
1
√ε

1
√µ
1
√µ

∂
∂y
∂
∂x
0

Ψ(t) .






1
√ε

1
√µ

1
√ε

1
√µ

−




0
0
∂
∂y

We discretize continuum space by simply re-using the one-dimensional lattice introduced above, as exempliﬁed in
Fig. 2 for the case of the TM-modes. This construction automatically takes care of the boundary conditions if nx and
ny are odd and yields a real skew-symmetric matrix H. In analogy with the 1D case the elements of Ψ(t) are deﬁned

FIG. 2. Positions of the three TM-mode EM-ﬁeld components on the two-dimensional grid for nx = 9 and ny = 5.

by

∂
∂t

where

Ψ(i, j, t) =




Yz(i, j, t) = √εi,jEz(i, j, t),
i even and j even
Xy(i, j, t) = √µi,jHy(i, j, t), i odd and j even
Xx(i, j, t) = √µi,jHx(i, j, t), i and j odd

.

Ψ(t) = HΨ(t) =

′

′

H (x)(i, j) + H (y)(i, j)

Ψ(t),

nx

ny

i=1
X

j=1 h
X

Discretization of the diﬀerential operators that appear in Eq. (41) yield expressions that have the same structure as
Eq. (33), with extra subscripts to account for the second spatial dimension. It follows that on the lattice,



H (x)(i, j) = +

i,j+1

H (y)(i, j) =

i+1,j

−

e

e

e

eT
i+1,j+1 −
i+1,j+1
δ√εi+1,j+1µi,j+1
eT
i+1,j+1 −
i+1,j+1
δ√εi+1,j+1µi+1,j

e

eT

i,j+1

eT

i+1,j

+

−

i+1,j+1

i+1,j+1

e

eT
i+2,j+1 −
i+2,j+1
δ√εi+2,j+1µi+2,j+1
eT
i+1,j+2 −
i+1,j+2
δ√εi+1,j+2µi+1,j+1

e

eT

i+1,j+1

eT

i+1,j+1

,

,

and the superscripts (x) and (y) refer to the derivative with respect to x and y respectively. Note that we use the
pair (i, j) to label the nxny unit vectors ei,j. In complete analogy with the 1D case we split Eqs.(44) and (45) into
two parts and obtain for the ﬁrst-order approximation to U (τ )

U1(τ ) = eτ H(x)

1 eτ H(x)

2 eτ H(y)

1 eτ H(y)

2

,

i

e

e

7

(41)

(42)

(43)

(44)

(45)

(46)

where for instance, in formal analogy to Eq. (36), we have

nx

ny

′

e

′

i+1,j+1

H (x)

2 =

e

eT
i+2,j+1 −
i+2,j+1
δ√εi+2,j+1µi+2,j+1

eT

i+1,j+1

.

i=1
X

j=1
X

It is not diﬃcult to convince oneself that approximation U1(τ ) and hence also U2(τ ) and U4(τ ) do not commute with
the (lattice version of) the divergence. Therefore the divergence of the EM ﬁelds in 2D is not conserved. Although
the initial state (at t = 0) of the EM ﬁelds satiﬁes Eqs.(3) and (4), time-integration of the TDME using Uk(τ ) yields
a solution that will not satisfy Eqs.(3) and (4). However, for algorithm Uk(τ ) the deviations from zero vanish as τ k
so that in practice these errors are under control and can be made suﬃciently small for practical purposes.

In terms of Ψ(t) = (X(t), Y(t))T for a 3D system, Eq. (7) reads

C. Three dimensions

∂
∂t

Ψ(t) =

Ψ(t) =

H

0
hT

h
0

(cid:18)

−

(cid:19)

Ψ(t),

where h is given by

0
∂
∂z
∂
∂y

1
√µ
1
√µ

1
√ε
1
√ε −

1
√ε −

1
∂
√µ
∂z
0
∂
∂x

1
√µ

1
√ε

1
√ε
1
√ε

1
√µ
1
√µ

∂
∂y
∂
∂x
0

.






h = 

−




We discretize the spatial coordinates by adopting the standard Yee grid [2]. We show a unit cell of this grid in Fig. 3.

In analogy to the systems in 1D and 2D, we assign the EM ﬁelds to the lattice points such that the boundary conditions
Eq. (5) are automatically satisﬁed. The elements of the vector Ψ(i, j, k, t) are given by

FIG. 3. Unit cell of the Yee grid.

Xx(i, j, k, t) = √µi,j,kHx(i, j, k, t), i even, j odd, k odd
Xy(i, j, k, t) = √µi,j,kHy(i, j, k, t), i odd, j even, k odd
Xz(i, j, k, t) = √µi,j,kHz(i, j, k, t), i odd, j odd, k even
i odd, j even, k even
Yx(i, j, k, t) = √εi,j,kEx(i, j, k, t),
Yy(i, j, k, t) = √εi,j,kEy(i, j, k, t),
i even, j odd, k even
i even, j even, k odd
Yz(i, j, k, t) = √εi,j,kEz(i, j, k, t),

,

Ψ(i, j, k, t) =






for the origin of the coordinate system (i, j, k) = (0, 0, 0) at the center of the unit cell shown in Fig. 3. The number
of lattice points in the x, y, and z direction will be denoted by nx, ny, and nz respectively. As before these numbers
are assumed to be odd.

8

(47)

(48)

(49)

(50)

Discretization of the diﬀerential operators that appear in Eq. (49) yields Eq. (7) in the form

∂
∂t

Ψ(t) = HΨ(t) =

nx

ny

nz

′

′

′

i=1
X

j=1
X

k=1 h
X

H (x)(i, j, k) + H (y)(i, j, k) + H (z)(i, j, k)
i

Ψ(t),

where the superscripts (x), (y) and (z) refer to the derivative with respect to x, y and z respectively,

H (x)(i, j, k) = +

i,j+1,k

e

e

i,j+1,k

i,j,k+1

e

eT

eT
i+1,j+1,k −
i+1,j+1,k
δ√εi+1,j+1,kµi,j+1,k
eT
i+2,j+1,k −
i+2,j+1,k
δ√εi+1,j+1,kµi+2,j+1,k

e

eT

e

−

e

eT
i+1,j,k+1 −
i+1,j,k+1
δ√εi+1,j,k+1µi,j,k+1
e

eT

i,j,k+1

eT
i+2,j,k+1 −
i+2,j,k+1
δ√εi+1,j,k+1µi+2,j,k+1

eT

i+1,j,k+1

,

e

−

i+1,j+1,k

i+1,j,k+1

i+1,j+1,k

+

and the expressions for H (y)(i, j, k) and H (z)(i, j, k) follow from Eq. (52) by symmetry. Note that we use the triple
(i, j, k) to label the nxnynz unit vectors ei,j,k.

In complete analogy with the 1D and 2D case we split Eq. (52) (as well as H (y)(i, j, k) and H (z)(i, j, k)) in two

parts and obtain for the ﬁrst-order approximation to U (τ )

U1(τ ) = eτ H(x)

1 eτ H(x)

2 eτ H(y)

1 eτ H(y)

2 eτ H(z)

1 eτ H(z)

2

,

where for instance

H (z)

1 =

′

nx

ny

nz

′

′
k=1  
X

i=1
X

j=1
X

e

i,j+1,k

e

eT
i,j+1,k+1 −
i,j+1,k+1
δ√εi,j+1,k+1µi,j+1,k

eT

e

−

i,j+1,k

i+1,j,k

e

eT
i+1,j,k+1 −
i+1,j,k+1
δ√εi+1,j,k+1µi+1,j,k

eT

i+1,j,k

.

!

Note that each contribution to Eq. (54) acts on a diﬀerent pair of elements of Ψ(t). Hence each of the matrix
exponentials in Eq. (53) acts on one quarter of all the lattice points. Performing the time-step operation Eq. (53)
involves only two sweeps over all lattice points.

By construction the algorithm deﬁned by Eq. (53) is unconditionally stable and so are the higher-order algorithms
deﬁned by U2(τ ) and U4(τ ). Each contribution to e.g. Eq. (54) is of the form Eq. (35) and hence its matrix exponential
can be calculated in exactly the same manner as in the 1D case (see Eq. (40)). The divergence of the EM ﬁelds in
3D is, for the same reason as in the 2D case, not conserved but decreases as τ k.

(51)

(52)

(53)

(54)

D. Implementation: Summary

The notation required to write down the algorithms in mathematical form might give the impression that these
algorithms are diﬃcult to program. Actually that is not the case, on the contrary. Recall that the ﬁrst-order algorithm
U1(τ ) is all we need to program: As explained in Sec. III, more accurate schemes can be implemented without extra
programming. Let us consider the algorithm for the case of 1D. For 2D and 3D we simply repeat the steps described
below two, respectively, three times. We have

U1(τ ) = eτ H1eτ H2

n

=

(

n

) (

′

exp

βi+1,i

e

i

eT
i+1 −

e

eT
i

i+1

′

exp

βi+1,i+2

e

i+1

eT
i+2 −

e

eT

i+2

i+1

.

)

(cid:2)

(cid:0)

(cid:1)(cid:3)

i=1
Y

i=1
Y
where we used the block-diagonal structure of H1 and H2 (see Eqs.(37) and (38)) to obtain an exact expression for
U1(τ ) in terms of an ordered product of matrix exponentials. Each of these matrix exponentials only operates on a
pair of elements of Ψ(t) and leaves other elements intact. The indices of each of these pairs are given by the subscripts
of e and eT . From Eq.(55) it is then clear what the program should do: Make loops over i with stride 2. For each
i pick a pair of elements from Ψ(t) according to the subscripts of e and eT , compute (or fetch from memory) the
elements of the plane rotation (see Eq. (40)), perform the plane rotation, i.e. multiply the 2
2 matrices and the
vectors of length two, and overwrite the same two elements.

(cid:1)(cid:3)

×

(cid:0)

(cid:2)

It also follows immediately that performing a time step with algorithms based on Eq. (55) takes

(K) plane
rotations where K is the total number of elements of the vector Ψ(t) (which is less or equal to the number of grid
points). This renders the algorithm eﬃcient: The number of operations to complete one time step scales linearly with
the number of grid points. Also note that there is a high degree of intrinsic parallelism in this class of algorithms. In
principle, the (n

1)/2 matrix-vector multiplications that implement eτ H1 or eτ H2 can be done in parallel.

O

(55)

−

9

In the absence of external currents (see below), updating the EM ﬁeld values of a 3D system using the the Yee
algorithm requires 6 arithmetic operations (see Eq.(33) in Ref. [3]) whereas the second-order algorithm U2(τ ) requires
33 arithmetic operations. For 1D and 2D problems the ratio is 9/4 and 21/6 respectively. Thus, in terms of CPU
time, the price paid for the unconditional stability of the algorithms is not that much and for some applications (see
below) may well be worth paying.

An important aspect that we have not yet discussed is the eﬀect of the discretization of space on the accuracy
of the numerical results. Both conditional Yee-type algorithms and unconditionally stable algorithms U1(τ ), U2(τ )
and U4(τ ) suﬀer from numerical dispersion (see Ref. [3], chapter 4 for an in-depth discussion). Simple methods to
reduce numerical dispersion are taking a ﬁner mesh or employing more accurate ﬁnite-diﬀerence approximations for
the spatial derivates [3]. The former obviously can be used here too (for the simulations discussed below we used a
mesh size that yields suﬃciently accurate results for the present purposes). There are no fundamental nor practical
problems to incorporate the latter method in the Suzuki-product-formula approach [17,19]. However as the emphasis
of the present paper is on the construction of unconditionally stable algorithms we relegate a presentation of these
technical but for applications important extensions to future publications.

V. DATA ANALYSIS

Time-domain algorithms obviously yield the time development of the EM ﬁelds. The scattering (transmission)
of the EM ﬁelds from (through) objects is one of the main applications of this technique [3]. One approach is to
prepare an initial state Ψ(0) of the EM ﬁelds, propagate the ﬁelds in time for a number of time-steps and analyse
the scattered and/or transmitted ﬁelds. Another, more realistic, approach is to use a current source J(t) = J(r, t).
Instead of Eq. (8) we have

(t) = (0, J(t))T represents the source term. The formal solution of Eq. (56) is given

∂
∂t

Ψ(t) =

Ψ(t)

(t),

H
where Ψ(t) = (X(t), Y(t))T and
by

− J

J

Ψ(t) = et

HΨ(0)

e(t

−

u)

H

(u) du,

J

t

−

0
Z

showing that we can simply re-use one of the unconditionally stable algorithms to compute the second term in Eq. (57).
In practice, for a time-step τ , we update Ψ(t) according to

Ψ(t + τ ) = eτ

HΨ(t)

e(t+τ

−

u)

H

(u) du.

J

t+τ

−

t
Z

A standard quadrature formula can be used to compute the integral over u [24]. When a current source is present we
take as the initial condition Ψ(0) = 0.

Time-domain algorithms can also be used to compute the eigenvalues of H, the discretized form of

. In general H
is a (very) large matrix, usually too large to be stored in memory. If only a few, well-separated eigenvalues of H are
required sparse-matrix techniques can be used to compute these eigenvalues [12,27]. However, if one is interested in
global features of the distribution of eigenvalues, i.e. if we want to determine all eigenvalues, time-domain algorithms
oﬀer several advantages. In fact they are at the heart of so-called “fast” algorithms to compute the density of states
(DOS) and other related quantities [28–33]. The basic idea of this approach was laid out by Alben et al. [28] who
used it to compute the DOS of models for one electron moving in a disordered alloy.

H

Denoting the (unknown) eigenvalues and (unknown) eigenvectors of H by iEj and φj respectively, we have

K

≡

= h

f (t)

etH Ψ(0)
Ψ(0)
i
|
Ψ(0)
Ψ(0)
i
|
h

Ψ(t)
Ψ(0)
i
|
h
Ψ(0)
Ψ(0)
i
|
h

Ψ(0)
φii|
eitEi |h
|
Ψ(0)
Ψ(0)
i
|
h
where K (K = n for 1D, K = 3nxny/4 for 2D, K = 3nxnynz/4 for 3D) is the dimension of the vector space on
which H acts. From Eq. (59) it follows immediately that the Fourier transform of f (t) contains the information on
all eigenvalues for which
> 0. Using independent random numbers to initialize the elements of Ψ(0), it
can be shown that the density of states

(ω) is given by [26]

φii|
Ψ(0)
|

i=1
X

(59)

=

|h

,

2

(ω) = a

D

+

∞

Z

−∞

e−

iωtf (t) dt,

D

10

(56)

(57)

(58)

(60)

where a is an irrelevant constant factor and f (t) is the average of f (t) over diﬀerent realizations of the random initial
state. It is often expedient to consider, in addition to

(ω), the integrated density of states

D

N (ω) =

(u) du .

ω

D

Z

−∞

The statistical error on f (t) vanishes as 1/√SK where S is the number of statistically independent samples of Ψ(0)
[26]. The fact that the statistical error decreases with the number of lattice points K/2 gives a tremendous boost to
the eﬃciency of the method.

k

k

H

The information on the eigenvalues of H, obtained through the use of a time-domain method is intimately related
]
to the unconditional stability of the latter. As f (t) is band-limited, with frequencies Ej in the interval [
k
denotes the largest eigenvalue of H in absolute value), it follows from Nyquist’s sampling theorem that it
(where
is suﬃcient to sample f (t) at regular intervals ∆t = π/
. If N denotes the number of data points used to sample
H
k
f (t), frequencies Ej that diﬀer less than ∆E = π/N ∆t are indistinguishable (although they will all contribute to
the DOS). Extending the length of the time integration by a factor of two increases the resolution in frequency by
a factor of two. This is a rather eﬃcient and ﬂexible procedure to trade accuracy for computational resources. One
may object that by integrating the TDME over longer and longer times (larger and larger N ) the error on Ψ(t) will
increase, possibly leading to no gain in accuracy at all. However, it has been shown rigorously [26] that the error on
the eigenvalues of H vanishes as τ 2/N if one uses unconditionally stable algorithms based on the second-order Suzuki
product-formula. The proof given in Ref. [26] applies to the fourth-order algorithm U4(τ ) as well, the exponent of τ
being four instead of two.

−k

H

H

k

k

k

,

In some cases the underlying diﬀerential equations and boundary conditions only specify the solution up to a non-
zero constant. In the calculation of the DOS, the presence of such a constant contribution shows up as a peak at
zero frequency. In principle this peak can be removed by modifying the random initial state but as the origin of this
irrelevant artifact is understood, there is little reason of doing this.

Summarizing: Solving the TDME by the k’th-order Suzuki product-formula algorithm Uk(τ ) guarantees that the
accuracy with which the eigenvalues of H can be determined vanishes as τ k/N , where N is the number of points used
to sample f (t) (see Eq. (59)).

VI. SIMULATION RESULTS

In this section we present simulation results for several physical systems which we selected as examples to test our
algorithms. For numerical purposes it is expedient to use dimensionless quantities. We will denote the unit of length
by λ and take the velocity of light in vacuum, c, as the unit of velocity. Then time and frequency are measured in
units of λ/c and c/λ, respectively. The permittivity ε and permeability µ are measured in units of their corresponding
values in vacuum.

Let us ﬁrst consider an empty, one-dimensional cavity with constant permeability µ = 1 and constant permittivity

ε = 1. The eigenfrequencies for a system of length L are given by [1]

A. One dimension

(61)

(62)

ωk =

πk
L

,

obtained according
where k = 0, 1, 2, . . . labels the diﬀerent EM modes. In Fig. 4 we show the density of states
to the procedure described in Sec. V, using the second-order algorithm U2(τ ) (solid line) and the standard Yee
algorithm [2,3] (dashed line). In both calculations the lattice spacing δ = 0.1 and the time step τ = 0.01. Each
curve shown in Fig. 4 is the average of S = 10 statistically independent runs, taking N = 16384 samples of f (t) (see
Eq. (59)) at time intervals ∆t = 0.1. The peaks in Fig. 4 correspond to the exact frequencies (see Eq. (62)) of the
1D cavity. The background signal produced by the Yee algorithm [2,3] is at least eight orders of magnitude larger
than that generated by U2(τ ). The time-step operator of the Yee algorithm is not an orthogonal matrix and hence its
eigenvalues do not necessarily lie on the unit circle. This is related to the fact that the Yee algorithm is conditionally
stable [3] and leads to ﬂuctuations in the energy density w(t), as illustrated by the dashed line in Fig. 5, and to
negative values of the Fourier transform of f (t) (which is the reason why Fig. 4 shows

instead of

(ω)
|

(ω)).

|D

In contrast, the unconditional stability of algorithms based on the Suzuki product-formula implies that w(t) is

(ω)
|

|D

D

constant in time. The solid line in Fig. 5 shows that this is indeed the case.

11

FIG. 4. Density of states of a one-dimensional cavity of length L = 10. Solid line: U2(τ ) algorithm; dashed line: standard

Yee algorithm.

FIG. 5. Normalized total energy density as a function of time for the same physical system as in Fig. 4. Solid line: U2(τ );

dashed line: standard Yee algorithm.

As a second example we consider a one-dimensional stack of dielectric material, schematically shown in Fig. 6. The

material indices of refraction, denoted by n1 and n2, give rise to a spatially varying permittivity

In particular, we consider a structure that is known as the quarter-wave stack and is characterized by the relation

such that the length of the optical path in the two layers is the same. The density of states exhibits a gap centered
around the midgap frequency [1,34]

ε(x) =

(cid:26)

n2
n2

1, if x mod(a + b)
a
2, if x mod(a + b) > a

≤

.

n1a = n2b,

ω0 =

π
2n1a

.

(63)

(64)

(65)

In Fig. 7 we show the density of states
(ω) as obtained by U2(τ ). Also for these calculations the lattice spacing
δ = 0.1 and the time step τ = 0.01. Each curve in Fig. 7 is the average of S = 100 statistically independent runs,
taking N = 16384 samples of f (t) (see Eq. (59)) at time intervals ∆t = 0.1. Note that the system length L and the
(odd) number of lattice points have to be chosen judisciously, otherwise the spectrum will exhibit artifacts (impurity
states due to one extra grid point).

D

12

FIG. 6. Structure of a one-dimensional stack of dielectric material.

FIG. 7. Density of states, as obtained by the U2(τ ) algorithm, of a quarter-wave stack of length L = 24.9 and with parameters

n1 = 1, n2 = 4, a = 0.8, b = 0.2 (see Fig.6) as a function of the rescaled frequency ˜ω = ω/ω0.

In Fig. 8 we show the density of states

(ω) as obtained by the Yee algorithm. Note that the spectral weight can
take negative values, an unphysical feature that is a manifestation of the fact that the energy of the EM ﬁeld is not
conserved. In Fig. 9 we present the integrated density of states N (ω) for both the U2(τ ) and Yee algorithm. The
result of the U2(τ ) algorithm is in excellent agreement with the analytical calculation [34].

D

B. Two dimensions

A photonic bandgap (PBG) material prohibits the propagation of EM ﬁelds in a range of frequencies that is
characteristic for its structure [35]. A PBG is called absolute if it exists for any wave vector of the EM ﬁelds. The
most common method used to compute a PBG employs a plane-wave expansion to solve the time independent Maxwell
equations (see e.g. [36]). This kind of PBG calculation requires a Fourier transform of the unit cell of the dielectric
structure which is for simplicity considered to be periodic.

With our time-domain algorithm the existence of a PBG can be demonstrated with relative ease. It suﬃces to
compute the spectrum of such a dielectric structure with a random initial state. If the spectrum is gapless there is
no need to make additional runs. If there is a signature of a gap, it can be conﬁrmed and reﬁned by making more
runs. As an example we consider a system consisting of a dielectric material pierced by air-ﬁlled cylinders [37]. The
geometry is taken to be a square parallelepiped of size L = 45.1 that is inﬁnitely extended in the z-direction and
hence is eﬀectively two-dimensional. In Fig. 10 we present the results for the PBGs which we obtained for both the
transverse magnetic (TM) and transverse electric (TE) modes as a function of the ﬁlling fraction. The data have
been generated by means of the algorithm U4(τ ) with a mesh size δ = 0.1 and a time step τ = 0.1. To compute the
DOS we used N = 32768 samples of f (t) at time intervals ∆t = 0.1. Only a single random initial state for the EM
ﬁelds has been used. Replacing the free-end boundary conditions Eq. (5) by periodic boundary conditions (results
not shown) only leads to minor changes in the locations of PBGs. The results shown in Fig. 10 are in good agreement
with those presented in Ref. [37].

In Fig. 11 we study the propagation of time-dependent EM ﬁelds through the above described PBG material
consisting of twelve unit cells. The PBG material is placed in a cavity which contains a point source (located to the
left of the PBG material) that emits radiation with frequency ω. The TDME were solved by the U2(τ ) algorithm
with δ = 0.1 and τ = 0.01 in the presence of a current source according to Eq. (58). The snapshots show the absolute
intensity E2
z of the TM-mode at t = 102.4. The computed DOS of the PBG material is given in Fig. 12. We used
the U4(τ ) algorithm with δ = 0.1, τ = 0.1, and took N = 32768 samples of f (t) at time intervals ∆t = 0.1 in

13

FIG. 8. Density of states, as obtained by the standard Yee algorithm, of a quarter-wave stack of length L = 24.9 and with
parameters n1 = 1, n2 = 4, a = 0.8, b = 0.2 (see Fig.6) as a function of the rescaled frequency ˜ω = ω/ω0. Note the diﬀerence
in the vertical scale between Figs.7 and 8.

FIG. 9. Integrated density of states as function of the rescaled frequency ˜ω = ω/ω0, for the same system as in Figs.7 and 8.

Solid line: U2(τ ) algorithm; dashed line: standard Yee algorithm; dashed-dotted line: analytical result.

this computation. The presence or absence of gaps in the DOS leads to qualitative changes in the transmitted (and
reﬂected) intensities. Since a gap is present in the DOS at ω = 1.89, radiation with this frequency does not easily
propagate through the (thin slice of) PBG material. On the other hand, the DOS has no gaps at ω = 1.50 and
ω = 2.50, so that propagation of EM ﬁelds through the PBG material should be possible, as is indeed conﬁrmed by
Fig. 11.

C. Three dimensions

We ﬁrst compute the modes of a simple cubic cavity of size L. The eigenfrequencies are given by [1]

ωklm = πL−

1

k2 + l2 + m2 ,

(66)

p

where k, l, and m are non-negative integers. Eigenmodes corresponding to (k, 0, 0), (0, l, 0) and (0, 0, m) are incom-
patible with the boundary conditions Eq. (5). In Tab. I we present the frequencies of the ﬁve lowest eigenmodes of a
cubic cavity for L = 5. The agreement with the theoretical values is satisfactory. Note that as the frequency increases,
the deviation from the exact result increases. This is due to the (second-order) ﬁnite-diﬀerence representation of the
spatial derivatives on the grid and is a manifestation of the numerical dispersion mentioned earlier.

14

FIG. 10. Absolute photonic bandgaps of a dielectric material (ε = 11.4) pierced by air-ﬁlled cylinders. The largest overlap

of the TM- and TE-mode gaps occurs at a ﬁlling fraction of approximately 0.77.

(k, l, m)
1,1,0
1,1,1
2,1,0
2,1,1
2,2,0

Simulation
0.889
1.089
1.404
1.534
1.771

TABLE I. Frequencies of the eigenmodes of a cubic cavity of size L = 5. Simulation: values determined from DOS data

generated using U2(τ ) with parameter values δ = 0.2, τ = 0.01, N = 4096 and ∆t = 0.1.

As a second 3D example we consider the emission of the EM radiation from a point source located inside dielectric
z) plane is shown in the
material containing spherical voids. A projection of the material onto the x
top panels of Fig.13. A point source is placed inside the center void to mimic an atom or molecule that emits a photon.
The remaining panels in Fig.13 show snapshots of the light intensity after an elapsed time t = 384, for diﬀerent sizes
of the voids and diﬀerent values of the permittivity. If the latter is larger than 5, the images no longer depend on the
value of the permittivity (results not shown). For ε = 1.5 (panels (b) and (B)) the EM ﬁeld easily propagates through
the sample and leaves the sample from all sides. This is not the case for ε = 5: Radiation can leave the sample only at
those locations where there is very little or no dielectric material left. In other words, light emerges from the sample
in well-deﬁned directions only. Clearly, much more work is necessary to study the propagation of EM radiation in
this system as a function of the material parameters, the system size and the frequency of the emitted photons.

y (or y

z or x

−

−

−

VII. CONCLUSION

We have introduced a new family of algorithms to solve the time-dependent Maxwell equations. Salient features of

these algorithms are:

rigorously provable unconditional stability for one-, two- and three-dimensional systems with spatially varying
permittivity and permeability,

the use of a real-space (Yee-like) grid,

the order of accuracy in the time step can be systematically increased without aﬀecting the unconditional
stability (in this paper we limited ourselves to second and fourth-order schemes)

the exact conservation of the energy density of the electromagnetic ﬁeld

easy to implement in practice

•

•

•

•

•

ωklm
0.889
1.088
1.405
1.539
1.777

15

FIG. 11. Snapshot of the intensity E2
Fig.2), emitting radiation with frequency ω.

z at t = 102.4. Dimensions of the system: 30 × 12.1; point source located at (6,6) (see

We have presented results for the density of states of simple cavities and photonic bandgap materials. We demon-
strated that mathematical properties of the algorithms are such that they can be used to compute the density of
states with very good accuracy (limited by the accuracy of the spatial discretization used). We gave some illustrative
examples of scattering of waves by photonic bandgap systems. These examples also served to show that our algorithms
reproduce known results. The ﬁrst feature opens up possibilities for applications to left-handed materials [38,39]. We
intend to report on this subject in the near future.

Although we believe there is little room to improve upon the time-integration scheme itself (except for using higher-
order product-formulae), for some applications it will be necessary to use a better spatial discretization than the most
simple one employed in this paper. There is no fundamental problem to extend our approach in this direction and we
will report on this issue and its impact on the numerical dispersion in a future publication.

The rigorous unconditional stability of the algorithms that we proposed in this paper is a direct consequence of
adopting a Suzuki-product-formula approach that preserves the fundamental symmetries of the physical system. In
view of the generic character of this methodology, the approach pursued in the present paper should be useful for
constructing unconditionally stable algorithms that solve the equations for e.g. sound, seismic and elastic waves as
well.

We thank K. Michielsen for a critical reading of the manuscript and W. Bruns for helpful discussions. This work is

partially supported by the Dutch ‘Stichting Nationale Computer Faciliteiten’ (NCF).

ACKNOWLEDGEMENTS

[1] M. Born and E. Wolf, Principles of Optics, (Pergamon, Oxford, 1964).
[2] K.S. Yee, IEEE Transactions on Antennas and Propagation 14, 302 (1966).
[3] A. Taﬂove and S.C. Hagness, Computational Electrodynamics - The Finite-Diﬀerence Time-Domain Method, (Artech

House, Boston, 2000).
[4] See http://www.fdtd.org
[5] M. Suzuki, J. Math. Phys. 26, 601 (1985); ibid 32 400 (1991).
[6] W. Harshawardhan, Q. Su, and R. Grobe, Phys. Rev. E 62, 8705 (2000).
[7] This is due to the speciﬁc split-up adopted in [6] and not an intrinsic property of the spectral-domain approach.

16

FIG. 12. Density of states of a sample of photoning band-gap material used in Fig.11. Size of the sample: 9.1 × 12.1; ﬁlling

factor: 0.77.

[8] F. Zheng, Z. Chen, and J. Zhang, IEEE Trans. Microwave Theory and Techniques 48, 1550 (2000).
[9] F. Zheng and Z. Chen IEEE Trans. Microwave Theory and Techniques 49, 1006 (2001).
[10] G.D. Smith, Numerical solution of partial diﬀerential equations, (Clarendon, Oxford, 1985).
[11] R. Bellman, Introduction to Matrix Analysis, (SIAM, Philadelphia, 1997).
[12] G.H. Golub and C.F. Van Loan, Matrix computations, (John Hopkins University Press, Baltimore, 1983).
[13] H.F. Trotter, Proc. Am. Math. Soc. 10, 545 (1959).
[14] M. Suzuki, S. Miyashita, and A. Kuroda, Prog. Theor. Phys. 58, 1377 (1977).
[15] A.J. Chorin, T.J.R. Hughes, M.F. McCracken, and J.E. Marsden, Comm. Pure Appl. Math. XXXI, 205 (1978).
[16] H. De Raedt and B. De Raedt, “Applications of the Generalized Trotter Formula”, Phys. Rev. A 28, 3575 (1983).
[17] H. De Raedt, Comp. Phys. Rep. 7, 1 (1987).
[18] H. Kobayashi, N. Hatano, and M. Suzuki, Physica A 211, 234 (1994).
[19] H. De Raedt, K. Michielsen, Comp. in Phys. 8, 600 (1994).
[20] A. Rouhi, J. Wright, Computers in Physics 9, 554 (1995).
[21] B.A. Shadwick and W.F. Buell, Phys. Rev. Lett. 79, 5189 (1997).
[22] M. Krech, A. Bunker, and D.P. Landau, Comp. Phys. Comm. 111, 1 (1998).
[23] P. Tran, Phys. Rev. E 58, 8049 (1998).
[24] K. Michielsen, H. De Raedt, J. Przeslawski, and N. Garcia, Phys. Rep. 304, 89 (1998).
[25] H. De Raedt, A.H. Hams, K. Michielsen, and K. De Raedt, Comp. Phys. Comm. 132, 1 (2000).
[26] A. Hams and H. De Raedt, Phys. Rev. E 62, 4365 (2000).
[27] J.H. Wilkinson, The Algebraic Eigenvalue Problem, (Clarendon Press, Oxford, 1965).
[28] R. Alben, M. Blume, H. Krakauer, and L. Schwartz, Phys. Rev. B 12, 4090 (1975).
[29] M.D. Feit, J.A. Fleck, and A. Steiger, J. Comput. Phys 47, 412 (1982).
[30] H. De Raedt and P. de Vries, Z. Phys. B 77, 243 (1989).
[31] T. Kawarabayashi and T. Ohtsuki, Phys. Rev. B 53, 6975 (1996).
[32] T. Ohtsuki and T. Kawarabayashi, J. Phys. Soc. Jap. 66, 314 (1997).
[33] T. Iitaka and T. Ebisuzaki, Mic. Eng. 47, 321 (1999).
[34] J.M. Bendickson, J.P. Dowling, and M. Scalora, Phys. Rev. E 53, 4107 (1996).
[35] E. Yablanovitch, Phys. Rev. Lett. 58, 2059 (1987).
[36] K.M. Ho, C.T. Chan and C.M. Soukoulis, Phys. Rev. Lett. 65, 3152 (1990).
[37] C.M. Anderson and K.P. Giapis, Phys. Rev. Lett. 77, 2949 (1996).
[38] V.G. Veselago, Sov. Phys. USPEKHI 10, 509 (1968).
[39] R.A. Shelby, D.R. Smith, and S. Schultz, Science 292 77 (2001).

17

FIG. 13. Intensity of the EM-ﬁelds in and outside a cubic sample of dielectric material containing 3 × 3 × 3 spherical voids,
placed in an empty cavity. The size of the cavity is 12.1 × 12.1 × 12.1, the size of the sample is 9.1 × 9.1 × 9.1, the source is
located at (5.6, 5.5, 6), the slices shown are at z = 6, the fourth-order algorithm U4(τ ) was used with a time step τ = 0.075 and
mesh size δ = 0.1. (a): Intensity at t = 0.3. The radius of the empty spheres is 1.4. (b): Intensity at t = 384. Same system as
in (a). The permittivity of the dielectric material ε = 1.5. (c): Intensity at t = 384. Same system as in (b). The permittivity
of the dielectric material ε = 5. (A): Intensity at t = 0.3. The radius of the empty spheres is 1.5. (B): Intensity at t = 384.
Same system as in (A). The permittivity of the dielectric material ε = 1.5. (C): Intensity at t = 384. Same system as in (B).
The permittivity of the dielectric material ε = 5.

18

