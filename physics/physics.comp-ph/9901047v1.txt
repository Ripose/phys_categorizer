9
9
9
1
 
n
a
J
 
6
2
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
7
4
0
1
0
9
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Exact charge conservation scheme for

Particle-in-Cell simulations for a big class of

form-factors

T.Zh.Esirkepov

Forum for Theoretical Physics INFM, Pisa, Italy

Moscow Institute of Physics and Technology, Institutskij per.9, Dolgoprudnij,

Moscow region, 141700 Russia

tel. & fax.: +7 (095) 4086772

e-mail: timur@nonlin-gw.rphys.mipt.ru

Subject classiﬁcations:

65C20 Models, numerical methods; 65P20 Solu-

tion of discretized equations; 70F10 n-body problem; 77F05 Fluid-particle

models.

Keywords: Particle-in-Cell, continuity equation, charge conservation.

1

Abstract. As an alternative to solving of Poisson equation in Particle-in-

Cell methods, a new construction of current density exactly satisfying

continuity equation in ﬁnite diﬀerences is developed. This procedure

called density decomposition is proved to be the only possible linear

procedure for deﬁning the current density associated with the motion of

a particle. Density decomposition is valid at least for any n-dimensional

form-factor which is the product of one-dimensional form-factors. The

algorithm is demonstrated for parabolic spline form-factor.

1 Introduction

In the present paper we develope a new procedure called density decomposition for

obtaining the current density automatically satisfying the continuity equation.

In the set of Maxwell equations along with hyperbolic equations of wave propa-

gation we have an equation of elliptic type — Gauss’s law, that in terms of electric

potential ϕ can be expressed as Poisson equation. In practice Poisson equation is

used for correction of “potential” part of electric ﬁeld.

It is well known that Particle-in-Cell (PIC) method in plasma simulations can be

implemented without solving Poisson equation for electric ﬁeld correction. Instead,

we need the continuity equation (or charge conservation law) in ﬁnite diﬀerences to

be satisfyed.

There are a few methods for satisfying the continuity equation locally — for

charge and current density associated with each particle, Ref. [1, 2, 3]. For this

purpose authors use special deﬁnition for the current density wich is naturally con-

nected with the change of charge density due to particle motion. Unfortunately,

these methods are implemented only for simple shapes of particles, for the zero- and

the ﬁrst-order form-factors. We present the generalization of these methods, valid

for a big class of form-factors. Also we have proved that the density decomposition

is the only possible linear procedure for deﬁning the current density associated with

the motion of a particle.

There are another methods for incorporating Gauss’s law into Maxwell solver

2

using usual deﬁnition of local current density, see [4, 5].

Very detailed study of PIC method can be found in [6, 7, 8]. The new construc-

tion will be usefull ﬁrstly for overdensed plasma simulation with the paradigm of

’Clouds-in-Cell’ [9].

2 Continuity equation in ﬁnite diﬀerences

Let us consider the local Maxwell solver, wich is equivalent to Finite Diﬀerence Time

Domain (FDTD) method [10]

En+1 − En
dt

= ∇+ × Bn+1/2 − J n+1/2 ,

Bn+1/2 − Bn−1/2
dt

= −∇− × En ,
∇− · En = ρn ,

∇+ · Bn+1/2 = 0 ,

combined with the particle mover

un+1/2
α

− un−1/2
α
dt

= 2π

qα
mα

me
e  

En(xn

α, t) +

un
α
γα
α − xn
xn+1
α
dt

× Bn(xn

α, t)

=

!
un+1/2
α
γn+1/2
α
1/2
1 + (uα)2

,

,

.

γα =

(cid:16)

(cid:17)

(1)

(2)

(3)

(4)

(5)

(6)

(7)

Equations Eqs.(1-4) are discreetized Maxwell equations and Eqs.(5-6) are leap-

frog scheme for solving of Newton-Lorentz equations. Here we use dimensionless
variables deﬁned by transformations t → 2πω−1
where me, e — electron mass and charge, c — speed of light, ω0 and λ0 — some

0 t, x → λ0x, (E, B) → (mecω0/e)(E, B),

characteristic frequency and length (e.g. the frequency and wavelength of incident

EM radiation). Index n denotes integer time step and α stands for the number of a

particle; dt, dx, dy, dz — discreetization of time and space coordinates.

Diﬀerent components of electromagnetic ﬁelds and charge density ρ and current

density J are deﬁned on diﬀerent grids,

E = (E1

i,j+1/2,k+1/2, E2

i+1/2,j,k+1/2, E3

i+1/2,j+1/2,k), B = (B1

i+1/2,j,k, B2

i,j+1/2,k, B3

i,j,k+1/2),

3

(9)

(11)

(12)

(13)

ρ = ρi+1/2,j+1/2,k+1/2, J = (J 1

i,j+1/2,k+1/2, J 2

i+1/2,j,k+1/2, J 3

i+1/2,j+1/2,k), (8)

where i, j, k are integers. Discreet operators ∇± in Eqs.(1-4) are vectors,

∇+fi,j,k =

∇−fi,j,k =

,

fi+1,j,k − fi,j,k
dx
fi,j,k − fi−1,j,k
dx

,

fi,j+1,k − fi,j,k
dy
fi,j,k − fi,j−1,k
dy

,

,

fi,j,k+1 − fi,j,k
dz
fi,j,k − fi,j,k−1
dz

,

!

.

!

 

 

These operators have the next convenient properties

∇− × ∇+ = ∇+ × ∇− = 0, ∇− · ∇+ = ∇+ · ∇− = ∆,

(10)

where ∆ is discreet Poisson operator in central diﬀerences,

∆fi,j,k =

fi−1,j,k − 2fi,j,k + fi+1,j,k
dx2

+

fi,j−1,k − 2fi,j,k + fi,j+1,k
dy2

+

fi,j,k−1 − 2fi,j,k + fi,j,k+1
dz2

.

Acting on the Eq.(1) by (∇−×) and on the Eq.(2) by (∇+×), we obtain

ρn+1 − ρn
dt

+ ∇− · J n+1/2 = 0 ,

∇+Bn+1/2 − ∇+Bn−1/2
dt

= 0 .

It means that if the continuity equation Eq.(12) is fulﬁlled then the divergence of E

is always equal to charge density (Gauss’s law), and if the initial discreet divergence

of B is zero then it remains zero forever.

Thus, for solving Maxwell equations we need Eqs.(1-2) and Eq.(12) with initial

∇− · E = ρ

and ∇+ · B = 0

at

t = 0 .

(14)

Let us consider the continuity equation (or charge conservation law) in ﬁnite

conditions

diﬀerences

ρn+1/2
i+1/2,j+1/2,k+1/2 − ρn

i+1/2,j+1/2,k+1/2

J 1

i,j+1/2,k+1/2 − J 1

i−1,j+1/2,k+1/2

J 2

i+1/2,j,k+1/2 − J 2

i+1/2,j−1,k+1/2

dt

dy

dx
i+1/2,j+1/2,k − J 3
i+1/2,j+1/2,k−1

J 3

dz

+

= 0 .

(15)

+

+

4

Further we will drop indices and modiﬁcators like ±1/2, where it can not lead to

an ambiguity. The charge density ρ is constructed from form-factors of separate

particles

where S is the form-factor (or density) of a particle,

α
X

ρi,j,k =

Si,j,k(xα, yα, zα),

(16)

Si,j,k(xα, yα, zα) = S(Xi − xα, Yj − yα, Zk − zα),

(17)

Xi, Yj, Zk denote coordinates of the grid, (xα, yα, zα) is the location of the particle

with number α. Here form-factor can be interpreted as a charge density of a single

particle. So the particle is considered as it would be a charged cloud. Form-factor

must obey the rule of conservation of full charge which leads to

Si,j,k(xα, yα, zα) = 1,

(18)

where the sum is taken over all grid nodes.

Xi,j,k

3 Density decomposition

Due to linearity of charge conservation law Eq.(15), it is suﬃcient to construct

current density associated with motion of a single particle.

Let us consider a single particle with form-factor Eq.(17) and coordinates (x, y, z).

We introduce vector W as ﬁnite diﬀerences of the current density associated with

particle motion:

J 1

i,j,k − J 1

i−1,j,k = −

W 1

i,j,k ,

J 2

i,j,k − J 2

i,j−1,k = −

W 2

i,j,k ,

J 3

i,j,k − J 3

i,j,k−1 = −

W 3

i,j,k .

dx
dt
dy
dt
dz
dt

Then according to charge conservation law, we can write dropping grid indices,

W 1 + W 2 + W 3 = S(x + ∆x, y + ∆y, z + ∆z) − S(x, y, z).

(20)

Here (∆x, ∆y, ∆z) is 3-dimensional shift of the particle due to motion.

(19)

5

Shift of the particle generates eight functions

S(x, y, z), S(x + ∆x, y, z), S(x, y + ∆y, z), S(x, y, z + ∆z),

S(x + ∆x, y + ∆y, z), S(x + ∆x, y, z + ∆z), S(x, y + ∆y, z + ∆z),

S(x + ∆x, y + ∆y, z + ∆z) .

(21)

We will assume that vector W and corresponding current density linearly depends

from these functions. The base for this assumption is the following. (1) We can

consider the form-factor as charge density of the particle. If form-factor amplitude

is increasing, the current density associated with a shift of the form-factor must

increase proportionally. (2) We can decompose any three-dimensional shift of form-

factor S(x, y, z) into three one-dimensional shifts:

S(x + ∆x, y + ∆y, z + ∆z) − S(x, y, z) =

S(x + ∆x, y, z) − S(x, y, z) +

S(x + ∆x, y + ∆y, z) − S(x + ∆x, y, z) +

S(x + ∆x, y + ∆y, z + ∆z) − S(x + ∆x, y + ∆y, z).

(22)

Currents corresponding to each one-dimensional shift must be additive.

Let us formulate some conditions directly going form the nature of vector W .

1. Vector W 1

i,j,k, W 2

i,j,k, W 3
∆y, z + ∆z) − Si,j,k(x, y, z), Eq.(20).

i,j,k is a decomposition of ﬁnite diﬀerence Si,j,k(x+∆x, y+

2. If some of shifts ∆x, ∆y, ∆z iz zero, the corresponding component W is also

zero:

∆x = 0 ⇒ W 1 = 0, ∆y = 0 ⇒ W 2 = 0, ∆z = 0 ⇒ W 3 = 0.

3. If S(x, y, z) is symmetrical with respect to permutation of (x, y), S(x, y, z) =
S(y, x, z) and ∆x = ∆y, then W 1 = W 2. The same property is assumed for

symmetries with respect to permutations of pairs (x, z) and (y, z).

6

Suggestion. There is only one linear combination of eight functions Eq.(21), each

satisfying Eq.(18), that is consistent with properties 1-3:

W 1 =

1
3

S(x + ∆x, y + ∆y, z + ∆z) −

S(x, y + ∆y, z + ∆z) +

+

S(x + ∆x, y, z + ∆z) −

S(x, y, z + ∆z) +

+

S(x + ∆x, y + ∆y, z) −

S(x, y + ∆y, z) +

+

S(x + ∆x, y, z) −

S(x, y, z)

W 2 =

S(x + ∆x, y + ∆y, z + ∆z) −

S(x + ∆x, y, z + ∆z) +

+

S(x, y + ∆y, z + ∆z) −

S(x, y, z + ∆z) +

+

S(x + ∆x, y + ∆y, z) −

S(x + ∆x, y, z) +

+

S(x, y + ∆y, z) −

S(x, y, z)

W 3 =

S(x + ∆x, y + ∆y, z + ∆z) −

S(x + ∆x, y + ∆y, z) +

1
3

1
3

1
3

1
3

1
3

1
6
1
6

1
6
1
6

1
6
1
6

1
3

1
3

1
3

1
6
1
6

1
6
1
6

1
6
1
6

+

S(x, y + ∆y, z + ∆z) −

S(x, y + ∆y, z) +

+

S(x + ∆x, y, z + ∆z) −

S(x + ∆x, y, z) +

+

S(x, y, z + ∆z) −

S(x, y, z)

(23)

Proof.

(Scenario). We can write all the properties 1-3 in the form of linear equa-

tions with unknown coeﬃcients of eight functions. Remembering Eq.(18) we can

obtain additional equations on coeﬃcients taking sum over all grid points (i, j, k)

from each linear combination for W . Solving 10 linear equations for all S, we will

ﬁnd all the coeﬃcients. Of course, not all eight values Eq.(21) are independent.

We have six independend variables x, y, z, ∆x, ∆y, ∆z, so in the most general case

only six values S can be also independend, for example, excluding S(x, y, z) and

S(x + ∆x, y + ∆y, z + ∆z). Among all possible solutions we must left only one,
which doesn’t assume special numerical values for excluded functions. 2

Taking into account boundary conditions for the current of one particle (van-

ishing of the current density at nodes far from the form-factor domain), and using

1
3

1
3

1
3

7

Eq.(18) we obtain:

W 1

i,j,k = 0 ,

W 2

i,j,k = 0 ,

W 3

i,j,k = 0 .

Xi

Xj

Xk

(24)

(25)

Two systems Eq.(23) and Eq.(24) deﬁne the density decomposition. Solving

Eq.(19) with natural boundary condition we obtain the current density associated

with a single particle motion.

The condition Eq.(24) can be easily satisfyed if form-factor have a property

of inheritance in decreasing of the dimension, i.e.

if sum of form-factor over any

dimension is again form-factor but of lower dimension. Formally, it means

S(2D)
i,j

(x, y) =

S(3D)
i,j,k (x, y, z),

Xk

where S(2D)

i,j

doesn’t depend on z and obeys Eq.(18) automatically.

There is a big and widely used in PIC codes class of form-factors that have a

property of inheritance: all form-factors that are the products of one-dimensional

form-factors,

i,j,k(x, y, z) = S1D
S3D

i

(x)S1D

j

(y)S1D

k (z).

(26)

Here we use the same symbol for (probably) diﬀerent one-dimensional form-factors,

each of them must satisfy conservation of full charge, Eq.(18).

It can be easily proved that density decomposition Eq.(23) along with Eq.(26)

is the generalization of techniques proposed in [1, 2, 3].

4 Computing of the current with second-order

polynomial form-factor

In this section we present an algorithm for density decomposition in the case of

second-order piecewise-polynomial form-factor and discuss a problem of dimension

reduction.

8

Let us consider well-known one-dimensional form-factor

S(1D)
i

(x) =

− (Xi − x)2

3
4

S(1D)
i±1 (x) =

1
2 (cid:18)

1
2

,

,

2

(cid:19)

∓ (Xi − x)

|Xi − x| < 1/2 ,

(27)

which is the second-order spline. The particle is bell-shaped. The correspondent

3-dimensional form-factor is Eq.(26).

Now we can formulate a scenario for computing the current density based on den-

sity decomposition Eq.(23). Suppose we consider a code that uses Finite Diﬀerence

Time Domain (FDTD) technique [10], where electromagnetic ﬁelds and current den-

sity are deﬁned on diﬀerent regular grids. Here we do not pretend to show optimized

or fastest algorithm.

charge density ρ:

1. Prepare 15-component array S0 containing one-dimensional form-factors cor-

responding to particle coordinates (x0, y0, z0) with respect to the grid of the

i

S0(i, 1) = S(1D)
S0(j, 2) = S(1D)
S0(k, 3) = S(1D)

j

k

(x0) , i = −2, 2 ,

(y0) , j = −2, 2 ,

(z0) , k = −2, 2 ,

(28)

Really, components S0(−2, m) and S0(2, m) are zero, but we need these addi-

tional components for further calculations.

The actual 3-dimensional form-factor is 27-component array

S(3D)(i, j, k) = S0(i, 1) ∗ S0(j, 2) ∗ S0(k, 3) .

(29)

2. Using S0 or precomputed S(3D), compute the force acting on the particle. Here

we can use ﬁelds spatially averaged to the grid of ρ or compute additional

form-factors for each type of grid. Advance particle and compute new particle

coordinates (x1, y1, z1). Note here that particle shift in any direction must be

smaller or equal than grid step in this direction,

x1 − x0 ≤ dx,

y1 − y0 ≤ dy,

z1 − z0 ≤ dz.

(30)

9

3. Using new particle coordinates compute a new array S1 containing new form-

factors:

i

S1(i, 1) = S(1D)
S1(j, 2) = S(1D)
S1(k, 3) = S(1D)

j

k

(x1) , i = −2, 2 ,

(y1) , j = −2, 2 ,

(z1) , k = −2, 2 .

(31)

Components S1(−2, m) and S1(−2, m) are not zero in general, because of

particle motion. If conditions Eq.(30) are satisfyed, the array S1(i, m) doesn’t

have non-zero components out of i = −2, 2.

4. Compute auxiliary array of diﬀerences of new and old form-factors:

DS(i, 1) = S1(i, 1) − S0(i, 1) , i = −2, 2 ,

DS(j, 2) = S1(j, 2) − S0(j, 2) , j = −2, 2 ,

DS(k, 3) = S1(k, 3) − S0(k, 3) , k = −2, 2 .

(32)

It is possible to use S1 for storage of diﬀerences.

5. Compute 125*3-component array containing density decomposition W(i, j, k, m),

in accordance with Eq.(23). We need so many componets because we have

current whose components are deﬁned on diﬀerent regular grids (in FDTD

technique).

W(i, j, k, 1) = DS(i, 1) ∗ (S0(j, 2) ∗ S0(k, 3) +

∗ DS(j, 2) ∗ S0(k, 3) +

+

∗ S0(j, 2) ∗ DS(k, 3) +

∗ DS(j, 2) ∗ DS(k, 3)) ,

W(i, j, k, 2) = DS(j, 2) ∗ (S0(i, 1) ∗ S0(k, 3) +

∗ DS(i, 1) ∗ S0(k, 3) +

+

∗ S0(i, 1) ∗ DS(k, 3) +

∗ DS(i, 1) ∗ DS(k, 3)) ,

W(i, j, k, 3) = DS(k, 3) ∗ (S0(i, 1) ∗ S0(j, 2) +

∗ DS(i, 1) ∗ S0(j, 2) +

+

∗ S0(i, 1) ∗ DS(j, 2) +

∗ DS(i, 1) ∗ DS(j, 2)) .

(33)

1
2

1
2

1
2

1
2

1
2

1
2

Of course, this computation is easy to optimize.

1
3

1
3

1
3

10

6. Compute three components of the current density J 1, J 2, J 3 associated with

motion of the particle, using Eq.(19) and boundary condition (there is no

current in nodes far from particle location),

J 1

i,j,k − J 1

i−1,j,k = −Q

W(i, j, k, 1) ,

J 2

i,j,k − J 2

i,j−1,k = −Q

W(i, j, k, 2) ,

dx
dt
dy
dt
dz
dt

J 3

i,j,k − J 3

i,j,k−1 = −Q

W(i, j, k, 3) ,

(34)

where Q is the charge of the particle.

7. Add computed contribution from the single particle to array of the current

density.

As this algorithm uses only simple polynomes, its accuracy is equivalent to the accu-
racy of the last digit of numerical representation (e.g. 10−8 in SINGLE PRECISION
4-BYTE data or 10−17 in DOUBLE PRECISION 8-BYTE data).

Suppose we have two-dimensional problem, when all the variables depend on

(x, y) only. In this case density decomposition Eq.(23) provides only two ﬁrst com-

ponents of the current density. How to construct the third one, in consistency with

the rest? The simplest idea is to derive the third component from 3-dimensional

case by reducing the dimension. We can imagine chaines of inﬁnite number of par-

ticles along z-axise. Being projected into (x, y)-plane these N chaines produces N

2-dimensional particles. Then we can do averaging over z-axise. As a result we will

obtain ﬁrst two components of the current density in accordance with Eq.(23), and

the third component.

5 and 6 in the following way:

In the particular case of the above algorithm we must change formulae of items

W(i, j, 1) = DS(i, 1) ∗ (S0(j, 2) +

∗ DS(j, 2)) ,

W(i, j, 2) = DS(j, 2) ∗ (S0(i, 1) +

∗ DS(i, 1)) ,

W(i, j, 3) = S0(i, 1) ∗ S0(j, 2) +

∗ DS(i, 1) ∗ S0(j, 2) +

1
2
1
2

1
2

11

+

∗ S0(i, 1) ∗ DS(j, 2) +

∗ DS(i, 1) ∗ DS(j, 2) .

(35)

1
2

1
3

J 1

i+1,j − J 1

i,j = −Q

W(i, j, 1) ,

dx
dt
dy
dt
i,j = −QVzW(i, j, 3) ,

W(i, j, 2) ,

i,j+1 − J 2
i,j = −Q
J 3

J 2

(36)

where Vz is the third component of particle velocity.

As one can see these formulae have an obvious connection with 3D-case, Eqs.(33-

34).

5 Conclusion

In this paper we have developed a construction for a current density, which exactly

satisfy the charge conservation law and is valid for a wide class of form-factors. It is

shown that this construction is the only allowed by very natural conditions derived

from the properties of the current density. An algorithm in the case of second-order

polynomial form-factor is presented. One can see that this method is not restricted

by special Maxwell solver, but uses only discreetized continuity equation. These

teqnique was implemented by author and D.V.Sokolov in three-dimensional and

two-dimensional PIC codes.

The author is glad to thank Dmitry Sokolov for collaboration, Prof. Vitaly A.

Vshivkov and Dr. Hartmut Ruhl for useful discussion.

The author is pleased to thank Prof. Francesco Pegoraro and Prof. Giuseppe

This work was prepared in Scuola Normale Superiore in Pisa and supported by

Istituto Nazionale per la Fisica della Materia, Italy and by Russian Fond for Basic

Bertin for support.

Research (No.98-02-16298).

References

12

[1] R. L. Morse and C. W. Nielson, Numerical Simulation of the Weibel Instability

in One and Two Dimensions, Phys. Fluids, 14 (1971).

[2] J. Villasenor and O. Buneman, Rigorous Charge Conservation for Local Elec-

tromagnetic Field Solvers, Comp. Phys. Comm., 69, 306 (1992).

[3] V. A. Vshivkov, M. A. Kraeva, V. E. Malyshkin, Parallel Implementation of the

Particle-in-Cell Method, Programming and Computer Software, 23, N2, 87-97

(1997).

[4] A. B. Langdon, On enforcing Gauss’s law in electromagnetic particle-in-cell

codes, Comput. Phys. Comm., 70, 447 (1992).

[5] B. Marder, A method for incorporating Gauss’s law into electromagnetic PIC

codes, J. Comput. Phys., 68, 48 (1987).

[6] C. K. Birdsall and A. B. Langdon, Plasma Physics Via Computer Simulation

(Adam-Hilger, 1991).

(McGraw-Hill Inc., 1981).

[7] R. W. Hockney, J. W. Eastwood, Computer Simulation Using Particles

[8] Yu. A. Berezin and V. A. Vshivkov, Metod chastits v dinamike razrezhennoi

plazmy (Novosibirsk: Izd-vo “Nauka”, 1980), Method of particles in underdense

plasma dynamics, published in Russian.

[9] C. K. Birdsall, Dieter Fuss, Clouds-in-Clouds, Clouds-in-Cells Physics for

Many-Body Plasma Simulations, J. Comput. Phys., 135, 141 (1997).

[10] K. S. Yee, Numerical Solution of Initial Boundary Value Problems Involving

Maxwell’s Ewuations in Isotropic Media, IEEE Trans. Antennas Prop., 14

(1966).

13

