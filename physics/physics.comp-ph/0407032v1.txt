4
0
0
2
 
l
u
J
 
6
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
2
3
0
7
0
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

On the Equivalence of the Digital Waveguide and FDTD Finite Diﬀerence Schemes

APS/123-QED

Julius O. Smith III∗
Center for Computer Research in Music and Acoustics (CCRMA)
Stanford University
Stanford, CA 94305
(Dated: February 21, 2014)

It is known that the digital waveguide (DW) method for solving the wave equation numerically
on a grid can be manipulated into the form of the standard ﬁnite-diﬀerence time-domain (FDTD)
method (also known as the “leapfrog” recursion). This paper derives a simple rule for going in the
other direction, that is, converting the state variables of the FDTD recursion to corresponding wave
variables in a DW simulation. Since boundary conditions and initial values are more intuitively
transparent in the DW formulation, the simple means of converting back and forth can be useful in
initializing and constructing boundaries for FDTD simulations.

PACS numbers: 02.70.Bf, 02.70.-c, 31.15.Fx

I.

INTRODUCTION

II.

IDEAL STRING WAVE EQUATION

The digital waveguide (DW) method has been used
for many years to provide highly eﬃcient algorithms for
musical sound synthesis based on physical models [1, 2].
For a much longer time, ﬁnite-diﬀerence time-domain
(FDTD) schemes have been used to simulate more gen-
eral situations at generally higher cost [3, 4, 5, 6]. In re-
cent years, there has been interest in relating these meth-
ods to each other [7] and in combining them for more gen-
eral simulations. For example, modular hybrid methods
have been devised which interconnect DW and FDTD
simulations by means of a KW-pipe [8, 9]. The basic
idea of the KW-pipe adaptor is to convert the “Kirchoﬀ
variables” of the FDTD, such as string displacement, ve-
locity, etc., to “wave variables” of the DW, which are the
traveling-wave components of the K variables.

In this paper, we present an alternative formulation
of the KW pipe.
Instead of converting K variables to
W variables, or vice versa, in the time domain, instanta-
neous conversion formulas are derived with respect to the
state as a function of spatial coordinates. As a result, it
becomes simple to convert any instantaneous state con-
ﬁguration from FDTD to DW form, or vice versa. Thus,
instead of providing the necessary time-domain ﬁlter to
implement a KW pipe converting traveling-wave com-
ponents to physical displacement of a vibrating string,
say, one may alternatively set the displacement variables
instantaneously to the values corresponding to a given
set of traveling-wave components in the string model.
Another beneﬁt of the formulation is a precise physical
interpretation of arbitrary initial conditions and excita-
tion points in a K-variable ﬁnite diﬀerence scheme (FDS).
From this point of view, one may consider the methods
completely equivalent in theory (while their numerical
sensitivities diﬀer).

For deﬁniteness, let’s consider simulating the ideal vi-

brating string, as shown in Fig. 1

y (t,x)

String Tension
K

ε = Mass/Length

0
0
. . .

Position

. . .
x

FIG. 1: The ideal vibrating string.

The wave equation for the ideal (lossless, linear, ﬂexi-

ble) vibrating string, depicted in Fig. 1, is given by

Ky′′ = ǫ¨y

(1)

where

K
ǫ
y

∆
= string tension
∆
= linear mass density
∆
= string displacement

y
˙y
y′ ∆

∆
= y(t, x)
∆
= ∂
= ∂

∂t y(t, x)
∂x y(t, x)

∆
=” means “is deﬁned as.” The wave equation is

and “
derived, e.g., in [10].

A. Finite Diﬀerence Approximation

Using centered ﬁnite diﬀerence approximations (FDA)
for the second-order partial derivatives, we obtain a ﬁnite
diﬀerence scheme for the ideal wave equation [11, 12]:
¨y(t, x) ≈ y(t + T, x) − 2y(t, x) + y(t − T, x)
y′′(t, x) ≈ y(t, x + X) − 2y(t, x) + y(t, x − X)

T 2

(3)

(2)

X 2

∗URL: http://ccrma,stanford.edu/~jos/; Electronic address:
jos@ccrma.stanford.edu

where T is the time sampling interval, and X is a spatial
sampling interval.

1.

Ideal String Finite Diﬀerence Scheme

Substituting the FDA into the wave equation, choosing
X = cT , where c ∆
K/ǫ is sound speed (normalized to
=
c = 1 below), and sampling at times t = nT and x = mX,
we obtain the following explicit ﬁnite diﬀerence scheme
for the string displacement:

p

y(n + 1, m) = y(n, m + 1) + y(n, m − 1) − y(n − 1, m) (4)

where the sampling intervals T and X have been nor-
malized to 1. To initialize the recursion, past values are
needed for all m (all points along the string) at time in-
stants n = −1 and n = −2. Then the string position may
be computed for all m by Eq. (4) for n = 0, 1, 2, . . . . This
has been called a FDTD ﬁnite diﬀerence scheme [13].

B. Traveling-Wave Solution

We now derive the DW (DW) ﬁnite diﬀerence scheme
by sampling the traveling-wave solution to the wave equa-
tion. It is easily checked that the lossless 1D wave equa-
tion Ky′′ = ǫ¨y is solved by any string shape which trav-
els to the left or right with speed c ∆
K/ǫ [14]. De-
=
note right-going traveling waves in general by yr(t − x/c)
and left-going traveling waves by yl(t + x/c), where yr
and yl are assumed twice-diﬀerentiable. Then, as is
well known, the general class of solutions to the lossless,
one-dimensional, second-order wave equation can be ex-
pressed as

p

y(t, x) = yr (cid:16)t − x

x
c (cid:17) .
Sampling the traveling-wave solutions yields

c (cid:17) + yl (cid:16)t +

y(nT, mX) = yr(nT − mX/c) + yl(nT + mX/c)

= yr[(n − m)T ] + yl[(n + m)T ]
∆
= y+(n − m) + y−(n + m)

(5)

where a “+” superscript to denotes a traveling-wave com-
ponent propagating to the “right”, and a “−” superscript
denotes propagation to the “left”. This notation is sim-
ilar to that used for acoustic-tube modeling of speech
[15].

C. DW Model

Figure 2 shows a signal ﬂow diagram for this computa-
tional model, which is often called a DW model (for the
ideal string in this case) [1, 2]. Note that, by the sam-
pling theorem, it is an exact model so long as the initial
conditions and any ongoing excitations are bandlimited
to less than half the temporal sampling rate fs = 1/T .

Note also that the position along the string, xm =
mX = mcT meters, is laid out from left to right in the

2

+
y (n-1)

+
y (n-2)

+
y (n-3)

. . .

z 1-

y (n)+

. . .

y (n)-

. . .

z 1-

z 1-

y (nT,0)
-
y (n+1)

z 1-

z 1-

y (nT,3X)

-
y (n+2)

z 1-

-
y (n+3)

. . .

(x = 0)

(x = cT)

(x = 2cT)

(x = 3cT)

FIG. 2: Digital simulation of the ideal, lossless wave-
guide with observation points at x = 0 and x = 3X =
3cT . (The symbol “z−1” denotes a one-sample delay.)

diagram, giving a physical interpretation to the horizon-
tal direction in the diagram, even though spatial samples
have been eliminated from explicit consideration.

The left- and right-going traveling wave components
are summed to produce a physical output according to
the formula

y(nT, mX) = y+(n − m) + y−(n + m)

(6)

In Fig. 2, “transverse displacement outputs” have been
arbitrarily placed at x = 0 and x = 3X. The diagram
is similar to that of well known ladder and lattice digi-
tal ﬁlter structures [15], except for the delays along the
upper rail, the absence of scattering junctions, and the
direct physical interpretation. (A scattering junction im-
plements partial reﬂection and partial transmission in the
waveguide.) We could proceed to ladder and lattice ﬁl-
ters by (1) introducing a perfectly reﬂecting (rigid or free)
termination at the far right, and (2) commuting the de-
lays rightward from the upper rail down to the lower rail
[2]. The absence of scattering junctions is due to the fact
that the string has a uniform wave impedance. In acous-
tic tube simulations, such as for voice [15] or wind instru-
ments, lossless scattering junctions are used at changes
in cross-sectional tube area and lossy scattering junctions
are used to implement tone holes.

D. Relation to the Finite Diﬀerence Scheme

In this section we will review the derivation that the
digital waveguide simulation technique is equivalent to
the recursion produced by the ﬁnite diﬀerence approxi-
mation (FDA) applied to the wave equation [16, pp. 430–
431]. Recall from Eq. (4) that the time update recursion
for the ideal string digitized via the FDA is given by

y(n + 1, m) = y(n, m + 1) + y(n, m − 1) − y(n − 1, m) (7)

To compare this with the waveguide description, we
substitute the traveling-wave decomposition y(n, m) =
y+(n − m) + y−(n + m) (which is exact in the ideal case
at the sampling instants) into the right-hand side of the
FDA recursion above and see how good is the approxi-
mation to the left-hand side y(n + 1, m) = y+(n + 1 −

m) + y−(n + 1 + m). Doing this gives

y(n + 1, m) = y(n, m + 1) + y(n, m − 1) − y(n − 1, m)(8)

= y+(n − m − 1) + y

−

(n + m + 1)

+y+(n − m + 1) + y−(n + m − 1)
−y+(n − m − 1) − y−(n + m − 1)

= y−(n + m + 1) + y+(n − m + 1)
= y+[(n + 1) − m] + y−[(n + 1) + m]
∆
= y(n + 1, m)

Thus, since the FDA is equivalent to the DW scheme,
it too must be exact in the lossless case, although this
might be surprising in view of the relatively crude ap-
proximations made in Eq. (3).
It is known that FDA
introduces artiﬁcial damping when applied to ﬁrst order
partial derivatives arising in lumped, mass-spring sys-
tems [2].

This result extends readily to the DW mesh [2, 17]
which is essentially a lattice-work of DWs for simulating
membranes and volumes. The equivalence is important
in higher dimensions because the ﬁnite-diﬀerence model
requires less computations per node than the DW ap-
proach.

Even in one dimension, the DW and ﬁnite-diﬀerence
methods have unique advantages in particular situations,
and as a result they are often combined together to
form a hybrid traveling-wave/physical-variable simula-
tion [7, 8, 18, 19, 20, 21, 22, 23, 24]. In this hybrid simu-
lations, the traveling-wave variables are sometimes called
“W variables” (where ‘W’ stands for “Wave”), while the
physical variables are caled “K variables” (where ’K’
stands for “Kirchoﬀ”). Each K variable, such as dis-
placement y(nT, mX) on a vibrating string, can be re-
garded as the sum of two traveling-wave components, or
W variables, as in Eq. (5).

In previous work, adaptors from K variables to W vari-
ables have been devised based on time-domain equiva-
lences [8]. In this section, an alternative approach is pro-
posed based on instantaneous spatial equivalences. Con-
ceptually, we must ﬁnd a linear transformation from the
K state variables to the W state variables at any given
time n. This is made diﬃcult in general by non-local
spatial dependencies that can go indeﬁnitely in one di-
rection. We will proceed by ﬁrst writing down the con-
version from W to K variables, which is easy, and then
invert that linear transformation. For simplicity, we will
initially consider an inﬁnitely long string.

A. W to K

To initialize a K variable simulation, we need spatial
samples at all positions m for two successive times n − 1

· · ·

· · ·

3

and n. From this state information, the FDTD FDS can
compute y(n + 1, m) for all m.
In the DW model, we
will deﬁne all state variables as belonging to the same
time n, as shown in Fig. 3. (Also shown are loss-factors
0 < g < 1 which can be set to 1 for now.)

y+
n,m−1

y+
n,m

y+
n,m+1

z−1

z−1

z−1

yn,m

· · ·

· · ·

z−1

z−1

z−1

y−
n,m−1

y−
n,m

y−
n,m+1

FIG. 3: DW ﬂow diagram.

From Eq. (6), and referring to the notation deﬁned
in Fig. 3, we may write the conversion from W to K
variables as

yn,m+1 = y+
yn,m−1 = y+
yn−1,m = y+
= y+

n,m+1 + y
n,m−1 + y
n−1,m + y
n,m−1 + y

−
n,m+1
−
n,m−1
−
n−1,m
−
n,m+1

(9)

where the last equality follows from the traveling-wave
behavior (see Fig. 3).

yn+1,m

yn−1,m

m

FIG. 4: Stencil of the FDTD ﬁnite diﬀerence scheme.

Figure 4 shows the so-called “stencil” of the FDTD
FDS. The larger circles indicate the state at time n which
can be used to compute the state at time n+1. The ﬁlled
and unﬁlled circles indicate membership in one of two in-
terleaved grids [25], To see why there are two interleaved
grids, note that when m is even, the update for yn+1,m
depends only on odd m from time n and even m from
time n − 1. Since W components of yn−1,m are converted
to W components at time n by Eq. (9), we see that the
update for yn+1,m depends only on W components from

III. FINITE DIFFERENCES TO DWS

n

yn,m−1

yn,m+1

4

(10)

(11)

time n at positions m ± 1. Moving to the next update,
for yn+1,m+1, the state used is independent of that used
for yn+1,m, and the W components used are from posi-

tions m and m + 2. As a result of these observations, we
see that we may write the state-variable transformation
separately for even and odd m:

...
yn,m−1
yn−1,m
yn,m+1
yn−1,m+2
yn,m+3
yn−1,m+4
yn,m+5
...



































=

...

...

...

...

...

...
...
. . .
0
. . . 1 1 0 0 0 0 0 0 . . .
. . . 0 1 1 0 0 0 0 0 . . .
. . . 0 0 1 1 0 0 0 0 . . .
. . . 0 0 0 1 1 0 0 0 . . .
. . . 0 0 0 0 1 1 0 0 . . .
. . . 0 0 0 0 0 1 1 0 . . .
. . . 0 0 0 0 0 0 1 1 . . .
...
...

. . .

...

...

...

0

...

...



































y+
n,m−1
−
y
n,m−1
y+
n,m+1
−
y
n,m+1
y+
n,m+3
−
y
n,m+3
y+
n,m+5
−
y
n,m+5

...

...











































1

Denote the linear transformation operator by A and the
K and W state vectors by yK and yW , respectively. Then
Eq. (10) can be restated as

simple convolution since yW is not a simple time series,
the inverse of A corresponds to the Toeplitz operator as-
sociated with

yK = AyW .

H(z) =

1 + z−1 = 1 − z−1 + z−2 − z−3 + · · · .

The operator A can be recognized as the Toeplitz op-
erator associated with the linear, shift-invariant ﬁlter
H(z) = 1 + z−1. While the present context is not a

Therefore, we may simply write the inverted transforma-
tion:

y+
n,m−1
−
y
n,m−1
y+
n,m+1
−
y
n,m+1
y+
n,m+3
−
y
n,m+3
y+
n,m+5
−
y
n,m+5

...

...











































=

...
. . .
. . . 1 −1
. . . 0
. . . 0
. . . 0
. . . 0
. . . 0
. . . 0
...

0


















...
...
1 −1

...
...
1 −1

1 −1

1 −1

1 −1
0
0
0
0
0
...

1 −1
0
0
0
0
...

1 −1

1 −1
0
0
0
...

1 −1
0
0
...

1 −1

1 −1
0
...

...
... ±1
1 −1 . . .
1 . . .
1 −1 . . .
1 . . .
1 −1 . . .
1 . . .
1 −1 . . .
...
. . .



































...
yn,m−1
yn−1,m
yn,m+1
yn−1,m+2
yn,m+3
yn−1,m+4
yn,m+5
...


















IV. EXAMPLES

how to achieve truly local excitations.

From Eq. (11), it is clear that initializing any single
K variable yn,m corresponds to the initialization of an
inﬁnite number of W variables. In particular, the well
known oscillations at dc and half the sampling rate are
clearly expected if an impulsive excitation is applied to
any single K variable. On the other hand, it is also clear

Whenever two adjacent components of yK are initial-
ized with equal amplitude, only a single W -variable will
be aﬀected. For example, the initial conditions

y−1,m−1 = 1
y−2,m = 1

will initialize only y

−
n,m−1, a solitary left-going pulse of

amplitude 1 at time n = 0, as can be seen from Eq. (11)
by adding the leftmost columns written for A−1. Simi-
larly, the initilization

gives rise to an isolated right-going pulse y+
n,m−1, corre-
sponding to the leftmost column plus the ﬁrst column
on the left not written in Eq. (11). The superposition of
these two examples corresponds to a physical impulsive
excitation at time 0 and position m − 1:

y−2,m−2 = 1
y−1,m−1 = 1

y−2,m−2 = 1
y−1,m−1 = 2
y−2,m = 1

Thus, the impulse starts out with amplitude 2 at time 0
and position m−1, and afterwards, impulses of amplitude
1 propagate away to the left and right. In summary, we
see that to achieve a localized displacement excitation,
we must excite sums of equally weighted adjacent colums
of A−1. This corresponds to superpositions of equally
weighted pairs of the form yn,m, yn−1,m±1.

Initial velocity excitations are straightforward in the
DW paradigm, but can be non-intuitive in the FDTD
domain. It is well known that velocity in a displacement-
wave DW simulation corresponds to the diﬀerence of the
right- and left-going waves [26]. We can see from Eq. (11)
that such asymmetry can be caused by unequal weighting
of yn,m and yn,m+1. For example, the initialization

y−1,m+1 = 1

y−1,m = −1

5

corresponds to an impulse velocity excitation at position
m + 1/2.

Note that these examples involved only one of the two
interleaved computational grids. Shifting over an odd
number of spatial samples to the left or right would in-
volve the other grid, as would shifting time forward or
backward an odd number of samples.

A single column of A−1 from one of the interleaved
grids corresponds to an equal amount of displacement
and velocity excitation (resulting in the well known os-
cillations at dc and half the sampling rate); exciting the
same single columns both grids yields a pure velocity ex-
citation. (A simple test for a pure velocity excitation is
that the sum of the right-going and left-going displace-
ments samples must be zero (unchanged) at the time of
excitation.)

Instead of initial conditions, ongoing input signals can
be deﬁned analogously. For example, feeding an input
signal un into the FDTD via

yn,m−1 = yn,m−1 + un−1
yn,m = yn,m + 2un
yn,m+1 = yn,m+1 + un−1

corresponds to physically driving a single sample of string
displacement at position m. This is the spatially dis-
tributed alternative to feeding an input to a single dis-
placement sample via the ﬁlter H(z) = 1 − z−2 as dis-
cussed in [8].

[1] J. O. Smith, Tech. Rep. STAN–M–39, CCRMA, Music
Department, Stanford University (1987), a compendium
containing four related papers and presentation over-
heads on digital waveguide reverberation, synthesis, and
ﬁltering. CCRMA technical reports can be ordered by
calling (650)723-4971 or by sending an email request to
info@ccrma.stanford.edu.

[2] J. O. Smith III, Physical Audio Signal Process-
In-
(available online at

ing:
struments and Audio Eﬀects
http://ccrma.stanford.edu/~jos/pasp/, 2004).

Digital Waveguide Modeling of Musical

[3] P. M. Ruiz, Ph.D. thesis, Music Master Diss., Univ. Ill.,

Urbana (1969).

[4] A. Chaigne, Journal of the d’Acoustique 5, 181 (1992).
[5] A. Chaigne and A. Askenfelt, Journal of the Acoustical

Society of America 95, 1112 (1994).

[6] J. Bensa, S. Bilbao, R. Kronland-Martinet, and J. O.
Smith III, Journal of the Acoustical Society of America
pp. 1095–1107 (2003).

[7] C. Erkut and M. Karjalainen,

in Proceedings of
the International Symposium on Musical Acoustics
(ISMA-02), Mexico City (2002), available online at

http://www.acoustics.hut.fi/~cerkut/publications.html.

[8] M. Karjalainen, in Proceedings of the IEEE Workshop on
Applications of Signal Processing to Audio and Acoustics,
New Paltz, NY (IEEE Press, New York, 2003), pp. 225–
228.

[9] M. Karjalainen and C. Erkut, EURASIP Journal on Ap-
plied Signal Processing (2004), accepted for publication
in the special issue on Model-Based Sound Synthesis.
[10] P. M. Morse, Vibration and Sound (American Insti-
tute of Physics,
for the Acoustical Society of Amer-
ica, http://asa.aip.org/publications.html, 1948),
1st edition 1936, last author’s edition 1948, ASA edition
1981.

[11] J. C. Strikwerda, Finite Diﬀerence Schemes and Partial
Diﬀerential Equations (Wadsworth and Brooks, Paciﬁc
Grove, CA, 1989).

[12] P. Moin, Engineering Numerical Analysis (Cambridge

University Press, 2001).

[13] G. Essl (2004), arXiv:physics/0401065v1.
[14] J. l. d’Alembert, in Acoustics: Historical and Philosoph-
ical Development, edited by R. B. Lindsay (Dowden,
Hutchinson & Ross, Stroudsburg, 1973), pp. 119–123.

[15] J. D. Markel and A. H. Gray, Linear Prediction of Speech

(Springer Verlag, New York, 1976).

[16] J. O. Smith,

in Applications of Digital Signal Pro-
cessing to Audio and Acoustics, edited by M. Kahrs
and K. Brandenburg (Kluwer Academic Publishers,
Boston/Dordrecht/London, 1998), pp. 417–466, ISBN 0-
7923-8130-0, see http://www.wkap.nl/book.htm/0-7923-
8130-0.

of

[17] S. A. Van Duyne and J. O. Smith,
1993

ings
the
sic Conference, Tokyo
ciation,
online
1993),
http://ccrma.stanford.edu/~jos/pdf/mesh.pdf.
[18] R. Pitteroﬀ and J. Woodhouse, Acustica – Acta Acustica

in Proceed-
International Computer Mu-
(Computer Music Asso-
at

available

40–47,

pp.

84, 744 (1998).

84, 929 (1998).

[20] M. Karjalainen, in Proceedings of the International Con-
ference on Acoustics, Speech, and Signal Processing, Or-
lando, Florida, USA (IEEE Press, New York, 2002),
vol. 2, pp. 1869–1872.

[21] C. Erkut and M. Karjalainen, Proceedings of the

6

Engineering

Audio
Conference, Espoo, Finland pp. 317–323
http://www.acoustics.hut.fi/~cerkut/publications.html.

International
(2002),

Society

22nd

[22] M. Karjalainen, in Proceedings of the Stockholm Musi-
cal Acoustics Conference (SMAC-03), available online
at http://www.speech.kth.se/smac03/ (Royal Swedish
Academy of Music, Stockholm, 2003), pp. 393–396.
[23] A. Krishnaswamy and J. O. Smith, in Proceedings of the
IEEE Workshop on Applications of Signal Processing to
Audio and Acoustics, New Paltz, NY (IEEE Press, New
York, 2003).

[24] M. J. Beeson and D. T. Murphy, in Proceedings of the
Conference on Digital Audio Eﬀects (DAFx-04), Naples,
Italy (2004), accepted for publication.

[25] S. Bilbao, Ph.D. thesis, Stanford University (2001), avail-

[26] J. O. Smith, Computer Music Journal 16,

special

(1992),
sical
I. Available
http://ccrma.stanford.edu/~jos/pmudw/.

Instruments, Part

issue:

74
Physical Modeling of Mu-
at

online

[19] R. Pitteroﬀ and J. Woodhouse, Acustica – Acta Acustica

able online at http://ccrma.stanford.edu/~bilbao/.

