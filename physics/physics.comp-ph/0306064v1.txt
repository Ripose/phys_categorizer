3
0
0
2
 
n
u
J
 
8
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
4
6
0
6
0
3
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

FORTRAN-codes for an analysis of the ultrashort
pulse propagation

Vladimir L. Kalashnikov
Photonics Institute, TU Vienna, Gusshausstr. 27/387,
A-1040 Vienna, Austria

Abstract

Short description of the FORTRAN-codes for an analysis of the ul-
trashort pulse dynamics is presented. We consider: 1) the aberration-less
approximation and the momentum method for the search of the single
pulse stability regions in the laser with the soft-aperture Kerr-lens mode
locking; 2) the distributed complex Ginzburg-Landau model for the same
aim; 3) the generalized Schr¨odinger equation for the analysis of the fem-
tosecond pulse propagation in the tapered and photonic crystal ﬁbers.

1 Introduction

Analysis of the intra- and extra-cavity pulse dynamics has the common features:
it can be based on the distributed models of the complex Ginzburg-Landau type
[1] or the generalized Schr¨odinger type [2]. The basic diﬀerence of ultrashort
pulse laser dynamics from, for example, intra-ﬁber propagation of the femtosec-
ond pulses is the essential contribution of the dissipation into former. However,
for the direct simulation the appearance of the non-Hamiltonian part in the
dynamical equation doesn’t cause some problems. It allows considering the dis-
tributed models on the common basis (some physical and formal backgrounds
can be found in [3]).

The main problem results from the transition to the higher-dimensional mod-
els. The trivial dimension is 1 + 1, i.e. propagation distance (or cavity transit
number for a laser) + local time (for an analysis of the ultrashort pulse dy-
namics). Our experience proved that such dimension is quite suﬃcient for the
solution of the various problems, for example, spectral continuum generation
in the ﬁbers or multiple pulse operation of the femtosecond lasers. This ap-
proach adequately describes the pulse dynamics and at the same time is not
too complicated to remain physically meaningful. The minimum set of the gov-
erning parameters allows the overall optimization by the direct scanning of the
parametrical space [4, 5].

However, a consideration of the self-start ability of the soft-aperture Kerr-
lens mode-locked lasers (see [2]) and an analysis of the real-world laser conﬁg-

1

urations requires at the least 1 + 2 dimensions, where one transverse spatial
dimension appears as a result of the rotational symmetry. The direct simu-
lations on this way exceed the resources of the desk-top computer, which is
common tool for the laser community. Therefore we have to reduce the dimen-
sion, for example, by the means of the so-called aberration-less approximation.
This allows performing the simulation not on the time-spatial grid but on the
grid formed by the parametrical set deﬁning the trial (aberration-less) solution.
Below we consider some examples of 1 + 1 and 1 + 2 dimensional models.
The latter model has in fact reduced dimension due to the use of the momentum
method. It should be noted that the analytical computations underlying the
numerical codes were realized in the MAPLE computer algebra system [6].

2 Passive mode-locking and nonlinear complex

Ginzburg-Landau equation

This approach is based on 1+1 dimensional model in the framework of the
so-called nonlinear Ginzburg-Landau equation, which describes the Kerr-lens
mode locking as an action of the fast saturable absorber governed by the few
physically meaningful parameters, viz., its modulation depth γ and the inverse
saturation intensity σ.

The master equation describing the ultrashort pulse generation in the Kerr-

lens mode-locked solid-state laser is:

∂a(z, t)
∂z

=

α

−

"

ρ + t2
f

∂2
∂t2 −

γ

1 + σ

2
a(z, t)
|
|

#

a(z, t)

−

(
−

i)mβm
m!

∂m
∂tm +δ

2
a(z, t)
|
|
(cid:18)

−

1
ω0

∂
∂t |

2
a(z, t)
|

a(z, t),

(cid:19))

N

i

(

m=2
X

(1)

a
|

2 has a dimension of the intensity),
where a(z, t) is the ﬁeld amplitude (so that
|
z is the longitudinal coordinate normalized to the cavity length, t is the local
time, α is the saturated gain coeﬃcient, ρ is the linear net-loss coeﬃcient tak-
ing into account the intracavity and output losses, tf is the group delay caused
by the spectral ﬁltering within the cavity, βm are the m-order group-delay dis-
persion coeﬃcients, δ = lgn2ω0/c = 2πn2lg/(λ0n) is the self-phase modulation
coeﬃcient, ω0 and λ0 are the frequency and wavelength corresponding to the
minimum spectral loss, n and n2 are the linear and nonlinear refraction coeﬃ-
cients, respectively, lg is the double length of the gain medium (we suppose that
the gain medium gives a main contribution to the self-phase modulation). The
last term in Eq. (1) describes the self-steepening eﬀect and for the simpliﬁcation
will be not taken into account in the simulations. As an additional simpliﬁcation
we neglect the stimulated Raman scattering in the active medium [7].

For the numerical simulations in the framework of the distributed model it
0/(∆λc) and 1/δ,

is convenient to normalize the time and the intensity to tf = λ2

2

respectively (∆λ is the gain bandwidth). The simulation were performed on the
212
104 mesh. Only steady-state pulses were considered. As the criterion of
the steady-state operation we chose the peak intensity change less than 1% over
last 1000 cavity transits.

×

Note that the local time interval, which is equal to the cavity period

10
nanoseconds, is not covered in our case (212
100 picoseconds).
This puts the questions about stability against the multipulsing with the large
inter-pulse separations. Additionally we can not be sure in the ability of the
spontaneous appearance of the mode locking (problem of the mode locking self-
start ability).

tf ≈

20

≈

÷

×

The solution of Eq.

(1) is based on the fast Fourier-transform split-step
method (see Appendix 1). We symmetrized non-Hamiltonian (square brackets
in Eq. (1)) and Hamiltonian part (braces in Eq. (1)) separately. The mode
locking in the considered model is governed by the only four basic parameters:
α
ρ, β2, γ, and σ. This allows unambiguous multiparametric optimization.
In the presence of the higher-order dispersions, the additional βm parameters
appear. This complicates the optimization procedure, but keeps its physical
clarity. As an initial condition we take the analytical solution of the cubic
Ginzburg-Landau or Schr¨odinger equation [3].

−

Some results obtained on the basis of this model are presented in [4, 5, 7].

3 Spectral continuum generation in the tapered

ﬁber

Generation of spectral supercontinuum became a hot topic in optics in recent
years [8]. In the crystal or tapered ﬁber the propagating ﬁeld has a compar-
atively determinate spatial structure due to a strong conﬁnement. Therefore,
the 1 + 1-dimensional simulations give a quite thorough result. However, the
nonlinearity in such ﬁbers is enhanced by their small core size. As a result, a
set of the nonlinearities is wider than that described by the Hamiltonian part
of Eq. (1), which is the high-order nonlinear Schr¨odinger equation. The non-
trivial generalization can be obtain due to taking into account the stimulated
Raman scattering [9]:

i

∂a
∂z

+

imβm
m!

∂ma
∂tm =

δ (1

f )

−

−

2 a
|

a
|

(2)

Xm≥2

t

δf a

−

Z−∞

R (t)

a (z, t
|

−

t)

2 dt,
|

where δ = n2ω0(cid:30)c is the self-phase modulation coeﬃcient, βm is the mth-
order group-velocity dispersion coeﬃcient, f is the fraction of the stimulated
Raman scattering contribution to the nonlinear refractive index of the ﬁber,

3

2
2
1 +T
R (t) = T
2
is the Raman response function [10, 11].
1 T 2
T 2
2
T1 = 12.2 fs and T2 = 32 fs deﬁne the phonon oscillation period and its dumping
time, respectively.

exp

sin

t
T1

t
T2

−

(cid:16)

(cid:17)

(cid:17)

(cid:16)

We normalized t to 1 fs (the normalization to the initial pulse width is
convenient, too), z to the nonlinear length Lnl = (ω0n2I0/c)−1 deﬁned by the
initial pulse intensity I0. The simulations were carried out on the mesh with the
time step 1 fs (213 points) and the spatial step 10−3Lnl. The solution of Eq. (2)
was based on the fast Fourier-transform split-step method with the evaluation
of the Raman response in the time domain (see Appendix 2).

The analysis of the pulse propagation in the tapered ﬁbers requires the
attention to the so-called transient sectors: before (after) the tapered sector
with the almost constant waist there is the convergent (divergent) sector, where
the ﬁber characteristics change from those in the single-mode ﬁber to those in
the tapered ﬁber (or vice versa). The exact law of these changes is unknown,
but we used the simple linear approximation for the evolution of the intensity
and the dispersion coeﬃcients. Note, that the normalization of the intensity
was deﬁned through the parameters of the tapered sector.

4 Aberration-less approximation: analysis of the

real-world laser conﬁgurations

Above the problem of the ultrashort pulse stability in the mode-locked laser
were formulated on the basis of the distributed 1 + 1-dimensional Ginzburg-
Landau model. We noted also some problems of such model. Here we present
an analysis on the basis of the time-spatial model. The spatial distribution for
the laser beam is assumed to be Gaussian that reduces the problem to 1 + 2-
dimensions. The free-space propagation of the Gaussian beam can be considered
on the basis of the usual ABCD-matrix formalism [12], while the propagation
inside the nonlinear active medium is described by the following equation:

∂a (z, r, t)
∂z

2ϑr2a (z, r, t)
w2
p

−

i

−

"

∂a(z,r,t)

∂r + r∂
2kr

2

a(z,r,t)
∂r2

+ β′
2

2 ∂2a (z, r, t)
∂t2

#

a (z, r, t)

(3)

+iχ

2 a (z, r, t) = α exp
a (z, r, t)
|
|

2r2
w2

−

a (z, r, t) + t′
f

2 ∂2a (z, r, t)
∂t2

.

(cid:18)

2 and t′

p (cid:19)
Here β′
f are the group-velocity dispersion and the inverse group-velocity
delay coeﬃcients (for ZnSe laser we used β′
f =13 fs/cm
2
[4]). The left-hand side of Eq. (3) describes the non-dissipative factors: thermo-
lensing (ϑ=k dn0
dT is the co-
10−5K −1 for ZnSe),
eﬃcient of the refractive index thermo-dependence (5.35
ζ is the loss coeﬃcient at the pump wavelength, Pa is the pump power, κth is
the thermo-conductivity coeﬃcient (0.172 W K −1cm−1 for ZnSe)); diﬀraction

ζz)/ (4πn0κth), k is the wave number, dn0

2=2054 fs2/cm and t′

dT ζPa exp (

×

−

4

(in the cylindrically symmetrical case); group-velocity dispersion and self-phase
modulation (providing self-focusing for radially varying beam, χ=n2k/n0). The
right-hand side of Eq.
(3) describes the dissipative factors inside the gain
medium: radially varying gain (providing gain guiding and soft aperture ac-
tion, α and wp are the saturated gain coeﬃcient and the pump beam size,
respectively); spectral ﬁltering caused by the gain band proﬁle. The saturated
gain can be expressed in the following way:

α =

~ωpπw2
p

2αmaxσaPaTr
+ 2υPg
2σaPaTr
πw2Is
~ωpπw2
p

τp
Tcav

+ 1

,

(cid:17)

(cid:16)

where υ=Eπw2/(2Pgτp) (Pg is the generation power, E is the generation energy,
ωp is the pump frequency, τp is the pulse width, Tcav is the cavity period, σa is
the absorption cross-section, Is is the gain saturation energy), w is the genera-
tion mode beam size. υ = √π(cid:30)2 for the pulse with the Gaussian time-proﬁle, 2
for the sech-shaped pulse and 1 for the CW (in the latter case τp=Tcav). The ap-
proximated solution of Eq. (3) is based on the so-called aberration-less approx-
imation: the propagating ﬁeld has the invariable spatial-time proﬁle, which is
described by the set of the z-dependent parameters. In the non-dissipative case
this approximation allows the variational approach providing rigorous descrip-
tion of the Gaussian beam propagation outside the parabolical approximation
[13].

In the dissipative case we use the momentum method [14] and consider
the momentums resulting from the symmetries of Eq. (3). The a
a exp (iφ)
invariance, the transverse and time translating invariance suggest the following
momentums [15]:

→

(4)

(5)

Tm,n =

Z Z∞

rmtn

2 drdt,
|

a
|

Jm.n =

rmtn

Mm.n =

rmtn

Z Z∞

Z Z∞

a

∂a∗
∂t −

a∗ ∂a
∂t

drdt,

(cid:18)

(cid:18)

a

∂a∗
∂r −

(cid:19)
a∗ ∂a
∂r

(cid:19)

drdt.

(3, 5) the trial so-
Like the variational approach we can substitute to Eqs.
If we take the Gaussian time-spatial
lution describing the ultrashort pulse.
r
(W (r)
proﬁle a (z, r, t) = W (r) exp
is the complex amplitude, 2w′2=w2, G(r) is the pulse ampliﬁcation parameter
excepting the geometrical magniﬁcation for the Gaussian beam), the equations
describing the evolution of the pulse and beam parameters are [16]:

2w(r)′2 + ib(r)r2

τ (r)2 + iψ(r)t2

G(r)

−

−

2
t

(cid:17)

(cid:16)

2

5

dw′
dz

=

2
k

−

w′ (z) b (z)

2αw′ (z) 3
1 + 2w′(z)2

w2
p

3/2 ,

−

w2
p

2τ (z)3 ψ (z)2

f + 2β′
t2

2

2τ (z) ψ (z) ,

(cid:16)

(cid:17)

(6)

dτ (z)
dz

=

2

τ (z) −

(cid:20)
dG (z)
dz

=

db (z)
dz

=

+

2ϑ
w2
p

α
1 + 2w′(z)2
w2
p
2b (z)2
k

+

dψ (z)
dz

= 2β′
2

2

1
τ (z)4 −

 

(cid:21)
2t2
f
τ (z)2 −

−

β′
2

2ψ (z) ,

√2P0e2G(z)
πPcrkw (z)′ 4 −
8t2
f ψ (z)
τ (z)2 +

ψ (z)2

! −
Pg = P0e2G(z),

1
2kw′ (z)4 ,

2P0e2G(z)
πPcrw (z)′ 2τ (z)2 ,

where P0 and w′
0 are the power and the beam size before the active medium,
respectively. This system can be solved on the basis of the fourth-order Runge-
Kutta method (see Appendix 3; beta, alpha, gamma, delta and psi correspond
to the right-hand side of Eqs. (6) for b, w, G, τ and ψ, respectively).

5 Conclusion

Above considered models allow the diﬀerent generalizations. For example, in
the framework of the Ginzburg-Landau model the stimulated Raman scattering
inside the active medium can be taken into account immediately (by analogy
with the ﬁber optics). The high-order nonlinear Schr¨odinger equation can be
generalized in order to take into account the birefringence. The momentum
method requires an additional analysis for the dissipative propagation. Nev-
ertheless, in the presented form it can be used for the Kerr-lens mode-locked
lasers optimization. Outside the aberration-less approximation for the ﬁeld
time-proﬁle, the model allows most adequate description of the mode-locked
lasers, but the computational time can be enormous in this case (for up-to-date
desk-top computers).

The considered numerical codes were prepared as a result of the prelimi-
nary analysis in the framework of the computer algebra system MAPLE (see
http://www.geocities.com/optomaplev).

6 Acknowledgments

This work was supported by Austrian National Science Fund under Project
M688.

6

7 Appendix 1:

PARAMETERS:

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c ULTRASHORT PULSE STABILITY
c IN THE KERR-LENS MODE-LOCKED LASER:
c ANALYSIS ON THE BASIS OF THE COMPLEX
c GINZBURG-LANDAU EQUATION
c
c V.L.Kalashnikov
c Photonics Institute, Technical University of Vienna
c e-mail: kalashnikov@tuwien.ac.at
c web-site: http://www.geocities.com/optomaplev
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c

alpha is the saturated net-gain;
beta is the group-delay dispersion;
D3 is the third-order dispersion;
gamma is the fast absorber modulation depth;
delta is the fast absorber saturation parameter.
Vr and Vi are the real and imaginary parts of the ﬁeld, respectively;
V is the ﬁeld intensity; VV is the spectral intensity;
Vmax is the maximum pulse intensity;
En is the generation energy;
width is the pulse width;
shift is the spectrum maximum shift.

All values are dimensionless: the intensity is normalized to the self-
phase modulation coeﬃcient, the time is normalized to the inverse
bandwidth of the spectral ﬁlter, the propagation distance is normalized
to the cavity length

The number of the considered steady-state pulses is deﬁned by
the number counter

REAL*8 Vr(4096),Vi(4096),V(4096),VV(4096),alpha,beta,gamma,delta
common /comin/ts(4096),ntab

DOUBLE PRECISION rho,rho1,rho2,tau,C,S,X,Y,Argum,Fout,Omega,Vm
DATA Nt,Nst,Pi/4096,12,3.14159265358979323846264338d0/

open(1,ﬁle=’Landau G.dat’)

epsilon = 1.e-4

7

write(1,*)’gamma, alpha, beta, D3, delta, Vmax, En, width, shift’

gamma = 0.05
D3 = -150.

do j2=1,10
alpha=(gamma-epsilon)*j2/10d0
do j3=1,100
beta=-j3
do j4=1,50
delta=10**(-2d0+4d0*j4/50d0)

Fout = 1d0/Nt

c

Initialization of the initial ﬁeld

K = 0

tau=sqrt(gamma-alpha)
rho1 = sqrt(2d0)*tau/sqrt(gamma*delta) !from cubic Landau-Ginzburg
rho2 = sqrt(-beta)*tau
if(rho1.gt.rho2)then
rho=rho1
else
rho=rho2
end if

! from Schr¯odinger

do j=1,Nt

Vr(j)=rho/cosh((j-2048)*tau)

Vi(j)=0.

end do

1
c

c

DISSIPATIVE PART

First ampliﬁcation step
do I=1,Nt

K = K+1

Vr(i) = Vr(i)*exp(0.5d0*alpha)
Vi(i) = Vi(i)*exp(0.5d0*alpha)
end do

c First ﬁlter action

call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt
IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
Argum=Omega**2 ! gain proﬁle and action
Vr(I)=Vr(I)*exp(-0.5d0*Argum)
Vi(I)=Vi(I)*exp(-0.5d0*Argum)
end do

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time

8

First nonlinear part’s action
do I=1,Nt

Argum=gamma/(1d0 + delta*(Vr(I)**2+Vi(I)**2))

Vr(I)=Vr(I)*exp(-0.5d0*Argum)
Vi(I)=Vi(I)*exp(-0.5d0*Argum)

c

c

end do
Second ampliﬁcation step
do I=1,Nt

Vr(i) = Vr(i)*exp(0.5d0*alpha)
Vi(i) = Vi(i)*exp(0.5d0*alpha)
end do

c

Second ﬁlter action

call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt
IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
Argum=Omega**2 ! gain proﬁle and action
Vr(I)=Vr(I)*exp(-0.5d0*Argum)
Vi(I)=Vi(I)*exp(-0.5d0*Argum)
end do

c

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
Second nonlinear part’s action
do I=1,Nt

Argum=gamma/(1d0 + delta*(Vr(I)**2+Vi(I)**2))

Vr(I)=Vr(I)*exp(-0.5d0*Argum)
Vi(I)=Vi(I)*exp(-0.5d0*Argum)

end do

c HAMILTONIAN PART
First dispersion step
c
call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt
IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
C=cos(0.5d0*((beta/2d0)*Omega**2 - (D3/6d0)*Omega**3))
S=sin(0.5d0*((beta/2d0)*Omega**2 - (D3/6d0)*Omega**3))
X=Vr(I)
Y=Vi(I)
Vr(I)=X*C+Y*S
Vi(I)=Y*C-X*S
end do

c

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
First self-phase modulation step
do I=1,Nt

9

Argum=0.5d0*(Vr(I)**2+Vi(I)**2)

C=cos(Argum)

S=sin(Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C+Y*S

Vi(I)=Y*C-X*S

c

end do
Second dispersion step
call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt
IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
C=cos(0.5d0*((beta/2d0)*Omega**2 - (D3/6d0)*Omega**3))
S=sin(0.5d0*((beta/2d0)*Omega**2 - (D3/6d0)*Omega**3))
X=Vr(I)
Y=Vi(I)
Vr(I)=X*C+Y*S
Vi(I)=Y*C-X*S
end do

c

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
Second self-phase modulation step
do I=1,Nt

Argum=0.5d0*(Vr(I)**2+Vi(I)**2)

C=cos(Argum)

S=sin(Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C+Y*S

Vi(I)=Y*C-X*S

end do

c Analysis of Generation Field

call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency
do i=1,nt
if(i.le.nt/2)then
j=nt/2+i
VV(j)=Vr(i)**2 + Vi(i)**2
else
j=i-nt/2
VV(j)=Vr(i)**2 + Vi(i)**2
end if
end do
call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
Sm=VV(1)
do 6 I=1,NT

10

if(VV(I).LT.Sm)goto 6
Sm=VV(I)
Ism=I

6

continue

shift=Ism-Nt/2
do I=1,NT
V(I)=Vr(I)**2+Vi(I)**2
end do

Vm=V(1)
do 2 I=1,NT
if(V(I).LT.Vm)goto 2
Vm=V(I)
Im=I

2

continue

if(k.eq.9000)cont p=Vm
if(Vm.lt.1e-10)goto 5
if(k.lt.10000)goto 1
c Analysis of Generation Field

do I=1,NT
IF(V(I).ge.Vm/2.and.V(I-1).le.Vm/2)h1=(2.*I-1)/2.
IF(V(I).le.Vm/2.and.V(I-1).ge.Vm/2)h2=(2.*I-1)/2.
end do

En = 0.
do I=1,Nt
En=En+V(i)
end do

if(Vm.gt.0.)then
stab=abs(cont p-Vm)/Vm
else
stab=1.
end if

Vmax=Vm

c PULSE NUMBER COUNTER
call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

c Filter

do I=1,Nt

IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
Argum=(0.1*(h2-h1))**2*Omega**2
Vr(I)=Vr(I)*exp(-Argum)
Vi(I)=Vi(I)*exp(-Argum)

end do

11

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time

do I=1,NT
V(I)=Vr(I)**2+Vi(I)**2
end do
Vm=V(1)
do 3 I=1,NT
if(V(I).LT.Vm)goto 3
Vm=V(I)
Im=I

3

continue

nm=0
do i=2,nt-1
if(V(i).ge.V(i-1).and.V(i).gt.Vm/10.)then
if(V(i+1).lt.V(i))nm=nm+1
else
end if
end do

width=(h2-h1)

if(nm.eq.1.and.stab.lt.0.01)then
write(1,fmt=4)gamma,alpha,beta,D3,delta,Vmax,En,width,shift

format(f4.2,1x,f5.3,1x,f6.1,1x,f6.1,1x,f5.1,1x,f7.4,1x,f7.3,1x,

4
#f7.1,1x,f7.1)
else
end if

5

close(1)
end

c

Fast Fourier transformation
SUBROUTINE FFTINN(XB,XM,NT,NST,SIGN)
REAL*8 XB(NT),XM(NT)
COMMON/COMIN/TS(4096),NTAB
DOUBLE PRECISION XB1,XB2,XM1,XM2,PRIR,W1,W2,FP,TS
IF(NTAB.GT.0)GOTO 30
NTAB=4096
PRIR=3.14159265358979323846264338d0/NTAB
DO 20 I=1,NTAB
FP=PRIR*(I-1)
20 TS(I)=SIN(FP)

end do
end do
end do

12

30 CONTINUE
LEC1=NT-1
LEC2=NT/2
J=1
DO 10 I=1,LEC1
IF(I.GE.J)GO TO 8
XB1=XB(J)
XM1=XM(J)
XB(J)=XB(I)
XM(J)=XM(I)
XB(I)=XB1
XM(I)=XM1
L=LEC2
IF(L.GE.J)GOTO 10
J=J-L
L=L/2
GO TO 9

8
9

10 J=J+L

INCP=NTAB*2
NSDV=NTAB/2
JLI=1
JKI=1
KLI=NT
DO 3 I=1,NST
JKI=JKI+JKI
KLI=KLI/2
INCP=INCP/2
INI=1
DO 2 J=1,JLI
LEC1=J
W2=TS(INI)
IF(INI-NSDV)5,5,6

5 W1=TS(INI+NSDV)

GO TO 7

6 W1=-TS(INI-NSDV)
7

IF(SIGN.GT.0.)W2=-W2
DO 1 K=1,KLI
LEC2=LEC1+JLI
XB1=XB(LEC1)
XM1=XM(LEC1)
XB2=W1*XB(LEC2)-W2*XM(LEC2)
XM2=W1*XM(LEC2)+W2*XB(LEC2)
XB(LEC1)=XB1+XB2
XM(LEC1)=XM1+XM2
XB(LEC2)=XB1-XB2
XM(LEC2)=XM1-XM2

13

1
2
3

4

LEC1=LEC1+JKI
INI=INI+INCP
JLI=JLI+JLI
IF(SIGN.LT.0.)RETURN
FP=1./NT
DO 4 I=1,NT
XB(I)=XB(I)*FP
XM(I)=XM(I)*FP
RETURN
END

8

Appendix 2:

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

PARAMETERS:

The description of the program can be found on http://www.geocities.com/
optomaplev/programs/fortran.html

e-mail: kalashnikov@tuwien.ac.at

web-site: http://www.geocities.com/optomaplev

GENERALIZED SCHROEDINGER EQUATION

V.L.Kalashnikov
Photonics Institute, Technical University of Vienna

cSPECTRAL CONTINUUM GENERATION IN THE TAPERED FIBER:
c
c
c
c
c
c
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c
c
c
c
c
c
c Amp is the initial pulse intensity (1 for the tapered section)
c ar begin is deﬁned by the ration of the tapered ﬁber and single-mode
c ﬁber cross-sections
c width is the initial pulse width (in fs)
c D begin and D3 begin are the group-velocity and third-order dispersions
c of the single-mode ﬁber
c D end and D3 end are the group-velocity and third-order dispersions
c of the tapered ﬁber
c All dispersions are deﬁned through the dispersion lengths normalized to
c the nonlinear length in the tapered ﬁber
c N steps and N t are 1000*L/Lnl, where L is the length of the transient
c ﬁber sector or the tapered sector, respectively, Lnl is the
c nonlinear length of the single-mode or tipered ﬁber, respectively

REAL*8 Vr(8192),Vi(8192),V(8192),R(8192)
REAL*8 Vr out(8192),Vi out(8192)
INTEGER N steps,N t

14

common /comin/ts(8192),ntab

DOUBLE PRECISION Amp,width,C,S,X,Y,Argum,Fout,Omega,Vm,n2eﬀ
DATA Nt,Nst,Pi,Dx/8192,13,3.14159265358979323846264338d0,1d-3/
DATA Fr,T1,T2/0.15d0,12.2d0,32d0/

R(i) = ((T1**2+T2**2)/(T1*T2**2))*exp(-(i-1)/T2)*sin((i-1)/T1)

open(1,ﬁle=’phase.dat’)
open(2,ﬁle=’spectrum.dat’)
open(3,ﬁle=’intensity.dat’)
Fout = 1d0/Nt
Raman responce function
do i=1,Nt

end do
Initialization of the initial ﬁeld

K = 0

width=28.36d0

c

c

D begin = -width**2/7.55d0
D end = width**2/0.53d0
D3 begin = -0.58d0*D begin*width
D3 end = -0.78d0*D end*width
ar begin = 0.0149
N steps = 3774

N t = 16992

D = D begin
D3 = D3 begin

Amp = sqrt(ar begin)

call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do j=1,Nt

Vr(j)=Amp/cosh((j-4096)/width)

Vi(j)=0.

end do

do j=1,Nt
write(3,*)k,j,Vr(j)**2+Vi(j)**2
end do

do i=1,nt
if(i.le.nt/2)then
j=nt/2+i
V(j)=Vr(i)**2 + Vi(i)**2

15

AAA = ar begin**(-1./(2.*N steps))

Vr out(j)=Vr(i)
Vi out(j)=Vi(i)
else
j=i-nt/2
V(j)=Vr(i)**2 + Vi(i)**2
Vr out(j)=Vr(i)
Vi out(j)=Vi(i)
end if
end do
call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
do i=1,Nt
write(1,*)k,i,Vr out(i),Vi out(i)
end do
do j=1,Nt
write(2,*)k,j,V(j)
end do
FIRST TRANSIENT SECTOR

K = K+1

c
1

write(*,*)K

First dispersion step

c
call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt

IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
C=cos(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
S=sin(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
X=Vr(I)
Y=Vi(I)
Vr(I)= X*C - Y*S
Vi(I)= Y*C + X*S

end do

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
c

First self-phase modulation step
do I=1,Nt

Argum=Dx*0.5d0*(1d0-Fr)*(Vr(I)**2+Vi(I)**2)

C=cos(Argum)

S=sin(Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

c

end do
First Raman step
do I=1,Nt

16

Argum = 0d0
do J=1,I
Argum=Argum + R(I-J+1)*(Vr(J)**2+Vi(J)**2)
end do

C=cos(Dx*0.5d0*Fr*Argum)

S=sin(Dx*0.5d0*Fr*Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

end do
Second dispersion step

c
call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt

IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
C=cos(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
S=sin(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
X=Vr(I)
Y=Vi(I)
Vr(I)= X*C - Y*S
Vi(I)= Y*C + X*S

end do

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
c

Second self-phase modulation step
do I=1,Nt

Argum=Dx*0.5d0*(1d0-Fr)*(Vr(I)**2+Vi(I)**2)

C=cos(Argum)

S=sin(Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

c

end do
Second Raman step
do I=1,Nt

Argum = 0d0
do J=1,I
Argum=Argum + R(I-J+1)*(Vr(J)**2+Vi(J)**2)
end do

C=cos(Dx*0.5d0*Fr*Argum)

S=sin(Dx*0.5d0*Fr*Argum)

17

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

end do
do I=1,Nt
Vr(i) = Vr(i)*AAA
Vi(i) = Vi(i)*AAA
end do
D = D begin + K*(D end - D begin)/N steps
D3 = D3 begin + K*(D3 end - D3 begin)/N steps
if((K/1000)*1000.eq.K)then
do j=1,Nt
write(3,*)k,j,Vr(j)**2+Vi(j)**2
end do

call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do i=1,nt
if(i.le.nt/2)then
j=nt/2+i
V(j)=Vr(i)**2 + Vi(i)**2
Vr out(j)=Vr(i)
Vi out(j)=Vi(i)
else
j=i-nt/2
V(j)=Vr(i)**2 + Vi(i)**2
Vr out(j)=Vr(i)
Vi out(j)=Vi(i)
end if
end do
call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
do i=1,Nt
write(1,*)k,i,Vr out(i),Vi out(i)
end do
do j=1,Nt
write(2,*)k,j,V(j)
end do
else
end if
if(k.lt.N steps)goto 1
TAPERED SECTOR

K = K+1

c

write(*,*)K

D = D end
D3 = D3 end

c

First dispersion step

18

call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt

IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
C=cos(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
S=sin(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
X=Vr(I)
Y=Vi(I)
Vr(I)= X*C - Y*S
Vi(I)= Y*C + X*S

end do

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
c

First self-phase modulation step
do I=1,Nt

Argum=Dx*0.5d0*(1d0-Fr)*(Vr(I)**2+Vi(I)**2)

C=cos(Argum)

S=sin(Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

c

end do
First Raman step
do I=1,Nt

Argum = 0d0
do J=1,I
Argum=Argum + R(I-J+1)*(Vr(J)**2+Vi(J)**2)
end do

C=cos(Dx*0.5d0*Fr*Argum)

S=sin(Dx*0.5d0*Fr*Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

end do
Second dispersion step

c
call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt

IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
C=cos(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
S=sin(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))

19

X=Vr(I)
Y=Vi(I)
Vr(I)= X*C - Y*S
Vi(I)= Y*C + X*S

end do

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
c

Second self-phase modulation step
do I=1,Nt

Argum=Dx*0.5d0*(1d0-Fr)*(Vr(I)**2+Vi(I)**2)

C=cos(Argum)

S=sin(Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

c

end do
Second Raman step
do I=1,Nt

Argum = 0d0
do J=1,I
Argum=Argum + R(I-J+1)*(Vr(J)**2+Vi(J)**2)
end do

C=cos(Dx*0.5d0*Fr*Argum)

S=sin(Dx*0.5d0*Fr*Argum)

call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

end do
if((K/1000)*1000.eq.K)then
do j=1,Nt
write(3,*)k,j,Vr(j)**2+Vi(j)**2
end do

do i=1,nt
if(i.le.nt/2)then
j=nt/2+i
V(j)=Vr(i)**2 + Vi(i)**2
Vr out(j)=Vr(i)
Vi out(j)=Vi(i)
else
j=i-nt/2
V(j)=Vr(i)**2 + Vi(i)**2
Vr out(j)=Vr(i)
Vi out(j)=Vi(i)

20

end if
end do
call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
do i=1,Nt
write(1,*)k,i,Vr out(i),Vi out(i)
end do
do j=1,Nt
write(2,*)k,j,V(j)
end do
else
end if
if(k.lt.N steps+N t)goto 2
SECOND TRANSIENT SECTOR

K = K+1

c

write(*,*)K

First dispersion step

c
call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt

IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
C=cos(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
S=sin(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
X=Vr(I)
Y=Vi(I)
Vr(I)= X*C - Y*S
Vi(I)= Y*C + X*S

end do

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
c

First self-phase modulation step
do I=1,Nt

Argum=Dx*0.5d0*(1d0-Fr)*(Vr(I)**2+Vi(I)**2)

C=cos(Argum)

S=sin(Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

c

end do
First Raman step
do I=1,Nt

Argum = 0d0
do J=1,I
Argum=Argum + R(I-J+1)*(Vr(J)**2+Vi(J)**2)

21

end do

C=cos(Dx*0.5d0*Fr*Argum)

S=sin(Dx*0.5d0*Fr*Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

end do
Second dispersion step

c
call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do I=1,Nt

IF(I.LE.Nt/2+1)Is=I-1
IF(I.GE.Nt/2+2)Is=I-1-Nt
Omega=2.*Pi*Is*Fout
C=cos(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
S=sin(Dx*0.5d0*((D/2d0)*Omega**2 - (D3/6d0)*Omega**3))
X=Vr(I)
Y=Vi(I)
Vr(I)= X*C - Y*S
Vi(I)= Y*C + X*S

end do

call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
c

Second self-phase modulation step
do I=1,Nt

Argum=Dx*0.5d0*(1d0-Fr)*(Vr(I)**2+Vi(I)**2)

C=cos(Argum)

S=sin(Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

c

end do
Second Raman step
do I=1,Nt

Argum = 0d0
do J=1,I
Argum=Argum + R(I-J+1)*(Vr(J)**2+Vi(J)**2)
end do

C=cos(Dx*0.5d0*Fr*Argum)

S=sin(Dx*0.5d0*Fr*Argum)

X=Vr(I)

Y=Vi(I)
Vr(I)=X*C - Y*S

Vi(I)=Y*C + X*S

22

end do
do I=1,Nt
Vr(i) = Vr(i)/AAA
Vi(i) = Vi(i)/AAA
end do
D = D end + (K-N steps-N t)*(D begin - D end)/N steps
D3 = D3 end + (K-N steps-N t)*(D3 begin - D3 end)/N steps
if((K/1000)*1000.eq.K)then
do j=1,Nt
write(3,*)k,j,Vr(j)**2+Vi(j)**2
end do

call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do i=1,nt
if(i.le.nt/2)then
j=nt/2+i
V(j)=Vr(i)**2 + Vi(i)**2
Vr out(j)=Vr(i)
Vi out(j)=Vi(i)
else
j=i-nt/2
V(j)=Vr(i)**2 + Vi(i)**2
Vr out(j)=Vr(i)
Vi out(j)=Vi(i)
end if
end do
call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
do i=1,Nt
write(1,*)k,i,Vr out(i),Vi out(i)
end do
do j=1,Nt
write(2,*)k,j,V(j)
end do
else
end if
if(k.lt.N t + 2*N steps)goto 3
do j=1,Nt
write(3,*)k,j,Vr(j)**2+Vi(j)**2
end do

call ﬀtinn(Vr,Vi,Nt,Nst,1.) ! from Time to Frequency

do i=1,nt
if(i.le.nt/2)then
j=nt/2+i
V(j)=Vr(i)**2 + Vi(i)**2
Vr out(j)=Vr(i)
Vi out(j)=Vi(i)
else

23

j=i-nt/2
V(j)=Vr(i)**2 + Vi(i)**2
Vr out(j)=Vr(i)
Vi out(j)=Vi(i)
end if
end do
call ﬀtinn(Vr,Vi,Nt,Nst,-1.) ! from Frequency to Time
do i=1,Nt
write(1,*)k,i,Vr out(i),Vi out(i)
end do
do j=1,Nt
write(2,*)k,j,V(j)
end do

close(1)
close(2)
close(3)
end
Fast Fourier transformation
see Appendix 1

c

9 Appendix 3

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

V.L.Kalashnikov

e-mail: kalashnikov@tuwien.ac.at

web-site: http://www.geocities.com/optomaplev

Photonics Institute, Technical University of Vienna

c ULTRASHORT PULSE STABILITY IN THE KERR-LENS
c MODE-LOCKED LASER: ANALYSIS ON THE BASIS OF
c THE MOMENTUM METHOD
c
c
c
c
c
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c
c This program is realized on the basis of the computer algebra approach
c (the corresponding description can be found on http://www.geocities.com/
c optomaplev/programs/fortran.html)
c
c PARAMETERS:
c
c a is the distance from the out-put plane mirror to the ﬁrst folding
c mirror;
c c is the distance from the totally reﬂecting plane mirror to the
c second folding mirror;
c b is the distance between folding mirrors;

24

c bs and bf give the limits of the scanning on b;
c b1 is the distance of the active medium facet from the ﬁrst folding
c mirror;
c b1s is the starting b1
c f is the focus length of the folding mirrors;
c z is the active medium length;
c n is the refractive index of the active medium;
c lambda is the generation wavelength;
c eps1 gives the criterion of the convergence to the steady-state
c solution;
c P is the pump power in watts;
c wp is the pump beam size;
c l is the loss coeﬃcient on the pump wavelength (in 1/cm);
c loss is the out-put loss coeﬃcient;
c am is the maximum gain coeﬃcient;
c Pcr is the critical power of the self-focusing in the active medium
c (in watts);
c Dam is the group-velocity dispersion of the active medium (in fsˆ2/cm,
c normal dispersion has a negative sign);
c Is is the gain saturation intensity;
c
c q is the complex Gaussian beam parameter;
c Pw is the pulse power;
c delta is the pulse width (for Gaussian pulse);
c psi is the pulse chirp;
c alpha and beta is the generation beam parameters (see description)
c
c Lengths are given in centimeters; powers are given in watts
c
c

COMPLEX*16 i,qs,q(15),qq,t ! i is the imaginary unit, qs is the initial

q

REAL*8 a,c,b1,b2,b,f,z,eps1,eps2,ro(15),n,x,ka(4),qu(4),tau(4)
REAL*8 delta(4),psi(4),del,delta0,ps,psi0,tg
REAL*8 lambda,Pi,b1s,bs,bf,beta0,alpha0,k,beta,alpha,kappa,wp,P,l
REAL*8 gamma,gamma0,loss,Pw,g,Is,S,am,Pcr,Pd(1),Der,Dam,Lcav,Tcav
INTEGER Num
DATA a,c,z,f,n,eps1/30d0,60d0,0.28d0,15d0,2.442d0,1d-3/
DATA b1s,bs,bf,wp,P,l,loss/0d0,20d0,55d0,100d-4,1.5d0,6d0,5d-2/
DATA Pi,lambda/3.14159265358979323846264338d0,2.5d-4/
DATA am,Pcr,cv,Dam,Is/9d0,965d3,3d10,-2054d0,1d4/
i=dcmplx(0.,1.)
open(1,ﬁle=’ro.dat’)
open(2,ﬁle=’der.dat’)
write(1,*)a,c,wp,P
! w0=100 mkm is the initial size of the plane wave:

25

qs = (0.,.7957747152)
! wmax=10 cm is maximum size of the simulated mode
eps2 = 1d2*Pi/lambda
k = 2d0*Pi/lambda ! is the wave number
! It takes into account the pump wave damping in the active medium:
kappa =.5506035739d0*P

S = 2d0*0.48d0*P*.2900302115d-4/Pi/wp**2 ! is the pump parameter

! sigma a*T r/h/nu p=.2900302115d-4.
! 0.48 - averaging along propagation axis.
! sigma a, T r, nu p are the absorption
! cross section of the active medium,
! the gain relaxation time, and the gain
! wavelength, respectively

! is the optical length of the gain medium
! is the gain band width in fs/cm
! is the step size

x = z/n
tg = 4d0/z
dx = x/1d3
DO I1=1,201
b = bs + (bf-bs)*(I1-1)/200d0
b1f = b-z
DO I2=1,201
b1 = b1s + (b1f-b1s)*(I2-1)/200d0
b2 = b-b1-z
Lcav = a + b + c ! is the cavity length
Tcav = (2d0*Lcav/cv)*1d15
write(*,*)I1,I2 ! just step numbers !
gamma0 = 0d0
Pw = 10d0

! scanning on b

! scanning on b1

! is the cavity period fs

! initial pulse power in watts

! initial pulse width in fs
! initial pulse chirp

delta0 = 1d3
psi0 = 0d0
beam propagation
Num = 0
qq = qs

continue

c

2

c

Num = Num + 1
Pwold = Pw
ABCD-modul: output mirror - folding mirror - active medium
q(1) = qq
q(2) = q(1) + a
q(3) = 1d0/(1d0/q(2) - 1d0/f)
q(4) = q(3) + b1

c—————————————————————
if(-1d0/dimag(1d0/q(4)).lt.0d0)goto 1
beta0 = -k*dreal(1d0/q(4))/2d0
alpha0 = dsqrt(-1d0/dimag(1d0/q(4))/k)

26

g = am*S/(1d0 + S +

#Pw*delta0*dsqrt(Pi/2d0)/(Pi*alpha0**2*Is*Tcav))

! saturated gain

c

Active medium (Runge-Kutta fourth-order method)

DO J=1,1000
ka(1) = (-0.5d0/alpha0**4 + 2d0*beta0**2 +

#2d0*k*kappa*dexp(-l*dx*(J-1))/wp**2)/k +
#(dsqrt(2d0)/Pi)*(Pw/Pcr)*dexp(2*gamma0)/alpha0**4/k

qu(1) = - 2d0*beta0*alpha0/k -

#2d0*g*alpha0**3/(1d0+2d0*alpha0**2/wp**2)**(3/2)/wp**2 !alpha

tau(1) = g/(1d0 + 2d0*alpha0**2/wp**2) - 2d0*tg**2/delta0**2 +

!beta

!gamma

#Dam*psi0

delta(1) = 2d0*tg**2*(1d0/delta0 - delta0**3*psi0**2) -

!delta

#2d0*Dam*delta0*psi0

psi(1) = 2d0*Dam*(psi0**2 - 1d0/delta0**4) - 8d0*tg**2*psi0/ !psi

#delta0**2 + (2d0/Pi)*(Pw/Pcr)*dexp(2*gamma0)/alpha0**2/delta0**2

ka(2) = (-0.5d0/(alpha0+0.5d0*dx*qu(1))**4 +

#2d0*(beta0+0.5d0*dx*ka(1))**2 +
#2d0*k*kappa*dexp(-l*dx*(J-0.5d0))/wp**2)/k +
#(dsqrt(2d0)/Pi)*(Pw/Pcr)*dexp(2*gamma0+0.5d0*dx*tau(1))/
#(alpha0+0.5d0*dx*qu(1))**4/k

qu(2) = - 2d0*(beta0+0.5d0*dx*ka(1))*(alpha0+0.5d0*dx*qu(1))/k -

#2d0*g*(alpha0+0.5d0*dx*qu(1))**3/(1d0+
#2d0*(alpha0+0.5d0*dx*qu(1))**2/wp**2)**(3/2)/wp**2

tau(2) = g/(1d0 + 2d0*(alpha0+0.5d0*dx*qu(1))**2/wp**2) -

#2d0*tg**2/(delta0+0.5d0*dx*delta(1))**2+Dam*(psi0+0.5d0*dx*psi(1))

delta(2) = 2d0*tg**2*(1d0/(delta0+0.5d0*dx*delta(1)) -

#(delta0+0.5d0*dx*delta(1))**3*(psi0+0.5d0*dx*psi(1))**2) -
#2d0*Dam*(delta0+0.5d0*dx*delta(1))*(psi0+0.5d0*dx*psi(1))

psi(2) = 2d0*Dam*((psi0+0.5d0*dx*psi(1))**2 -

#1d0/(delta0+0.5d0*dx*delta(1))**4) -
#8d0*tg**2*(psi0+0.5d0*dx*psi(1))/
#(delta0+0.5d0*dx*delta(1))**2 + (2d0/Pi)*(Pw/Pcr)*
#dexp(2*(gamma0+0.5d0*dx*tau(1)))/(alpha0+0.5d0*dx*qu(1))**2/
#(delta0+0.5d0*dx*delta(1))**2

ka(3) = (-0.5d0/(alpha0+0.5d0*dx*qu(2))**4 +

#2d0*(beta0+0.5d0*dx*ka(2))**2 +
#2d0*k*kappa*dexp(-l*dx*(J-0.5d0))/wp**2)/k +
#(dsqrt(2d0)/Pi)*(Pw/Pcr)*dexp(2*gamma0+0.5d0*dx*tau(2))/
#(alpha0+0.5d0*dx*qu(2))**4/k

qu(3) = - 2d0*(beta0+0.5d0*dx*ka(2))*(alpha0+0.5d0*dx*qu(2))/k -

#2d0*g*(alpha0+0.5d0*dx*qu(2))**3/(1d0+

27

#2d0*(alpha0+0.5d0*dx*qu(2))**2/wp**2)**(3/2)/wp**2

tau(3) = g/(1d0 + 2d0*(alpha0+0.5d0*dx*qu(2))**2/wp**2) -

#2d0*tg**2/(delta0+0.5d0*dx*delta(2))**2+Dam*(psi0+0.5d0*dx*psi(2))

delta(3) = 2d0*tg**2*(1d0/(delta0+0.5d0*dx*delta(2)) -

#(delta0+0.5d0*dx*delta(2))**3*(psi0+0.5d0*dx*psi(2))**2) -
#2d0*Dam*(delta0+0.5d0*dx*delta(2))*(psi0+0.5d0*dx*psi(2))

psi(3) = 2d0*Dam*((psi0+0.5d0*dx*psi(2))**2 -

#1d0/(delta0+0.5d0*dx*delta(2))**4) -
#8d0*tg**2*(psi0+0.5d0*dx*psi(2))/
#(delta0+0.5d0*dx*delta(2))**2 + (2d0/Pi)*(Pw/Pcr)*
#dexp(2*(gamma0+0.5d0*dx*tau(2)))/(alpha0+0.5d0*dx*qu(2))**2/
#(delta0+0.5d0*dx*delta(2))**2

ka(4) = (-0.5d0/(alpha0+dx*qu(3))**4 +

#2d0*(beta0+dx*ka(3))**2 +
#2d0*k*kappa*dexp(-l*dx*J)/wp**2)/k +
#(dsqrt(2d0)/Pi)*(Pw/Pcr)*dexp(2*gamma0+dx*tau(3))/
#(alpha0+dx*qu(3))**4/k

qu(4) = - 2d0*(beta0+dx*ka(3))*(alpha0+dx*qu(3))/k -

#2d0*g*(alpha0+dx*qu(3))**3/(1d0+
#2d0*(alpha0+dx*qu(3))**2/wp**2)**(3/2)/wp**2

tau(4) = g/(1d0 + 2d0*(alpha0+dx*qu(3))**2/wp**2) -
#2d0*tg**2/(delta0+dx*delta(3))**2 + Dam*(psi0+dx*psi(3))

delta(4) = 2d0*tg**2*(1d0/(delta0+dx*delta(3)) -

#(delta0+dx*delta(3))**3*(psi0+dx*psi(3))**2) -
#2d0*Dam*(delta0+dx*delta(3))*(psi0+dx*psi(3))
psi(4) = 2d0*Dam*((psi0+dx*psi(3))**2 -

#1d0/(delta0+dx*delta(3))**4) -
#8d0*tg**2*(psi0+dx*psi(3))/
#(delta0+dx*delta(3))**2 + (2d0/Pi)*(Pw/Pcr)*
#dexp(2*(gamma0+dx*tau(3)))/(alpha0+dx*qu(3))**2/
#(delta0+dx*delta(3))**2

beta = beta0 + (dx/6d0)*(ka(1)+2d0*ka(2)+2d0*ka(3)+ka(4))
alpha = alpha0 + (dx/6d0)*(qu(1)+2d0*qu(2)+2d0*qu(3)+qu(4))
gamma = gamma0 + (dx/6d0)*(tau(1)+2d0*tau(2)+2d0*tau(3)+tau(4))
del=delta0+(dx/6d0)*(delta(1)+2d0*delta(2)+2d0*delta(3)+delta(4))
ps=psi0+(dx/6d0)*(psi(1)+2d0*psi(2)+2d0*psi(3)+psi(4))
if(alpha.lt.0.or.alpha.gt.10.or.gamma.lt.0.or.gamma.gt.10.

#or.del.lt.0.)goto 1
alpha0 = alpha
beta0 = beta
gamma0 = gamma
delta0 = del
psi0 = ps

END DO
Pw = Pw*dexp(2d0*gamma0)

28

c———————————————————–
c ABCD-modul: active medium - second folding mirror - second ﬂat mirror

(and backwards)

gamma0 = 0d0

if(Pw.le.1d-10.or.Pw.gt.1d20)goto 1
t = k/(-2d0*beta0 - i/alpha0**2)
q(5) = dcmplx(dreal(t),dimag(t))

q(6) = q(5) + b2
q(7) = 1d0/(1d0/q(6) - 1d0/f)
q(8) = q(7) + c
q(9) = q(8) + c
q(10) = 1d0/(1d0/q(9) - 1d0/f)
q(11) = q(10) + b2

c———————————————————–

if(-1d0/dimag(1d0/q(11)).lt.0d0)goto 1
beta0 = -k*dreal(1d0/q(11))/2d0
alpha0 = dsqrt(-1d0/dimag(1d0/q(11))/k)

g = am*S/(1d0 + S +

#Pw*delta0*dsqrt(Pi/2d0)/(Pi*alpha0**2*Is*Tcav))

c

Active medium (Runge-Kutta fourth-order method)
DO J=1,1000
ka(1) = (-0.5d0/alpha0**4 + 2d0*beta0**2 +

#2d0*k*kappa*dexp(-l*dx*(J-1))/wp**2)/k +
#(dsqrt(2d0)/Pi)*(Pw/Pcr)*dexp(2*gamma0)/alpha0**4/k

qu(1) = - 2d0*beta0*alpha0/k -

#2d0*g*alpha0**3/(1d0+2d0*alpha0**2/wp**2)**(3/2)/wp**2

tau(1) = g/(1d0 + 2d0*alpha0**2/wp**2) - 2d0*tg**2/delta0**2 +

#Dam*psi0

#2d0*Dam*delta0*psi0

delta(1) = 2d0*tg**2*(1d0/delta0 - delta0**3*psi0**2) -

psi(1) = 2d0*Dam*(psi0**2 - 1d0/delta0**4) - 8d0*tg**2*psi0/
#delta0**2 + (2d0/Pi)*(Pw/Pcr)*dexp(2*gamma0)/alpha0**2/delta0**2

ka(2) = (-0.5d0/(alpha0+0.5d0*dx*qu(1))**4 +

#2d0*(beta0+0.5d0*dx*ka(1))**2 +
#2d0*k*kappa*dexp(-l*dx*(J-0.5d0))/wp**2)/k +
#(dsqrt(2d0)/Pi)*(Pw/Pcr)*dexp(2*gamma0+0.5d0*dx*tau(1))/
#(alpha0+0.5d0*dx*qu(1))**4/k

qu(2) = - 2d0*(beta0+0.5d0*dx*ka(1))*(alpha0+0.5d0*dx*qu(1))/k -

#2d0*g*(alpha0+0.5d0*dx*qu(1))**3/(1d0+
#2d0*(alpha0+0.5d0*dx*qu(1))**2/wp**2)**(3/2)/wp**2

tau(2) = g/(1d0 + 2d0*(alpha0+0.5d0*dx*qu(1))**2/wp**2) -

29

#2d0*tg**2/(delta0+0.5d0*dx*delta(1))**2+Dam*(psi0+0.5d0*dx*psi(1))

delta(2) = 2d0*tg**2*(1d0/(delta0+0.5d0*dx*delta(1)) -

#(delta0+0.5d0*dx*delta(1))**3*(psi0+0.5d0*dx*psi(1))**2) -
#2d0*Dam*(delta0+0.5d0*dx*delta(1))*(psi0+0.5d0*dx*psi(1))

psi(2) = 2d0*Dam*((psi0+0.5d0*dx*psi(1))**2 -

#1d0/(delta0+0.5d0*dx*delta(1))**4) -
#8d0*tg**2*(psi0+0.5d0*dx*psi(1))/
#(delta0+0.5d0*dx*delta(1))**2 + (2d0/Pi)*(Pw/Pcr)*
#dexp(2*(gamma0+0.5d0*dx*tau(1)))/(alpha0+0.5d0*dx*qu(1))**2/
#(delta0+0.5d0*dx*delta(1))**2

ka(3) = (-0.5d0/(alpha0+0.5d0*dx*qu(2))**4 +

#2d0*(beta0+0.5d0*dx*ka(2))**2 +
#2d0*k*kappa*dexp(-l*dx*(J-0.5d0))/wp**2)/k +
#(dsqrt(2d0)/Pi)*(Pw/Pcr)*dexp(2*gamma0+0.5d0*dx*tau(2))/
#(alpha0+0.5d0*dx*qu(2))**4/k

qu(3) = - 2d0*(beta0+0.5d0*dx*ka(2))*(alpha0+0.5d0*dx*qu(2))/k -

#2d0*g*(alpha0+0.5d0*dx*qu(2))**3/(1d0+
#2d0*(alpha0+0.5d0*dx*qu(2))**2/wp**2)**(3/2)/wp**2

tau(3) = g/(1d0 + 2d0*(alpha0+0.5d0*dx*qu(2))**2/wp**2) -

#2d0*tg**2/(delta0+0.5d0*dx*delta(2))**2+Dam*(psi0+0.5d0*dx*psi(2))

delta(3) = 2d0*tg**2*(1d0/(delta0+0.5d0*dx*delta(2)) -

#(delta0+0.5d0*dx*delta(2))**3*(psi0+0.5d0*dx*psi(2))**2) -
#2d0*Dam*(delta0+0.5d0*dx*delta(2))*(psi0+0.5d0*dx*psi(2))

psi(3) = 2d0*Dam*((psi0+0.5d0*dx*psi(2))**2 -

#1d0/(delta0+0.5d0*dx*delta(2))**4) -
#8d0*tg**2*(psi0+0.5d0*dx*psi(2))/
#(delta0+0.5d0*dx*delta(2))**2 + (2d0/Pi)*(Pw/Pcr)*
#dexp(2*(gamma0+0.5d0*dx*tau(2)))/(alpha0+0.5d0*dx*qu(2))**2/
#(delta0+0.5d0*dx*delta(2))**2

ka(4) = (-0.5d0/(alpha0+dx*qu(3))**4 +

#2d0*(beta0+dx*ka(3))**2 +
#2d0*k*kappa*dexp(-l*dx*J)/wp**2)/k +
#(dsqrt(2d0)/Pi)*(Pw/Pcr)*dexp(2*gamma0+dx*tau(3))/
#(alpha0+dx*qu(3))**4/k

qu(4) = - 2d0*(beta0+dx*ka(3))*(alpha0+dx*qu(3))/k -

#2d0*g*(alpha0+dx*qu(3))**3/(1d0+
#2d0*(alpha0+dx*qu(3))**2/wp**2)**(3/2)/wp**2

tau(4) = g/(1d0 + 2d0*(alpha0+dx*qu(3))**2/wp**2) -
#2d0*tg**2/(delta0+dx*delta(3))**2 + Dam*(psi0+dx*psi(3))

delta(4) = 2d0*tg**2*(1d0/(delta0+dx*delta(3)) -

#(delta0+dx*delta(3))**3*(psi0+dx*psi(3))**2) -
#2d0*Dam*(delta0+dx*delta(3))*(psi0+dx*psi(3))
psi(4) = 2d0*Dam*((psi0+dx*psi(3))**2 -

#1d0/(delta0+dx*delta(3))**4) -
#8d0*tg**2*(psi0+dx*psi(3))/
#(delta0+dx*delta(3))**2 + (2d0/Pi)*(Pw/Pcr)*

30

#dexp(2*(gamma0+dx*tau(3)))/(alpha0+dx*qu(3))**2/
#(delta0+dx*delta(3))**2

beta = beta0 + (dx/6d0)*(ka(1)+2d0*ka(2)+2d0*ka(3)+ka(4))
alpha = alpha0 + (dx/6d0)*(qu(1)+2d0*qu(2)+2d0*qu(3)+qu(4))
gamma = gamma0 + (dx/6d0)*(tau(1)+2d0*tau(2)+2d0*tau(3)+tau(4))
del=delta0+(dx/6d0)*(delta(1)+2d0*delta(2)+2d0*delta(3)+delta(4))
ps=psi0+(dx/6d0)*(psi(1)+2d0*psi(2)+2d0*psi(3)+psi(4))
if(alpha.lt.0.or.alpha.gt.10.or.gamma.lt.0.or.gamma.gt.10.

#or.del.lt.0.)goto 1
alpha0 = alpha
beta0 = beta
gamma0 = gamma
delta0 = del
psi0 = ps

END DO

c————————————————————-

Pw = Pw*dexp(2d0*gamma0)

gamma0 = 0d0

if(Pw.le.1d-10.or.Pw.gt.1d20)goto 1
t = k/(-2d0*beta0 - i/alpha0**2)
q(12) = dcmplx(dreal(t),dimag(t))
ABCD-modul for the residuary propagation up to out-put mirror
q(13) = q(12) + b1
q(14) = 1d0/(1d0/q(13) - 1d0/f)
q(15) = q(14) + a
Pw = Pw*dexp(-loss)

c————————————————————-

if(Pw.le.1d-10.or.Pw.gt.1d20)goto 1
if(Num.gt.5000)goto 1

! criteria for the power
! and iteration number

c
beam size

wˆ2*Pi/lambda converts the initial part of the beam parameter to the

DO I4=1,15
ro(I4) = -1d0/dimag(1d0/q(I4))
END DO
Beam is to have the positive size and hasn’t to be too large
if(ro(1).le.0..or.ro(2).le.0..or.ro(3).le.0..or.
ro(4).le.0..or.ro(5).le.0..or.ro(6).le.0..or.
ro(7).le.0..or.ro(8).le.0..or.ro(9).le.0..or.
ro(10).le.0..or.ro(11).le.0..or.ro(12).le.0..or.
ro(13).le.0..or.ro(14).le.0..or.ro(15).le.0.)goto 1
if(ro(1).gt.eps2.or.ro(2).gt.eps2.or.ro(3).gt.eps2.or.
ro(4).gt.eps2.or.ro(5).gt.eps2.or.ro(6).gt.eps2.or.
ro(7).gt.eps2.or.ro(8).gt.eps2.or.ro(9).gt.eps2.or.

31

c

c

2
3
4
5

2
3

4
5

ro(10).gt.eps2.or.ro(11).gt.eps2.or.ro(12).gt.eps2.or.
ro(13).gt.eps2.or.ro(14).gt.eps2.or.ro(15).gt.eps2)goto 1

c

qq = q(15)
Pulse power stability
if(abs(ro(15)/ro(1)-1d0).gt.eps1.
#or.abs(Pw/Pwold-1d0).gt.eps1)goto 2
Out-put for the stable pulse
c
write(1,*)b,b1,Pw,sqrt(ro(5)*lambda/Pi),delta0,Num

1

continue

END DO
END DO

close(1)
close(2)
STOP
END

References

[1] I.S.Aranson, L.Kramer, Rev. Mod. Phys. 74, 99 (2002).

[2] T.Brabec, F.Krausz, Rev. Mod. Phys. 72, 545 (2000).

[3] V.L.Kalashnikov, arXiv:physics/0009056.

[4] V.L.Kalashnikov, E.Sorokin, I.T.Sorokina, arXiv:physics/0212106.

[5] V.L.Kalashnikov, E.Sorokin, I.T.Sorokina, IEEE J. Opt. Electron. 39, 323

(2003).

(2001).

[6] on-line: http://www.geocities.com/optomaplev.

[7] V.L.Kalashnikov, E.Sorokin, I.T.Sorokina. J. Opt. Soc. Am. B 18, 1732

[8] P.Russell, Science 299, 358 (2003).

[9] G.P.Agrawal, “Nonlinear ﬁrber optics” (Academic Press, 2001).

[10] R.H.Stolen, J.P.Gordon, W.J.Tomlinson, H.A.Haus, J. Opt. Soc. Am. B 6,

1159 (1989).

[11] D.Hollenbeck, C.Cantrell, J. Opt. Soc. Am. B 19, 2886 (2002).

[12] A.E.Siegman, “Lasers” (University Science, 1986).

[13] D.Anderson. Phys. Rev. A 27, 3135 (1983).

32

[14] S.N.Vlasov, V.A.Petrishchev, V.I.Talanov. Izvestija vuzov (radiophizika)

14, 1353 (1971) (in russian).

[15] N.N.Akhmediev, A.Ankiewicz, “Solitons: Nonlinear Pulses and Beams”

(Chapman&Hall, London, 1997).

[16] MAPLE-based realization of the described procedure can be foun on

http://www.geocities.com/optomaplev/programs/selﬀ.html

33

