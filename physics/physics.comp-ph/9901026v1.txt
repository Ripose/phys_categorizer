Numerical integration of the equations of motion

for rigid polyatomics: The matrix method

Igor P. Omelyan

Institute for Condensed Matter Physics, National Ukrainian Academy of Sciences,
1 Svientsitsky St., UA-290011 Lviv, Ukraine ∗

A new scheme for numerical integration of motion for classical systems

composed of rigid polyatomic molecules is proposed. The scheme is based

on a matrix representation of the rotational degrees of freedom. The equa-

tions of motion are integrated within the Verlet framework in velocity form.

It is shown that, contrary to previous methods, in the approach introduced

the rigidity of molecules can be conserved automatically without any addi-

tional transformations. A comparison of various techniques with respect to

numerical stability is made.

Keywords: Numerical algorithms; Equations of motion; Computer tech-

niques

PACS numbers: 02.60.Cb; 04.25.-g; 95.75.Pq

9
9
9
1
 
n
a
J
 
7
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
6
2
0
1
0
9
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

∗E-mail: nep@icmp.lviv.ua

1

I. INTRODUCTION

Many approaches in physical chemistry deal with model systems consisting of clas-

sical rigid molecules.

In studying such systems by the method of molecular dynamics

(MD), three problems arise at least: (a) the choice of suitable parameters for describing

a state of the system in phase space, (b) the application of an eﬃcient algorithm to inte-

grate numerically the equations of motion, and (c) the exact conservation of the rigidity

of molecules during an approximate integration. The question of how best to handle these

problems is one which has been keenly debated and the relative merits of a number of

various schemes have been devised.

The molecular approach treats dynamics of the system in view of translational and

rotational motions. In the classical scheme [1], three Eulerian angles are used to represent

the same number of rotational degrees of freedom of the molecule. A numerical integra-

tion of the corresponding equations of motion was performed in early investigations [2, 3].

It has been soon established [4, 5] that this integration is very ineﬃcient because of sin-

gularities whenever the azimuthal angle of the molecule takes a value of 0 or π. Although

the singularities can be avoided by applying diﬀerent sets of Eulerian angles, this requires

complex manipulations with time-consuming trigonometric functions. In singularity free

schemes, the orientations of molecules are expressed in terms of either quaternions [6–10]

or principal-axis vectors [6]. The last scheme has been derived extending the symmetry

vector method [11, 12] for diatomics to an arbitrary rigid body.

In the atomic approach [13], the phase trajectories are considered as translational

displacements of individual molecular sites. Such particles move independently under the

potential-energy forces and constraint forces, introduced to hold inter-atomic distances

constant. This approach is intensively exploited in MD simulations since usual algorithms

for integration of translational motion can be applied here. However, the atomic technique

is sophisticated to implement for point molecules and when there are more than two, three

or four interaction sites in the cases of linear, planar and three-dimensional molecules,

respectively, because then the orientations can not be deﬁned uniquely [14]. Moreover, to

reproduce exactly the rigid molecular structure for arbitrary polyatomics, it is necessary

to solve complicated systems of six nonlinear equations per molecule at each time step of

the integration process.

2

Usually, high-order predictor-corrector algorithms [15, 16] are applied to integrate the

equations of rotational motion [2, 7, 8]. Such algorithms, being very accurate at small

time steps, quickly become unstable and can not be used for greater step sizes [14]. Small

time steps are impractical in calculations, because too much expensive computer time

is required to cover the suﬃcient phase space. At the same time, translational motion

is successfully integrated with the lower-order Verlet [17], leapfrog [18], velocity Verlet

[19] and Beeman [20] algorithms, owing their simplicity and exceptional numerical stabil-

ity (for example, the equations of atomic motion are integrated within the usual Verlet

framework [13, 14]). However, original versions of these algorithms were constructed on

an assumption that acceleration is velocity-independent, and, therefore, they can not be

applied directly to rotational dynamics. Analogous pattern arises with translational mo-

tion in the presence of external magnetic ﬁelds or when relativistic eﬀects are important

and it is necessary to take into account internal ﬁelds of moving charges.

To remedy that omission, Fincham [21, 22] has proposed explicit and implicit versions

of the leapfrog algorithm for rotational motion in which angular momenta are involved

into the integration. In the case of a more stable implicit version, this leads to a system

of four nonlinear equations per molecule for the same number of quaternion components,

which is solved by iteration [22]. Ahlrichs and Brode have derived a hybrid method [23]

in which the principal axes are considered as pseudo particles and constraint forces are

introduced to maintain their orthonormality. The evolution of principal axes in time can

be determined using a recursive solution for exponential propagators. In such a way some

diﬃculties of the cumbersome atomic technique have been obviated. But the algorithm

is within the Verlet framework and does not involve angular velocities. Therefore, it

is impossible to extend it to a thermostat version or to an integration in the presence

of magnetic ﬁelds. Moreover, the pseudo-particle formalism does not contain molecular

torques, so that it is not so simple matter to apply it to systems with point multipoles.

Finally, the recursive method [23] as well as the rotational-motion leapfrog algorithms

[22] appear to be much less eﬃcient with respect to the total energy conservation than

the atomic-constraint technique.

In the present paper we develop the idea of using principal-axis vectors as orientational

variables. We involve the velocities and molecular torques explicitly and show that the

3

rigidity problem can easily be resolved in our approach without any additional transfor-

mations. The paper is organized as follows. The equations of motion for orientational

matrices are obtained in Sec.2. The question of how to integrate these equations within

the Verlet framework in velocity form is considered in Sec.3. A comparison of diﬀerent

approaches, based on actual MD simulations of water, is presented in Sec.4. Concluding

remarks are added in Sec.5.

II. EQUATIONS OF MOLECULAR MOTION

Let us consider a system composed of N identical rigid molecules with M atoms.

We split evolution of the system in time t into translational and rotational motions. The

translational motions are applied with respect to the molecule as a whole and can be

described by the 3N (i = 1, . . . , N) Newton equations

m

d2ri
dt2 =

N ;M

Xj;a,b
(j6=i)

F ab

ij (|ra

i − rb

j|) ≡ F i(t) ,

(1)

where ri =

M
a mara

molecule i, respectively, m =

P

i /m and ra
i are the positions of the centre of mass and atom a of
M
a ma and ma denote the masses of a separate molecule

and partial atoms, and F ab

ij are the atom-atom forces between two diﬀerent molecules.

P

To analyze rotational motions, we introduce the sets e ≡ (e1, e2, e3) and ui ≡
1, ui

3) of orthogonal unit vectors characterizing the laboratory ﬁxed coordinate
system, L, and the moving coordinate system, Si, attached to molecule i, respectively.

2, ui

(ui

Orientations of the Si-system with respect to the laboratory frame can be deﬁned as

ui

αβeβ, or merely ui+

β ai
are vector-columns,
·eβ are components of the rotational matrix Ai and α, β = 1, 2, 3. Let us

α =
P
αβ = ui
ai
α
place the origin of the Si-system in the centre of mass of the i-th molecule and direct

= Aie+, where e+ and ui+

the axes of this system along the principal axes of inertia. The principal components of

angular velocities, Ωi = Ωi

1ui

1 + Ωi

2ui

2 + Ωi

3ui

3, obey 3N Euler equations [2],

Jα

dΩi
α
dt

= K i

α(t) +

Jβ − Jγ
(cid:16)

Ωi
(cid:17)

β(t)Ωi

γ(t) ,

(2)

where (α, β, γ) = (1, 2, 3); (2, 3, 1) and (3, 1, 2). Here J1, J2 and J3 are the independent on

time principal moments of inertia of the molecule,

j;a,b δa
i

×F ab

ij = ki

1e1 + ki

2e2 + ki

3e3 =

P

4

1ui

2ui

3ui

3 is the torque exerted on molecule i with respect to its centre of mass

1 + K i

K i
due to the interactions with the other molecules, K +

2 + K i

ki = (ki
for atom a within the molecule in the Si-system, i.e., δa

3),
3)+ be a vector-column of positions
3. By
construction of the Si-system the conservative set (a = 1, . . . , M) of vectors ∆a is the

i −ri. Let ∆a = (∆a

i = Aik+
2, ∆a

i , where Ki = (K i

3) and δa

i = ∆a

2 + ∆a

1 + ∆a

i = ra

1, ∆a

1, K i

2, K i

1, ki

2, ki

1ui

2ui

3ui

same for each molecule and deﬁned by its rigid geometry. Then the positions of atoms
i (t)∆a, where A+ denotes the matrix

in the L-system at time t are ra

i (t) = ri(t) + A+

transposed to A.

Usually, the elements of orientational matrices Ai are expressed via three Eulerian

angles which can be chosen as follows: cos θi = e3·ui
3)/|e3×ui
·(e3×ui
cos ψi = ui
2
˙θi sin ψi − ˙ϕi sin θi cos ψi, Ωi

3|. Then principal components of angular velocity are Ωi
1 =
3 = ˙ϕi cos θi + ˙ψi. As was
2 = ˙θi cos ψi + ˙ϕi sin θi sin ψi and Ωi
mentioned earlier, the equations of motion are singular in this case. The most notorious

3, cos ϕi = e2·(e3×ui

3)/|e3×ui

3| and

demonstration is the expression (Ωi

2 sin ψi − Ωi

1 cos ψi)/ sin θi for the generalized velocity

˙ϕi from which it follows that ˙ϕi → ∞ when θi tends to zero or π. This leads to serious

technical disadvantages for the application of Eulerian angles to numerical calculations.

approach, i.e., |δa

It is worth mentioning that the rigidity of molecules is conserved automatically in this
i (t)∆a = |∆a|2, where
i (t)∆a
the property AA+ = I of rotational matrices has been used and I is the unit matrix. In

= ∆a+Ai(t)A+

i (t)∆a

i (t)|2 =

A+
(cid:16)

A+

+

(cid:16)

(cid:17)

(cid:17)

other words, the matrix Ai remains an orthonormal one for arbitrary values of Eulerian

angles.

As is now well established [6, 7], at least four orientational parameters per molecule

must be used to avoid the singularities. In this case the matrix Ai is a function of these

parameters which constitute the so-called quaternion qi ≡ (ξi, ηi, ζi, χi). It is necessary

to emphasize that the matrix Ai is orthonormal if the quaternion satisﬁes the equality

i = ξ2
q2

i + η2

i + ζ 2

i + χ2

i = 1. In practice, however, the equations of motion are not solved

exactly, so that this constraint will only be satisﬁed approximately. The simplest way to

achieve the required unit norm at all times lies in multiplying each quaternion component,

associated with the same molecule, by the common factor 1

q2

i at every time step of

.q

the numerical integration [7, 22].

In the mentioned above approaches, orientations of the Si-system with respect to the

5

laboratory frame were deﬁned by the matrix Ai, where each of the nine elements |ai

αβ| ≤ 1

of which is a function of either three Eulerian angles or four quaternion components. Now

involving no Eulerian angles and quaternions, we merely consider all these elements as pa-

rameters which represent the rotational degrees of freedom. The elements ai

αβ are, in fact,

the Cartesian coordinates of principal axes of molecules in the laboratory frame. They
are not independent as it follows from the requirement AiA+
12 and ai
matrices. For example, the ﬁrst three elements ai

i = I imposed on rotational

13 can be expressed via the

11, ai
3, reducing the number of orientational

rest of others from the vector relation ui

1 = ui
2

×ui

parameters per molecule from 9 to 6. The remaining six elements are connected by three

constraints, namely, ui
2

3 = 1 and ui
2
ments we can choose arbitrarily three ones, not belonging the same row of the matrix,

3 = 0. Thus, among these six ele-

2 = 1, ui
3

·ui

·ui

·ui

to form an independent set, but only with a few exceptions. Indeed, let ai

21, ai
be chosen as independent elements and one considers a particular case, when ai

22 and ai
33
33 = ±1.

Then from the equality ui
3

·ui

3 = 1 it immediately follows that ai

31 = ai

32 = 0. From the

next equality ui
2

23 = 0 and, ﬁnally, the third relation ui
2 = 1
2
2=1 concerning the variables which were assumed to be as
2 + ai
yields the constraint ai
22
21

3 = 0 we ﬁnd that ai

·ui

·ui

independent quantities.

The reason of this situation is similar to that existing in the case of using Eulerian

angles, where the singularities have appeared at θi = 0 or π, i.e., at ai

33 = cos θi = ±1.

It indicates again about the impossibility to derive singularity free equations of motion

involving only three orientational variables per molecule. As was pointed out earlier,

four orientational parameters avoid the singularities for arbitrary polyatomic molecules.

Nevertheless, a larger number of parameters can also be acceptable, but this leads to an

increased number of constraints. For instance, there is one constraint per molecule for

quaternion variables, while there are three or even six constraints for six or nine parameters

in our case. From this point of view, such an original presentation [6] of the matrix

approach has no advantages with respect to the quaternion method. However, as we shall

show in the next section using some speciﬁc properties of the matrix representation, the

constraints can be satisﬁed intrinsically within particular integration frameworks without

any additional transformations.

The equations of motion for dynamical variables ai

αβ can be found as follows. From

6

the deﬁnition dui

ui, we obtain ˙ai

the matrix form

α/dt = Ωi×ui
2α − Ωi
3ai

1α = Ωi

α of angular velocity and the orthonormality of sets e and
1α and ˙ai
2ai

2α = Ωi

3α = Ωi

3α − Ωi

1α − Ωi

2α, or in

3α, ˙ai

2ai

1ai

1ai

3ai

(3)

(4)

(5)

˙Ai = ΩiAi ,

Ωi =

0

Ωi

3 −Ωi
2
Ωi
0
1

−Ωi
3
2 −Ωi
1

Ωi

0



















where

motion

and (5).

are antisymmetric matrices associated with angular velocities Ωi. Then diﬀerentiating

relations (3) with respect to time, one obtains the 9N (i = 1, . . . , N) scalar equations of

¨Ai = ˙ΩiAi + Ω ˙Ai = ˙ΩiAi + ΩiΩiAi ,

where ˙Ωi are deﬁned according to Euler equations (2) and angular velocities are excluded
from equalities (3), i.e., Ωi = ˙AiA+
i . In such a way we construct the coupled set (1), (5)
of 12N diﬀerential equations of type F ({ri, ¨ri, Ai, ˙Ai, ¨Ai}) = 0 in terms of the 12N gen-
eralized coordinates {ri, Ai}. If an initial state {ri(t0), ˙ri(t0), Ai(t0), ˙Ai(t0)} is speciﬁed,

the time evolution {ri(t), Ai(t)} of the system can be unambiguously determined by (1)

III. INTEGRATION WITHIN THE VELOCITY VERLET FRAMEWORK

The equations of motion obtained must be complemented by an integration al-

gorithm in order to be applicable for actual simulations. As was demonstrated for the

atomic approach [13, 14], a very eﬃcient technique follows from the Verlet algorithm.

The same framework has been used in the pseudo-particle formalism [23]. However, the

Verlet algorithm in its original form [17] does not involve velocity explicitly into the

integration process and, therefore, it can not be applied to equations of motion with

velocity-dependent accelerations, as in our case (see eq. (5)). Because of this we shall

work within a velocity form [19] of the Verlet method.

7

A. Basic ideas

Let {ri(t0), ˙ri(t0), Ai(t0), ˙Ai(t0)} be a spatially-velocity conﬁguration of the system

at time t0. On the basis of equations (1) for translational motion we can calculate the

translational accelerations ¨ri(t0) using molecular forces F i(t0). Then, according to the

ﬁrst line of the velocity Verlet integrator, the positions of the centres of mass of molecules

(i = 1, . . . , N) at time t0 + ∆t are

ri(t0 + ∆t) = ri(t0) + ˙ri(t0)∆t + ¨ri(t0)∆t2/2 + O(∆t3) ,

(6)

where ∆t is the time step. Analogously, basing on the equations for rotational motion
˙Ωi and, therefore, two-fold time derivatives ¨Ai(t0)

(2), we deﬁne angular accelerations
(5), using principal torques K i(t0) and taking into account that Ωi = ˙AiA+

i . So that the

matrices Ai at time t0 + ∆t can be evaluated as follows

Ai(t0 + ∆t) = Ai(t0) + ˙Ai(t0)∆t + ¨Ai(t0)∆t2/2 + O(∆t3) .

And now we consider how to perform the second line

˙s(t0 + ∆t) = ˙s(t0) +

¨s(t0) + ¨s(t0 + ∆t)

∆t/2 + O(∆t3)

(cid:16)

(cid:17)

(7)

(8)

of the velocity Verlet framework, where s denotes a spatial coordinate. There are no

problems to pass this step in the case of translational motion, when ˙s ≡ ˙ri and, therefore,

for new translational velocities one obtains

˙ri(t0 + ∆t) = ˙ri(t0) +

¨ri(t0) + ¨ri(t0 + ∆t)
(cid:16)

(cid:17)

∆t/2 + O(∆t3) ,

(9)

where ¨ri(t0 + ∆t) = 1

m F i(t0 + ∆t) and the forces F i(t0 + ∆t) are calculated in the already

deﬁned new spatial conﬁguration {ri(t0 + ∆t), Ai(t0 + ∆t)}.

However, the diﬃculties immediately appear in the case of rotational dynamics, be-

cause then second time derivatives ¨s can depend explicitly not only on spatial coordinates

s, associated with the rotational degrees of freedom, but also on generalized velocities ˙s.

For example, according to Euler equations (2), the principal angular accelerations depend

on orientational variables via molecular torques and on angular velocities of molecules as

8

well. Then, choosing s ≡ Ai, we obtain on the basis of the equations of motion (5) that
¨Ai(t) ≡ ¨Ai(Ai(t), ˙Ai(t)). In view of (8), this leads to a very complicated system of nine

nonlinear equations per molecule with respect to the nine unknown elements of matrix
˙Ai(t+∆t). It is worth to note that similar problems arise within the leapfrog and Beeman

frameworks (see Appendix, where a rotational-motion version of the Beeman algorithm

is derived).

An alternative has been found in rotational-motion versions [21, 22] of the leapfrog

i Li of the molecule in the laboratory system of coordinates, i.e.,

algorithm. It has been assumed to associate the quantity ˙s with the angular momentum
li = A+
Li = (J1Ωi
3) = JΩi and J is the diagonal matrix of principal moments of
inertia. The rate of change in time of angular momentum is the torque, i.e., ˙li = ki.

˙s ≡ li, where

1, J2Ωi

2, J3Ωi

Then equation (8) leads to a much more simple expression,

li(t0 + ∆t) = li(t0) +

ki(t0) + ki(t0 + ∆t)
(cid:16)

(cid:17)

∆t/2 + O(∆t3) ,

(10)

and, therefore, new angular momenta are easily evaluated using the known torques ki at

times t0 and t0 + ∆t. The corresponding values for principal angular velocities and ﬁrst

time derivatives of orientational matrices can be obtained, when they are needed, using the
relations Ωi(t0+∆t) = J−1Ai(t0+∆t)li(t0+∆t) and ˙Ai(t0+∆t) = Ωi(t0+∆t)Ai(t0+∆t).

Finally, we consider the third version of the velocity Verlet method. The idea consists

in using angular velocities as independent parameters for describing the sate of the system

in phase space. Then putting ˙s ≡ Ωi in (8) and taking into account Euler equations (2),

we ﬁnd the following result

∆Ωi

α =

K i

α(t) + K i

α(t0 + ∆t) +

Jβ − Jγ

(cid:16)

(cid:17)

2Ωi

β(t0)Ωi

γ(t0) + Ωi

β(t0)∆Ωi

γ + Ωi

γ(t0)∆Ωi

β + ∆Ωi

β∆Ωi
γ

.

(cid:17)(cid:21)

∆t
2Jα (cid:20)

×
(cid:16)

(11)

The equations (11) constitute the system of maximum three nonlinear equations per

molecule with respect to the same number of the unknowns ∆Ωi

α = Ωi

α(t0 + ∆t) − Ωi

α(t0).

The system (11) can be linearized, substituting initially ∆Ωi

α = 0 in all quadratic terms,

and solved in a quite eﬃcient way by iteration. This is justiﬁed for ∆t → 0 because then

terms nonlinear in ∆Ωi

α are small.

9

From the mathematical point of view, all the three representations ˙s ≡ ˙Ai, li or Ωi

are completely equivalent, because the knowledge of an arbitrary quantity from the set
( ˙Ai, li, Ωi) allows us to determine the rest of two ones uniquely. In the case of numerical

integration the pattern is diﬀerent, because then the investigated quantities are evalu-
ated approximately. The choice ˙s ≡ ˙Ai can not be recommended for calculations due to

its complexity. The case of ˙s ≡ li, corresponding to the angular-momentum version of

the Verlet algorithm, is the most attractive in view of the avoidance of nonlinear equa-

tions. Actual computations show, however, that the best numerical stability with respect

to the total energy conservation is reached in the angular-velocity version (11) of the

Verlet algorithm, when ˙s ≡ Ωi. This fact can be explained taking into account that a
2), of the total energy is calculated directly from

2 + J3Ωi

2 + J2Ωi

kinetic part, 1
2

N
i=1(J1Ωi
1

2

3

principal angular velocities. At the same time, to evaluate angular velocities within the

P

angular-momentum version the additional transformations Ωi = J−1Aili with approxi-

mately computed matrices Ai and angular momenta li are necessary. They contribute

additional portions into the accumulated errors at calculations of the total energy.

Shifting the initial time t0 to t0 + ∆t, the integration process is repeated for a next

time step. In such a way, step by step the dynamics of the system can be evaluated.

B. Solving the rigidity problem

Let us write an analytical solution for orientational matrices in the form

Ai(t0 + ∆t) =

P

Xp=0

A(p)

i (t0)

∆tp
p!

+ O(∆tP +1) ,

(12)

where A(p)

i (t0) denotes the p -fold time derivative of Ai at time t0. It can be shown easily

from the structure of equation (3) that arbitrary-order time derivatives of the matrix
constraint Θi(t) ≡ Ai(t)A+
i = 0, ¨AiA+
˙AiA+

i (t) − I = 0 are equal to zero at a given moment of time, i.e.,
i + 2 ˙Ai ˙A+

i = 0 and so on, when Ai is orthonormal.

i + Ai ˙A+

i + Ai ¨A+

Therefore, if all the terms (P → ∞) of Taylor’s expansion (12) are taken into account, that

corresponds to the exact solution of equations of motion, and initially all the constraints

are satisﬁed, Θi(t0) = 0, they will be fulﬁlled at later times as well.

In particular algorithms the expansion is truncated after a ﬁnite number of terms.

10

For example, the velocity-Verlet form (7) is restricted by quadratic terms (P = 2), in-

volving truncation errors of order ∆t3 into the matrix elements of Ai. The same order

of uncertainties will be accumulated in Θi(t) at each time step, breaking the molecular

structure, i.e., Θi(t0 + ∆t) = O(∆t3). In such a case the molecules collapse and can even

be destroyed completely after a suﬃcient period of time. Therefore, the problem arises:

how to modify the ﬁrst line of the algorithm to achieve the exact rigidity for arbitrary

times?

1. Constraint-matrix scheme

The usual way to reduce orientational matrices to orthonormal form lies in using

the constraint technique. The main idea is simple. As far as the elements of orientational

matrices are not independent, this requires, generally speaking, the necessity of introduc-

ing additional forces which appear as a result of the constraints Θi(t) = 0. These matrix

constraints constitute, in fact, six independent scalar relations per molecule, namely,

1 ≡ ai
φi

2
11

2
+ ai
12

2
+ ai
13

− 1 = 0 , φi

4 ≡ ai

11ai

21 + ai

12ai

22 + ai

13ai

23 = 0 ,

2 ≡ ai
φi

2
21

2
+ ai
22

2
+ ai
23

− 1 = 0 , φi

5 ≡ ai

11ai

31 + ai

12ai

32 + ai

13ai

33 = 0 ,

(13)

3 ≡ ai
φi

2
31

2
+ ai
32

2
+ ai
33

− 1 = 0 , φi

6 ≡ ai

21ai

31 + ai

22ai

32 + ai

23ai

33 = 0 .

Then the corresponding constraint forces, acting on dynamical variables ai

αβ, are Gi

αβ =

−

6
l=1 λi

l∂φi

l/∂ai

αβ or in the matrix representation

P

Gi = −ΛiAi ≡ −

Ai ,

(14)

2λi

1 λi
λi
4 2λi
λi
5 λi

4 λi
5
2 λi
6
6 2λi
3



















where Λi are symmetric matrices of Lagrange multipliers. The matrices of constraint

forces are now added in the equations of motion (5) and, as a consequence, the evaluation

of matrix elements (7) is modiﬁed to

Ai(t0 + ∆t) = Ai(t0) + ˙Ai(t0)∆t + ¨Ai(t0)∆t2/2 + Gi(t0)∆t2/2 + O(∆t3) .

(15)

In view of equations (14) and (15), to satisfy the conditions Θi(t0 + ∆t) = 0 it is

necessary to solve the system φi

l(t0 + ∆t) = 0 of six (l = 1, . . . , 6) nonlinear equations

11

per molecule for six unknown Lagrange multipliers λi

l(t0). As usually, such a system

is linearized and the unknowns are found by iteration. The iteration procedure can be

initiated by putting λi

l = 0 in all nonlinear terms and the iterations converge rapidly at

actual step sizes to the physical solutions λi

l(t0) ∼ ∆t. The contributions of constraint
forces into the matrix evaluation (15) are of order ∆t3, i.e., the same order as truncation

errors of the basic algorithm (7), but the rigidity is now fulﬁlled perfectly for arbitrary

times in future. It is worth to remark that the constraint forces introduced should be

treated as pseudo forces, because they depend on details of the numerical integration in a

characteristic way and disappear if the equations of motion are solved exactly, i.e., when

2. Rotational-matrix scheme

Fortunately, the cumbersome procedure of solving nonlinear equations to preserve

the molecular rigidity can be avoided in our approach using the fact that actual algorithms

are accurate to a ﬁnite order only in time step.

In view of equalities (3) and (5), the

evaluation (7) can be presented in a more compact form,

Ai(t0 + ∆t) = Di(t0, ∆t)Ai(t0) + O(∆t3) ,

∆t → 0.

where

Di(t0, ∆t) = I + Ωi(t0)∆t +

˙Ωi(t0) + Ω2

i (t0)

∆t2/2

(cid:16)

(cid:17)

are evolution matrices. Let the rigidity has been satisﬁed at time t0, i.e., Θi(t0) =
Ai(t0)A+

i (t0) − I = 0. Then Θi(t0 + ∆t) = Di(t0, ∆t)D+

i (t0, ∆t) − I = O(∆t3) or, in

other words, the matrices Di are not orthonormal.

The simplest way to present the evolution matrices and, as a consequence, the ori-

entational matrices in orthonormal form lies in the following. Taking into account that
2 is the magnitude of the angular
2 + Ωi
2

i = W(Ωi) − Ωi

2I, where Ωi =

2 + Ωi
3

Ωi
1

Ω2

q

velocity and W(Ωi) is a symmetric matrix with the elements Ωi

αΩi

β, we rewrite (17) as

Di(t0, ∆t) = (1 − Ωi

2(t0)∆t2/2)I + Wi(Ωi(t0))∆t2/2 + Ωi(t0)∆t ,

(18)

12

(16)

(17)

where Ωi(t0) is an antisymmetric matrix of type (4), constructed on the mean value
Ωi(t0) = Ωi(t0) + ˙Ωi(t0)∆t/2 of the angular velocity for the i-th molecule during the

time interval [t0, t0 + ∆]. It is easy to see that replacing Ωi by Ωi in (18), we introduce

the error of order ∆t3. Moreover, taking into account that

∆t =

sin(Ωi∆t)
Ωi

+ O(∆t3) ,

∆t2
2

= 1 −

cos(Ωi∆t)
Ω2
i

+ O(∆t4) ,

(19)

we adjust (18) to the form

Di(t0, ∆t) = I cos(Ωi∆t) +

W(Ωi) +

Ωi ≡ exp(Ωi(t0)∆t) .

1 − cos(Ωi∆t)
Ω2
i

sin(Ωi∆t)
Ωi

(20)

Let us expand the matrix Di(t0, ∆t) into the Taylor’s series with respect to ∆t. Then

it can be veriﬁed easily that each elements of this matrix coincides with the corresponding

element of Di(t0, ∆t) (17) up to the second order in ∆t inclusively. Higher order terms,

being associated with time derivatives of angular accelerations, are not taken into account

within the velocity Verlet framework and they can merely be omitted without loss of the
precision. Therefore, the matrices Di(t0, ∆t) (20) and Di(t0, ∆t) (17) diﬀer between
themselves by terms of order ∆t3 or higher that is completely in the self-consistency with
truncation errors of the algorithm considered. However, the main advantage of using Di,

instead of Di, in the evaluation

Ai(t0 + ∆t) = Di(t0, ∆t)Ai(t0) + O(∆t3) ,

(21)

of orientational variables consists in the fact that the matrix Di(t0, ∆t) is orthonormal,
i.e., Di(t0, ∆t)D+
i (t0, ∆t) −I = 0. As it
follows from the structure of eq. (20), the matrix Di(t0, ∆t) deﬁnes the three-dimensional

i (t0, ∆t) = I and then Θi(t0 + ∆t) = Di(t0, ∆t)D+

rotation on angle Ωi∆t around the axis directed along vector Ωi. In such a way, the rigid

structures of molecules can be reproduced exactly at each time step of the integration.

IV. NUMERICAL TESTS AND DISCUSSION

We now test our matrix method on the basis of simulations on a TIP4P model

[24] of water. This method was used by us previously [25] investigating a Stockmayer

13

ﬂuid of point dipoles.

In the TIP4P model the water molecule consists of four sites,

M = 4. We have used a system of N = 256 molecules and the interaction site reaction

ﬁeld geometry [26]. Intersite components of the TIP4P potential were cut oﬀ and shifted

to zero at point of the truncation to avoid the system energy drift associated with the

passage of the sites through the surface of the cut-oﬀ sphere. The cut-oﬀ radius was

half the basic cell length. The MD simulations were performed in the microcanonical

ensemble at a density of 1 g/cm3 and at a temperature of 298 K. The numerical stability

of solutions to the equations of motion was identiﬁed in terms of relative ﬂuctuations,

E(t) =

h(E − hEit)2it/hEi2

t , of the total energy E of the system during time t.

q

We have made a comparative test carrying out explicit MD runs using our angular-

velocity Verlet integrator (eq. (11)) within constraint- and rotational-matrix schemes

(eqs. (15) and (21), respectively), as well as the implicit quaternion leapfrog algorithm

[22], the pseudo-particle formalism [23] and the atomic-constraint technique [13]. The

runs were started from an identical well equilibrated conﬁguration. All the algorithms

required almost the same computer time per step (96% being spent to evaluate pair in-

teractions). For the purpose of comparison the quaternion integration with the Gear

predictor-corrector algorithm of ﬁfth order [15, 16] has been considered as well. At least

two corrector steps were used to provide an optimal performance of the predictor-corrector

scheme and, as a consequence, twice or more larger computer time was taken in this case

than that is normally necessary.

The results obtained for relative total energy ﬂuctuations as functions of the length of

the simulations at four ﬁxed step sizes, ∆t = 1, 2, 3 and 4 fs, are presented in ﬁg. 1 (water

is most commonly simulated with a step size of order 2 fs [27]). At small time steps,

∆t ≤ 1 fs, all the approaches exhibited similar equivalence in the energy conservation

(subset (a) of ﬁg. 1), except the Gear algorithm which produced much more accurate

trajectories. But the Gear algorithm begins to be unstable already at ∆t = 1 fs and leads

to the worst results for ∆t ≥ 1.5 fs (see, as an example, the case ∆t = 2 fs, subset (b)).

Somewhat better stability is observed in the leapfrog and pseudo-particle approaches.

However, at moderate and great time steps, ∆t ≥ 2 fs (ﬁgs. 1 (b)–(d)), the results are

rather poor, especially in the case of the leapfrog scheme. The best numerical stability

has been achieved with the atomic-constraint algorithm and our matrix method, which

14

conserve the total energy approximately with the same accuracy up to ∆t = 3 fs. It can

be seen easily that the matrix method works better within the rotational-matrix scheme,

so that there is no need to use the complicated constraint-matrix procedure. Quite a few

iterations (the mean number of iterations per molecule varied from 3 to 5 at ∆t = 1÷4 fs)

was suﬃcient to obtain solutions to the system of quadratic equations (11) with a relative

iteration precision of 10−12. This contributes a negligible small portion additionally into

the total computer time.

To demonstrate that the exact reproduction of molecular rigidity is so important, we

have also integrated the equations of motion in a situation (eq. (7)) when no additional

normalization and orthogonalization of principal-axis vectors are used. In this case the

total energy ﬂuctuations increased drastically with increasing the length of the runs at

arbitrary time steps (see, for instance, the corresponding curve in ﬁg. 1 (a)). The same

words can be said in the case when no quaternion renormalization is applied along the

leapfrog trajectories. This is so because in the free-normalization regime, the structure of

molecules is broken that leads to an unpredictable discrepancy in the calculation of po-

tential forces and signiﬁcant deviations of the total energy. We have also established that

the numerical stability is very sensitive to the way of how the quaternion renormalization

is performed. In particular, the energy conservation can be somewhat improved if the

quaternions are renormalized inside the iterative loop of the implicit leapfrog integrator

rather than at the end of each time step only, as was originally proposed [22].

No shift of the total energy has been observed for the atomic-constraint and matrix

approaches over a length of 10 ps at ∆t ≤ 3 fs.

Instead, it oscillates around a stable

value of E0 = −33.6 kJ/mol. To reproduce the features of microcanonical ensembles

quantitatively, it is necessary for the ratio Γ = E/Υ of total energy ﬂuctuations to ﬂuc-

tuations Υ of the potential energy to be no more than a few per cent. For the system

under consideration Υ ≈ 0.56%, so that, for example, the level E = 0.03% will corre-

spond to Γ ∼ 5% that is still acceptable for precision calculations. The ratios Γ, obtained

within various approaches at the end of 10 ps runs, are plotted in ﬁg. 2 as dependent

on the time increment. The results of ﬁg. 2 show that a level of Γ = 5% is achieved at

the time steps 1.2, 1.4, 3.0 and 4.0 fs within the leapfrog, pseudo-particle, matrix and

atomic approaches, respectively. Therefore, the last two methods allow a step size more

15

than twice larger than the pseudo-particle and leapfrog algorithms. The functions Γ(∆t)

can be interpolated with a great accuracy as C∆t2 + C ′∆t3 with the coeﬃcients C ≈

0.28 and 0.30 % fs−2, C ′ ≈ 0.01 and 0.10 % fs−3 for the atomic and matrix approaches,

respectively. The characteristic square growth of Γ at small time steps is completely in

line with O(∆t2) order of global errors for the algorithm considered.

It is worth to underline that analyzing the system over a signiﬁcantly shorter time

period, of order 1 ps say (as was done by Ahlrichs and Brode [23]), one may come to a very

misleading idea about the energy conservation. We can see clearly from ﬁg. 1 that such a

simulation period (corresponding to 1000, 500, 333 and 250 time steps at ∆t = 1, 2, 3 and 4

fs, respectively) is quite insuﬃcient to give a realistic pattern on global errors accumulated

in the total energy. And only beginning from lengths of order 10 ps, we are entitled to

formulate true conclusions on the numerical stability. These lengths are suﬃciently long

to observe an appreciable modiﬁcation of the system. For instance, during 10 ps even long-

lived dipole moment correlations vanish completely [28]. Moreover, the phase trajectories

of 10 ps long are also suﬃcient, as a rule, to reproduce thermodynamic, structure and

other properties of water with a reliable statistical accuracy. The investigation of some

collective eﬀects, such as dielectric relaxation, may require extremely long simulations (up

to 1000 ps [28]) to reduce statistical noise. As a result, even the best algorithms may not

provide a required numerical stability. In such a situation, we can merely slightly rescale

the velocities of particles when the total energy has exceeded an allowed level. Obviously,

the investigated quantities will be little aﬀected by this rescaling if it is applied not more

frequently than after a period of time during which the correlations have signiﬁcantly

decayed.

In view of the results obtained in this section, we can conclude that the method

proposed appears to be the most eﬃcient among all known algorithms deriving within

the molecular framework and can be considered as a good alternative to the cumbersome

atomic technique. The fact that our molecular Verlet algorithm conserves the total energy

at great step sizes somewhat worse than the atomic Verlet algorithm results from the

introduction of velocities. As far as velocities appear explicitly, the angular accelerations

begin to be velocity dependent. Further, the angular velocities are calculated with one step

errors of order O(∆t3) and the same order of uncertainties will be presented simultaneously

16

in angular accelerations. This, in its turn (see eq. (11)), leads to additional terms of orders

O(∆t4) and O(∆t3) in the truncation and global errors, respectively, for angular velocities

and, as a consequence, for the total energy. That is why in the case of rotational motion the

coeﬃcient C ′ corresponding to the velocity Verlet diﬀers signiﬁcantly from that obtained

for the usual (free of velocities) Verlet algorithm. At the same time, the corresponding

values of C are practically equal between themselves, and, therefore, we may stay about

the equivalence of the both algorithms with respect to the main term of global errors.

The pointed out above minor disadvantage is compensated, however, by a much more

major advantage of our method with respect to the atomic scheme in that the velocity

Verlet algorithm allows to perform simulations in canonical ensembles. As is well known

[22], thermostat calculations can be carried out with signiﬁcantly greater step sizes than

those used in microcanonical ensembles. A thermostat version of the velocity Verlet

algorithm for rotational motion will be studied in a separate investigation.

V. CONCLUSION

We have shown that the diﬃculties in numerical integration of rigid polyatomics can

be overcame using an alternative approach. In our singularity free scheme, orientational

matrices were used to represent the rotational degrees of freedom of the system. Although

this introduces extra equations per molecule and the lack of independence for the matrix

elements, but presents no numerical diﬃculties. An elegant procedure, built directly into

the Verlet algorithm, has allowed to perfectly fulﬁl the rigidity of molecules at each step

of the trajectory without any additional eﬀorts and loss of precision. Avoidance of the

necessity to solve complex nonlinear equations for preservation of the molecular rigidity

should be a beneﬁt of the matrix method with respect to the atomic-constraint approach.

We have demonstrated on the basis of actual calculations that the matrix method leads

to results comparable in eﬃciency with the cumbersome atomic-constraint technique. The

advantages of the matrix scheme are that it can be implemented for arbitrary rigid bodies,

extended to a thermostat version and realized in MD programmes in a more simple way.

Acknowledgements. The author would like to acknowledge ﬁnancial support of the

President of Ukraine and to thank D. Fincham for a useful discussion.

17

Appendix

We now consider the question of how to adopt our matrix scheme to integrate the equations

of motion within the Beeman framework. According to the usual Beeman algorithm [20], the

translational positions and velocities of molecules are evaluated as

ri(t0 + ∆t) = ri(t0) + ˙ri(t0)∆t + [ 2

3 ¨ri(t0) − 1

6 ¨ri(t0 − ∆t)]∆t2 + O(∆t4) ,

˙ri(t0 + ∆t) = ˙ri(t0) + [ 1

3 ¨ri(t0 + ∆t) + 5

6 ¨ri(t0) − 1

6 ¨ri(t0 − ∆t)]∆t + O(∆t3) .

(A1)

1

The order of truncation errors in coordinates increases to four because the expression [ 2
3 ¨ri(t0) −
6 ¨ri(t0 − ∆t)]∆t2 can be reduced to the form ¨ri(t0)∆t2/2 + ˙¨ri(t0)∆t3/6 + O(∆t4) with the
estimation ˙¨ri(t0) = [¨ri(t0) − ¨ri(t0 − ∆t)]/∆t + O(∆t) of superaccelerations. The fractions in

the second line of eq. (A1) are obtained in such a way to provide the third order of truncation

errors in velocities and to satisfy exactly the St¨ormer central diﬀerence approximation [16, 29]

of accelerations

s(t0 + ∆t) = −s(t0 − ∆t) + 2s(t0) + ¨s(t0)∆t2 + O(∆t4)

(A2)

with s ≡ ri. Acting in the spirit of the Beeman framework, we can write analogous to (A1)

equations for orientational matrices and angular velocities. The result is

Ai(t0 + ∆t)=Ai(t0) + ˙Ai(t0)∆t + [ 2
3

¨Ai(t0) − 1
6

¨Ai(t0 − ∆t)]∆t2

−[ 2

3 Λi(t0)Ai(t0) − 1

6 Λi(t0 − ∆t)Ai(t0 − ∆t)]∆t2 + O(∆t4) ,

(A3)

(n+1)

Ωi
α

(t0 + ∆t) = Ωi

α(t0) +

1

3 K i

α(t0 + ∆t) + 5

6 K i

α(t) − 1

6 K i

α(t0 − ∆t) +

Jβ − Jγ

∆t
Jα (cid:20)

(n)

1

3 Ωi

β

(t0 + ∆t)Ωi
γ

(n)

(t0 + ∆t) + 5

6 Ωi

β(t0)Ωi

γ(t0) − 1

6 Ωi

β(t0 − ∆t)Ωi

γ(t0 − ∆t)

×

(cid:16)

(cid:16)

(A4)

(cid:17)

,

(cid:17)(cid:21)

where the symmetric constraint matrices Λi(t0) ∼ ∆t2 are found from the constraint relations

Ai(t0 + ∆t)A+

i (t0 + ∆t) = I, whereas new values Ωi

α(t0 + ∆t) for principal components of the

angular velocities can be computed by iteration (n = 0, 1, . . .) taking Ωi
α

(0)(t0 + ∆t) = Ωi

α(t0)

as initial guesses.

A rotational-matrix scheme can be derived within the Beeman method as follows. Consider

ﬁrst a more general procedure for the orthonormalization of orientational matrices, which will

be valid for integrators of arbitrary order in truncation errors. Let the algorithm applied uses

18

Taylor’s expansion (12) for the time evaluation of orientational matrices. Then the evolution

matrices can be cast as

Di(t0, ∆t) = I +

P

Xp=1

D(p)
i

(t0)

∆tp
p!

,

(A5)

(A6)

where D(p)

Ωi ˙Ωi + Ω3

i A+

i = A(p)
i , D(4)

i =

i = Ωi, D(2)
i , or more explicitly: D(1)
˙¨Ωi + 3 ¨ΩiΩi + Ωi ¨Ωi + 3 ˙Ωi ˙Ωi + 3 ˙ΩiΩ2

i = ˙Ωi + Ω2
i + 2Ωi ˙ΩiΩi + Ω2
i

i , D(3)

i = ¨Ωi + 2 ˙ΩiΩi +
˙Ωi + Ω4

i and so on.

A rotational-matrix counterpart of (A5) we ﬁnd in the orthonormal form

Di(t0, ∆t) = exp

P

p=1 H(p)

i (t0) ∆tp

p!

,

(cid:17)

(cid:16) P

where H(p)

are unknown antisymmetric matrices, i.e., H(p)

i

+

= −H(p)

i

i

, and expand the exponent

(A6) into the Taylor series at ∆t → 0. It is obvious that Di(t0, ∆t) and Di(t0, ∆t) will be iden-

tical at P → ∞, if all their matrix coeﬃcients, corresponding to the same powers p = 1, 2, . . . , P

of ∆t, are equal between themselves. This condition leads to a recursive procedure with the
˙¨Ωi + ¨ΩiΩi − Ωi ¨Ωi

solutions H(1)

2 ( ˙ΩiΩi − Ωi ˙Ωi), H(4)

i = Ωi, H(2)

i = ˙Ωi, H(3)

i = ¨Ωi + 1

i =

[ 2
3

and so on. The Beeman approach is accurate to third order in coordinates (P = 3), i.e.,
˙¨Ai(t0)∆t3/6 + O(∆t4), where the superaccelera-
˙¨Ai(t0) = [ ¨Ai(t0) − ¨Ai(t0 − ∆t)]/∆t + O(∆t). Similarly we can estimate angular superac-

¨Ai(t0 − ∆t)]∆t2 = ¨Ai(t0)∆t2/2 +

¨Ai(t0) − 1
6

tions

celerations, ¨Ωi(t0) = [ ˙Ωi(t0) − ˙Ωi(t0)(t0 − ∆t)]/∆t, and obtain in this case

DB

i (t0, ∆t) = exp
(cid:16)

Ωi(t0)∆t+[ 2
3

˙Ωi(t0)− 1
6

˙Ωi(t0 −∆t)]∆t2+[ ˙Ωi(t0)Ωi(t0)−Ωi(t0) ˙Ωi(t0)] ∆t3

.

12

(cid:17)

(A7)

Putting P = 2 in eq. (A6) yields the result Di(t0, ∆t) = exp(Ωi(t0)∆t + 1
2

˙Ωi(t0)∆t2). As was

expected, this is completely in line with the result (20) performed in Sec.3 for the velocity Verlet

algorithm on the basis of intuitive grounds.

It is worth mentioning that approximation (A2) is used directly for evaluation of spatial

coordinates in the usual Verlet algorithm [17, 23]. As can be veriﬁed, any trajectory produced

by the velocity Verlet algorithm satisﬁes equation (A2) at s ≡ {ri, Ai} even if constraint-

or rotational-matrix schemes are used. The fact that the trajectory s(t) can be generated

with the same fourth-order local errors by lower-order equations (6) and (7) (or (21)) results

from a fortunate cancellation of truncation errors arising in coordinates and velocities during

two neighbour time steps. Note, however, that the usual Verlet algorithm, its velocity version

and Beeman method are not equivalent, because they diﬀer between themselves by the main

19

term of fourth-order uncertainties in coordinates and calculate one-step velocities in a diﬀerent

manner. For example, evaluating velocities within the Beeman algorithm, it is assumed that the

accelerations are slow variables on time scales of 2∆t. If this criterion is not satisﬁed, the main

term O(∆t3) of truncation uncertainties in velocities and, as a result, the main coeﬃcient C in

global errors for the total energy may increase in a characteristic way. This prediction has been

conﬁrmed by our computer simulations on the TIP4P water. Therefore, the Beeman algorithm

can be applied for systems with suﬃciently smooth interparticle potentials only.

[1] H. Goldstein, Classical Mechanics, 2nd edn, (Addison-Wesley, Reading, MA, 1967).

[2] A. Rahman and F.H. Stillinger, J. Chem. Phys. 55 (1971) 3336; 60 (1974) 1545.

[3] J.P. Ryckaert and A. Bellemans, Chem. Phys. Lett. 30 (1975) 123.

[4] J. Barojas, D. Levesque and B. Quentrec, Phys. Rev. A 7 (1973) 1092.

[5] D. Levesque, J.J. Weis and G.N. Patey, Mol. Phys. 51 (1984) 333.

[6] D.J. Evans, Mol. Phys. 34 (1977) 317.

[7] D.J. Evans and S. Murad, Mol. Phys. 34 (1977) 327.

[8] D.J. Tildesley and P.A. Maden, Mol. Phys. 42 (1981) 1137.

[9] M.P. Allen and D.J. Tildesley, Computer Simulation of Liquids (Clarendon Press, Oxford,

1987).

Cambridge, 1995).

[10] D.C. Rapaport, The Art of Molecular Dynamics Simulation (Cambridge University Press,

[11] K. Singer, A. Taylor and J.V.L. Singer, Mol. Phys. 33 (1977) 1757.

[12] P.S.Y. Cheung and J.G. Powles, Mol. Phys. 30 (1975) 921.

[13] J.P. Ryckaert, G. Ciccotti and H.J.C. Berendsen, J. Comput. Phys. 23 (1977) 327.

[14] G. Ciccotti, J.P. Ryckaert and M. Ferrario, Mol. Phys. 47 (1982) 1253.

[15] C.W. Gear, ANL Report No. ANL-7126 (1966).

[16] C.W. Gear, Numerical Initial Value Problems in Ordinary Diﬀerential Equations (Prentice-

Hall, Engelwood Cliﬀs, NJ, 1971).

[17] L. Verlet, Phys. Rev. 159 (1967) 98.

New York, 1981).

[18] R.W. Hockney and J.W. Eastwood, Computer Simulation Using Particles (McGraw-Hill,

[19] W.C. Swope, H.C. Andersen, P.H. Berens and K.R. Wilson, J. Chem. Phys. 76 (1982) 637.

20

[20] D. Beeman, J. Comput. Phys. 20 (1976) 130.

[21] D. Fincham, CCP5 Information Quarterly 2 (1981) 6.

[22] D. Fincham, Mol. Simul. 8 (1992) 165.

[23] R. Ahlrichs and S. Brode, Comput. Phys. Commun. 42 (1986) 59.

[24] W.L. Jorgensen, J. Chandrasekhar, J.D. Madura, R.W. Impey and M.L. Klein, J. Chem.

Phys. 79 (1983) 926.

[25] I.P. Omelyan, Mol. Phys. 87 (1996) 1273.

[26] I.P. Omelyan, Phys. Lett. A 223 (1996) 295.

[27] D. Bertolini and A. Tani, Phys. Rev. E 51 (1995) 1091.

[28] M. Neumann, J. Chem. Phys. 85 (1986) 1567.

[29] G.D. Venneri and W.G. Hoover, J. Comput. Phys. 73 (1987) 486.

21

Figure captions

Fig. 1. The relative total energy ﬂuctuations as functions of the length of the simu-

lations on the TIP4P water, obtained within various techniques at four ﬁxed time steps,

namely, 1 fs (a), 2 fs (b), 3 fs (c) and 4 fs (d).

Fig. 2. The ratios of the total energy and potential energy ﬂuctuations as dependent

on the step size, observed for various approaches in the simulations of the TIP4P water

at the end of 10 ps runs.

22

