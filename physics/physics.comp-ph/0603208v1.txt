6
0
0
2
 
r
a

M
 
4
2
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
8
0
2
3
0
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Comparison of time splitting and
backsubstitution methods for integrating
Vlasov’s equation with magnetic ﬁelds

H. Schmitz and R. Grauer

Theoretische Physik I, Ruhr-Universit¨at Bochum, 44780 Bochum, Germany

Abstract

The standard approach for integrating the multidimensional Vlasov equation using
grid based, conservative schemes is based on a time splitting approach. Here, we
show that although the truncation error is of second order, time splitting can intro-
duce systematic heating of the plasma. We introduce a backsubstitution method,
which not only avoids this deﬁciency but also is computationally less expensive. The
general approach is demonstrated in conjunction with Boris’ scheme for evaluating
the characteristics.

Key words: Vlasov simulations, method of characteristics
PACS: 02.70.-c, 52.25.Dg, 52.65.Ff, 52.25.Xz

1 Introduction

Vlasov’s equation is fundamental for numerous problems in plasma theory.
This kinetic equation describes the behaviour of the single particle distribu-
tion functions of a collisionless plasma under the inﬂuence of electric and mag-
netic ﬁelds. Coupled with the equations for the electromagnetic ﬁelds and the
evaluation of the moments of the distribution functions one obtains a highly
nonlinear system of diﬀerential and integral equations. Only a few very sim-
ple problems can be solved analytically. For this reason numerical simulations
of Vlasov’s equation have become an important tool for theoretical plasma
physics.

One type of computer simulation approach integrates the distribution func-
tion directly on a high–dimensional numerical grid in phase space. Here one
dimension is needed for every space component and for every velocity compo-
nent. Following the original work by Cheng and Knorr [1] much progress has
been made on improving the accuracy of the advection schemes.

Preprint submitted to Elsevier Science

2 December 2013

The integration of the distribution function can be carried out in a number
of diﬀerent ways: The simplest schemes are ﬁnite diﬀerence schemes. They
are relatively easy to implement but suﬀer from numerical instabilities and
nonpositivity of the distribution function. Conservation laws such as the con-
servation of particle number can be implemented but complicate the scheme
greatly [2]. Conservative methods, on the other hand, discretise the distribu-
tion function by integrating over the numerical grid cells [3]. The advantage of
these methods lies in the fact that the particle number is naturally conserved
and no artiﬁcial sources or sinks of particles are introduced. Semi-Lagrangian
methods (e.g. [4]) follow the characteristics backwards and interpolate the dis-
tribution function at the origin of the characteristic. The interpolated value
is then transported forward to the grid points. Semi-Lagrangian methods do
not naturally conserve the particle number but can easily be made to preserve
positivity.

Most of the above methods are, however, developed for a one–dimensional
advection problem. When used for a one–dimensional electrostatic system in
which the physical phase space is two–dimensional, a time splitting method
is employed which was already proposed in [1]. Although Semi-Lagrangian
methods in principle allow to integrate the distribution function directly on
the high–dimensional grid, the time splitting technique is also used to simplify
the computation [5]. The general idea is that in higher dimensions this time
splitting can be generalised in a straightforward way [6].

We will show in this paper that, when including a magnetic ﬁeld, this simple
time splitting — although second order — can cause dissipation due to errors
which are always in the same direction. This implies that the temperature
of the system will increase systematically. We will also present an alterna-
tive method which we named backsubstitution method. The backsubstitution
method not only eliminates the problems of the time splitting method but is
also computationally less expensive.

In section 2 we will present the basic underlying equations. Section 3 will
describe the time splitting method and show how a systematic error develops.
In section 4 we will present the backsubstitution method which we will apply
to Boris’ scheme in section 5. Section 6 discusses simulations of Bernstein
waves using the diﬀerent schemes to provide a comparison. Section 7 gives
some concluding remarks.

2 General Problem

The basis of the kinetic plasma description is the distribution func-
tion f (x, v, t) which expresses the particle density in phase space. Here

2

f (x, v, t) d3x d3v is the number of particles in a phase space volume d3x d3v
located at (x, v) at time t. In a collisionless plasma the evolution of the dis-
tribution function is given by Vlasov’s equation

∂f
∂t

+ v

xf +

(E + v

B)

vf = 0,

(1)

· ∇

×

· ∇

q
m

where E and B are the electric and magnetic ﬁelds which have to be deter-
mined self-consistently. Vlasov’s equation describes the advection of values of
the distribution function along particle characteristics given by Newton’s law
of motion.

One central property of Vlasov’s equation is the conservation of the phase
space density, which directly translates into a conservation of mass and charge
in a closed system. For this reason it is natural to use a conservative scheme for
simulating Vlasov’s equation (for 1–dimensional schemes, see e.g. [7]). Today, a
diversity of Eulerian schemes, all with high accuracy and diﬀerent advantages
and disadvantages, are available (see e.g. [5,8] and references therein). These
schemes normally solve the one–dimensional advection problem,

∂tf (x, t) + u∂xf (x, t) = 0.

(2)

By integrating over a ﬁnite time step one obtains

xi+1/2

Zxi−1/2

X(tn,tn+1,xi+1/2)

Z
X(tn,tn+1,xi−1/2)

f (x, tn+1) dx =

f (x, tn) dx.

(3)

Here X(s, t, ξ) denotes the characteristic with parameter s that satisﬁes
X(t, t, ξ) = ξ.

For the one dimensional, electrostatic Vlasov–Problem

∂f
∂t

+ v∂xf +

E∂vf = 0,

q
m

a splitting technique is then usually employed. Here one integrates the advec-
tion in the x–direction by ∆t/2, then in v–direction by ∆t and then again
in x–direction by ∆t/2. This produces a second order scheme which can be
written as

Tx(∆t/2)Tv(∆t)Tx(∆t/2).

Here Tk denotes the numeric advection operator in the k–dimension.

(4)

(5)

3

3 Time splitting

The success of the time splitting for the one dimensional electrostatic prob-
lem motivates a common suggestion to extend the splitting technique to treat
higher–dimensional systems. Since the spatial dimensions are completely in-
dependent of each other this results in the following second order scheme for
the full three dimensional system

Tx(∆t/2)Ty(∆t/2)Tz(∆t/2)

Tvx(∆t/4)Tvy (∆t/2)Tvx(∆t/4)Tvz (∆t)Tvx(∆t/4)Tvy (∆t/2)Tvx(∆t/4)
Tx(∆t/2)Ty(∆t/2)Tz(∆t/2).

(6)

In each of these sub-steps a one dimensional transport equation of type (2)
is solved. For each of these equations the characteristics are calculated and
then projected onto the corresponding direction. This implies that even for
a hypothetical exact one–dimensional integration scheme the characteristics
are still only approximated by a second order time splitting scheme. For the
following discussion, we will consider only the velocity part of the integration
scheme since this determines how well the particle temperatures are described.

For a purely electrostatic system the above integration behaves well and errors
only occur due to repeated application of the advection scheme. The reason for
this is the independence of the change of the velocity component ∆vk on the
velocity vk. With a magnetic ﬁeld, however, the change of velocity ∆vk over a
ﬁnite time step does depend on the velocity vk. Here we assume that the inte-
gration scheme for the characteristics is at least second order. To investigate
the error caused by this method, we take the exact characteristic in v–space
and approximate it using the time splitting scheme. During integration of the
characteristic, the electromagnetic ﬁelds are assumed to be constant. Without
loss of generality we let B = Bˆz and move the origin in velocity space to
v0 = E
= 0 would only add a
constant acceleration in the vz–direction, and leads to the same result.

B. For simplicity we assume Ez = 0. Ez

×

In this setup the characteristics in velocity space are simple concentric circles
around the origin and we can neglect the vz coordinate completely. During
the time interval ∆t the whole vx,vy–plane rotates by an angle φ = ∆tqB/m.
Taking a velocity

we split the rotation into three steps according to the time–splitting scheme

(7)

(8)

v = (vx, vy)

4

Tvx(∆t/2)Tvy (∆t)Tvx(∆t/2).

6
(9)
(10)

(11)

(12)

(13)
(14)

(15)

(16)

This results in the following

va = (vx cos(φ/2)
x, va
vb = (va
vnew = (vb
x cos(φ/2)

vy sin(φ/2), vy) ,
y cos(φ) + va
x sin(φ)) ,
y sin(φ/2), vb
vb

y) .

−

−

Inserting va into vb and then vb into vnew results in a lengthy expression for
vnew. Taking the norm of vnew and expanding this expression for small angles
φ, i.e. small time steps ∆t, gives

(vnew)2 = v2

x + v2

v2
x +

y −  

v2
y
2 !

φ2 +

(φ3).

O

By construction this is, of course, second order in φ. However, one can see that
the second order error is always negative and thus introduces a systematic
error.

The time splitting method (8) can also be interpreted as performing the indi-
vidual steps (9)–(11) in ﬁrst order in φ. This corresponds to

va = (vx
vb = (va
vnew = (vb

−
x, va

vyφ/2, vy) ,
y + va
xφ) ,
yφ/2, vb
vb

y) .

x −
With respect to equation (2) this scheme is obtained by holding u constant
for each step. Taking the square of this vnew results in

vnew2 = v2

x + v2

y +

vxvy +

(φ4).

O

φ3
2

One can observe that in this case the second order disappears, and the third
order error is not systematic, but depends on the signs of vx and vy. In the
following we will refer to eqs (9)–(11) as scheme A and (13)–(15) as scheme
B.

v

|

In Fig. 1 the error of the magnitude
of the velocity after a quarter gyration
|
is plotted against the rotation angle ∆ϕ of the individual step. The error is
normalised to the initial velocity. The solid line shows the result of scheme A
while the dashed line shows the result of scheme B. The dotted line represents
the result of scheme B with alternating order of the vx–vy integration. For
scheme A, a total error of about 2.5% is accumulated after a quarter gyration
when ∆ϕ
0.045. After a full gyration the error sums up to 10% (not shown).
This value of ∆ϕ corresponds to roughly 140 integration steps for the full
circle. Using less steps, i.e. larger ∆ϕ results in even larger errors.

≈

To understand the direction of the error we note, that in eq. (3) the charac-
teristics are integrated backwards from a grid point to obtain the source of

5

r
r
e

v

-0.2

 0.1

 0

-0.1

-0.3

-0.4

-0.5

 0

Scheme A
Scheme B
Scheme B alt

 0.1

 0.2

 0.3

 0.5

 0.6

 0.7

 0.8

 0.4
∆ϕ

Fig. 1. Error verr of the magnitude of the velocity after a quarter gyration depending
on the angle of an individual step. Curves are plotted for the schemes A, B and
scheme B with alternating order of the vx–vy integration.

the distribution function for that grid point. The distribution function is then
transported from that source to the grid in some manner that depends on the
numerical scheme. The negative sign in the second order of eq. (12) implies
that the source is always located closer to the rotation centre than the grid
point. Thus the values of the distribution function are transported outwards
from the rotation centre. This results in an eﬀective heating of the distribution
function.

≈

Using scheme B the errors are smaller but not zero. Here an error of 2%
is observed when ∆ϕ
0.4. This is equivalent to roughly 16 steps for a
full gyration. Because the direction of the error in scheme B depends on the
values of vx and vy, one can further increase the accuracy by alternating the
order of the splitting. In the two dimensional case considered here this simply
implies alternating the roles of vx and vy. Using the alternating scheme the
overall error in the velocity magnitude is reduced to almost zero. However,
when looking at the relative phase error after a quarter gyration (Fig. 2)
no signiﬁcant improvement can be observed. While scheme A still shows the
largest error, the errors for scheme B with and without alternating oder of
integration are roughly comparable up to a ∆ϕ of 0.5. For this value of ∆ϕ
the phase error is approximately 1%.

When the Vlasov equation is solved on a discretised grid errors are worse
but the main sources of these errors are highlighted by the above analytical
argument.

6

Scheme A
Scheme B
Scheme B alt

r
r
e
ϕ

 0.18

 0.16

 0.14

 0.12

 0.1

 0.08

 0.06

 0.04

 0.02

 0

 0

 0.1

 0.2

 0.3

 0.5

 0.6

 0.7

 0.8

 0.4
∆ϕ

Fig. 2. Error φerr of the phase of the velocity after a quarter gyration depending on
the angle of an individual step. Curves are plotted for the schemes A, B and scheme
B with alternating order of the vx–vy integration.

4 Backsubstitution

In this section we want to present an alternative method for integrating
Vlasov’s equation that does not suﬀer from the above drawbacks. Here we
will present ﬁrst the general idea of this backsubstitution method and then
write down the equations for the general system described above.

Suppose we are given a one dimensional integration scheme for the transport
eq. (2). To create a scheme for the integration of the three–dimensional velocity
space there is no other choice but to split the full three–dimensional problem
into a number of one–dimensional substeps. For each of these substeps the
characteristics will be calculated and then projected onto the direction of the
advection step. We still have the freedom, which characteristics to integrate
and in which order to integrate them.

To start with, let us again consider the standard case described in the last
section. Our aim is to formulate a splitting scheme in which the characteristics
are integrated exactly, and which uses the minimum number of integration
steps. Since we can ignore the vz–direction, this means we want only two
integration steps, one for vx, and one for vy.

The distribution function is ﬁrst shifted in the vx, and then in the vy direction.
Figure 3 illustrates the ﬁrst step while Figure 4 illustrates the second step.
Both shifts together should transport the value of the distribution function
from a source point S = (Sx, Sy) of a characteristic to its destination point

7

Fig. 3. Schematic diagram of the ﬁrst step of integration of the characteristics
using the backsubstitution algorithm. The distribution function is shifted in the
vx–direction from the source point S(1) of the characteristic to the grid point G.
Gray lines show corresponding characteristics in the other cells. The dashed line is
the characteristic ending on G which is important in the second step.

D = (Dx, Dy) with S = X(t
∆t, t, D). Here the indices x, y, and z are used
to denote the velocity components vx, vy and vz. This means that we aim to
ﬁnd a scheme such that

−

f new(Dx, Dy) = f old(Sx, Sy).

(17)

In the ﬁrst step the shift in vx has to transport f from S to an intermediate
point (Dx, Sy). In the semi-Lagrangian schemes which we are considering here,
the characteristics are integrated backward from the grid points. This implies
that in the ﬁrst step (1) the grid point G has to coincide with the intermediate
point G = (D(1)
y ).
We have displayed these characteristics in Figure 3. In this way the distribution
function has been shifted along vx according to

y ), or equivalently S(1) = (S(1)

x , Gy) and D(1) = (Gx, D(1)

x , S(1)

f inter(Gx, Gy) = f old(S(1)

x , Gy).

(18)

Given a suﬃciently smooth behaviour of the characteristics we can assume that
the interpolation scheme causes all other points of the distribution function

8

Fig. 4. Schematic diagram of the second step of integration of the characteristics
using the backsubstitution algorithm. The distribution function is shifted in the
vy–direction from the intermediate point to the destination point G of the charac-
teristic. Gray lines show corresponding characteristics in the other cells.

to be shifted accordingly. This is particularly true for the characteristic that
ends in the grid point G (dashed line in Figure 3). This characteristic will be
important in the following step.

In the second step (Figure 4) we, therefore, need to choose the characteristic
that ends in G. Then the source point S(2) is given by S(2) = X(t
∆t, t, G).
The shift is performed in the vy direction so that

−

f new(Gx, Gy) = f inter(Gx, S(2)

y ).

Since in the ﬁrst step we had (assuming again correct interpolation)

we ﬁnally have

f inter(Gx, S(2)

y ) = f old(S(2)

x , S(2)

y ),

f new(Gx, Gy) = f old(S(2)

x , S(2)

y ).

(19)

(20)

(21)

We now use this motivation to write down a general scheme for three–
dimensional velocity space. For every grid point G we perform the integra-
tion in three one–dimensional substeps, one for each component vx, vy, vz. For
each integration a source coordinate S(1)
is calculated from a

and S(3)

x , S(2)
y

z

9

characteristic which does not necessarily pass through G. To ﬁnd S(1)
vx–integration we demand

x

for the

(22)

(23)

(24)

(25)

(26)

(27)

(28)

(29)

(30)

,

Gx = D(1)
x
X(t
Gy =
(cid:16)
X(t
(cid:16)

Gz =

−

−

∆t, t, D(1))

∆t, t, D(1))

,

.

y

z

(cid:17)

(cid:17)

In general this is a nonlinear system of equations for the components D(1)
and D(1)
z . The details of this system depend on the way the characteristics are
calculated. Given D(1) one then has

y

S(1)

x =

X(t

∆t, t, D(1))

,

−

(cid:16)

x

(cid:17)

and the integration can be performed from S1

x to Gx in the vx–direction.

Similarly we demand for the vy–integration

Gx = D(2)
x
Gy = D(2)
y
X(t
Gz =

,

,

−

(cid:16)

∆t, t, D(2))

.

z
(cid:17)

D(2) diﬀers from G only in the vz–component. Once D(2)

is found we have

z

Again the integration is now performed from S(2)

y

(cid:17)
to Gy in the vy–direction.

S(2)

y =

X(t

∆t, t, D(2))

.

y

−

(cid:16)

The vz–integration ﬁnally is straightforward. Since D(3) = G we have

S(3)

z = (X(t

∆t, t, G))y

−

and the integration is performed from S(3)

z

to Gz in the vz–direction.

We want to emphasise that this scheme integrates the characteristics exactly,
which means that in terms of Figs. 1 and 2 the backsubstitution scheme has
errors which are exactly zero.

5 Application to Boris scheme

The main task now is to calculate the characteristics or their approximations
in the presence of a magnetic ﬁeld. A commonly used approach is the Boris

10

(31)

(32)

(33)

(35)

(36)

(37)

scheme [9]. Here the integration step is formulated as an implicit ﬁnite diﬀer-
ence scheme

vn+1

vn+1 + vn
−
∆t
2
The electric and magnetic forces are separated,

q
m  

E +

vn

=

B

×

!

v− = vn +

v+ = vn+1

∆t
2

q
m
∆t
2

−

E ,

q
m

E ,

=

∆t
2

qB
m

.

θ
2 (cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

tan
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

leading to

v+ + v−
(cid:16)
The transformation from v− to v+ is a pure rotation with an angle θ where

−
∆t

B .

×

=

(cid:17)

(34)

q
2m

v+

v−

For small angles θ this is close to the exact angle θexact = ∆tqB/m.

In contrast to the original scheme of Boris, we aim to trace the characteristics
backward in time. This means we want to ﬁnd v− in terms of v+. We thus
reverse the original scheme and rotate v+ by ϑ. To implement this rotation
the vectors t and s are deﬁned

Then the rotation is performed in two steps

∆t
t = −
2

qB
m

,

s =

2t
1 + t2 .

v′ = v+ + v+

t ,

×

and

v− = v+ + v′
This scheme now supplies S = vn = (vn
(vn+1
x
(38) and separate v− into it’s components

s .
(38)
z ) in terms of D = vn+1 =
y , vn
). To facilitate the further calculations we insert (37) into

×
x , vn

, vn+1
z

, vn+1
y

syty

v−
x = (1
−
−
v−
sz)v+
y = (sxty
v−
z = (sxtz + sy)v+

−

sztz)v+
x + (1
−
x + (sytz

x + (sytx + sz)v+
sztz)v+
y + (1

−
sx)v+

sy)v+
z ,
y + (sztx
y + (szty + sx)v+
z ,
syty)v+
z .

sxtx

sxtx

−

−

−

−

(39)
(40)
(41)

We now need to solve the systems of equations (22 – 24) and (26 – 28) for the
ﬁrst and the second backsubstitution step. As stated before, the third step

11

(42)
(43)
(44)

(45)
(46)
(47)

(48)

(49)

(50)

is straightforward since D(3) is already known. The complete problem can be
written in the form

Since the bijections between vn and v−, on one hand, and vn+1 and v+, on the
other hand, are trivial (see eqs (32) and (33)) it is suﬃcient to formulate the
three steps

x = vn
vn
vn
y = vn
z = vn
vn

x (vn+1
x
y (vn+1
x
z (vn+1
x

y , vn
, vn
, vn+1
y
, vn+1
y

z ) ,
, vn
z ) ,
, vn+1
z

) .

v−
x = v−
y = v−
v−
z = v−
v−

x (v+
y (v+
z (v+

x , v−
x , v+
x , v+

y , v−
y , v−
y , v+

z ) ,
z ) ,
z ) .

To ﬁnd (45) we take eqs (40) and (41) and solve for v+

y and v+

z giving

v+
y =

(1

sxtx

−

−

syty)v−

(sx + szty)v−

z + (sxty(m

sxny + sxsy + sz)v+
x

v+
z =

(sx

−

sytz)v−

y + (1

sxnz

sy + sxsz)v+
x

−

y −

m(sxtx

sxtx
−
m(sxtx

−

−

−

1) + 1 + sx(sx

−
sztz)v−
1) + 1 + sx(sx

z + (sxtz(m

−
tx

−
nx)

1)

−

1)

−
tx

−
nx)

−

−

where m = s
provides the expression (45) for the ﬁrst step.

t and n = s

×

·

t. These can be inserted into (39) which then

For the second step (46) only eq (41) has to be solved for v+

z giving

v+
z = −

(sy + sxtz)v+

x + (sx
sxtx

−
syty

−

1

−

sytz)v+

y + v−

z

.

With this, v+

z can be substituted in eq (40) giving v−

y in the form (46).

By virtue of equation (41) the z–component is already given in the form (47).
Thus, no further calculation has to be done for the third step.

Finally we want to discuss the error of Boris’ scheme combined with the back-
substitution method. We again investigate the same problem as formulated in
section 3 where the velocity vector is rotated around the origin. While Boris’
scheme introduces a phase error in this rotation, the magnitude of the velocity
is preserved. Using this combined scheme in a grid based Vlasov solver implies
that the only diﬀusion in the system originates from the reconstruction of the
distribution function.

12

6 Bernstein Waves

We have applied the schemes described above to the simulation of Bernstein
waves in a periodic system. These are electrostatic waves propagating at a right
angle to a given constant magnetic ﬁeld [10,11]. The ions are treated as a static
neutralising background, while the electrons oscillate in the electrostatic ﬁeld.
We assume that B = Bzˆz and the wavevector k = kxˆx. Then the dispersion
relation can be written as

An(w)k2n M (n + 3/2, 2n + 2,

−

Γ (2n + 2)

k2) Γ (n + 1.5)

= 0 ,

(51)

1 +

2ω2
pe
√πΩ2

∞

n=0
X

with

An(w) =

(2n + 1) (n2 + n
−
(n + 1)2

w2)

(n2

w2)
w2

.

(cid:17)

−

−

(cid:16)

(52)

Here we used w = ω/Ω, k = vthkx/Ω, Ω = eBz/me is the electron cyclotron
frequency and ωpe is the electron plasma frequency. me is the electron mass
and e is the electron charge. Γ is the gamma function and M is Kummer’s
conﬂuent hypergeometric function. We chose ω2
pe = Ω2 for all simulations. For
a given kx, the above dispersion relation has an inﬁnite number of solutions for
ω. We performed the simulations in one space and three velocity dimensions,
(x, vx, vy, vz). Although two velocity dimensions would be suﬃcient for this
system, we keep the vz–dimension to make the results transferable to electro-
magnetic simulations in which the magnetic ﬁeld is not ﬁxed. The simulation
box has a length L which was resolved with 64 grid cells. The velocity space
4vth
was sampled with 50 grid cells in each direction in the interval from
to +4vth . The length of the box is chosen to L = 2π/kx so that exactly one
wavelength of the Bernstein mode ﬁts into the system. In this way the size
of a grid cell in space is ∆x = 2π/64kx. The timestep was chosen such that
the CFL–condition is satisﬁed ∆t = ∆x/5vth. For the integration of the dis-
tribution function on the grid we use a ﬂux conservative and positive scheme
[7].

−

≤

The ﬁrst simulation was initialised with the Bernstein wave of the lowest
ω/Ω < 2. Runs were performed for diﬀerent values of kx
frequency mode 1
and using the diﬀerent integration schemes. The frequency of the wave was
then determined using a Fourier analysis. The results are shown in Fig. 5 for
the time-splitting scheme A, time-splitting scheme B, backsubstitution using
the Boris scheme and backsubstitution using the exact characteristics. We
can observe that the time-splitting scheme A clearly shows the largest error
in the dispersion of the waves. The errors of all the other schemes appear
comparable and are very good for all values of k
0.15. The larger errors for
smaller wavenumbers are due to the choice of the timestep ∆t. Inserting the

≥

13

Exact
Timesplit Scheme A
Timesplit Scheme B
Backsubstitution Boris
Backsubstitution Exact

Exact
Timesplit Scheme B
Backsubstitution Exact

 0.2

 0.4

 0.6

 0.8

 1

kx vth / Ω

Fig. 5. Comparison of the dispersion of Bernstein waves between the exact result
and the Vlasov simulation using diﬀerent schemes for integrating the characteristics.

Ω

 
/
 

ω

Ω

 
/
 

ω

 1.44

 1.42

 1.4

 1.38

 1.36

 1.34

 1.32

 1.3

 1.28

 1.26

 1.24

 0

 2.01

 2.008

 2.006

 2.004

 2.002

 2

 1.998

 0

 0.05

 0.15

 0.2

 0.1

kx vth / Ω

Fig. 6. Comparison of the dispersion of Bernstein waves between the exact result
and the Vlasov simulation using diﬀerent schemes for integrating the characteristics.

deﬁnitions for ∆x and k one ﬁnds that

∆t = 2πΩ−1 1
320k

.

(53)

For k = 0.05 this means ∆t = 2πΩ−1/16 or 16 steps for one gyration.

ω/Ω < 3 was
In another simulation run, the second Bernstein mode 2
initialised. Fig. 6 shows the result of the time-splitting scheme B and the
backsubstitution method with exact integration of the characteristics. The
0.2, where the errors are largest
dispersion relation is shown for values of k

≤

≤

14

Scheme

Comp. time / min

Splitting Scheme A

Splitting Scheme B

Backsubs. Boris

Backsubs. Exact

192

165

94

137

Table 1
Computational time used for a typical run

due to the choice of the timestep. For this case we observe that the backsub-
stitution show superior results when compared to the time-splitting method.

Finally, we want to look at the computational time used by the diﬀerent
schemes. Table 1 shows the times used for a typical run. The runs for the dif-
ferent schemes were carried out with exactly the same conditions on the same
machine. Here we ﬁnd a clear advantage of the backsubstitution scheme over
the splitting schemes. The backsubstitution scheme with Boris integration of
the characteristics reduces the computational eﬀort by more than 50% when
compared to the time splitting scheme A. With time-splitting scheme B this
improvement is still approximately 43%. The timing for the exact backsub-
stitution shows less improvement due to the fact that trigonometric functions
have to be evaluated. The reason for the speed–up is the fact that the backsub-
stitution method has to integrate the distribution function only once for each
velocity dimension vx, vy and vz. The splitting schemes, on the other hand,
have to integrate the distribution function 7 times. Although the numerical
eﬀort of integrating the characteristics in each step is considerably smaller in
the splitting scheme B, this is only a part of the computational time spent.
Other parts involve the interpolation of the distribution function and the cal-
culation of ﬂuxes across the cell boundaries. Considering all the above results,
the backsubstitution method together with the Boris scheme can be taken as a
good alternative to the traditional time splitting method if speed is the major
issue. To obtain the most accurate results, the backsubstitution method to-
gether with the exact integration of the characteristics is the superior scheme.
In addition it also is slightly faster than the time-splitting scheme.

7 Conclusions

We have shown that the time splitting method for integrating Vlasov’s equa-
tion in higher dimensions can introduce systematic errors when used in the
presence of a magnetic ﬁeld. These errors originate from the eﬀective split-
ting of the integration of the characteristics, when a higher order integration
scheme is used. The errors cause the temperature of the distribution function

15

to increase over time, and thus artiﬁcially feed energy into the system.

The backsubstitution method presented here for the general case of arbitrary
integration schemes of the characteristics eliminates this problem. Here not
those characteristics that pass through the grid point are integrated, but those
characteristics that will give a consistent scheme when executed in sequence
for the full timestep. This not only provides the best accuracy possible but
also reduces the number of integration steps. While in three dimensional ve-
locity space the time-splitting scheme consists of 7 steps, the backsubstitu-
tion method only uses 3 steps since each component needs to be integrated
only once. Due to this advantage the backsubstitution method together with
the Boris scheme typically decreases the computational eﬀort by over 40% as
compared to a simple time splitting method while the errors remain small. On
the other hand, highest accuracy can be achieved with the backsubstitution
method together with the exact integration of the characteristics.

Access to the JUMP multiprocessor computer at the FZ J¨ulich was made
available through project HBO20. This work was supported by the SFB 591
of the Deutsche Forschungsgesellschaft.

Acknowledgements

References

[1] C. Z. Cheng, G. Knorr, The integration of the Vlasov equation in conﬁguration

space, J. Comp. Phys. 22 (1976) 330.

[2] A. Arakawa, Computational Design for Long-Term Numerical Integration of the
Equations of Fluid Motion: Two dimensional Incompressible Flow, Part 1, J.
Comp. Phys. 1 (1966) 119. Reprinted in J. Comp. Phys. 135 (1997) 103

[3] E. Fijalkow, A numerical solution to the Vlasov equation, Comput. Phys.

Communications 116 (1999) 319.

[4] E. Sonnendr¨ucker, J. Roche, P. Bertrand, a. Ghizzo, The Semi-Lagrangian
Method for the Numerical Resolution of Vlasov Equations, J. Comp. Phys. 149
(1998) 201

[5] F. Filbet, E. Sonnendr¨ucker, Comparison of Eulerian Vlasov Solvers, Comput.

Phys. Communications 150 (2003) 247.

[6] F. Califano, A. Mangeney, C. Cavazzoni, P. Travnicek, A numerical scheme
for the integration of the Vlasov–Maxwell system of equations, in: Science and
Supercomputing at CINECA, 2001, p. 456.

16

[7] F. Filbet, E. Sonnendr¨ucker, P. Bertrand, Conservative numerical schemes for

the Vlasov equation, J. Comp. Phys. 172 (2001) 166.

[8] T. Arber, R. G. L. Vann, A critical comparison of Eulerian grid based Vlasov

solvers, J. Comp. Phys. 180 (2002) 339.

[9] C. K. Birdsall, A. B. Langdon, Plasma Physics via Computer Simulation,

McGraw-Hill, New York, 1985.

[10] D. R. Nicholson, Introduction to plasma theory, John Wiley & Sons, New York,

[11] I. B. Bernstein, Waves in a Plasma in a Magnetic Field, Phys. Rev. 109 (1958)

1983.

10.

17

