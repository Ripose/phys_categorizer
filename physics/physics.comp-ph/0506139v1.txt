5
0
0
2
 
n
u
J
 
5
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
9
3
1
6
0
5
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

An eﬃcient numerical quadrature for the
calculation of the potential energy of
wavefunctions expressed in the Daubechies wavelet
basis.

1

A. I. Neelov and S. Goedecker

Institute of Physics, University of Basel, Klingelbergstrasse 82, CH-4056 Basel, Switzer-
land

E-mail: Alexey.Neelov@unibas.ch, Stefan.Goedecker@unibas.ch

Abstract.

An eﬃcient numerical quadrature is proposed for the approximate calculation of the
potential energy in the context of pseudo potential electronic structure calculations with
Daubechies wavelet and scaling function basis sets. Our quadrature is also applicable in
the case of adaptive spatial resolution. Our theoretical error estimates are conﬁrmed by
numerical test calculations of the ground state energy and wave function of the harmonic
oscillator in one dimension with and without adaptive resolution. As a byproduct we derive
a ﬁlter, which, upon application on the scaling function coeﬃcients of a smooth function,
renders the approximate grid values of this function. This also allows for a fast calculation
of the charge density from the wave function.

1.

Introduction.

Gaussians and plane waves are at present the most popular basis sets for density
functional electronic structure calculations. Wavelets are a promising new basis set
that combines most of the theoretical advantages of these two basis sets. In particular
the Daubechies wavelets [1] have a larger number of interesting properties than any
other basis set. They form a systematic orthogonal basis set that allows for adaptivity.
The basis functions are localized both in real (compact support) and in Fourier space.
The ﬁrst attempts to use wavelets in the electronic structure calculations ap-
peared more than 10 years ago. The ﬁrst papers we are aware of used the Mexican
hat wavelet [2], [3] and the Meyer wavelet [4]. However, these wavelet families were
soon abandoned because they do not have compact support. Because of the above
mentioned advantages Daubechies wavelets were then investigated in a series of pub-
lications [5]-[8]. To use them in the variational Galerkin method for the Schroedinger

2

equation, one has to compute the matrix elements of the kinetic and potential energy
operators. The algorithm for the kinetic part is straightforward [9].

The main diﬃculty is the calculation of the potential energy matrix elements [10]-
[12]. They were computed by expanding the potential in terms of scaling functions,
too, and then a convolution was performed with the matrix of products of three scaling
functions. We will call this ”the triple product method”: for details, see the beginning
of Section 4.
It requires a lot of computer resources; this motivated alternative
approaches. The collocation approach [13] is not well suited for the Daubechies’
wavelets since it spoils the favorable convergence rate of variational schemes. Another
approach [14] involved designing a quadrature for the product of two scaling functions
and a smooth function. It decreased the amount of computations in comparison to
the triple-product method, but not suﬃciently.

It follows from the above considerations that the Daubechies basis set can only
be useful for electronic structure calculations if one has a better algorithm for the
calculation of the potential energy than those available at the moment. Such an
algorithm will be proposed in the present paper.

Due to the above listed problems with the Daubechies family, interest focused
recently on the interpolating Deslarier-Dubuc [15] family [16]-[19]. Because the scaling
functions of this family are interpolating (cardinal), the collocation approximation is
much more accurate for them than for the Daubechies family. An even more accurate
approximation for the potential energy is based on a relation with the analytically
known overlap matrix elements [19].

The major disadvantage of the interpolating wavelets is that they are not orthog-
onal. For very large systems, the dominating term in independent particle electronic
structure calculations is the orthogonalization of the one particle orbitals. The pref-
actor for this dominating cubic term is much smaller if an orthogonal basis set is used
compared to a non-orthogonal basis set. Orthogonal wavelets are in addition also
interesting candidates for the implementation of linear scaling algorithms [20].

Alpert [21], [22] polynomial multiwavelets overcome the above mentioned disad-
vantages. The potential energy can be calculated easily and they are orthogonal. It
seems that they are the ideal basis set for all electron electronic structure calculations
and impressive results have been reported [23]-[25]. The Chui-Lian [26] family has
also been used in the same context [27]. Since multiwavelets can represent discon-
tinuous functions, they are well suited to represent the electron-nucleus cusp in all
electron calculations. However, if one uses pseudopotentials [28], the wavefunctions
are smooth and this property is not needed. In this case a basis set that does not
allow for discontinuities allows to represent a smooth function with a smaller number
of degrees of freedom. For this reason we explore in this paper the use of Daubechies
wavelets for pseudopotential electronic structure calculations if our novel quadrature
scheme is used. A topic that is closely related to the problem of integrating the

3

potential energy is the problem of ﬁnding quadrature schemes for the product of a
scaling function(wavelet) and a smooth function [29]-[32], [14].

In this paper we will only consider independent particle schemes such as density
functional theory where one 3-dimensional single particle orbital is provided for each
electron in the system. For completeness, we will mention that wavelets have also
been explored as a basis set for high dimensional many-electron wavefunctions [33]-
[35]. Another approach is to use the so-called Weyl-Heysenberg wavelets that do not
have multiresolution properties but are related to the structure of the phase space
[36]-[38]. Although these two approaches are promising, any treatment of correlation
entails an important increase of the numerical eﬀort and such approaches will not
allow to treat systems with several hundred atoms in the near future.

In the present paper we apply one-scaling-function quadratures to the numerical
calculation of the potential energy matrix element (1) between two smooth functions.
For this purpose we developed an algorithm for the reconstruction of grid values of
a smooth function from its scaling function expansion coeﬃcients. This technique
might also be used in other contexts such as in speech reconstruction. Our scheme
also provides a way to calculate the density from the wave function expressed in
scaling functions. The extension of our potential energy quadrature onto the case of
adaptive spatial resolution is then described.

The paper is organized as follows:
In Section 2 we brieﬂy recall the deﬁnition and properties of the Daubechies

wavelet family.

function and a smooth function.

In Section 3 we recall the quadrature of [29],[14] for the product of a scaling

Using that, in Section 4 we construct the quadrature for the potential energy

functional, i.e., for the product of the form

< smooth f unction

potential

another smooth f unction > .

(1)

|

|

In subsection 4.1 we derive the quadrature and estimate its error, which behaves
essentially as a square of the error for the wavelet expansion of the smooth functions
involved. Then in subsections 4.2-4.3 we prove that the quadrature is exact if the
potential and one of the functions in (1) are polynomials and another function is a
scaling function. This conﬁrms the previous estimation of error and extends it to the
case when only one of the functions in (1) is smooth.

In Section 5 we extend our method onto the case of adaptive resolution, repeating
the procedure of the previous Section. The errors are again estimated. It is shown
that now the main source of error is the boundary between regions with diﬀerent
resolution.

In Section 6 we modify our adaptive quadrature so that in the regions with con-
stant resolution it reduces to the non-adaptive one. This reduces the computational

4

burden. The price is that now we need to minimize the Rayleigh-Ritz (RR) func-
tional in the space of smooth functions, i.e., smoothen the cusp of its gradient at the
boundary between regions with diﬀerent resolution.

In Section 7 we present a way to compute the density corresponding to a wave
function expressed in scaling functions. It uses the approximate wave function values
derived by the method described in Appendix A. This way is fast, but it reproduces
multipole moments of the density only approximately (although with good precision).
Finally, in Section 8 we apply our methods to the calculation of the ground state
energy and wave function of the harmonic oscillator, both with and without adap-
tivity. The results are then compared with those obtained with the RR functional in
which the potential energy was calculated exactly. It turns out that our scheme works
best for the Daubechies wavelets of low order (from 6 to 10). Possible modiﬁcations
for higher wavelet orders are discussed.

2.

The orthogonal wavelets.

In this work we use the Daubechies [1] scaling functions φ(x) and wavelets ψ(x), in
the dilated and shifted form:

φk
i (x)

≡

2k/2φ(2kx

i);

−

i (x) = 2k/2ψ(2kx
ψk

i).

−

Sometimes we will also employ the intermediate notation:

φi(x)

φ(x

i);

≡

−

φk(x) = 2k/2φ(2kx).

Our conclusions are the same for the least asymmetric and extremal phase [1] Daubechies
wavelets, but the least asymmetric ones behave better in the examples we consiedered.
Thus we will use the least asymmetric family for the illustration. The graph of the
scaling function of this family of the order 8 is given on Fig. 1.

Since the Daubechies scaling functions and vectors are orthogonal, it is natural to
use the bra and ket notation for them. Then, their orthogonality conditions can be
written as

< φk
i |

φk
j >= δij;

< φk
< ψk
i |
i |
One can deﬁne the following pair of sequences of spaces:

ψk′
j >= 0, k′ > k;

ψk′
j >= δijδk k′.

Vk = span
{|

φk
i >

;

}

. It turns out that for any k

ψk

Wk = span
{|
0 the space of square integrable

i >

(2)

}

2 can be decomposed into the following inﬁnite direct sum:

where
functions

Vk ∩ Wk =

∅

L

2 =

L

Vk ⊕ Wk ⊕ Wk+1 ⊕

≥

. . . .

(3)

In this paper we will need the reﬁnement relations:

φk−1
i >=

|

φk

2i+j >;

hj|

ψk−1

i >=

|

φk

2i+j > .

gj|

Xj

Xj

They are just a unitary transformation to a new basis; for the spaces (2) it means
that

k =

V

k−1

V

⊕ W

k−1.

The inverse of (4) is called the forward wavelet transformation, but we do not need
its explicit form in the present text.

The decomposition (3) can be reformulated in the following way: any square

integrable function f (x) can be uniquely expanded as

f (x) =

j φk
ck

j (x) + δf (x);

δf (x) =

jψq
dq

j (x).

Xj

∞

Xq=k Xj

The Daubechies-2m scaling functions are a basis of degree m

that every polynomial of degree less than m is contained in
tail part of the series (6) behaves as

1. This means
Vk. Therefore [29], the

−

δf (x) =

(hm);

h = 2−k

O

with respect to the

2 norm. For the polynomials of degree less than m, δf (x) = 0.
The methods to be presented can be extended to other wavelet families, not nec-
essarily orthogonal, but in our opinion, the Daubechies family is the optimal choice
for the electronic structure calculations.

L

3. Quadrature for orthogonal wavelets.

A wavelet quadrature is determined by the set of coeﬃcients wl such that for a smooth
l+r. The √h
function G(x), the integral
factor comes from the normalization of the scaling function. The degree of accuracy
of a quadrature formula is M if it yields the exact result for every polynomial of
degree less than or equal to M. This is equivalent to the condition [14]

r (x)dx is approximated by √h

G(x)φk

l wlGk

P

R

ωlls = Ms;

Xl

Ms ≡ Z

ysφ(y)dy

where Ms are the scaling function moments.

5

(4)

(5)

(6)

(7)

(8)

6

(9)

(10)

Table 1. The values of the ﬁlters wl for the Daubechies-2m least asymmetric ﬁlters;
m = 3..6.

Daubechies-6

Daubechies-8

Daubechies-10

Daubechies-12

0.0858797754503928
1.0472376804223309
-0.1886782932535312
0.0795781221430145
-0.0288721312776034
0.0048548465153963

0.0026299127476935
-0.0377927339236569
0.0755988357512099
0.9999560903030736
-0.0794124676160406
0.0451427040622791
-0.0069875964135745
0.0008652550890159

0.0003712028220936
-0.0046529756260417
0.0306436002784248
-0.1207447752890374
0.1338108260452157
0.9123169219278740
0.0109419516584456
0.0393078583967683
-0.0022599250999316
0.0002653148861886

0.0000754232174770
-0.0011760498174610
0.0104347966396891
-0.0340901829704789
-0.0067678682684262
1.0005931732054807
0.0041859363010669
0.0351468153360141
-0.0096794739531791
0.0015648660417616
-0.0003139771845937
0.0000265414526497

l

-5
-4
-3
-2
-1
0
1
2
3
4
5
6

If the quadrature ﬁlter is of degree M and G(x) belongs to

M +1 then [14],[29]

G(x)φk

r (x)dx = √h

wlGk

l+r +

(hM +3/2) = √h

ws−rGk

s +

Z

Xl

+

(hM +3/2);

O

O
h = 2−k.

C

s
X

In this paper we will usually work with the uniform quadrature (of degree M) set
forth in [14]:

wl =

PlrMr.

M

Xr=0

It will be supposed that M = 2m
m..m. In (10), the Lagrange polynomials of degree M are used:

1 for the Daubechies-2m wavelets, and l =

−

1

−

Pl(y) =

m

Yj=1−m

′ y
l

−
−

j
j ≡

2m−1

Xr=0

Plryr;

Plr =

1
r!

drPl(y)
dyr

.

y=0
(cid:12)
(cid:12)
(cid:12)
(cid:12)

The nonzero values of the ﬁlters wl for m = 3..6 are shown at the Table 1.

Fig. 1 also contains the values of wl for m = 4 and M = 7, compared with the
graph of the corresponding scaling function (Daubechies-8). One sees that the ﬁlter
values are close to the scaling function values at integer points.

The potential energy functional for orthogonal

4.
wavelets.

An important step in the electronic structure calculation is to ﬁnd the eigenspectrum
of a one-particle Schroedinger equation. Although our approach can be extended to
the three-dimensional systems, in this paper we will consider only one-dimensional
ones:

ˆHΨ(x) = EΨ(x);

ˆH =

1
2

∂2
∂x2 +

1
2

−

V (x)

ˆT + ˆU ;

≡

dxΨ2(x) = 1.

(11)

Z

This equation can be solved by representing a trial wavefunction as a linear combina-
tion of ﬁnite elements [39]. In the case considered in this paper, these ﬁnite elements
are the Daubechies scaling functions (wavelets). Thus we select the trial function in
the form

ΨI(x) =

i φk
ck

i (x)

Xi

φk
i > with N =
which can also be represented by the ket vector
L/h = 2−kL. In this paper we use nonperiodic boundary conditions, although we
could use the periodic ones too. Then if the Rayleigh-Ritz functional is deﬁned as

i=−N ci|

ck >=

P

|

N

) =

R(

T (

ck
i }
ck
i }

{

{

)

≡

< ck

ck >

ˆH
|
|
ck >
< ck
|
ˆT
ck >;

< ck

|

|

T (

{

=

ck
i }
< ck
ck
i }

{

|
)

U(

) + U(
{
ck >

)

ck
i }

;

< ck

ˆU

ck >

≡

|

|

the variational ground state energy and wave function expansion coeﬃcients have the
form

E0 = min R(

ck
i }

{

);

ck
0 >= arg min R(

ck
i }

{

).

|

The other wavefunctions are obtained in the same way using the Lagrange multipliers.
1 (see Section 2), the

Since the Daubechies-2m scaling functions have degree m

ground state energy error behaves [39] as

−

7

(12)

(13)

(14)

(15)

(16)

δE

E0 −

≡

Eex =

O

(h2m−2)

where Eex is the exact ground state energy of (11).

The kinetic energy has the form [40]

T (

ci}

{

) =

−

1
2h

ai−jck

i ck
j

Xi,j

8

(17)

(18)

where al is the kinetic energy ﬁlter.

The potential energy (14) can be written in the conventional form as

For the calculation of the excited states we have to evaluate the more general potential
energy bilinear form:

U =

ΨI(x)V (x)ΨI(x)dx.

Z

Z

U =

ΦI(x)V (x)ΨI(x)dx

ΦI(x) =

i φk
ck

i (x).

Xi

where the wave function ΦI(x) has the same form (12):

In the electronic structure calculations the exact analytical form of the potential
V (x) is not known. Any approximation of the potential should invoke energy errors
that alter the Rayleigh-Ritz functional (13) as little as possible; otherwise the min-
imization with an approximate functional will not converge to the true minimum.
We choose the following quantitative criterion for this: the error in the potential
that arises from approximation should be small compared to (16). When the grid
parameter h is small, there is a convenient way to ensure that: we require that the
approximation error behaves as h2m. Note that, e.g., the collocation approximation
[13] does not fulﬁll the latter requirement.

The most natural way to approximate the potential is to expand it in the inter-

polating scaling functions φkI

i (x) [15],[40] of degree 2m:

V (x) =

i φkI
V k

i (x) + δV (x);

δV (x) =

(h2m);

(19)

φkI
i (x)

≡

i);

−

V k
i ≡

V (ih);

Xi
φI(x/h

O

h = 2−k.

Substituting the expansions (12),(18),(19) into (17), we get:

U =

ck
i V k

j sk
l

φk
i (x)φkI

j (x)φk

l (x)dx +

(h2m) =

ck
i V k

j sk

l Ii−j,l−j + (20)

O

Xijl

φr(x)φI(x)φs(x)dx

(21)

Z

Xijl

O

+

(h2m);

Irs ≡ Z

where (21) is the triple product matrix mentioned in the Introduction. Unfortunately,
the formula (20) requires too many calculations per grid point: N 2 in one dimension
and N 4 in three dimensions, where N is the dimension of the matrix (21). There-
fore we need some approximation that would decrease the amount of computations,
(h2m), at most. Such an
but still invoke the error that asymptotically behaves as
approximation will be described in the next subsection.

O

9

(22)

(23)
(hm).(24)

4.1 The quadrature for the case of smooth wave functions.

Let us consider two smooth functions Φ(x), Ψ(x) together with their approximate
wavelet expansion ΦI(x), ΨI(x) (12),(18). The expansion coeﬃcients ck
i are
obviously given by

i and sk

ck
i =

φk
i (x)Φ(x)dx;

sk
i =

φk
i (x)Ψ(x)dx.

Z

Z

Then, according to (6),(7),

Φ(x) = ΦI (x) + δΦ(x);
δΦ(x) =

dk′
i ψk′

i (x) =

Ψ(x) = ΨI(x) + δΨ(x);
(hm);

δΨ(x) =

bk′
i ψk′

i (x) =

O

Xk′>k Xi

Xk′>k Xi

From (23) we get

ΦI (x) = Φ(x)

δΦ(x);

ΨI(x) = Ψ(x)

δΨ(x).

−

Plugging this expression into (17), we can get after some easy calculations:

O

−

U = UA + δU1 + δU2;

ΦI(x)V (x)Ψ(x)dx;

δU1 ≡ Z

δΦ(x)V (x)δΨ(x)dx;

Φ(x)V (x)δΨ(x)dx.

In the next Section we will prove that

UA ≡ Z

δU2 ≡ − Z

δU1 + δU2 =

(h2m)

O

from the local properties of scaling functions. In this Section we will show for the two
error terms separately that

δU1 =

(h2m);

δU2 =

(h2m).

O

O

The ﬁrst estimate of (28) follows from (24) and the fact that individual wavelet
coeﬃcients dk′
from the tail parts behave as 2−k′(m+1/2) [29]. If the potential V (x)
is bounded then it follows from the Schwarz inequality:

i , bk′

i

(cid:12)
Z
(cid:12)
(cid:12)
To prove the second part of (28), let us deﬁne the function H(x) = Φ(x)V (x). It
(cid:12)

max
|

V

≤

| Z |

δΦ(x)

δΨ(x)

dx

max
|

V

δΦ

δΨ

.

k

kk

|k

≤

|

||

δΦ(x)V (x)δΨ(x)dx
(cid:12)
(cid:12)
(cid:12)
(cid:12)

can also be interpolated by scaling functions:

(25)

(26)

(27)

(28)

H(x) = HI(x) + δH(x);

HI(x) =

hk
i φk

i (x);

hk
i =

φk
i (x)H(x)dx;

δH(x) =

Z

Xi

Xk′>k Xi

qk′
i ψk′

i (x) =

(hm).

O

Then,

HI(x)δΨ(x)dx = 0, and

R

δU2 =

δH(x)δΨ(x)dx =

(h2m).

O

− Z

We are left with the approximation (25). Substituting (18) into it, we get

UA =

ck
i

φk

i (x)G(x)dx.

Xi

Z

The scalar products in (29) can now be determined by applying the scaling function
quadrature (9):

UA[ΨI] =

ck
i

√h

ws−iGk

s +

(h2m+1/2)

=

psGk

s +

(h2m)

(30)

Xi

(cid:20)

s
X

O

(cid:21)

s
X

O

where

Gk

q = G(hq) = V (hq)Ψ(hq) = V k

q Ψk
q

are the grid values of the function G(x). As seen from (30), the quantity

pk
s ≡

√h

ck
i ws−i

Xi

plays the role of the quadrature for the whole function ΦI.

Now we need to ﬁnd the grid values of the smooth function G(x). We suppose that
q of the smooth potential. Then it remains to reconstruct

i of the unknown wave function from the known coeﬃcients sk
i .

we know the grid values V k
the grid values Ψk

The easiest way to obtain the grid values would be by using (12):

Ψ(jh)

ΨI(jh) =

i φk
sk

i (jh).

≈

Xi

Since the Daubechies scaling functions are not very regular, the value of a scaling
function at a real space grid point does not very well represent the behavior of the
scaling function in a small interval around this grid point. As a consequence of this
(hm). which is much
and in accordance with (7), the error in (31) behaves like
worse than (27) and we therefore discard this possibility. We will instead introduce
some smoothed grid values ¯Ψk
q which better represent the average behavior of ΨI.
In appendix A it will be shown that there exists a ﬁlter Wj such that the smoothed
grid values can be obtained by a convolution from the scaling function expansion
coeﬃcients

O

¯Ψk

q ≡

1
√h

Xt

Wq−tsk

t =

Wjsk

q−j

1
√h

Xj

10

(29)

(31)

(32)

and that the error behaves as

Substituting everything back into (30),we get

Ψk

q = ¯Ψk

q +

(h2m)..

O

UA =

s V k
pk
s

¯Ψk

s +

(h2m).

O

s
X

Taking together (25), (27) and (33), one gets:

U = Uf +

(h2m);

O

s V k
pk
s

¯Ψk
s

Uf ≡

s
X

where ”f ” stands for ”ﬁlters”.

As explained in Appendix A, in the case of the Daubechies scaling functions the
quadrature ﬁlter wl and the reconstruction ﬁlter Wl are identical. Then (34) assumes
the following simple form:

Uf ≡

h

s
X

¯Φk

s V k
s

¯Ψk
s ;

¯Φk

q ≡

1
√h

wq−tck
t .

t
X

This formula can be computed very fast: the computational work per grid point
amounts to convolution with a ﬁlter of length 2m. This is clearly better than the N 4
result for the triple product method.

The formulas (34),(35) have a global nature; they characterize the approximation
error over the whole domain of the wave function. In the next two subsections we
will choose a local point of view instead.

The matrix elements of the potential energy in the case of the

4.2
Daubechies family.

If we substitute the wavefunction expansion (12),(18) into the energy expression (17),
we get

U =

i sk
ck

j Uij;

Xi,j

Uij ≡ Z

dxφk

i (x)V (x)φk

j (x).

Similarly, the approximate energy (35) in the case of the Daubechies family has

the form

Uf =

i sk
ck

j U f
ij;

Xi,j

U f

ij ≡

Xl

V k
l wl−iwl−j

11

(33)

(34)

(35)

(36)

(37)

12

(38)

(39)

(40)

(41)

where wl is the quadrature ﬁlter for the Daubechies family.
It is enough to consider the matrix elements U0q; U f

0q since others can be obtained
by shifting the potential. Let us assume that V (x) = xt. Then, after going to the
variable y = x/h under the integral one obtains:

U0q =

φk(x)xtφk

q (x)dx = htKqt;

Similarly, one can check that

Z

Kqt ≡ Z

dyφ(y)φq(y)yt.

Now, if the potential V (x) is a smooth function, one can expand it into a Taylor series
around the origin:

Plugging this expansion into (36) and taking into account (38), we get:

0q = htK f
U f
qt;

K f

qt ≡

Xl

wl−qwl lt.

V (x) =

2m−1

Xp=0

V (p)(0)
p!

xp +

(x2m).

O

U0q =

2m−1

Xp=0

V (p)(0)
p!

hpKqp +

(h2m).

O

U f

0q =

2m−1

Xp=0

V (p)(0)
p!

hpK f

qp +

(h2m).

O

In the same way, plugging (40) into the right equation of (37) and using (39), one
obtains

It is in the coeﬃcients Kqp that the approximation diﬀers from the exact calcu-
lation. Eq. (39) can be considered as a quadrature approximation of the integral
(38).

It would be convenient if the values of Kqp and K f
qp coincided. It would explain the
smallness of error in (33), since in that case, Uij and U f
(h2m).
However, for the cases we checked (Daubechies-6 to 18) the values of K turned out
to be diﬀerent. Thus, the smoothness of the potential alone does not explain the
smallness of error (34). In the next subsection we will see that one needs also the
smoothness of the wavefunction to explain that.

ij would diﬀer only by

O

Note that the strategy used in [14] was to ﬁnd an approximation of the matrix (36)
such that the corresponding K p
q be exactly equal to (38), i.e., that the approximation
is exact for the polynomial potentials. This is a ﬂexible scheme but it requires more
computer resources than ours. The reason is that in the scheme of [14] one has to
apply a two-index ﬁlters at each point. Therefore we have the same problem as with
the triple product formula (20): the number of calculations per grid point is N 2 in
one dimension and N 4 in three dimensions, where N is the dimension of the matrix
which plays the role of (21).

4.3 The gradient of the potential energy in the case of the Daubechies
family.

The gradients of the exact and approximate energies (36) and (37) w.r.t. ck

i are

∂U
∂ck
i

=

Xj

sk
j Uij;

∂Uf
∂ck
i

=

j U f
sk
ij

Xj

where the matrix elements are discussed in the previous subsection. In the case of
the potential energy functional, with the coeﬃcients ck
i in (36) and (37),
there should be an additional factor of 2 in (42).

i instead of sk

From (34) one could guess that

∂U
∂ck
i

=

∂Uf
∂ck
i

+

(h2m+1/2)

O

since there are no preferred points in space for the energy expressions (36) and (35),
and thus the energy error should be ”smeared” smoothly over the grid points. Later
in this subsection we will see that (43) is indeed satisﬁed.

The condition (43) is very important. It means that if we minimize Uf using some
numerical method (steepest descent etc.) then the gradients along which we change
the wavefunctions will be very close for the exact and approximated energies, and
thus the results of minimization, the two ground state wavefunctions, will also be
close.

On the other hand, Eq. (34) that was derived above only for a bounded V (x),
follows from (43). What is more, it follows from (43) that (34) is satisﬁed even if we
do not require the function Φ(x) to be smooth.

At ﬁrst we will prove (43) for the partial case of i = 0, Ψ(x) = xl and V (x) = xt,
from which we then will easily make extension onto the general case. With the above
assumptions, acting similarly to the proof of (100) one can check that

j = hl+1/2
sk

C u

l juMl−u

l

Xu=0

where C u

l are the binomial coeﬃcients, and Ms are the scaling function moments (8).

Substituting (38) and (44) into (42), one obtains:

= hl+t+1/2Alt;

C u

l Ml−u

Kjtju.

Similarly, in the case of the approximate energy,

= hl+t+1/2Af
lt;

C u

l Ml−u

K f

jtju.

l

l

Alt ≡

Xu=0

Af

lt ≡

Xu=0

Xj

Xj

∂U
∂ck
0

∂Uf
∂ck
0

13

(42)

(43)

(44)

(45)

(46)

The coeﬃcients (45), (46) satisfy the following equalities:

Alt = Ml+t,
Af
lt = Ml+t,

l, t < m;
t + m < 2m

Al0 = Ml,

l < 2m;

where Ms are the scaling function moments (8). Their analytical proof can be found
in Appendix B.

Since we were unable to ﬁnd an analytical proof of (47) for the remaining relevant

values of indices:

Alt = Ml+t,

m < t < 2m

(49)

we checked it numerically with Mathematica for the Daubechies wavelets of the orders
from 6 to 18. We checked both the extremal phase and least asymmetric Daubechies
families. The relative error of (49) can be made arbitrarily small by increasing the
precision of wavelet ﬁlters. We went down to 10−40.
Thus we see that for the Daubechies wavelets,

Alt = Af

lt = Ml+t;

= hl+t+1/2Ml+t;

l + t < 2m

(50)

∂U
∂ck
0

=

∂Uf
∂ck
0

for arbitrary polynomial V (x) and Ψ(x) with the sum of their degrees less than 2m.
The second equality follows from (45),(46).

In the remaining part of this subsection we will infer (43) from (50). Let us
consider the exact gradient. It is given by the left formula (42). The matrix element
U0j has been calculated in the previous subsection. Now let us consider the scaling
function expansion coeﬃcient sk
j (22) for a smooth function Ψ(x). Since the latter is
smooth, it can be expanded into the Taylor series at the origin:

Ψ(x) =

2m−1

Xp=0

Ψ(p)(0)
p!

xp +

(x2m).

O

Plugging (51) into (22) and using (44), we get:

sk
j =

2m−1

Ψ(p)(ih)
p!

p

hp+1/2

C t

pqp−tMt +

(h2m+1/2).

O

Xp=0
Substituting (52) and (41) into (42), we get:

Xt=0

14

(47)
(48)

(51)

(52)

∂U
∂ck
0

=

=

2m−1

s

hs+1/2
s!

hs+1/2
s!

Xs=0
2m−1

Xs=0

Xp=0
G(s)(0)Ms +

O

C p

s Ψ(p)(0)V (s−p)(0)Ap,s−p +

(h2m+1/2) =

(h2m+1/2) = gk

0 +

(h2m+1/2)

(53)

O

O

15

(54)

(55)

(56)

G(x)φk
where we have used (50). As before, G(x)
i (x)dx.
i ≡
The analogue of (53) for an arbitrary gradient component ∂U
can be obtained by
∂ck
i
replacing all the 0 by ih. Then our error estimate for the potential energy of Eq. (27)
follows from the formula

V (x)Ψ(x), and gk

≡

R

U =

ck
i

∂U
∂ck
i

.

Xi

For the gradient of the approximate energy one can exactly repeat the above steps,
jt instead of Kjt (since one starts from (39) instead of (41)). The result

just using K f
will be identical to (53); thus, (43) is proved.

5.

The case of adaptive resolution.

5.1 The energy error for the adaptive approximation.

In this Section we will extensively use the bra and ket notation for the wavefunctions
(12),(18):

ck >

|

≡

φk

i >;

ck
i |

sk >

|

≡

φk

i > .

sk
i |

Xi

Xi

The ket vectors belong to the space
boundary conditions, whether periodic or non-periodic.

Vk (2). It is ﬁnite-dimensional after we apply

The energy expressions (36), (37) then can be written as

U =< ck

ˆU

sk >;

|

|

Uf =< ck

sk > .

ˆU k
f |

|

Note the diﬀerence between the exact and approximate operators. ˆU is the operator
of multiplication by V (x) in a Hilbert space. On the other hand, ˆU k
is an operator
f
in the ﬁnite-dimensional space Vk, taking into account the boundary conditions. Its
matrix elements are given by (37).

In the present Section we will consider two resolution levels simultaneously. In
addition to the resolution level k, considered up to now, we have a more coarse level
k

1 together with the vectors associated with it:

−

ck−1 >

|

≡

Xi

ck−1
i

φk−1
i >;

|

dk−1 >

|

dk−1
i

ψk−1

i > .

|

≡

Xi

(57)

For some time we will discuss only the vectors corresponding to ΦI(x); those re-
lated to ΨI(x) satisfy the same relations with the symbols c, d replaced by s, b where
appropriate.

ck >=

ck−1 > +

dk−1 > .

|

˜dk−1 >

dk−1
i

ψk−1

i > .

≡

Xi∈D

|

{

|

|

|

|

Similarly to (22), the coeﬃcients in (55), (57) can be expressed in terms of the

smooth function Φ(x):

ck
i =

φk
i (x)Φ(x)dx;

ck−1
i =

φk−1
i

(x)Φ(x)dx;

dk−1
i

=

ψk−1
i

(x)Φ(x)dx.

Z

Z

Z

The bra and ket notation is convenient because in accordance with (5), the forward

and backward wavelet transformations can be written as

The left and right parts of the above equality diﬀer only in the choice of basis func-
tions:

at the left and

at the right.

φk−1
i

, ψk−1
i

The adaptive approximation consists of replacing the second relation in (57) by

φk
i }

{

}

In this paper we consider the so-called static adaptivity, where one chooses some ﬁxed
predetermined region D of space such that outside D the wavelet coeﬃcients dk
i are
known to be small and can therefore be neglected. We will call D the ﬁne region.

Replacing

dk−1 > in (58) by (59), one can form the adaptive vector

|

˜ck >

|

≡ |

ck−1 > +

˜dk−1 > .

ck >, then discard the wavelet part outside
In other words, if we forward transform
the domain D according to Eq. (59) and then backward transform the result, then
we get

˜ck >.

|

|

The discarded wavelet part can also be written as a vector:

ˇdk−1 >

|

≡

Xi6∈D

dk−1
i

ψk−1

i >

|

so that, taking into account (59),

|
The exact energy expression (56) in the adaptive case assumes the form

|

|

dk−1 >=

˜dk−1 > +

ˇdk−1 > .

where ˆU is the matrix (36), and
is from
approximate energy we make a similar ansatz:

˜ck >
ck > (by discarding the wavelet part outside the same region D). For the

sk > in the same way as

|

|

|

|

U a =< ˜ck

ˆU

˜sk >

|

|
˜sk > is formed from

f =< ˜ck
U a

˜sk >

ˆU k
f |

|

16

(58)

(59)

(60)

(61)

(62)

(63)

(64)

17

(65)

(66)

where the matrix elements of ˆU k

f are given by (37).

Let us estimate the error of the energy expression (64),i.e., its diﬀerence from (63).

It follows from (60) and (62) that

˜ck >=

ck >

ˇdk−1 >

|

|

−|

and, similarly, for

˜sk >:

|

−|
Plugging (65) and (66) into (63),(64), we get

|

|

˜sk >=

sk >

ˇbk−1 > .

U a = < ck
f = < ck
U a

ˆU
sk >
|
ˆU k
sk >
f |
+ < ˇdk−1
ˆU k
f |
|

|
|

−
−
ˇbk−1 > .

< ˇdk−1
ˆU
sk >
|
|
< ˇdk−1
ˆU k
f |

|

−
sk >

< ck

ˆU
|
< ck

ˇbk−1 > + < ˇdk−1
|
ˇbk−1 > +
ˆU k
f |
|

−

ˆU

ˇbk−1 >;
|

|

Therefore, the error of the adaptive energy approximation has the form

U a

δU a
U a
≡
δU2 = < ˇdk−1
δU4 = < ˇdk−1

−

f = δU1 + δU2 + δU3 + δU4;
< ˇdk−1
ˆU
ˆU k
sk >;
sk >
f |
|
|
−
< ˇdk−1
ˇbk−1 >
ˆU k
ˆU
f |
−
|

|

|
|

ˇbk−1 > .

One can show that all four error terms are small:

δU1 =< ck
δU3 =< ck

ˆU
sk >
|
|
−
ˇbk−1 >
ˆU k
f |

|

< ck

|
< ck

ˆU k
f |
ˆU
|

−

sk >;
ˇbk−1 >;
|
(67)

δU a =

(h2m).

O

(68)

(h2m) because this is the error term in the non-adaptive case. Then,

First, δU1 =
let us consider the term

O

δU2 =< ˇdk−1

( ˆU k

ˆU)

sk > .

|

f −

|

One can show that it contains the non-adaptive gradients:

sk >= ˆU k
f

ˆU k
f |

φk
j >=

sk
j |

Xj

Xi,j |

i > U f
φk

ijsk

j =

φk
i >

|

Xi

∂Uf
∂ck
i

and the same for ˆU

sk >. Therefore,

|

( ˆU k

f −

ˆU )

sk >=

|

|

Xi

φk
i >

∂Uf
∂ck

i −

∂U
∂ck

i (cid:19)

(cid:18)

=

(h2m)

O

because of (43). Also, the wavelet coeﬃcients asymptotically behave as

dk−1
i =

(hm+1/2),

O

so

dk−1 >=

(hm)

|

O

(69)

18

(h3m) and this term can be neglected. Since the
(see [29]). Therefore, δU2 =
potential energy matrices (36), (37) are Hermithean, the same applies to the third
term.

O

Eq.

(h2m). The fourth error term is formed by wavelet coeﬃcients on the k

(69) also determines the asymptotic behavior of the fourth term: δU4 =
1 level,
O
so it is the main source of error. However, it vanishes outside D. On the other
hand, inside D one can use the non-adaptive error estimate (34). Thus the main
contribution to the energy error comes from the boundary of D where neither of the
above arguments applies.

−

˜ck >=

An interesting partial case is when the ﬁne region D is empty. Then, all the
wavelets on the ﬁnest level k are discarded, so the wavelet vector (59) is zero. Thus
ck−1 >, which is equivalent to using just the scaling
Eq. (60) is simpliﬁed to
functions on the level k
1. However, we still use the quadrature (10) on the level
k, and evaluate the wave function on the grid with constant h = 2−k, which is twice
denser than the grid on which the scaling functions are deﬁned. This is useful if we
want to determine the potential energy more precisely without raising the number of
the degrees of freedom in the variational minimization.

|
−

|

5.2 The matrix elements for the adaptive case.

If one substitutes (65),(66) directly into (63), one obtains:

ˆU

sk−1 > + < ˜dk−1
ˆU
U a = < ck−1
|
|
˜bk−1 >;
+ < ˜dk−1
ˆU
|
|
sk−1 > + < ˜dk−1
ˆU k
f = < ck−1
U a
f |
|
˜bk−1 >
+ < ˜dk−1
ˆU k
f |
|
with the elements of the exact matrix having the form

ˆU k
f |

|

|

|

sk−1 > + < ck−1

ˆU

˜bk−1 > +
|

|

sk−1 > + < ck−1

˜bk−1 > +

ˆU k
f |

|

(70)

(71)

< φk−1
i

ˆU

φk−1
j >=

φk−1
i

(x)V (x)φk−1

(x)dx;

ucc
ij ≡

ucd
ij ≡

< φk−1
i

|

|

|
ˆU

|
ψk−1
j >;

Z

udd
ij ≡

< ψk−1
i

ψk−1

j > .

j
ˆU

|

|

The approximate matrix elements are a bit more diﬃcult to derive: using the

backward transformation and (37), we get:

ucc f
ij ≡

< φk−1
i

ˆU k
f |

|

φk−1
j >=

t
X
i, and a new ﬁlter is deﬁned:

where q = j

−

V k
t vt−2ivt−2j =

V k
2i+svsvs−2q

(72)

s
X

hlws−l.

vs ≡

Xl

(73)

19

(75)

(76)

(77)

(78)

(79)

Suppose that V (x) = xt. Then, we have (38) and an analog of (39):

0q = (2h)tKqt;
ucc

0q = (2h)tkf
uccf
qt;

(s/2)tvsvs−2q.

(74)

kf
qt ≡

Xl

For a general potential, we have (41)

ucc
0q =

2m−1

Xp=0

V (p)(0)
p!

(2h)pKqp +

(h2m).

O

For other matrix elements the same formula can be used, just with wavelets instead
of scaling functions in the deﬁnition (38) of Kqp.
If we use a variant of the Taylor series (40):

V k
s = V (sh) =

2m−1

Xp=0

V (p)(0)
p!

(2h)p(s/2)p +

(h2m)

O

and combine it with (74), we will obtain an analog of (75):

ucc f
0q =

2m−1

Xp=0

V (p)(0)
p!

(2h)pkf

qp +

(h2m).

O

The matrix elements containing wavelets have the same form, the only diﬀerence
being that the ﬁlters gi are used instead of hi where appropriate.

5.3 The gradient error for the adaptive approximation.

The derivatives of (70),(71) w.r.t. ck−1

and ˜dk−1

i

i

have the form:

∂U a
∂ck−1
i
∂U a
∂ ˜dk−1
i

=

=

Xj

Xj

ij sk−1
ucc

j +

ucd
ij

˜bk−1
j =

udd
ij

˜bk−1
j +

ji sk−1
ucd

j =

Xj

Xj

∂U
∂ck−1
i −
∂U
∂ ˜dk−1
i −

Xj

Xj

ucd
ij

ˇbk−1
j

;

udd
ij

ˇbk−1
j

ˆU

sk > is the energy with all wavelets kept, i.e., for the non-adaptive
where U =< ck
case. As in the non-adaptive case, the expressions for the gradient of a quadratic
form would diﬀer just by a factor of 2.

|

|

For the approximate energy, the gradient expression is similar. The matrix el-
ements for the exact and approximate energy have the form (75),(77), respectively.
Since the ﬁlters K p
q have ﬁnite and short length, the gradient expressions (78),(79)
are nearly local. Therefore, one can consider their features depending on the region
where ck−1

is located.

q , kp

i

20

O

In the ﬁne region D (see (59) and the text after it) the ˇbk−1

i wavelets (61) are zero.
Therefore, Eqs. (78),(79) reduce to their non-adaptive counterparts. If we apply the
backward wavelet transform to them, the result will be (42). Then it follows from
(43) that the diﬀerence between the gradients of the exact and approximated energy
will behave like

(h2m). Also, all the arguments of subsection 4.3. apply.

Now there is the region far from D where all the wavelets are discarded. We will
are zero there. Thus, in the

also call it ”coarse region”. The wavelets (59): ˜dk−1
coarse region (78) assumes the form
∂U a
∂ck−1
i
The condition (79) is not applicable in the coarse region, since the ˜dk−1
zero there, and the potential energy does not depend on them.

ij sk−1

,˜bk−1
i

= ucc

.

j

i

i

wavelets are

(80)

We will prove below that in the coarse region,

∂U a
∂ck−1
i

=

∂U a
f
∂ck−1
i

+

(h2m+1/2).

O

(81)

In the partial case when D =
equation plays the role of (43).

∅

discussed in the end of subsection 5.1, the above

In the general case there is also the border region between the ﬁne and coarse ones.
The error estimates (43),(81) were derived under the assumptions that either the ˜dk
i
or ˇdk
i wavelets are zero, correspondingly. Since in the border region neither of these
assumptions is guaranteed, the estimates (43),(81) may no longer hold there (and
the numerical tests imply that they do not hold indeed). Thus in the border region,
one has just (78),(79), with all terms being nonzero. From the right equations of
(43),(81) one can conclude that the error at the border is bounded by the magnitude
of ˇbk−1
coeﬃcients which behave according to (69). The other, non-adaptive-like part
j
of error behaves like

(h2m), because of (43). Therefore,

∂U
∂ck−1
i

=

O
∂Uf
∂ck−1
i

+

(hm+1/2);

O

∂U
∂ ˜dk−1
i

=

∂Uf
∂ ˜dk−1
i

+

(hm+1/2)

O

in the border region, so it is the main source of error. The small energy error (68) is
consistent with the above because the rapidly oscillating part of the gradient at the
boundary region has small smooth component and gets drastically diminished when
multiplied by a smooth function, according to (54).

In the remaining part of this subsection we will prove (81) in the coarse region.
The proof is completely analogous to that of (43), so we will not go into much detail.
First, let V (x) = xt and Ψ(x) = xl. Then, it follows from (50) that

∂U a
∂ck−1
0

= (2h)t+l+1/2Ml+t.

21

Let us prove that the same is true for U a
from (74) and (52) for the level k

f . Substituting the potential energy matrix
1 into (80) we obtain the following analog of (46):

−

∂U a
f
∂ck−1
0

= (2h)t+l+1/2af
lt;

af
p,u ≡

p

Xt=0

C t

pMt

quqp−t.
kf

q
X

Similarly to (50),one can show that

af
lt = Ml+t;

∂U a
f
∂ck
0

=

∂U a
∂ck
0

= (2h)l+t+1/2Ml+t;

l + t < 2m.

(82)

For the values l < m, Eq. (82) can be proved along the lines of Appendix B. Since we
were unable to ﬁnd an analytical proof of (47) for the remaining values of l, we checked
it numerically with Mathematica for the Daubechies wavelets of the orders from 6
to 18. We checked both the extremal phase and least asymmetric families. Same as
with (49), the relative error of (82) can be made arbitrarily small by increasing the
precision of wavelet ﬁlters. We went down to 10−40.

Combining (82) with the Taylor expansions (76) and (51) for the level k

1, we

−

get an analogue of (53):

∂U a
f
∂ck−1
0

=

=

=

s

2m−1

Xs=0
2m−1

(2h)s+1/2
s!

(2h)s+1/2
s!

Xp=0
G(s)(0)Ms +

O

Xs=0
∂U a
∂ck−1
0

+

(h2m+1/2).

O

C p

s Ψ(p)(0)V (s−p)(0)af

p,s−p +

(h2m+1/2) =

O

(h2m+1/2) = gk−1

0 +

(h2m+1/2) =

O

(83)

Eq. (81) is thus proved.

6. Reducing the computational cost in the coarse
region.

6.1 The adaptive quadrature for the product of a scaling function and
a smooth function.

The approximation derived above is not numerically eﬃcient in the coarse region.
Namely, the approximate energy matrix elements are deﬁned by (56) there. However,
in the non-adaptive approximation for the level k
1, they would be given by (72)
, which requires roughly twice smaller number of calculations because the ﬁlter ωl is

−

22

shorter than vl The asymptotic behavior of the energy error of these two approxima-
(h2m). Therefore, it would be desirable to use (72) in the coarse
tions is the same:
region.

O

This situation is analogous to applying the quadrature (10) on the level k to a
two-scale function G(x) that has ”ﬁne region” where one should use the quadrature
(10) on the level k and ”coarse region” where one should use it on the level k

1.

Thus we have an adaptive quadrature. Recall that the adaptive approximation
considered in the previous Sections consists of setting the wavelet coeﬃcients in the
coarse region to zero. In addition to that, the adaptive quadrature is deﬁned on a
coarser grid in the coarse region.

−

The question is - what quadrature should we use at the boundary of the coarse
and ﬁne regions? Our recipe is to use the ﬁne quadrature, along with backward
transformation, with the ﬁlter (73):

G(x)φk−1

(x)dx = √h

r

vlGk

l+2r +

(hM +3/2) = √h

vs−2rGk

s +

O

s
X

Xl
(hM +3/2)

+

O

and go to the coarse quadrature only at some distance from the boundary.

An alternative (and maybe more rigorous) recipe [14] is to use a non-uniform

quadrature at the boundary. However,

The non-uniform quadrature is diﬃcult to program since the points in space
near the boundary should be dealt with individually.

Our error estimates for the potential energy quadrature hold only for the uni-
form case and it is not trivial to extend them onto the case of non-uniform
quadrature of [14].

Z

•

•

6.2 The energy gradient in the coarse region.

At present, the approximate energy gradient in the coarse region is given by

where the matrix elements are given by (72). In general , the gradient is given by
(78),(79).

The energy gradient on the k

1 level in the non-adaptive scheme is given by (42)

with the matrix elements (37) (for the level k

1):

(84)

∂U a
∂ck−1
i

=

Xj

ij sk−1
ucc f

j

−

∂Uf
∂ck−1
i

=

Xj

−
j U f k−1
sk−1

ij

.

23

(85)

One could deﬁne a ”quasigradient” vector vk−1

i

with the following components:

vk−1
i =





∂U a
f
k−1
∂c
i

=

ij sk−1
j ucc f
=

j +
j sk−1

j ucd f
ij
j U f k−1
, i
P
ij

˜bk−1
, i
j
D′

D′

∈

∂Uf
P
k−1
i

∂c

6∈

P

where the set D′ is D plus the points that are no more than a distance a (empirically,
a = 3mh is enough) away from D. The word ”quasigradient” means that the vector
(85) is assembled from gradients (78), (84), but is not necessarily equal to the gradient
of any function at all.

We can use now use this vector instead of the gradient in the iterative minimization

algorithms.

The quasigradient vector (85) is a good approximation of the adaptive gradient
D′, they
(78). For the points i
coincide if V (x) and Ψ(x) are polynomials with the sum of their degrees smaller than
2m, because in that case both the quasigradient and the adaptive gradient coincide
with the exact gradient (see (50),(82)).

D′ their components coincide. For the points i

∈

6∈

For the general potentials and wave functions, the gradient (78) assumes the form
(83). On the other hand, the quasigradient will have the form (53) for the level k
1,
which is identical to (83). Therefore, the quasigradient components are asymptotically
close to those of the adaptive gradient (78) and its approximate version:

−

∂U a
f
∂ck
i −

vk
i =

(h2m+1/2);

O

∂U a
∂ck

i −

vk
i =

(h2m+1/2).

O

(86)

Now let us consider the energy. Eq. (64) can be rewritten in the form similar to

(54):

U a

f =

ck−1
i

∂Uf
∂ck−1
i

+

˜dk−1
i

∂Uf
∂ ˜dk−1
i

.

Xi
One can deﬁne a likewise energy expression based on (85)

Xi

U a

e =

ck−1
i

vk−1
i +

˜dk−1
i

∂Uf
∂ ˜dk−1
i

Xi

(87)

where ”e” stands fort for ”eﬃcient”. Then it follows from (86) that

e = U a
U a

f +

(h2m);

e = U a +
U a

(h2m).

O

Xi

O

Thus, the energy expression (87) is also a good approximation of (64), (63).

Note that the gradient of (87) does not coincide with the quasigradient (85). They
are diﬀerent only at the boundary of D′: the former behaves badly there, while the

24

latter is smooth. This means, in particular, that simply minimizing (87) would result
in a wavefunction that is not smooth at the boundary of D′ , but oscillates there
rapidly.

The quasigradient can be seen as a projection of the gradient of (87) onto the
space of functions that are smooth at the boundary of D′. One can then assume that
we minimize the energy (87) in the space of such functions. This remedies the above
problem of singularity at the boundary.

Alternatively, one can consider the quasigradient as an approximation of the gra-
dient (78) and (87) as an approximation of (64). We have shown above that the
error of such approximation is asymptotically small for smooth wavefunctions and
potentials.

7. Charge density and products of functions.

In the density functional theory one needs to express the charge density

ρ(x) =

ΨI(x)

(cid:18)

2

(cid:19)

as a linear combination of scaling functions. In the Hartree-Fock method, one uses
products of functions of the form (12):

ΦI(x)ΨI(x) =

i sk
ck

j φk

i (x)φk

j (x)

(88)

and it would also be useful to have that product expanded in terms of scaling functions
or wavelets, not in terms of scaling function products:

ΦI(x)ΨI(x) =

j φk
f k

j (x) + δF (x)

Xi,j

Xj

where δF (x) is small. In general, one can expand the product in scaling functions of
the order diﬀerent from m (that for ΦI(x), ΨI(x)), or even from some other wavelet
family.

The obvious way to obtain the coeﬃcients f k

j is to expand the left part in scaling
functions according to (6). The coeﬃcients can then be obtained by convolution
with the matrix of triple products, similarly to (20). However, then we would have
the same problem as with (20): too many computations per grid point, N 2 in one
dimension and N 4 in three dimensions, where N is the dimension of the triple product
matrix.

Fortunately, we can suggest an alternative way to get the density:

25

(89)

7.1. Using the average grid values of Φ(x) and Ψ(x).

Let us deﬁne the following coeﬃcients:

F k

i ≡

¯Φk
i

¯Ψk

i = Φ(ih)Ψ(ih) +

(h2m)

O

where the average values are deﬁned in (32).

Then one can approximate the product (88) with the function

Fδ(x) = h

F k

i δ(x

ih).

−

X

One can easily show that this function reproduces the multipole moments of the
product (88):

Fδ(x)xtdx = h

Φ(jh)Ψ(jh)jt =

ΦI (x)xtΨI(x)dx +

(h2m)

(90)

O

Z

Xj

Z

for all integer t

0. The second equality is a partial case of (34).

What is more, if Ψ(x) is a polynomial of the degree l and l + t < 2m, then (90)

≥

is satisﬁed exactly. This is a consequence of (50).

However, the function (89) is not smooth, in contrast to the product (88) that it

should approximate. To remedy this, one can go from (89) to

FI(x) =

i φIk
F k

i (x);

φIk
i (x)

φI(x/h

≡

i)

−

X

where φI(y) is the interpolating scaling function of the order L. Its ﬁrst L moments
are the same as those of a delta function [9],[41]. Therefore, FI(x) satisﬁes (90) too
(for t < L).

On the other hand, if L

m, then

≥

FI(x) = Φ(x)Ψ(x) +

(hL) = ΦI(x)ΨI(x) +

(hm)

O

O

so the approximated density is close to (88) at any point.

This approximation is much faster than that the triple product calculation. How-
ever, the moment conservation (90) is not exact. To make at least the total charge
of a single electron equal to one in this scheme, one has to scale the coeﬃcients F k
i
accordingly. One can also make a forward wavelet transformation to the scaling func-
tion coeﬃcients on some coarser level and scale only them; this is enough to get the
correct total charge.

26

8. Application to the harmonic oscillator.

8.1.

The non-adaptive case.

In this Section we will test the above approximations by ﬁnding the ground state of
a unit mass and frequency harmonic oscillator in one dimension. We use nonperiodic
boundary conditions where the wavefunction was set to zero outside the interval [-
16:16]. The variational ground state is obtained from Eq. (15), with the deﬁnitions
(13),(11) and V (x) = x2/2. Since for the oscillator potential, (19) is exact, we can
use the triple product method (20) without invoking additional errors.
Our approximation for the potential energy has the form (35):

Uf (

ci}

{

) = h

2

;

V k
s

¯Ψk
s
(cid:18)

¯Ψk

q =

1
√h

Wq−tck
t .

s
t
X
X
Accordingly one can deﬁne the approximate RR functional

(cid:19)

Rf(

T (

ck
i }
< ck

{

) =

ck
i }
{
|
ck
f > = arg min Rf (

) + Uf(
{
ck >
ck
i }

{

|

).

)

ck
i }

;

Ef

0 = min Rf(

ck
i }

{

);

(91)

We performed minimization of (13) in the exact and approximate cases for least
asymmetric Daubechies - 2m with 3
8. We used the steepest descent method
≤
with diagonal preconditioning and gradient feedback. The results for Daubechies-8
and Daubechies-16 are shown on Figs 2-5. On the x axis we have the inverse grid
interval: h−1 = 2k.

m

≤

In Figs 2,3, on the y axis we have the deviation of the variational ground state
energy E0 (15) from the exact result (which is 0.5 for the unit oscillator) and the
deviation of the approximate ground state energy Ef

0 (91) from 0.5.

Also shown is the diﬀerence of the variational and approximate ground state en-

ergies (91) and (15):

δEapp ≡

Ef

0 −

E0

which we call the approximation error. The graphs are on a double logarithmic scale,
and they have a distinct linear part. The slope of the linear part is consistent with
(16). For the lower orders, the approximation error is one or two orders of magnitude
smaller than (16). Its slope in the linear region is equal to 2m, suggesting that

δEapp =

(h2m).

(92)

O
This behavior is similar to (34). However, note that here we compare the energies for
ck
f > deﬁned in Eqs. (15) and
diﬀerent (although close) quantum states

ck
0 > and

|

|

27

−

(93)

(91), while in the Section 3 we computed the exact and approximate energy for the
same state.

The approximation error grows with m faster than the variational error, so that for
2.

Daubechies-16 they become of the same magnitude, and have the same slope 2m

In Figs 4,5, on the y axis we have the following quantities:

δck =

(ck

i 0 −

ck
i g)2;

sXi

δck

app =

(ck

i 0 −

ck
i f)2.

sXi

We will call the ﬁrst quantity the variational error and the second one the approxi-
mation error. The coeﬃcients

ck
i g ≡

C

Z

exp(

x2/2)φk

i (x)dx

−

correspond to the scaling function expansion of the exact ground state of the unit
Vk (2). The factor C is chosen such that
oscillator in the space
We could not ﬁnd the evaluation of the quantities (93) neither in [39] nor in the
previous papers describing the application of wavelets to the Schroedinger equation
[6],[14]. The quantity of interest in [39] was something else: the norm of the total
diﬀerence between the exact ground state of (11) (in this case, a Gaussian) and

i g)2 = 1.

i(ck

P

i ck

i φk

i (x):

P

π−1/4 exp(

x2/2)

−

−

k

i φk
ck

i (x)

=

(hm).

k

O

(94)

Xi
The above quantity includes the ﬁne wavelet part (7) of the Gaussian that also behaves
as

(hm).
O
For lower values of m, the slope of the graphs of (93) in the linear region is 2m
2
and 2m correspondingly. The approximation error in the linear region is again one
or two orders of magnitude smaller than the variational error. This suggests the
asymptotic behavior

−

δck =

(h2m−2);

O

δck

app =

(h2m).

O

(95)

It follows from the ﬁrst estimate (95) that the wave function error (94) is dominated
by the ﬁne wavelet part. The second estimate of (95) means that the minima of the
exact and approximate RR functionals are very close both to each other and to the
projection of the exact solution onto the space of the scaling functions at resolution
level k. This explains in part why the energy error (92) behaves similarly to (34).

For higher values of m the error reaches the machine precision range before the
slopes reach their asymptotic values. Still, the approximation error decays faster than
the variational one, and the slopes diﬀer by 2, approximately.

28

For the lower values of m there is no diﬀerence between the behaviour of the
least asymmetric and extremal phase Daubechies scaling functions. However, for
m > 10 the approximation error for the extremal phase Daubechies approaches the
variational error. The convergence of the steepest descent iterations becomes very
bad. For the symmetric family nothing of that happens. Thus for the bigger values
of m our method is not applicable for the extremal phase family. This is the reason
why we prefer the least asymmetric family in general.

8.2.

The adaptive case.

We will impose adaptivity in the following way: the minimum of the RR functional
such that the wavelet
(13) will be sought in the class of coeﬃcients
21−ki
κ. We choose
coeﬃcients are zero outside the interval [
| ≥
κ = 1.5 as an illustration. The resulting energy and wavefunction are,

, ˜dk−1
ck−1
i
i
}
{
κ, κ]: ˜dk−1
i = 0 for

−

|

E0 = min R(

ck−1
i

, ˜dk−1
i

) = min R(

where the coeﬃcients ˜ck

{

}

{
i are the backward transformation of

|

);

˜ck
i }

˜ck
0 >= arg min R(

{
, ˜dk−1
i

)

˜ck
i }
.

}

ck−1
i

{

Their approximate counterparts are

Ef = min Rf(

ck−1
i

, ˜dk−1
i

) = min Rf(

{

{
where in the approximate RR functional the potential energy part is treated according
to the Sections 5-6.

{

}

|

);

˜ck
i }

˜ck
f >= arg min Rf(

)

˜ck
i }

The graphs of the energy and wavefunction error for the (least asymmetric)
Daubechies-8 and Daubechies-16 are shown on Figs 6-9. The main diﬀerences from
the non-adaptive case are:

•

•

The slope of the variational wavefunction error is now approximately m + 1/2
The asymptotical slope of the approximation error exceeds that of the varia-
tional error by 2, roughly. Both wavefunction errors are localized at the bound-
ary.

The approximation error both for the energy and wave function for small wavelet
orders is an order of magnitude smaller than the variational error, now for the
bigger values of h too.

•

The behavior of the approximation error is improved for the small k, compared
to the non-adaptive case.

29

9. Conclusion.

In the present work we propose a quadrature for the evaluation of the potential
energy functional when the wave function is a wavelet approximation of some smooth
function. We used the Daubechies family but the results can be extended onto others.
With our algorithm, the potential energy can be calculated using only one-dimensional
convolutions and ﬁlters, in contrast to the existing methods. The resulting potential
energy diﬀers only insigniﬁcantly from the exact value. The algorithm is extended
onto the case of varying spatial resolution (adaptivity). As a numerical test we
calculated the ground state energy and wave function of the harmonic oscillator in
1 dimension for the least asymmetric and extremal phase Daubechies wavelets with
orders from 6 to 16. We performed the minimization of the RR functional with the
potential energy calculated by our method and compared the resulting energy and
wavefunction with those obtained from the fully variational minimization. In the case
of the least asymmetric Daubechies family the approximate energy and wavefunction
are close to the variational values. However, for the extremal phase family our method
is reliable only for wavelet orders less than 10.

Our method also allows a fast calculation of a charge density for a wavefunction
expressed in the wavelet basis. As a byproduct we derived a ﬁlter for reconstruction
of the grid values of a function from its Daubechies-2m scaling function expansion.
This reconstruction is exact for polynomials up to order 2m and the length of the
ﬁlter is just 2m.

Appendix A. Reconstruction of grid values of wave
function.

The aim of this subsection is the reconstruction of the value of a smooth function at
the grid points from the scaling function expansion coeﬃcients. For this purpose we
need to ﬁnd the ﬁnite (and shortest possible) length ﬁlters Wl such that

¯Ψk

r ≡

1
√h

Wr−sck

s =

Wqck

r−q = Ψ(hr) +

(h2m)

(96)

O

1
√h

s
X
i are given by (22) and h = 2−k.

s
X

where ck

and k = 0:

One can start by ﬁnding ﬁlters that satisfy (96) exactly for Ψ(x) = xl, l < 2m

Wr−scs[xl] = rl

s
X

(97)

30

(98)

where the coeﬃcients cs[xl] are a generalization of the moments (8):

cs[xl]

xlφs(x)dx.

≡ Z

Eq. (97) means that, though with the usual interpolation (31) using Daubechies-
2m scaling functions one can exactly reproduce polynomials of degree not more than
1, the desired ﬁlter Wl should allow us to reproduce polynomials of degrees up to
m
−
2m
1. Thus for such high-order polynomials, (96) would be satisﬁed exactly, so the
average value ¯Ψk
r would coincide with value Ψr(rh) of the polynomial, but not with
the value of the scaling function expansion (31)

−

ΨI(rh) =

φk

i (rh)

φk

i (y)Ψ(y)dy.

Xi

Z

It is enough to prove (97) at the origin only:

since then it would follow that

δl =

W−scs[xl]

s
X

Wr−scs[xl] =

W−qcq+r[xl] =

W−qcq[(x + r)l] =

s
X

q
X

q
X

q
X
l rl−ucq[xu] =

C u

l

Xu=0

l

Xu=0

=

W−q

C u

l rl−uδu = rl

(99)

where we changed the indices: q = s
auxiliary formula:

−

r. To prove (98), we will use the following

cs[xl]

xlφs(x)dx =

xlφ(x

s)dx =

(y + s)lφ(y)dy =

≡ Z
=

l

Z
l yl−usuφ(y)dy =

C u

Z
l suMl−u

C u

−

l

(100)

Xu=0
l are the binomial coeﬃcients, and Ms are the scaling function moments (8).

Xu=0

Z

where C u

Substituting (100) into the right part of (98),we get:

W−scs[xl] =

W−s

C u

l suMl−u =

C u

l Ml−uγu(

1)u = δl;

(101)

−

l

Xu=0

s
X

l

Xu=0

(102)

s
X

γu ≡

s
X

Wssu.

The ﬁlter Ws can thus be found by solving the systems of linear equations (101),(102)
for γu and then for Ws.

31

(103)

(104)

(105)

(106)

Now we are ready to prove (96). It is enough to do it only at the origin:

¯Ψk

0 =

1
√h

s
X

W−sck

s = Ψ(0) +

(h2m).

O

To prove (103) one should use a version of (98) at the level k:

δl =

1
√h

s
X

W−sck

s [xl]

that can be proved in the same way as (98) itself.

Then it remains to expand Ψ(x) in the Taylor series at 0:

Ψ(x) =

2m−1

Xp=0

Ψ(p)(0)
p!

xp +

(h2m)

O

and plug it into (103):

W−sck

s[Ψ(x)] =

W−sck
s

1
√h

1
√h

s
X

s
X

=

W−s

2m−1

Xp=0

Ψ(p)(0)
p!

1
√h

s
X
s[xp] +
ck

O

2m−1

(cid:20)

Xp=0

Ψ(p)(0)
p!

xp +

(h2m)

=

O

(cid:21)

(h2m) = Ψ(0) +

(h2m),

O

the last equality following from (104). Eq. (103) is thus proved.

Suppose we work with Daubechies-2m scaling functions. Then, Eqs. (101) are

satisﬁed if

because of the equality ((B2) from [14]):

γu = Mu,

u = 0, . . . , 2m

1

−

p

Xs=0

C s

pMp−sMs(

1)s = M I

p = δp;

−

p = 0, . . . , 2m

1

−

where M I
p are the moments of the lazy-m scaling function. The last equality is a
property of the interpolating scaling functions [9],[41]. Eq. (106) is satisﬁed both for
the extremal phase and least asymmetric Daubechies wavelets.

The shortest ﬁlter with the moments (105) is (10). Thus, (34) reduces to (35).
Note however that (106) is no longer satisﬁed for p
2m because the higher moments
of an interpolating scaling function are not zero. Therefore one cannot construct a
ﬁlter of degree p higher than 2m
1 that would also satisfy (101) for the powers of
(hs) with
x up to the p-th. Thus one cannot improve (35) so that its error scale as
s > 2m.

O

≥

−

The reconstruction scheme presented above can be generalized to ﬁnd the values

of Ψ(x) at arbitrary points and also to ﬁnd its derivatives of arbitrary order.

32

Appendix B. The analytical derivation of the Alt,
Af
lt coeﬃcients

In this Appendix we will present the proofs of Eqs. (47),(48).

At ﬁrst let us prove (47). Suppose, as in subsection 4.3, that V (x) = xt and

Ψ(x) = xl. Then, combining the left equalities of (42) and (38), we get, for l < m,

∂U
∂ck
0

=

sk
j U0j =

sk
j

φk(x)xtφk

j (x)dx =

φk(x)xt+ldx = ht+l+1/2Mt+l

(107)

Xj

Xj

Z

Z

j (x) = xl for l < m. From (107) and (45), we
where we used the fact that
thus get the ﬁrst equality of (47). On the other hand, if t = 0 then (38) reduces to
U0j = δj and thus (42) has the form

j [xl]φk

j sk

P

∂U
∂ck
0

= sk

0[xl] = hl+1/2Ml

(108)

where the last equality is a partial case of (44). Combining (108) and (45) we get the
second equality of (47)

Now let us turn to Eq. (48). Plugging (39):

0q = ht
U f

rtwrwr−q

r
X

into the second equality of (42), we get:

∂Uf
∂ck
0

=

j U f
sk

0j = ht

rtwr

wr−qsk

q [xl] = ht

rtwr√h(hr)l =

Xj
= ht+l+1/2

r
X

q
X
wrrt+l = ht+l+1/2Mt+l

r
X

(109)

r
X

where we have used (99) and (105). Now, Eq. (48) follows from (46) and (109).

References

1. I. Daubechies, Ten Lectures on Wavelets (SIAM, Philadelphia,1992).

2. K. Cho, T. A. Arias, J. D. Joannopoulos, and P.K. Lam, Wavelets in electronic

structure calculations, Phys. Rev. Lett. 71, 1808 (1993).

3. S. Han, K. Cho and J. Ihm, Wavelets in all-electron density-functional calcula-

tions, Phys. Rev. B 60, 1437 (1999).

33

4. K. Yamaguchi and T. Mukoyama, Calculations of discrete and continuum wave
functions for atoms using wavelets, Nuclear Instruments and Methods in Physics
Research B 124, 361 (1997).

5. S. Wei and M. Y. Chou, Wavelets in self-consistent electronic structure calcu-

lations, Phys. Rev. Lett. 76, 2650 (1996).

6. B. R. Johnson, J. P. Modisette, P. J. Nordlander and J. L. Kinsey, Wavelet
bases in eigenvalue problems in quantum mechanics, Chem. Phys. Lett. 250,
485 (1996).

7. C. J. Tymczak and X-Q. Wang, Orthonormal wavelet bases for quantum molec-

ular dynamics, Phys. Rev. Lett. 78, 3654 (1997).

8. P. Fischer and M. Defranceschi, Numerical solution of the Schroedinger equation
in a wavelet basis for hydrogen-like atoms, SIAM J. Numer. Anal. 35, 1 (1996).

9. G. Beylkin, On the representation of operators in bases of compactly supported

wavelets, SIAM J. Numer. Anal. 29, 1716 (1992)

10. A. Latto, H. L. Resnikoﬀ, and E. Tenenbaum, The evaluation of connection co-
eﬃcients of compactly supported wavelets., Aware Technical Report AD910708,
Aware, Inc., Cambridge, MA (1991).

11. W. Dahmen and C. A. Micchelli, Using the reﬁnement equation for evaluating

integrals of wavelets, SIAM J. Numer. Anal. 30, 507 (1993).

12. V. Perrier and M. V. Wickerhauser, Multiplication of short wavelet series using
connection coeﬃcients, In Ka-Sing Lau, editor,Advances in Wavelets, pages 77–
101. Springer-Verlag, Singapore, 1999.

13. O. V. Vasilyev and S. Paolucci, A dynamically adaptive multilevel wavelet col-
location method for solving partial diﬀerential equations in a ﬁnite domain, J.
Comput. Phys. 125, 498 (1996).

14. B. R. Johnson, J. P. Modisette, P. J. Nordlander and J. L. Kinsey, Quadrature
integration for orthogonal wavelet systems, J. Chem. Phys. 110, 8309 (1999).

15. G. Deslauriers, and S. Dubuc, Symmetric iterative interpolation process, Con-
str. Approx. 5, 49 (1989) (ISSN 0176-4276, published by Springer-Verlag, NY).

16. T. A. Arias, Multiresolution analysis of electronic structure: semicardinal and

wavelet bases, Rev. Mod. Phys. 71, 267 (1999).

34

17. T. D. Engeness and T. A. Arias, Multiresolution analysis for eﬃcient, high
precision all-electron density-functional calculations, Phys. Rev. B 65, 165106
(2002).

18. I. P. Daykov, T. A. Arias, and Torkel D. Engeness, Robust ab initio calculation
of condensed matter: transparent convergence through semicardinal multireso-
lution analysis, Phys. Rev. Lett. 90, 216402 (2003).

19. K. S. Thygesen, M. V. Bollinger and K. W. Jacobsen, Conductance calculations

with a wavelet basis set, Phys. Rev. B 67, 115404 (2002).

20. S. Goedecker, Linear scaling electronic structure methods, Rev. Mod. Phys.,

71, 1085 (1999).

21. B. Alpert, A class of bases in L2 for the sparse representation of integral oper-

ators, SIAM J. Mathem. Anal. 24, 246 (1993).

22. B. Alpert, G. Beylkin, D. Gines and L. Vozovoi, Adaptive solution of partial
diﬀerential equations in multiwavelet bases J. Comp. Phys. 182, 149 (2002).

23. R. J. Harrison, G. I. Fann, T. Yanai, Z. Gan, and G. Beylkin, Multiresolution
quantum chemistry: Basic theory and initial applications, J. Chem. Phys. 121,
11587 (2004).

24. T. Yanai, G. I. Fann, Z. Gan, R. J. Harrison, and G. Beylkin Multiresolution
quantum chemistry in multiwavelet bases: HartreeFock exchange, J. Chem.
Phys. 121, 6680 (2004).

25. T. Yanai, G. I. Fann, Z. Gan, R. J. Harrison, and G. Beylkin, Multiresolution
quantum chemistry in multiwavelet bases: Analytic derivatives for HartreeFock
and density functional theory, J. Chem. Phys. 121, 2866 (2004).

26. C.K. Chui and J.-L. Lian, A study of orthonormal multi-wavelets, Appl. Numer.

Math. 20, 273 (1996).

27. S. D. Clow and B. R. Johnson, Wavelet-basis calculation of Wannier functions,

Phys. Rev. B 68, 235107 (2003).

28. S.Goedecker, M.Teter and J.Hutter, Separable dual-space Gaussian pseudopo-

tentials, Phys. Rev. B 54, 1703 (1996).

29. W. Sweldens W and R. Piessens, Quadrature formulae and asymptotic error
expansions for wavelet approximations of smooth functions SIAM J. Numer.
Anal. 31, 1240 (1994).

35

30. W. Sweldens and R. Piessens, Asymptotic error expansion of wavelet approxi-

mations of smooth functions II, Numer. Math. 68, 377 (1994).

31. W. Sweldens, Construction and Applications of Wavelets in Numerical Analysis,
PhD thesis, Department of Computer Science, Katholieke Universiteit Leuven,
Belgium, 1994.

32. B. R. Johnson, Multiwavelet Moments and Projection Preﬁlters, IEEE Trans.

Signal Processing 11, 3100 (2000).

33. H.-J. Flad, W. Hackbusch, D. Kolb, and R. Schneider, Wavelet approximation
of correlated wave functions. I. Basics, J. Chem. Phys. 116, 9641 (2002).

34. H. Luo, D. Kolb, H.-J. Flad, W. Hackbusch, and T. Koprucki, Wavelet ap-
proximation of correlated wave functions. II. Hyperbolic wavelets and adaptive
approximation schemes, J. Chem. Phys. 117, 3625 (2002).

35. H.-J. Flad, W. Hackbusch, H. Luo and D. Kolb, Diagrammatic multiresolution

analysis for electron correlations, Phys. Rev. B 71, 125115 (2005).

36. B. Poirier, Using wavelets to extend quantum dynamics calculations to ten or

more degrees of freedom, J. Theo. Comput. Chem. 2, 65 (2003).

37. B. Poirier and A. Salam, Quantum dynamics calculations using symmetrized,
orthogonal Weyl-Heisenberg wavelets with a phase space truncation scheme. II.
Construction and optimization, J. Chem. Phys. 121, 1690 (2004).

38. B. Poirier and A. Salam, Quantum dynamics calculations using symmetrized,
orthogonal Weyl-Heisenberg wavelets with a phase space truncation scheme.
III. Representations and calculations, J. Chem. Phys. 121, 1704 (2004).

39. J. Strang, G. J. Fix, An Analysis of the Finite Element Method (Wellesley-

Cambridge Press, 1988).

40. S. Goedecker, Wavelets and Their Application (Presses polytechniques et uni-

versitaires romandes, Lausanne, 1998).

41. J. Tian and R. O. Wells, Jr., Vanishing moments and wavelet approximation,
Computer Mathematics Laboratory Report CML9501, Rice University (1995).

 1.4

 1.2

 1

 0.8

 0.6

 0.4

 0.2

 0

-0.2

 
φ(x)
 
wl

1

-3

-2

-1

 0

 1

 2

 3

 4

Figure 1: The least asymmetric Daubechies-8 scaling function and the cor-
responding quadrature ﬁlter. As seen from the graph, the ﬁlter values are
close to the scaling function values at integer points.

 

R
O
R
R
E
Y
G
R
E
N
E

 1

 0.01

 1e-04

 1e-06

 1e-08

 1e-10

 1e-12

 1e-14

 1e-16

 1

 10

1/h

Figure 2: The energy errors for the least asymmetric Daubechies-8 scaling
functions. The slope of the variational error is 6 and that of the approxima-
tion error is 8.

E0
Ef
0
Ef
0

|

−
−
−

0.5
0.5
E0

 
 
 
|

2

 

R
O
R
R
E
Y
G
R
E
N
E

 1

 0.01

 1e-04

 1e-06

 1e-08

 1e-10

 1e-12

 1

1/h

Figure 3: The energy errors for the least asymmetric Daubechies-16 scaling
functions. The slope of variational error reaches 14 but that of the approxi-
mation error reaches only 14.7

E0
Ef
0
Ef
0

|

−
−
−

0.5
0.5
E0

 
 
 
|

3

 

I

R
O
R
R
E
N
O
T
C
N
U
F
E
V
A
W

 

 1

 0.01

 1e-04

 1e-06

 1e-08

 1e-10

 1e-12

 1e-14

 1

 10

1/h

Figure 4: The wave function errors for the least asymmetric Daubechies-8
scaling functions. The slope of the variational error is 6 and that of the
approximation error is 8.

δck
δck

 
 
app

4

 

I

R
O
R
R
E
N
O
T
C
N
U
F
E
V
A
W

 

 1

 0.1

 0.01

 0.001

 1e-04

 1e-05

 1e-06

 1e-07

 1e-08

 1e-09

 1e-10

 1

1/h

Figure 5: The wave function errors for the least asymmetric Daubechies-16
scaling functions. The slope of the variational error reaches only 11.5 and
that of the approximation error reaches 14.

δck
δck

 
 
app

5

 

R
O
R
R
E
Y
G
R
E
N
E

 1

 0.01

 1e-04

 1e-06

 1e-08

 1e-10

 1e-12

E0
Ef
0
Ef
0

|

−
−
−

0.5
0.5
E0

 
 
 
|

6

 1

 10

1/h

Figure 6: The energy errors for the least asymmetric Daubechies-8 scaling
functions with adaptivity. The slope of the variational error is 6 and that
of the approximation error is 8. The approximation error is always smaller
than the variatonal one.

 

R
O
R
R
E
Y
G
R
E
N
E

 1

 0.01

 1e-04

 1e-06

 1e-08

 1e-10

 1e-12

 1e-14

 1e-16

E0
Ef
0
Ef
0

|

−
−
−

0.5
0.5
E0

 
 
 
|

7

 1

1/h

 10

Figure 7: The energy errors for the least asymmetric Daubechies-16 scaling
functions with adaptivity. The slope of the variational error reaches 13.3
and that of the approximation error reaches 16. The approximation error is
always smaller than the variatonal one.

δck
δck

 
 
app

 

I

R
O
R
R
E
N
O
T
C
N
U
F
E
V
A
W

 

 1

 0.1

 0.01

 0.001

 1e-04

 1e-05

 1e-06

 1e-07

 1e-08

 1e-09

 1e-10

 1

 100

 10

1/h

Figure 8: The wave function errors for the least asymmetric Daubechies-8
scaling functions with adaptivity. The slope of the variational error is 4.5
and that of the approximation error is 7. The approximation error is always
smaller than the variatonal one.

8

δck
δck

 
 
app

 

I

R
O
R
R
E
N
O
T
C
N
U
F
E
V
A
W

 

 1

 0.01

 1e-04

 1e-06

 1e-08

 1e-10

 1e-12

 1e-14

 1e-16

 1

 10

1/h

Figure 9: The wave function errors for the least asymmetric Daubechies-16
scaling functions with adaptivity. The slope of the variational error reaches
9 and that of the approximation error reaches 11. The approximation error
is always smaller than the variatonal one.

9

