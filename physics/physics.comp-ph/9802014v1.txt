8
9
9
1
 
b
e
F
 
6
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
4
1
0
2
0
8
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

A Lanczos algorithm for linear response

C.W. Johnson(a), G.F. Bertsch(b)∗, and W.D. Hazelton(b)

(a)Department of Physics and Astronomy

Louisiana State University, Baton Rouge, LA 70803-4001

(b)Dept. of Physics and Inst. Nuclear Theory

University of Washington Seattle, WA 98915

Box 351560

Abstract

An iterative algorithm is presented for solving the RPA equations of linear

response. The method optimally computes the energy-weighted moments of

the strength function, allowing one to match the computational eﬀort to the

intrinsic accuracy of the basic mean-ﬁeld approximation, avoiding the problem

of solving very large matrices. For local interactions, the computational eﬀort

for the method scales with the number of particles Np as O(N 3

p ).

I. INTRODUCTION

In a number of branches of physics, mean ﬁeld theory gives a remarkably eﬀective approx-

imation to the ground state. Similarly, for the response of the system to small perturbations,

time-dependent mean ﬁeld theory is a useful extension. This is the experience in nuclear

physics [1,2], atomic and molecular physics [3–8] and condensed matter physics [9,10]. There

are of course intrinsic limitations to these approximations, but equally pressing is the large

computational resources required for calculations of systems of interest. This is our motiva-

∗E-mail: bertsch@phys.washington.edu

1

tion to look for algorithms that better match the computational eﬀort to the intrinsic limits

of the approximation.

We take our inspiration from the Lanczos algorithm [11], which is best known in many-

body physics for extracting low-lying eigenstates of very large Hamiltonian matrices [12,13].

When dealing with large spaces, the computational question often comes down to the number

of times the Hamiltonian operates on a state vector. Depending on the Hamiltonian and the

starting vector, the Lanczos algorithm is able to extract an accurate ground state vector in

a basis of 105−6 states with a few hundred Hamiltonian operations. The algorithm may be

viewed as a numerically stable technique [14] to compute moments of the Hamiltonian with

respect to some initial state Ψ0, that is, µk ≡ h
the extremal eigenvalues [15], which are thus available for recovery.

Ψ0i

Ψ0|

|

ˆH k

. For large k, µk is dominated by

The Lanczos algorithm has also been applied to many other topics in atomic, molecular,

solid state, and nuclear physics, including computation of the S-matrix [16], time-evolution of

wave packets [17], level densities [18], and the continued-fraction expansion of the resolvant

or Green’s function [19]. Particularly relevant to us is the application to strength functions.

The strength function S for an operator ˆQ on a state i is deﬁned

S(E)

δ(E

Ef + Ei)

≡ Xf

−

ˆQ

f

|

h
(cid:12)
(cid:12)
(cid:12)

2

.

|

i
i(cid:12)
(cid:12)
(cid:12)

A powerful technique to calculate the strength function, successfully applied to the nu-

clear shell model

[13,20], uses the Lanczos algorithm with a starting vector

ˆQ

i
i

|

/

i
|

h

ˆQ2

i
i

|

1/2. The Lanczos algorithm implicitly computes the moments

(1)

Ψ0i

|

=

Mk =

Z

dE(E

−

Ei)kS(E)

of the strength function. After a few tens of iterations one can accurately reconstruct the

distribution of the exact strength function.

In many cases, however, the matrix elements of the operator ˆQ are sensitive to correla-

tions in the ground state, and then the size of the wave function basis in the straightforward

Hamiltonian approach becomes problematic. In this situation, the time-dependent mean-

ﬁeld theory oﬀers a reasonable compromise. The small amplitude theory, the RPA or linear

2

response, can be cast into a matrix form in a particle-hole basis. However, the RPA matrix

is not symmetric as required by the Lanczos algorithm. The matrix equation is commonly

written as

A

B





B

−

A

−

~x

~y







= ω 









~x

~y





where A and B are particle-hole Hamiltonian matrices, ω is the eigenfrequency, and ~x and

~y are the vectors of positive- and negative-frequency particle-hole amplitudes, respectively.

An important property of the RPA equation is that eigenvectors come in conjugate pairs: in

equation (2) (~y, ~x) is also an eigenvector with eigenfrequency

ω. For the linear response,

the matrix element between the RPA ground state

and an excited state

may be

−

0

|

i

ω

|

i

expressed as

ω

0

ˆQ
|

|

i

h

= (~q, ~q)

~x

~y





·





where ~q is the vector of particle-hole matrix elements and the vector (~x, ~y) is normalized as

1 = ~x

~x

~y

~y.

·

−

·

There are a number of ways to introduce a Lanczos-type algorithm for the RPA matrix.

The method we describe here has the advantages that it preserves the form eq.(2) of the

RPA matrix and it produces strength functions that respect sum rules. We seek a new basis

of vectors

Zii

|

:= ( ~Xi, ~Yi) where the matrices of column vectors U := ( ~X1, ~X2, ~X3, . . .) and

V := (~Y1, ~Y2, ~Y3, . . .) transform the RPA matrix as

UT



VT

−





VT UT

A

B

U V







= 

B

A

V U


−
where the transformed matrices A′ and B′ are now tridiagonal:

−

−

−













A′

B′

B′





A′

−

(2)

(3)

(4)

(5)

A′ =

, B′ =

a1

e2

a2

0

a2

e3

e1

a1

0

























. . .

b1

d2

b2

0

b2

d3

d1

b1

0

























. . .

The Lanczos basis vectors and matrix elements are generated iteratively as follows. Sup-

pose we have the vectors

already computed, together with the transformed

, ...,

Z1i

|

Zni

|

3

matrix up to en−1, dn−1, an−1 and bn−1. The iteration starts by applying the RPA matrix in

eqn. (2) to the vector

,

Zni

|

~Xt

~Yt

Zti

|

= 



= 







A ~Xn + B~Yn
B ~Xn −
−

A~Yn





The diagonal elements en and dn are now easily computed:

en = ~Xt ·
dn = ~Xt ·

~Xn −
~Yn −

~Yt ·
~Yt ·

~Yn

~Xn.

We next project out

Zni
Zti
This can be done conveniently by using the matrix elements in (5) that have already been

that is orthogonal to the space

, the component of

Z1i

, ...,

|

|

|

|

.

Z ′
ti

calculated,

Z ′
ti

|

= 



= 

~X ′
t
~Y ′
t



~Xt −
~Yt −

en ~Xn + dn ~Yn −
dn ~Xn + en ~Yn −


is then computed as


Z ′
ti

|

The norm of the vector

an−1 ~Xn−1 + bn−1 ~Yn−1

bn−1 ~Xn−1 + an−1 ~Yn−1





= ~X ′
t ·

~X ′

t −

~Y ′
t ·

~Y ′
t

N

The norm can be negative, and the deﬁnition of the new vector

depends on the sign.

Zn+1i

|

In fact, because we are actually doing block-Lanczos, implicitly operating not only on the

vector(X, Y ) but also its RPA conjugate (Y, X) simultaneously, there is a degree of freedom,

corresponding to a hyperbolic rotation, in choosing the new vector. The simplest choice for

the vectors and corresponding RPA matrix elements is

and

Zn+1i

|

=

~X ′
t
~Y ′
t









1
√

N

1

Zn+1i

|

=

√

~Y ′
t
~X ′
t





−N



This completes the iteration cycle.

with the vector given by

, an+1 = √

, bn+1 = 0;

N

> 0

N



, an+1 = 0, bn+1 = √

,

< 0

−N

N

In analogy with the application to strength functions in the nuclear shell model, we start

4

(6)

(7)

(8)

(9)

(10)

(11)

(12)

(13)

(14)


With such a starting vector the algorithm manifestly preserves the energy-weighted sum







= 



= 



;

Z1i

|

~X1

~Y1

~q

0

rules:

Using the eigenvector representation of the RPA matrix, one can show

Mk =

ωk
ν h

ων|

ˆQ

0

2 , k odd.
i

|

Xν

Mk =

(~q, ~q) 

1
2

A

B

k

~q

B



−

A

−









~q
−





, k odd.

With our method the n-th iterate respects the odd-k sum rules for k

2n

1.

≤

−

We now illustrate the method with a very simple model, a collective particle-hole inter-

action fragmented by single-particle energies. We consider states i = 1, ..., N with matrix

elements Aij = ǫiδij + κqiqj and Bij = κqiqj. Here ǫ represents the energy spacing of the

particle-hole conﬁgurations, κ is the strength of the collective coupling to the ﬁeld Q, and

the components of the vector qi ∝
q
dom amplitudes, and normalize

−

×
2 = 1. The factor i(N

|

|

−

i(N

i)

r, where the r are Gaussian distributed ran-

i) weights the collective response

towards the middle of the excitation spectrum. The parameter κ should be positive for a

repulsive collective interaction such as the Coulomb that generates plasmons.

In Fig. 1 we show the strength function for such an RPA matrix in a space of 500

states, with parameter values given in the caption. The parameters were chosen to obtain

moderate collectivity, with a strong but broadly-fragmented collective excitation distributed

over the spectrum. Fig. 1 also displays the n=3, 10, and 50 approximants to the strength

function, where n is the number of Lanczos vectors

, or, equivalently, the number of

Zii

|

multiplications with the RPA matrix. One sees that with a handful of states, one state

closely approximates the collective excitation and the others distribute themselves over the

remaining spectrum. A better way to see the convergence of the strength function is to

plot its integral, I(ω) =

Q
|
After 50 iterations the integral of the strength function is virtually indistinguishable from

2. This is shown in Fig. 2 for n=3 and 10.

ν Θ(ω

ων|

ων)

−

P

0

i

h

the exact solution.

5

We mention that the algorithm does not explicitly preserve the total strength M0. If

there were no correlations in the ground state, that is, if the vectors Yi all vanished, then

the total strength would be

q

2 = 1. The non-trivial deviations from 1 in our examples

|

|

are related to the amount of correlations in the ground state. This is illustrated in Fig. 3,

which is the integrated strength function for a model identical to that in Figs. 1,2 except

that the collective interaction is attractive rather than repulsive. Here the total strength

is about 3.7, i.e. quite diﬀerent from 1. Fig. 3 illustrates how with n =3 and 10 the total

approximate strength converges rapidly to the exact value. (In the repulsive model of Fig. 2

the total strength had already converged by n = 3.) Although we cannot prove this rapid

convergence in all cases, it seems likely in light of the strong constraints imposed by the

odd-k sum rules.

We anticipate that the algorithm will be particularly useful in problems which require a

single-particle dimensionality of the order of tens or hundreds of thousands, but which allow

a sparse matrix approximation for the Hamiltonian, such as the local density approxima-

tion. This applies to molecular and condensed matter physics modeled with the Kohn-Sham

equations, and to nuclear physics for excitations in deformed nuclei [2]. With the LDA

Hamiltonian, an eﬃcient particle-hole representation can be constructed from the orbital

representation of holes and the coordinate-space representation of particles [21]. The com-

putational diﬃculty for the basic matrix-vector multiplication then scales as the number of

particles Np and the dimensionality of the single-particle space M as MN 2

N 3

p . Only

p ∼

a ﬁxed number of these operations, of the order of ten, are needed to obtain the strength

function to the accuracy of the fundamental mean ﬁeld approximation. Thus the overall

scaling of the method is O(N 3

p ).

This study arose in the program at the Institute for Nuclear Theory, “Numerical methods

for strongly interacting quantum systems”, and we wish to thank J. Carlson and R. Wiringa

for providing that forum. G.B. also thanks K. Yabana for many discussions. Financial

support was provided by the INT under Department of Energy Grant FG06-90ER40561

and by Department of Energy Grant DE-FG02-96ER40985.

6

FIGURES

FIG. 1. Strength function for the model described in the text with κ = 10 and ǫ = 0.1 (in

arbitrary units) for 500 states, and the Lanczos approximants for 5, 10, and 50 Lanczos vectors.

The scales for the abscissae are diﬀerent because the strength is fragmented over a diﬀerent number

of states.

FIG. 2. Integrated strength function for the model described in Fig. 1. For 50 Lanczos vectors

the integrated strength is virtually indistinguishable on this graph from the full calculation.

FIG. 3. The same as ﬁgure 2, except with the collective interaction is attractive, κ =

10.

−

Notice that the total strength is not constrained, as described in the text, but has converged by

the 10th iteration.

7

REFERENCES

[1] P. Ring and P. Schuck, The Nuclear Many-Body Problem, (Springer, New York, 1980).

[2] P.F. Bortignon and R.A. Broglia, Nucl. Phys. A371, 405 (1981); G.F. Bertsch, P.F.

Bortignon and R.A. Broglia, Rev. Mod. Phys. 55, 287 (1983); P. Ring, L. M. Rob-

ledo, J.L. Egido, and M. Faber, Nucl. Phys. A41(, 261 (1984); J.L. Egido and H.A.

Weidenm¨uller, Phys. Rev. C 39, 2398 (1989).

[3] K. Yabana and G.F. Bertsch, Phys. Rev. B54 4484 (1996).

[4] A. Zangwill and P. Soven, Phys. Rev. A21 1561 (1980).

[5] A. Rubio, et al., Phys. Rev. Lett. 77 247 (1996).

[6] C. Yannouleas, et al., J. Phys. B27 L642 (1994).

[7] Y. Luo, et al., J. Phys. Chem. 98 7782 (1994).

[8] C. Jamorski, et al, J. Chem. Phys. 104 5134 (1996).

[9] X. Blase, et al., Phys. Rev. B 52 R225 (1995).

[10] A.A. Quong and A. G. Eguiluz, Phys. Rev. Lett. 70, 3955 (1993).

[11] J.K. Cullum and R.A. Willoughby, Lanczos Algorithms for Large Symmetric Eigenvalue

Computations, (Birkhaeuer, 1985).

[12] R. Haydock, Solid State Phys. 35, 215 (1980).

[13] R.R. Whitehead, et al, Adv. Nucl. Phys. 9, 123 (1977).

[14] C.C. Paige, J. Inst. Math. Applic. 10, 373 (1972).

[15] R.R. Whitehead and A. Watt, J. Phys. G 4, 835 (1978); R.R. Whitehead, in Theory

and Applications of Moment Methods in Many-Fermion Systems, B.J. Dalton, et al,

eds, 235 (Plenum, 1980).

8

[16] W. Yang and W.H. Miller, J. Chem. Phys. 91, 3504 (1989).

[17] T.J. Park and J.C. Light, J. Chem. Phys. 85, 5870 (1986).

[18] J.S. Dehesa and A. Zarzo, Europhys. Lett. 8, 589 (1989).

[19] R. Haydock, J. Phys. A 7, 2120 (1974); H.-D. Meyer and S. Pal, J. Chem. Phys. 91,

6195 (1989); J. Engel, W.C. Haxton, and P. Vogel, Phys. Rev. C 46, R2153 (1992).

[20] E. Caurier, A. Poves, and A.P. Zuker, Phys. Lett. B252, 13 (1990); W. C. Haxton

and C. W. Johnson, Phys. Rev. Lett., 65, 1325 (1990); E. Caurier, A. Poves, and A.P.

Zuker, Phys. Rev. Lett. 74, 1517 (1995).

[21] J.R. Chelikowsky, N. Troulier, K. Wu and Y. Saad, Phys. Rev. B50 11355 (1994).

9

N=3

N=10

exact (N=500)

N=50

0.40

0.30

0.20

0.10

0.00

0.015

0.010

0.005

 
h
t
g
n
e
r
t
s

0.000

0.0

20.0

40.0

0.0

20.0

40.0

excitation energy

0.20

0.10

0.00

0.05

0.00

N=3
N=10
exact (N=500)

0.8

0.6

0.4

0.2

h
t
g
n
e
r
t
s
 
d
e
t
a
r
g
e
t
n

i

0.0

0.0

10.0

20.0

30.0

40.0

50.0

excitation energy

4.0

3.0

2.0

1.0

h
t
g
n
e
r
t
s
 
d
e
t
a
r
g
e
t
n

i

N=3
N=5
N=10
exact

0.0

0.0

10.0

20.0

30.0

40.0

50.0

excitation energy

