9
9
9
1
 
n
a
J
 
7
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
4
2
0
1
0
9
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

A new approach to the numerical integration of

rotational motion for interacting rigid bodies

Institute for Condensed Matter Physics, National Ukrainian Academy of Sciences,

1 Svientsitsky st., UA-290011 Lviv, Ukraine. E-mail: nep@icmp.lviv.ua

Igor P. Omelyan

Abstract

A new approach is developed to integrate numerically the equations of

motion for systems of interacting rigid polyatomic molecules. With the

aid of a leapfrog framework, we directly involve principal angular veloc-

ities into the integration, whereas orientational positions are expressed

in terms of either principal axes or quaternions. As a result, the rigid-

ness of molecules appears to be an integral of motion, despite the atom

trajectories are evaluated approximately. In the case of microcanonical-

ensemble dynamics, the approach leads to an algorithm which is free of

any iterative procedures. It is shown that the algorithm derived exhibits

signiﬁcantly better properties in energy conservation with respect to all

known rigid-body integrators. A thermostatted version is also described.

It allows to obtain reliable results in computer simulations of water with

huge time steps up to 10 fs, much larger than is usually possible.

MSC numbers: 65C20; 65-04; 68U20; 70E15; 82A71

Keywords: Numerical methods; Motion of rigid bodies; Long-time integration;

Molecular dynamics simulation; Polyatomic molecules; Machine computation

1

I. INTRODUCTION

A lot of theories in physical chemistry treats the molecular liquid as a system of

classical rigid bodies. The method of molecular dynamics (MD) remains the main

tool for investigation of such a model. An important problem in MD simulations

is the development of stable and eﬃcient algorithms for integrating the equations of

motion with orientational degrees of freedom. The straightforward parameterization

of these degrees, Euler angles, is very ineﬃcient for numerical calculations because

of singularities inherent in the description [1–3]. Within singularity free approaches,

the orientations of molecules typically are expressed in terms of quaternions [4–6].

High-order predictor-corrector Gear methods were utilized to integrate the rigid-body

equations of motion in early investigations [7–10]. These multistep schemes are not

reversible, and it is not clear that the extra order obtained is relevant, since they

rather quickly become exhibit poor long-term stability of energy with increasing the

step size [11].

Various alternatives to the Gear approach have been proposed and implemented

over the years. These include the family of integrators comprising Verlet [12], velocity

Verlet [13], leapfrog [14], and Beeman [15] methods, which are based on the St¨ormer

central diﬀerence approximation [7, 16] of accelerations. Such integrators proved to be

the most eﬃcient, because high accuracy can be reached with minimal cost measured

in terms of force evaluations. The main problem with these methods is that they were

originally constructed, in fact, to integrate translational motion, assuming that acceler-

ations are velocity-independent, and, therefore, additional modiﬁcations are necessary

to use them for rotational dynamics. Analogous problems arise for charged particles

moving in an external magnetic ﬁeld.

In the atomic approach, the parameterization of orientational degrees of freedom

can be circumvented by involving fundamental variables, namely, the individual Carte-

sian coordinates of atomic sites [11, 17–19]. As a result, the St¨ormer formula and its

velocity leapfrog variant appear to be directly applicable. The dynamics is determined

by integrating the equations of motion for these sites, subject to constraints that the in-

tramolecular bond distances are ﬁxed. Until now, the great majority of MD simulations

2

on rigid polyatomics are performed using the atomic-constraint technique due to its ex-

ceptional long-time stability. However, the application of this approach is inconvenient,

in general, for several reasons. First, when there are more than two, three or four sites

in the cases of linear, planar and three-dimensional molecules, respectively, the orien-

tations cannot be deﬁned uniquely. Second, as the number of atoms in each molecule

is raised the number of constraints increases dramatically, decreasing the eﬃciency of

the computations. Moreover, to exactly reproduce the rigid molecular structure, very

complicated systems of nonlinear equations are needed to be solved at each time step

of the integration process. An additional computational complexity arises in the force

evaluations for intermolecular potentials that are not easily decomposable into direct

site-site interactions such as potentials expressed through multi-pole expansions.

In order to obviate these diﬃculties, Ahlrichs and Brode have devised a hybrid

method [20] in which the principal axes of molecules are considered as pseudo par-

ticles and constraint forces are introduced to maintain their orthonormality and, as

a consequence, the molecular rigidity. The principal axes were evaluated within the

Verlet framework via a recursive procedure which does not solve exactly the constraint

equations to convergence, but instead writes the rotational matrix as an exponential

for sum of some anti-symmetric matrices, restricting by a ﬁnite number of terms. A

similar procedure has been used to adopt the pseudo-particle approach to velocity-

Verlet and Beeman integrations [21]. It was established, however, that the exponential

propagation leads to worse results on energy conservation than those obtained in the

atomic-constraint technique. Such a situation can be explained by the fact that, al-

though the omitted higher-order terms are in the self-consistency with the order of

truncation errors for the algorithms used, they involve an unpredictable additional dis-

crepancy in the evaluation of coordinates and the inﬂuence of this discrepancy appears

to be signiﬁcant already at relatively small values of the step size. Recently, acting

in the spirit of the pseudo-particle formalism, a leapfrog-like algorithm has also been

proposed [22]. In this algorithm the entire rotation matrix as well as the corresponding

conjugate momentum are treated as dynamical variables, and the matrix of constrain

forces is evaluated exactly. In such a way, the lost precision seems was reproduced,

but this required again to ﬁnd solutions by iteration to the systems of highly nonlinear

3

equations. The pseudo-particle and atomic approaches have yet a major disadvantage

in that it is very hard to extend them to thermostatted versions. This is so, because

the two problems on the conservation of temperature and molecular rigidity are cou-

pled between themselves in a very complicated manner that prevents to resolve them

in practice.

The ﬁrst eﬀorts on adopting the St¨ormer group of integrators to rotational mo-

tion in its pure form were done by Fincham [23–24]. As a result, rotational versions

of the leapfrog algorithm have been proposed on the basis of equations of motion for

angular momenta of molecules in the laboratory frame. In the case of a more accu-

rate implicit version, the system of four nonlinear equations per molecule is solved by

iteration for the same number of quaternion components [24]. To ensure the rigidness

of molecules, the unit norm of quaternions was preserved using a rescaling method [9,

24]. As was soon realized [21, 25], angular-momentum versions are not very eﬃcient

at least in energy-conserving simulations, given that the artiﬁcial procedure is used to

maintain the unit norm of quaternions and additional transformations with approxi-

mately computed rotational matrices and angular momenta are necessary to evaluate

the principal components of angular velocities. Nevertheless, the chief achievement

of rotational leapfrog versions was that they have allowed to perform thermostatted

simulations on rigid polyatomics for the ﬁrst time. The question of how to replace the

crude quaternion renormalization by a more natural procedure has been considered

too [25]. As a consequence, the quaternion dynamics with constraints was formulated

and a new algorithm within the velocity Verlet framework was introduced. It has been

shown [25, 26] that this algorithm conserves the total energy better than the implicit

leapfrog integrator but not suﬃciently.

Quite recently, to improve the stability, a new angular-velocity leapfrog algorithm

for rigid-body simulations has been proposed [26]. Its main advantages were the intrin-

sic conservation of rigid structures and excellent stability properties. But a common

drawback, existing in long-term stable integrators of rigid polyatomics, still remained,

namely, the necessity to solve by iteration the systems of nonlinear equations. Although

such equations are much simpler than those arising in the atomic and pseudo-particle

approaches, the iterative solution should be considered as a negative feature.

4

In the present paper we develop the angular-velocity algorithm by avoiding any

iterative procedures and show that the total energy can be conserved even better than

within the cumbersome atomic technique. A thermostatted version of the algorithm is

derived as well. We demonstrate that it gives the possibility to carry out simulations

with extra large time steps, which are unaccessible in usual approaches.

II. THE ADVANCED LEAPFROG ALGORITHM

We shall deal with a classical collection of N identical rigid molecules composed

of M point interaction sites. According to the molecular approach, the dynamics for

such a system can be considered in view of translational and rotational motions. The

translational motions is expressed in terms of the center of mass ri =

M
a=1 mara

i /m

P

of each molecule i = 1, . . . , N, where ra

i denotes the positions of atomic site a within

molecule i and m =

M
a=1 ma and ma are the masses of a separate molecule and partial

P

atoms, respectively. Then the translational part of the system evolution over time t

can be determined in phase space by the 6N ﬁrst-order diﬀerential equations

dri
dt

= vi ,

m

dvi
dt

= fi

(1)

which represent the well-known Newton’s law, where fi =

|
P
force acting on molecule i due to the site-site interactions f ab
ij with the other (j

ra
i −

rb
j|

N ;M
j;a,b f ab
ij (

) is the

= i)

molecules and vi designates the center-of-mass velocity.

A. Rotational motion in body-vector and quaternion representations

In the body-vector representation [4, 20, 21], the Cartesian coordinates of three

principal axes XY Z of the molecule are assumed to be orientational variables. These

variables can be collected into the 3

tions in the laboratory frame are ra

i (t) = ri(t) + A+
is a vector-column of these positions in the body frame attached to the molecule

i (t)∆a, where ∆a = (∆a

X, ∆a

Y , ∆a

3 orthonormal matrices Ai, so that the site posi-
Z)+

×

and A+ denotes the matrix transposed to A. The time-independent quantities ∆a

(a = 1, . . . , M) are completely deﬁned by the rigid molecular structure. The rate of

change in time of orientational matrices can be given as

5

6
dAi
dt

=

0

Ωi
Z

−
Ωi










Ωi

Ωi
Y

Z −
Ωi
0
X

Ωi
X

0

Y −










Ai ≡

W(Ωi)Ai ,

(2)

where Ωi

X, Ωi

Y and Ωi

Z are principal components of the angular velocity Ωi and W is

a skewsymmetric matrix associated with Ωi, i.e., W+(Ωi) =

W(Ωi).

−

In an alternative approach [4, 9], the matrix Ai is a function,

A(qi) =










−

i + χ2
ζ 2
i

i + η2
ξ2

i −
2(ξiηi + ζiχi)
−
2(ηiζi −

ξiχi)

2(ζiχi −
ξiηi)
i + χ2
ζ 2
η2
ξ2
i
i −
i −

2(ξiζi + ηiχi)

2(ηiζi + ξiχi)
2(ηiχi −
i + ζ 2
η2
ξ2
i −

ξiζi)
i + χ2
i










−

,

(3)

(ξi, ηi, ζi, χi)+. The time derivatives of qi can

−
of the four-component quaternion qi ≡
be presented [26] in the form

dqi
dt

=

1
2

Ωi
Y

Ωi

Ωi

0

X −
Y Ωi
X
Ωi
Z

Z −
0

−













0

Ωi

−
Ωi

Ωi
Z
X Ωi
Y
Ωi

Y −

Ωi

Ωi
Z

X −

0

























ξi

ηi

ζi

χi













1
2

≡

Q(Ωi)qi ,

(4)

where Q(Ωi) is a skewsymmetric matrix again. The normalization condition qi
i = 1, which ensures the orthonormality AiA+
i + η2
ξ2

i + χ2

i + ζ 2

A(qi),

2 =

i = I of Ai ≡

where I designates the unit matrix, has been used to obtain Eq. (4). A consequence

from the last conditions is that only three independent parameters are necessary to

describe the nine elements of the orientational matrix and the four components of the

quaternion.

The relations (2) and (4) for orientational coordinates need to be supplemented by

the Euler’s equations for angular velocities

= K i

JZ) Ωi

Y Ωi

JX

X + (JY −
Y + (JZ −
Z + (JX −
where Jα denote the time-independent moments inertia of the molecule along its prin-

JX) Ωi

JY ) Ωi

= K i

= K i

XΩi

ZΩi

X ,

Y ,

Z ,

(5)

JZ

JY

dΩi
X
dt
dΩi
Y
dt
dΩi
Z
dt

cipal axes (α = X, Y, Z) and K i

α are body-frame components, Ki = Aiki, of the torque

ki =

N ;M
j;a,b (ra

i −

P

ri)×f ab

ij exerted on molecule i with respect to its center of mass.

6

In such a way, we obtain a coupled set of 6N translational (Eq. (1)) and (9 + 3)N =

12N (Eqs. (2) and (5)) or (4 + 3)N = 7N (Eqs. (4) and (5)) rotational ﬁrst-order

diﬀerential equations of motion, subject to 6N (

{
If the equations of motion are solved exactly, these constraints will be

}

{

}

AiA+

i = I

) or N (

qi

2 = 1

) scalar

constraints.

conserved in time automatically.

B. Evaluation of angular velocities and coordinates

Let

ri(t), vi(t

{

h
2 ), Si(t), Ωi(t

h
2 )

}

−

−

be an initial spatially-velocity conﬁguration

of the system, where the velocities and positions are deﬁned on alternate half-time

steps with h being the ﬁxed step size and Si(t)

Ai(t) or qi(t) are the orientational

≡

coordinates for the principal-axes or quaternion representations, respectively. The

translational variables can be integrated applying the usual [14] leapfrog algorithm

vi(t + h

2 ) = vi(t

h
2 ) + h fi(t)/m +

(h3) ,

−

ri(t + h) = ri(t) + h vi(t + h

O
(h3)

2 ) +

O

(6)

in which the molecular forces fi(t) are explicitly evaluated in terms of known spatial

coordinates ri(t) and Si(t). As can be veriﬁed easily, expanding the left- and right-

hand sides of both the lines of Eq. (6) into Taylor series over h, the algorithm produces

truncation single-step errors of order h3 in coordinates and velocities (a more detailed

discussion on local and global errors is presented in Appendix A).

In the case of rotational motion it is not a simple matter to adopt the standard

leapfrog scheme, since the principal angular accelerations are velocity-dependent and

the time derivatives of orientational coordinates depend not only on the angular veloc-

ity but also on the coordinates themselves. These problems were handled previously

by Fincham [24] in his angular-momentum versions of the leapfrog algorithm. Re-

cently [25, 26], it was shown that more superior techniques follow when the principal

angular velocities, instead of angular momenta, are involved directly into the integra-

tion. Within the leapfrog framework, mid-step values for the angular velocities can be

evaluated by writing

Ωi

α(t + h

2 ) = Ωi

α(t

h

2 ) + hhK i

−

α(t) + (Jβ −

Jγ) Ωi

β(t)Ωi

γ(t)i.Jα +

(h3) ,

(7)

O

7

where Euler equations (5) have been taken into account, (α, β, γ) denote an array of

three cyclic permutations for (X, Y, Z) and the molecular torques K i

α(t) are computed

via the coordinates ri(t) and Si(t). Equation (7) presents a rotational-motion analog

for the ﬁrst line of (6) but it must be complemented by a propagation of the products

of angular velocities to on-step levels of time. It is quite naturally to perform such a

propagation in the form

Ωi

β(t)Ωi

γ(t) =

1
2 hΩi

β(t

−

−

h

2 )Ωi

γ(t

h

2 ) + Ωi

β(t + h

2 )Ωi

γ(t + h

2 )i +

(h2) ,

(8)

O

where the second-order accuracy is in the self-consistency with the third-order trun-

cation errors arising when evaluating angular velocities. In view of the last equality,

vector expression (7) is an implicit equation with respect to Ωi(t + h

2 ), which allows to
be solved by iteration [26]. But an essential advantage of the approach presented lies

in the fact that the solutions to (7) can be cast in quadratures without applying any

iterative procedures. This question will be considered in the next subsection.

Analogously to the second line of the translational-motion algorithm (6), we eval-

uate orientational coordinates,

Si(t + h) = Si(t) + h Hi(t + h

2 ) Si(t + h

2 ) +

(h3) ,

O

(9)

Wi) and quaternion (Si ≡
1
2 Qi) representations, where Eqs. (2) and (4) have been used. The matrices
Q(Ωi) are only velocity-dependent and they are calculated

for the cases of principal-axis vectors (Si ≡
qi, Hi ≡
Wi ≡
in (9) using the already deﬁned values of Ωi(t + h

W(Ωi) and Qi ≡

2 ), whereas the obvious choice for

Ai, Hi ≡

mid-step values of the orientational variables is

Si(t + h

2 ) = 1

2 [Si(t) + Si(t + h)] +

(h2) .

O

(10)

Equations (9) and (10) constitute, in fact, a system of linear equations with respect to

elements of Ai(t + h) or qi(t + h), which, is solved analytically,

Si(t + h) = [I

−

h

2 Hi(t + h

2 )]−1[I + h

2 Hi(t + h

2 )]Si(t) +

(h3) ,

O

(11)

where it is understood that I designates either three- or four-dimensional unit matrix

in the principal axes or quaternion domains, respectively.

8

The single integration process described can be repeated for the next time step,

shifting the initial time t to t + h.

In such a way, step by step (n = 1, 2, . . .) the

dynamics

ri(t + nh), vi(t + (n

{
numerically evaluated.

−

1
2)h), Si(t + nh), Ωi(t + (n

1
2)h)

}

−

of the system is

Taking into account expressions (2) and (4) for matrix Hi, the result (11) can be

written more explicitly,

Ai(t + h) =

I [1

−

h2
4 Ω2

i (t + h
1 + h2
4 Ω2

2 )] + hWi + h2
i (t + h
2 )

2 Pi

Ai(t)

Di(t, h) Ai(t) ,

≡

qi(t + h) =

I [1

h2
16 Ω2
−
1 + h2

i (t + h
16 Ω2

2 )] + h
i (t + h
2 )

2 Qi

qi(t)

Gi(t, h) qi(t) ,

≡

(12)

where [Pi]αβ = Ωi

αΩi

β denotes a symmetric matrix which, as the matrices Wi and Qi,

is computed in (12) using the angular velocities at the middle-step time t + h

2 . It can
ǫH)−1(I + ǫH) is orthonormal at arbitrary values of

be checked that the matrix (I

−

ǫ, provided H+ =

H. Therefore, the 3

3 and 4

4 evolution matrices Di and Gi

−

×

×

are orthonormal by construction as well. Using the equalities W2

i = Pi −
i I, these matrices can be presented in the exclusive compact forms

i =

Q2

Ω2

Ω2

i I and

−

Di(t, h) = exp[ϕiWi/Ωi]t+

,

h
2

ϕi = arcsin

Gi(t, h) = exp[φiQi/Ωi]t+

,

h
2

φi = arcsin

1 + h2

hΩi(t + h
2 )
i (t + h
4 Ω2
2 )
hΩi(t + h
2 )
i (t + h
8 Ω2
2 )

,

,

2 + h2

(13)

where exp designates the matrix exponential. From Eq. (13) it becomes clear that the

matrices Di and Gi deﬁne three- and four-dimensional rotations on angles ϕi and φi in

the laboratory frame and quaternion space, respectively. In the ﬁrst case the rotation
is performed around the unit vector Ωi/Ωi|t+
out around a virtual orth which is perpendicular to all four orths of the quaternion

, whereas in the second one it is carried

h
2

space.

As far as the evolution matrices are rotational ones, the following statement emerges

immediately. If initially the orthonormality of Ai and the unit norm of qi are fulﬁlled,

they will be satisﬁed perfectly in future, despite an approximate character of the eval-

uated coordinate trajectories

ri(t + nh), Si(t + nh)

. This excellent property distin-

{

}

9

guishes the algorithm introduced from all other singularity-free algorithms known, since

no artiﬁcial or constraint normalizations as well as no recursive or iterative procedures

are necessary to conserve the rigidness of molecules.

It is worth remarking that the quaternion and body-vector treatments are com-

pletely identical with respect to produced atom trajectories if the corresponding

equations of rotational motion are solved precisely.

In our leapfrog scheme the

trajectories will diﬀer between themselves by terms of orders h3 and higher,

i.e.,

Ai(t + h) =

−
Di(t, h) =

(h3) (if initially Ai[qi(t)] = Ai(t)) or, in other words,

Ai[qi(t + h)]
Di(t, h)
ing, the matrix
Di(t, h), but on a somewhat diﬀerent angle ϕ′

i (t). That is very interest-
Di(t, h) describes the rotation around the same vector as the propagator
(h3). We see, therefore, that the

Di(t, h) = Ai[qi(t + h)]A+

(h3), where

O

O

−

i = ϕi +

O

uncertainties are the same order as truncation terms of the algorithm. From this point

of view, both the representations can be applied to numerical computations with equal

success. However, the implicit computation Ai[qi(t + h)] (via Eq. (3)) of orientational

matrices in terms of quaternions (the second line of Eq. (12)) requires less elementary

arithmetical operations to be executed and also less memory to be saved (4N units,

instead of 9N ones) for orientational positions than in the case of direct computation

(the ﬁrst line of (12)) that may be important in some applications of the algorithm.

C. Quasianalytical solutions for angular velocities

We shall show in this subsection how to perform analytically the evaluation of

principal angular velocities in our advanced leapfrog algorithm. The system (Eqs. (7)

and (8)) of three equations per molecule is needed to be solved with respect to the

α(t + h

same number of unknowns Ωi

2 ), where α = X, Y, Z, during such an evaluation.
First of all it is necessary to point out that the equations are nonlinear only when
all the principal moments of inertia are diﬀerent, i.e., when JX 6
consider now this more diﬃcult case (speciﬁc examples are described in Subsect. II D).

= JZ. Let us

= JY 6

We notice that the ﬁrst two equations (α = X, Y ) of system (7) appear to be linear

with respect to Ωi

terms of Ωi

Z(t + h

X(t + h
2 ) and Ωi
2 ). The result is

Y (t + h

2 ) which, therefore, can easily be expressed in

10

θX + hρXθY Ωi
1 + h2µ2Ωi
Z
α(t)/Jα + ραΩi

Z (t + h
2 )
2(t + h
2 )

,

h

Ωi

Y (t + h

2 ) =

Z(t + h
2 )
2(t + h
2 )

θY + hρY θXΩi
1 + h2µ2Ωi
Z
2 )]h, ρα = (Jβ −

h

,

(14)

2 ) + [K i
−
1/4. The last inequalities follow from the requirements Jα > 0 and

Jγ)/(2Jα) and

2 )Ωi

β(t

γ(t

−

h

Ωi

X(t + h

2 ) =

where θα = Ωi

α(t
−
ρX ρY ≤
−

0 < µ2 =
Jα ≤

Jβ + Jγ imposed on principal moments of inertia.
2 ) and Ωi

Substituting the result (14) for Ωi

X(t + h

2 ) into the third equation
(α = Z) of system (7) and presenting the Z-th component of the angular velocity as

Y (t + h

Ωi

Z(t + h

2 ) = s0 + δ yields the following algebraic equation

a0 + a1δ + a2δ2 + a3δ3 + a4δ4 + a5δ5 = 0

(15)

with the coeﬃcients

hρZ[θXθY ϑ− + h(ρY θ2

X + ρXθ2

Y )s0] ,

Y )ρZ −
2θZ + hρZθXθY + h2µ2s2

µ2s0[(5s0 −

0(10s0 −

6θZ)] ,

4θZ)ϑ+ + 2hθXθY ρZ]
}

,

(16)

θZ)ϑ2

h2

X + ρXθ2

+ −
(ρY θ2

a0 = (s0 −
a1 = ϑ+ −
{
a2 = h2µ2[6s0 −
a3 = 2h2µ2[1 + h2µ2s0(5s0 −
a4 = h4µ4(5s0 −

2θZ)] ,

θZ) , a5 = h4µ4 ,

±

where ϑ± = 1

h2µ2s2

0. The equation (15) is ﬁfth order and the corresponding solutions

for Ωi

Z(t+ h

2 ) are independent on the parameter s0, provided the unknown δ is precisely
determined. However, as is well known, only algebraic equations of fourth or less orders

allow to be solved in quadratures completely.

The main idea of quasianalytical solutions consists in the fact that actual MD

simulations are performed with relative small values of the time step h. Then it is

necessary to choose the parameter s0 as a good prediction for Ωi

2 ) to be entitled
to ignore high-order terms in the left-hand side of Eq. (15). The simplest choice for

Z(t + h

this can be found assuming that the nonlinear velocity term in the right-hand side

of Eq. (7) at α = Z is time-independent during the interval [t

h
2 , t], i.e., putting

−
(h). As a result, one obtains

Ωi

X(t)Ωi

Y (t) = Ωi

X(t

−

h

2 )Ωi

Y (t

h
2 ) +

O
−
s0 = θZ + ρZΩi

(17)

that represents the original values of Ωi

2 ) with the second-order truncation error,
It is easy to see that in this case the two last terms a4δ4 and

so that δ =

(h2).

O

h

2 )Ωi

Y (t

h
2 )h

−

X(t

−
Z(t + h

11

a5δ5 in the left-hand side of Eq. (15) behaves as

(h12) and

(h14), respectively.

O

O

Taking into account the smallness of h, such terms can merely be omitted without

any loss of the precision, because they involve uncertainties of order

(h12) and higher

O

into the desired solution and appear to be too small with respect to the third-order

(h3) involved previously in angular velocities by the algorithm.

truncation errors
These omitted terms can even be minimized yet, provided JX 6
then the X- and Y -th components of the angular velocity are the most slow variables

= JY > JZ. Indeed,

O

Z(t + h

and estimation (17) for Ωi

2 ) becomes more accurate, decreasing the deviation

|
Moreover, at given values of JX, JY and JZ, the multiplier µ2 riches a minimum when
minα=X,Y,Z |
That is why the algebraic equation must be constructed with respect to the component

= JZ, decreasing the inﬂuence of the highest-order coeﬃcients again.

Jα|

δ

|

.

Ωi

Z associated with the least value for principal moments of inertia.

Eq. (15) is now transformed to the third-order algebraic equation

a0 + a1δ + a2δ2 + a3δ3 =

(h12)

O

which can easily be solved analytically. The result is

δ1 =

δ2,3 =

1
3 a2/a3 + c
3 a2/a3 −

1

−
1
2[c

−

−

−

O

±

b/c +

(h12) ,

b/c

i√3(c + b/c)] +

(h12) ,

O

where

b = 1

2)/a2
a2
3 ,

9(3a1a3 −
c = (p + qb3 + p2)1/3,

p = 1

54(9a1a2a3 −

27a0a2

2a3

2)/a3
3 .

3 −

(18)

(19)

(20)

Among the three solutions only the ﬁrst one δ1 is real and satisﬁes the physical bound-

ary condition

h2 when h goes to zero (the other two solutions δ2,3 are purely imagi-

nary at h

→

∼
0 and they tend to inﬁnity as

i/h).

∼ ±

Therefore, the desired Z-th component of the angular velocity is

Ωi

Z(t + h

2 ) = s0 + δ1 .

(21)

The rest two components Ωi

X(t + h

2 ) and Ωi

Y (t + h

2 ) can be reproduced on the basis of

equalities (14).

12

D. Integration in speciﬁc cases

Although the algorithm derived can be applied to arbitrary rigid polyatomics, some

simpliﬁcations are possible using special properties of the molecule. The simplest case

is molecules with a spherical distribution of mass, when all the moments of inertia are
equal, i.e., JX = JY = JZ ≡
axes can be chosen as principal ones at an initial time. Then, no velocity-dependent

J and arbitrary tree perpendicular between themselves

contributions into the torques (the second terms in the right-hand sides of equation (5))

appear and it is more convenient to work within the body-vector representation and to

rewrite the equations of rotational motion (2) and (5) in terms of the angular velocity

i Ωi in the laboratory frame, i.e., dAi/dt = W+(ωi)Ai and Jdωi/dt = ki. The

ωi = A+
leapfrog trajectories for these equations are obvious: ωi(t + h

h

2 ) = ωi(t

and Ai(t + h) = exp[

ϕiWi(ωi)/ωi]t+

h
2

−

Ai(t), where ϕi = arcsin[hωi/(1 + h2

For some particular models, the orientational part of the intermolecular potential

−

2 ) + h
4 ω2

J ki(t)
.
i )]t+

h
2

can be expressed using only unit three-component vectors ρi passing through the cen-
ters of mass of molecules. The examples are point dipole interactions, when ρi ≡
with ν i being the dipole moment, or when all force sites of the molecule are aligned

νi/νi

along ρi. If then additionally the condition JX,Y,Z = J is satisﬁed (for the last example

this can be possible when forceless mass sites are placed in such a way to ensure the

spherical mass distribution), it is no longer necessary to deal with orientational matri-

ces or quaternions. In this case the equation for ρi looks as dρi/dt = W+(ωi)ρi with
the solution ρi(t + h) = exp[

ϕiWi(ωi)/ωi]t+

ρi(t).

h
2

−

For molecules with cylindric distribution of mass sites, when two of three of principal

moments of inertia are equal, the numerical trajectory can also be determined in a
simpler manner. Let us assume for deﬁniteness that JX = JY 6
arbitrary two perpendicular between themselves axes, lying in the plane perpendicular

= JZ and JZ 6

= 0. Then

to Z-th principal axis, can be chosen initially as X- and Y -th principal orths. The

corresponding solution to Eq. (7) at α = Z is found now exactly, namely, Ωi

2 ) =
Z(t) and, as in the general case, the values for components X and Y of

Z(t + h

Z(t

Ωi

2 ) + h

JZ K i

h

−

the angular velocity are evaluated on the basis of Eq. (14), whereas the orientational

matrices or quaternions are computed via Eq. (12).

13

A special attention should be paid on linear molecules when JX = JY = J

= JZ = 0.

Each such molecule has two, instead of free, orientational degrees of freedom and to

reproduce a correct dynamics by Euler equations it is necessary to putt formally Ωi

0

Z ≡

to exclude nonexisting torques caused by irrelevant rotations of the molecule around

Z-axis. Then, as it follows from Eq. (14), we have Ωi
2 ) + h

2 ) = Ωi

Y (t + h

and Ωi

J K i

Y (t

h

−

X(t + h

2 ) = Ωi

X(t

h

2 ) + h

J K i

X(t)

−

Y (t). Planar molecules do not present a speciﬁc case

within our approach and they should be handled in the usual way similarly to tree-

dimensional bodies. The integration in the presence of an external electromagnetic

ﬁeld is considered in Appendix B.

III. THERMOSTATTED VERSIONS

Since the velocities appear explicitly in our approach, it is possible to introduce

various thermostats to simulate canonical ensembles. As is well known [24, 27], ther-

mostatted versions allow to perform simulations with signiﬁcantly greater step sizes

than those used within the energy-conserving dynamics. In canonical ensembles the

time evolution is determined provided the temperature T = 2Γ/(lNkB) of the system

is an integral of motion, where Γ and kB are the kinetic energy and the Boltzmann’s

constant, respectively. The number l of degrees of freedom per particle is equal to 6

for arbitrary rigid polyatomics, except the cases of linear molecules (l = 5) and pure

translational motion (l = 3).

tional velocities

The simplest thermostatted version is based on the estimation of on-step transla-

vi(t) =

1
2 hvi(t

−

h

2 ) + vi(t + h

2 )i +

(h2) ,

O

commonly used to calculate the kinetic part Γ (

vi(t)

)

}

≡

{

Γ (t) = 1

N
i=1 mvi

2(t) of the

2 P

total energy and, as a consequence, the temperature T (t) at time t during the standard
leapfrog step (6). Then, velocities (22) are modiﬁed as v′

i(t) = βvi(t) using the scaling

factor β = qT0/T , where T0 is the required constant temperature [28]. The velocity
integration is completed by

(22)

(23)

v′
i(t + h

2 ) = (2

β−1)v′

i(t) + h

2 fi(t)/m

−

14

6
which satisﬁes v′

i(t) = 1

2 [vi(t

h

2 )+v′

i(t+ h

2 )] and T (

v′
i(t)

−
are obtained within the angular-momentum algorithms [24].

}

{

) = T0. Similar modiﬁcations

In our case it is not so obvious to extend the angular-velocity algorithm to a ther-

mostatted version on the basis of such rather intuitive grounds, because the angular

accelerations are velocity-dependent. For this reason we consider ﬁrst the question how

to reproduce result (23) in the framework of a more consequent approach. The main

idea lies in the following.

In the thermostat the velocities are not independent and

constrained by the condition Γ = const. The last equality can be satisﬁed introducing

the generalized friction forces

λ(t)∇viΓ =

λ(t)mvi(t). These virtual forces are

−

−

now added to the real ones and, as a result, solution (6) for translational velocities

transforms into

vi(t + h

2 ) = vi(t

h
2 ) + h [fi(t)

λ(t)mvi(t)]/m +

−

−

(h3) ,

O

(24)

where on-step velocities vi(t) match Eq. (22). Solving equation (24) with respect to

vi(t) and satisfying the condition T (t)

equation for the friction coeﬃcient λ with the solutions

T (

vi(t)

≡

{

}

) = T0 leads to a single quadratic
β−1)/h. Because of

2(1

−

∓

limh→0 β

→
ﬁrst solution

1, the second solution behaves like 4/h and should be rejected. Only the
β−1)/h is acceptable from the physical point of view. It tends to
i=1 vi(t)·fi(t)/(lNkBT0) when h goes zero, indicating about
the third-order truncation errors in (24) despite the second-order estimation (22) and

the ﬁnite value λ0(t) =

2(1

−

−

P

N

automatically fulﬁlling the condition dΓ/dt =

λ0mvi] = 0, which follows

N

i=1 vi·[fi −

P

from Γ = const. As can be veriﬁed by straightforward calculations, equation (24) is
β−1)/h.

equivalent to (23) when λ(t) =

2(1

−

−

In such a manner, the temperature of the system is conserved exactly at on-step

levels of time during the leapfrog trajectories, i.e., T (t + (n

1)h) = T0, whereas it will

−

diﬀer slightly from the requested value by terms of order h3 and higher at mid step

times, i.e., T (t + (n

1/2)h) = T0 +

(h3), being in the self-consistency with the same

order of truncation errors for velocities (24).

−

O

Consider now the angular-velocity integration within the generalized friction for-

malism. For rigid molecules the kinetic energy consists of translational and rotational
2]. In this case the condition Γ = const requires

parts, Γ = 1

2 +

X,Y,Z
α

JαΩi
α

N
i=1[mvi

2 P

P

15

the introduction of additional friction torques,

λ(t)∂Γ/∂Ωi

α =

λ(t)JαΩi

α(t), together

−

−

with the translational friction forces described above. Then, using the estimation of

on-step angular velocities

Ωi(t) =

1
2 hΩi(t

−

h

2 ) + Ωi(t + h

2 )i +

(h2) ,

O

(25)

(27)

(28)

needed to computer the friction torques, and collecting two terms of the real torque

acting on molecule i into the one vector Li with the components

α(t) = K i
Li

α(t) + 1

2 (Jβ −

Jγ) hΩi

β(t

h

2 )Ωi

γ(t

h

2 ) + Ωi

β(t + h

2 )Ωi

γ(t + h

2 )i ,

(26)

−

−

we modify equation (7) as

Ωi

α(t + h

2 ) =

[1

{

−

2 ]Ωi
λ h

α(t

h

2 ) + hLi

α(t)/Jα}

−

/[1 + λ h

2 ] .

The translational-velocity part of the thermostatted dynamics can be proceeded,

rewriting Eq. (24) in the following equivalent form

vi(t + h

2 ) =

[1

{

−

λ h

2 ]vi(t

h
2 ) + h fi(t)/m
}

−

/[1 + λ h

2 ] .

The generalized friction coeﬃcient λ, arising in Eqs. (27) and (28), is found to pro-

vide the temperature constant. For example, we can apply the usual on-step constant-

temperature scheme for which T (t) = T0. In our algorithm, it appears to be more con-

venient to conserve the temperature at mid-step levels of time. The last scheme looks

more naturally within the leapfrog framework, because the velocities are really gener-

ated at these levels and no additional interpolations like (22) and (25) are necessary to

computer the temperature. In the energy-conserving dynamics, such interpolations are

commonly used to synchronize kinetic and potential parts of the total energy to the

same times. Thermostatted calculations are not needed in this synchronization given

that the total energy ﬂuctuations are completely determined by correlations of the

potential energy. It is worth emphasizing also that the mid-step constant-temperature

scheme cannot be applied directly to angular-momentum algorithms [24], where the

angular velocities are not well deﬁned quantities at middle time steps.

Thus, putting T (t + h

γ(t + h
2 )
in the right-hand side of Eq. (26) as parameters, yields a linear equation with respect

2 ) = T0 and considering the nonlinear terms Ωi

β(t + h

2 )Ωi

16

to λ, provided T (t

h
2 ) = T0. The last condition is not self-starting and this must be
taken into account at the generation of angular velocities at the very beginning of the

−

integration process. The solution of the linear equation is

where

λ

λ(

{

≡

Ωi(t + h
2 )

) = 2

}

Λ1 + hΛ2
T0 + hΛ1

,

Λ1 =

Λ2 =

1
2lNkB

1
4lNkB

N

X
i=1

N

X
i=1

[vi(t

−

h

2 )·fi(t) + Ωi(t

h

2 )·Li(t)] ,

−

[fi

2(t)/m +

Li
α

2(t)/Jα] .

X,Y,Z

X
α

(29)

(30)

The vector equation (27) in view of expressions (26) and (29) constitutes a system

system of equations can now be solved iteratively, putting initially Ωi(t

of three equations per molecule for the same number of unknowns Ωi

α(t + h
2 ). The
h
2 ), instead of
2 ), in all nonlinear terms which are collected in the right-hand side of (27). The
2 ) in the left-hand side of (27) are considered as initial guess
for the next iteration (note that no iterations are necessary for linear or spherically

Ωi(t + h
obtained values for Ωi(t + h

−

symmetric molecules, because then nonlinear terms are absent, and Eq. (27) presents

an explicit equation for the angular velocity). The convergence of iterations is justiﬁed

by the smallness of h which always is meet in actual MD simulations. It is necessary

to point out that the multiplier λ (Eqs. (29) and (30)) depends nonlinearly on angular

velocities of all molecules. Therefore, to take the next iteration we must complete the

previous one for each molecule and then recalculate λ. When the required iterative

precision is achieved, the iterations are stopped and the obtained angular velocities

Ωi(t + h
Eq. (28) to evaluate new translational velocities vi(t + h

2 ) are used to calculate a ﬁnal value for λ. Then this value is substituted into
2 ). The coordinates Si(t + h)
and ri(t + h) are updated according to the same rules (see Eq. (12) and the second line

of Eq. (6)) as for energy-conserving dynamics.

The existence of the generalized friction coeﬃcient λ(t) makes the time evolution

of the system to be irreversible. This coeﬃcient can accept positive as well as negative

values. As in the case of real mechanical friction, the positive values will correspond to

decreasing the total energy of the system. At negative values a portion of the energy

is transferred from the thermostat to the system.

17

IV. MD TESTS. COMPARISON WITH PREVIOUS METHODS

The system chosen was the TIP4P model of water [29] at a density of mN/V =

1 g/cm3 and temperature of T =298 K. Such a system should provide a very severe

test for rotational algorithms because of the low moments of inertia of the molecule

and the large torques due to the site-site interactions. To reduce cut-oﬀ eﬀects we

used a cubic sample of N = 256 molecules and the reaction ﬁeld geometry [30]. When

evaluating molecular forces and torques, intersite components of the TIP4P potential

were cut oﬀ and shifted to zero at the truncation point to avoid the system energy drift

associated with the passage of sites through the surface of the cut-oﬀ sphere. The cut-

oﬀ radius was at half the box length. Our MD programs were implemented in Fortran

language using double precision throughout. They were executed on a Pentium-S 120

MHz personal computer at around 0.8 s per time step. All runs were started from an

identical well equilibrated conﬁguration.

A. Energy-conserving dynamics

One of the most important tests to verify that MD simulations in microcanonical

(NVE) ensembles are proceeding correctly is the test on conservation of the total en-

ergy of the system. Since the coordinates and velocities are evaluated approximately

within a particular algorithm, the total energy will not conserve exactly. Instead, it

will oscillate around a constant level or even deviate signiﬁcantly when the numerical

solutions are produced with insuﬃcient accuracy. To reproduce features of an NVE

ensemble properly, it is necessary for the ratio Υ =

of the total energy ﬂuctuations

/

E

U

E

)2

]1/2/

E

(E

= [
h

E
averaged along the generated phase trajectory, to be no more than a few per cent. The

−h

|h

i|

U

i

i

to the corresponding ﬂuctuations

of the potential energy,

total energy E = Γ + U consists of the kinetic Γ and potential U parts. Thus, the

computation of E at time t within a leapfrog framework requires the knowledge of

on-step velocities. These velocities can be calculated using estimators (22) and (25),

where the main term

(h2) of uncertainties is in law with the second order of global

errors for our algorithm (see Appendix A).

O

18

We have made comparative tests performing MD runs on the basis of our advanced

leapfrog algorithm within quaternion and principal-axes variables, as well as all other

approaches of which we are aware. They are the ﬁfth-order Gear integrator [7], implicit

leapfrog algorithm of Fincham [24], pseudo-site formalism by Ahlrichs and Brode [20],

angular-velocity Verlet method in matrix- and quaternion-constraint schemes [21, 25],

and the atomic-constraint technique [11, 17]. All the algorithms took almost the same

computer time per step and near 97% of the total time were spent to evaluate pair

interactions.

The results obtained for the total energy ﬂuctuations

as functions of the length

E

of the NVE simulations are shown in Fig. 1 at four ﬁxed step sizes, h = 1, 2, 3 and 4 fs.

Note that a step size of 2 fs is normally used [31] to simulate water within the atomic-

constraint approach. As was expected, the Gear algorithm, being of higher-order in

truncations errors, generated more precise trajectories at tiny step sizes (h < 1 fs).

However, it seems to be unstable already for the least time step presented (h = 1 fs,

subset (a) of the ﬁgure) and leads to the worst results at greater step sizes (see, for

example, the case h = 2 fs in subset (b)). Somewhat better pattern is observed in

the Fincham’s leapfrog (marked simply ”leapfrog” in Fig. 1) and pseudo-site schemes.

But the results are rather poor at moderate and great time steps, h

2 fs (subsets

≥

(b)–(d)). Much more stable trajectories are produced by the velocity-Verlet integrator

within quaternion- and matrix-constraint schemes which exhibit similar equivalence in

the energy conservation.

One can see from the ﬁgure, only the atomic-constraint and our advanced leapfrog

algorithms can be related to long-term stable schemes. The quaternion and principal-

axes versions of the last integrator conserved the energy approximately with the same

accuracy. For this reason only the result corresponding to quaternion variables is

plotted in Fig. 1 to simplify the graph. The leapfrog trajectories have been generated

applying quasianalytical solutions (Eqs. (14) and (21)) for angular velocities. The exact

solutions obtained by means of iterations of Eq. (7) were calculated also to compare

with the quasianalytical values. No deviations between the both results have been

identiﬁed up to h = 6 fs. They diﬀered on each step by uncertainties of order round-oﬀ

errors only, so that the quasianalytical hypothesis appears to be in an excellent accord.

19

No shift of the total energy and temperature was observed during advanced leapfrog

trajectories at h

5 fs over a length of 10 000 time steps. We have obtained the

following levels of

at the end of these trajectories: 0.0016, 0.0065, 0.015, 0.029, 0.049

≤

E

and 0.10 %, corresponding to Υ

0.29, 1.2, 2.7, 5.2, 8.7 and 18 % at h = 1, 2, 3, 4,

≈

5 and 6 fs, respectively (for the system under consideration

0.56%). Therefore,

U ≈

a step size of 4 fs is still suitable for precise calculations. The greatest time steps 5

fs and 6 fs can sometimes be acceptable in actual simulations, when the precision is

not so important, for example, for the equilibration of conﬁgurations. The ratio Υ in

the interval h

5 fs can be ﬁtted with a great accuracy to the function Ch2 with the
≤
0.29 % fs−2. This is completely in line with the square growth of global

integrator) exhibited the square growth at suﬃciently small h as well. However, only

(t) at t

h. All other approaches (except the Gear

E

≫

coeﬃcient C

≈
errors and, as a consequence,

the advanced leapfrog algorithm has provided a minimum of C and, as a consequence,

the best total energy conservation.

Such a conservation can even be improved considerable applying a better estimation

of on-step velocities. Despite the usual second-order estimators (22) and (25) are in the

self-consistency with the same order of global errors, an additional portion is involved

into the main term of uncertainties increasing the coeﬃcient C with no relation to the

real accuracy of the computed trajectory. Although various more accurate estimators

are available [32] to decrease C, they increase signiﬁcantly coeﬃcients at higher powers

of h in the global errors. This makes the simulations unusable for moderate and large

step sizes. The inﬂuence of higher order terms on the long-time stability in this case

cannot be predicted analytically a priori, and should rather be measured numerically.

We have established that among higher-order estimators only the following four-point

symmetric scheme

V(t) =

1
16 h −

V(t

−

3h
2 ) + 9V(t

h

2 ) + 9V(t + h
2 )

V(t + 3h

2 )i +

−

−

(h4)

O

(31)

can be recommended for the calculation of on-step velocities V

vi, Ωi}

≡ {

within our

leapfrog framework. It is understood, of course, that mid-step velocities in the right-

hand site of Eq. (31) are already deﬁned quantities. Thus, the computation of the total

energy E at time t becomes possible, when the velocity step t + 3h

2 has been passed and

20

the potential energy U(t) (known at this stage already at t + h) has been taken from

memory. The corresponding results for

, obtained in such a way, are plotted in Fig. 1

E

by the boldest curves marked as ”modiﬁed leapfrog”. In this case, the total-energy

ﬂuctuations decrease about in 1.5 times with respect to the usual two-point scheme.

However, the retarded calculation of the total energy requires the previous potential

energy and the velocities from three previous steps to be stored in memory.

B. Canonical-ensemble simulations

In the temperature-constant (NVT) dynamics the temperature is conserved exactly

by construction and the eﬀect of increasing step sizes on the precision of produced tra-

jectories can be investigated by measuring other relevant functions of the system and

comparing them with exact quantities. In our canonical- and microcanonical-ensemble

simulations the following thermodynamic quantities were evaluated every step and av-

eraged: total energy, potential energy, temperature, speciﬁc heat at constant volume,

and mean-square forces and torques. The structure of the TIP4P water was inves-

tigated by determining the oxygen-oxygen and hydrogen-hydrogen radial distribution

functions (RDFs). Center-of-mass (CM) and angular-velocity (AV) time autocorrela-

tion functions (TAFs) were also found. Orientational relaxation was studied by evalu-

ating the molecular dipole-axis (DA) autocorrelations. To reduce statistical noise, all

the measurements were taken over 20 000 time steps. The NVE simulation, performed

within the atomic-constraint technique at h = 2 fs, was considered as a benchmark

against which other algorithms and step sizes are to be compared.

First of all, to ﬁnish the discussion with the NVE integrators, we report that devi-

ations in all the measured functions with respect to their benchmark values were in a

complete agreement with the corresponding relative deviations Υ in the total energy

conservation. For example, the results obtained with the help of the advanced leapfrog

algorithm at h = 2 fs were indistinguishable from the benchmark ones. At the same

time, they diﬀered as large as around 5%, 10% or even 20% with increasing the time

step to 4 fs, 5 fs or 6 fs, respectively, however, these diﬀerences were smaller than in

the case of other integrators. Therefore, there is a little point in pursuing the energy-

21

conserving algorithms to time steps larger than 5 fs because the deviations become

evident.

What about the NVT simulations? They have been performed using explicit

and implicit algorithms [24] as well as the advanced leapfrog integrator within the

quaternion representation. To our knowledge, no other temperature-constrained al-

gorithms of rotational motion are available. The mean values

of the poten-

U

h

i

tial energy and the speciﬁc heat per particle of the system at constant volume

CV = ∂

E

iV /∂T = kB[3N + (
h

h

U 2

i − h

and their relative deviations from the benchmark values

U

i

2)/(kBT )2], obtained at diﬀerent time steps,
= 41.09 kJ mol−1 and

U

h

i

CV /NkB = 10.48 are collected in Table 1. As can be seen, the results for the explicit

algorithm are rather unsatisfactory. For instance, at h = 4 fs it has produced an

anomalously ordered state of water with a lower energy and very large speciﬁc heat. A

signiﬁcantly better pattern is observed in the case of the implicit algorithm in agree-

ment with conclusions of paper [24]. Turning to the advanced algorithm, it is clear

that even with the very large time step of 10 fs, the thermodynamic results agree with

the benchmark within a percent or two. No drift of the potential energy and other

investigated quantities was identiﬁed for the advanced algorithm at h

10 fs. Some-

≤

what greater deviations in CV at small step sizes can be explained by the inﬂuence of

statistical noise due to the ﬁniteness of the observation time. At the ﬁxed number of

time steps, such an inﬂuence increases with decreasing h.

Correlation functions, calculated during the usual implicit [24] and advanced NVT

integrations at diﬀerent step sizes (h = 2–10 fs) are shown in Fig. 2 in comparison with

the benchmark results. In the case of the advanced integrator, the RDFs are practically

identical with the benchmark at h

8 fs as are CM, AV and DA TAFs. Note that these

≤

functions at h = 4 and 6 fs coincide completely with those corresponding to h = 2 fs

and they are not shown in subsets (a)–(c), to simplify the graph. The deviations of the

time correlation functions within the usual implicit algorithm are clearly worse. The

orientational correlation function (see subset (d)) is to show a systematic discrepancy

in this case. For instance, these deviations at h = 4 fs are as big as those obtained

during the advanced leapfrog integration at h = 8 fs. Therefore, the last approach

allows a step size approximately twice larger than the usual implicit integrator. This is

22

very important in actual simulations of large systems, because small step sizes require

more expensive computer time to cover the required volume in phase space. A reason

of this gain in time is due to applying the mid-step, instead of on-step, scheme for

the conservation of temperature. This avoids additional uncertainties caused by using

estimators for on-step velocities. As can be seen from the Fig. 2, the advanced leapfrog

integrator allows to be used even with a huge time step of 10 fs, given that then there

is no detectable diﬀerence in RDFs and the CM and AV TAFs are also close.

In the advanced NVT algorithm, the principal angular velocities converged at each
step to a relative tolerance of 10−6 in average from 5 to 10 iterations with varying the

step size from 2 fs to 10 fs. Our calculations were carried out with the tolerance of
10−10 that required to perform in average from 8 till 16 iterations for h = 2–10 fs.

This contributed a negligible small portion additionally into the total computer time.

The convergence of the iterations was observed up to h = 12 fs. For the usual implicit

leapfrog algorithm, the standard iterative procedure for quaternion components begins

to diverge already at h > 8 fs. To handle the simulations in this case, special eﬀorts

for the convergence has been applied.

In view of the results obtained in this subsection, we can stay that at present time

the interval of 10 fs should be considered as an upper step size in reliable NVT simula-

tions on water at room temperatures. Can this practical limit be improved in future,

for example, by using a better numerical integrator? Such an improvement looks rather

doubtful for the following reason. It is quite evident that an arbitrary numerical scheme

will work properly at such values h of the time step when the increments in coordi-

nates and velocities during this step are much smaller than the characteristic lengths:

a molecular diameter, d = 2 maxa(∆2

a)1/2, an angle of 1 radian, heat translational,
v = (3kBT /m)1/2, and rotational Ω = (kBT (1/JX + 1/JY + 1/JZ))1/2 velocities, i.e.,

when

[ri(t + h)

ri(t)]2

h

−
ϕ2

h

i (t, h)

d2 ,

1 ,

i ≪

i ≪

[vi(t + h)

h
[Ωi(t + h)

vi(t)]2

Ωi(t)]2

−

−

i ≪

i ≪

v2 ,

Ω2 .

h

(32)

Therefore, to estimate an upper theoretical limit h∗ for the step size,

it is neces-

sary to increase h and observe when at least one of four inequalities in (32) will

23

break completely.

In water, the translational dynamical variables are much slower

with respect to fast orientational degrees of freedom. Further, owing to the low

moments of inertia of the molecule and the large torques, only the last condition
[Ωi(t+h∗)
Ω2 really will participate in the
h
−
deﬁnition of h∗. Our computations, performed with the help of the advanced leapfrog

[Ωi(t+ 1

2h∗)]2

Ωi(t)]2

2h∗)

Ωi(t

i ∼

−

−

=

h

i

1

integrator using the tiny step size of 1 fs to reduce the inﬂuence of truncation errors
to a minimum, have showed that this condition is fulﬁlled just as far as h∗

10 fs.

∼

Even if we imagine a hypothetical situation when the equations of motion are solved

exactly at arbitrary h, the simulations with step sizes greater than 10 fs may have

not so important meaning in practical applications. This is so, because relevant time

correlation functions decay during the 10 fs period in a characteristic way (for exam-

ple, the AV TAF decreases more than twice). Then, such a time discreteness will lead

to the loss of information about these functions at molecular length scales, resulting

in a distorting of investigated quantities such as the rotational diﬀusion coeﬃcient,

frequency-dependent dielectric permittivity and others.

V. SUMMARY

We have formulated a new approach for the numerical integration of the equations

of motion for systems with interacting rigid bodies. Unlike other standard methods,

the principal angular velocities are involved directly into the integration within our ap-

proach. The algorithm derived is categorized as a rotational leapfrog, since the variables

saved are mid-step angular velocities and on-step orientational positions. The orien-

tations can be expressed in terms of either quaternions or entire rotational matrices.

The propagation of velocity- and orientation-dependent quantities to the corresponding

middle time points was done using a simple averaging over the two nearest neighboring

values that is in the spirit of the leapfrog idea as well. As a result, the following signiﬁ-

cant beneﬁts have been achieved: (a) the exact conservation of rigid structures appears

to be an intrinsic feature of the algorithm, and (b) all the evaluations are performed

analytically, without involving any iterative procedures. The relative simplicity of the

angular-velocity scheme has made possible also to introduce a thermostatted version

24

and resolve a problem on the integration of motion for polyatomic molecules with

charged sites in the presence of an external inhomogeneous electromagnetic ﬁeld.

It has been shown on the basis of an actual computer experiment on water that the

algorithm presented exhibits noticeably better stability properties than those observed

in all other rigid-motion integrators known. Being thermostatted it has allowed to

reproduce correct results with time steps which are very close to the upper theoretical

limit. The algorithm can easily be implemented for arbitrary rigid bodies and substi-

tuted into existing program codes. It seems to be the best choice for long term and

great step size MD simulation of large systems with rigid polyatomic molecules.

Acknowledgements. The author would like to acknowledge ﬁnancial support by

the President of Ukraine.

25

Appendix A. Local and global errors

The order of approximation for algorithms appears to be not so simple question, which

was very confused and persistently misinterpreted in the literature. An interesting analysis

of this problem was recently done [33] for the translational-motion leapfrog algorithm. In

particular, it has been concluded that contrary to the conventional point of view, the order

of local errors for this leapfrog is four rather than three for both coordinates and velocities

due to a fortunate cancellation of truncation errors during two neighboring time steps. Such

a conclusion was based on the fact that any trajectory produced by the standard leapfrog

scheme (6) satisﬁes the relations

vi(t + 3h

2 ) = 2vi(t + h
2 )
ri(t + 2h) = 2ri(t + h)

h
2 ) + h [fi(t + h)
vi(t
ri(t) + h2 fi(t + h)/m .

−

−

fi(t)]/m ,

−

−

(A1)

It can be veriﬁed easily that the predictors given by Eq. (A1) are accurate to fourth order in

time step with respect to truncation errors. The second line of Eq. (A1) exactly represents

the well-known St¨ormer formula, whereas the ﬁrst one can be considered as its velocity analog

within the same fourth-order accuracy (note that h [fi(t + h)

fi(t)] = h2 ˙fi(t + h/2) +

(h4)).

O

−

Using Eqs. (7) and (11), similar relations can be obtained for orientational variables,

Ωi(t + 3h

2 ) = 2Ωi(t + h
2 )
Si(t + 2h) = 2Si(t + h)

h

2 ) + h J−1[Li(t + h)

Ωi(t
Si(t) + h2 Ξi(t + h) ,

−

−

Li(t)] ,

−

−

where Li is deﬁned according to Eq. (26) and

Ξi(t + h) = n[I

−
+[I+ h

h

2 )]

2 Hi(t + 3h
2 Hi(t + h
2 )]

−1[I + h
−1[I

h

2 Hi(t + 3h
2 Hi(t + h

2I
2 )]
2 )]oSi(t + h)/h2 .

−

−

(A2)

(A3)

These relations are also fourth order and, thus, the same order for local errors is reproduced

for Si and Ωi too within our advanced leapfrog scheme, despite the second order of propaga-

tions (8) and (10). The reason for this results again from a cancellation of errors arising in

coordinates and velocities during the integration process. Such an increasing of order of the

approximation should be considered as an additional positive feature of the algorithm which

can explain its long-term stability properties.

Equalities (A2) are, in fact, variants of the same St¨ormer formula within

(h4) accuracy.

O

Indeed, let Ui(t) = Ki(t) + W(Ωi(t))JΩi(t) be the exact full torque acting on molecule i at

time t, where J denotes the diagonal matrix of principal moments of inertia. Then replacing

this function by its approximate counterpart Li(t), we involve errors of order

(h2), i.e.,

O

26

Ui(t)
−
h2 ˙Ui(t + h

Li(t) =

(h2), whereas h[Li(t + h)

Li(t)] = h[Ui(t + h)

Ui(t)] +

(h4) =

O
(h4). Further, expanding the right-hand side of Eq. (A3) into Taylor series

O

−

−

2 ) +

O

with respect to h and neglecting terms of order
i (t + h

−

2 ))/h + (H2

(Hi(t + h
3h
2 )
where ¨Si(t + h) = d
dt
with ˙Ωi(t + h) = J−1Ui(t + h).

i (t + 3h
˙Si(t + h) = d

(h2) and higher yields Ξi(t + h) = [(Hi(t +
(h2),

(h2) = ¨Si(t + h) +

O
2 ) + (H2
2 ))/2]Si(t + h) +
dt (Hi(t + h)Si(t + h)) = [H( ˙Ωi(t + h)) + H2

i (t + h)]Si(t + h)

O

O

The local errors are only a part of the story, because they accumulate step by step

thus producing so-called global errors. For the translational leapfrog algorithm it has been

shown [33] that the characteristic square growth in global deviations of the total energy

with increasing the step size can be a result of additional interpolation errors appearing in

second-order estimator (22) of on-step kinetic energy with no relation to the accuracy of the

computed trajectory. If higher order estimators (like (31)) are used, the global error in the

total energy must be between

(h2) and

(h3) but it depends upon speciﬁc properties of the

O

O

equations of motion. This conclusion is valid for the advanced angular-velocity algorithm as

well. The last statement can brieﬂy be grounded as follows.

First of all, it is worth remarking that equations (6) and (A1) as well as Eqs. (7), (8), (11)

and (A2) are not equivalent. Eqs. (A1) and (A2) provide a leapfrog solution only if initial

h

values for the pairs
2 ), Ωi(t + h
2 )
}
a completely non-leapfrog trajectory can be produced by (A1) and (A2) (for example, the

h
2 )
}
math Eqs. (6), (7), (8) and (11). Starting from arbitrary initial conditions,

ri(t+h), Si(t+h), vi(t+

ri(t), Si(t), vi(t

h
2 )), Ωi(t

P1 ≡ {

P2 ≡ {

and

−

−

matrices Si(t+2h) can be not orthonormal in this case). For the same reason, we should treat

O

the point

the increasing order of truncation errors to four in somewhat conditional meaning. Indeed, let
P1 belongs the exact trajectory. Then at the start of the integration process (A1)
P2, according to the single leapfrog step, will be localized in phase space
(h3) and these errors in its turn will be transferred step by step in

within errors of order

and (A2) the point

the produced trajectory. Therefore, we can talk about

the exact trajectory which was perturbed initially by

(h4) local deviations with respect to

O
(h3) uncertainties. To reach the pure

O

third order in global errors of energy, such a perturbation must be avoided. This requires

states

P1 and

that the exact trajectory passes (at least within

(h4) accuracy) through the both leapfrog
P2. However, since we have only two translational and two rotational ﬁrst-
order equations of motion per molecule, this exact solution does not necessarily exist. In the
P1, one can ﬁt precisely either the leapfrog
vi(t + h
2 ), Ωi(t + h
to the corresponding
2 )
{
}

general case, even specially choosing initial point

or velocities

coordinates

O

ri(t + h), Si(t + h)
}
{
exact values.

27

Appendix B. The integration in the presence of external ﬁelds

Consider, ﬁnally, how to perform the integration in the presence of external electromag-

netic ﬁelds. The electric ﬁeld E(r, t) involves additional terms, f E

i , t) and
ri) with ea being the charge of site a, which must be in-

i (t) =

P

M
a eaE(ra

KE

i (t) = Ai(t)

M
a eaE(ra

i , t)×(ra

P

i −

cluded correspondingly into the usual molecular forces fi(t) and principal torques Ki(t) caused

by interparticle interactions. These terms can easily be evaluated at time t using translational

ri(t) and orientational Si(t) coordinates. Analogous terms involved by the magnetic ﬁeld
B(r, t) and needed for the inclusion as well are: fB(vi(t), Ωi(t), t) = 1
M
and KB(vi(t), Ωi(t), t) = Ai(t) 1
a ea[va

i (t)×B(ra
ity. They depend on both translational and angular velocities, because velocities of individ-

M
a eava
i , t)
ri), where c is the light veloc-

i (t)×B(ra

i , t)]×(ra

c P

c P

i −

ual atoms va

i are evaluated using the velocity due to rotation alone, determined in the body
frame, then transformed into the lab frame and added to the velocity of the center of mass:
i (t) = vi(t) + A+
va

i (t) [Ωi(t)×∆a].
Collecting the free-motion contributions (Jβ −

Jγ)Ωi

βΩi

γ ≡

[W(Ωi)JΩi]α of the torques to-

gether with the magnetic-ﬁeld terms into the vector M(vi(t), Ωi(t), t) = KB(vi(t), Ωi(t), t) +

W(Ωi(t))JΩi(t), the velocity part of the algorithm can be proceeded as follows

v(n+1)
i

(t + h

2 ) = vi(t

m [fi(t) + f E

i (t) + f (n)

B (t)] ,

Ω(n+1)
i

(t + h

2 ) = Ωi(t

hKi(t) + KE

i (t) + M(n)(t)i ,

h

2 ) + h
2 ) + hJ−1

h

−

−

where

f (n)
B (t) =

M(n)(t) =

1
2 hfB(vi(t
−
1
2 hM(vi(t

−

h
2 ), Ωi(t

−

h
2 ), Ωi(t

−

h

2 ), t) + fB(v(n)

i

(t + h

2 ), Ω(n)

i

(t + h

2 ), t)i ,

h

2 ), t) + M(v(n)

i

(t + h

2 ), Ω(n)

i

(t + h

2 ), t)i

(B1)

(B2)

are the propagation for velocity-dependent parts of the forces and torques to on-step levels of

time. Equalities (B1) lead to a system of six coupled equations per molecule for six unknowns,
namely, for three components of translational vi(t + h

2 ) velocities. The
system can now be solved using iterations (n = 0, 1, . . .) separately for each molecule and
2 ) and Ω(0)
putting initially v(0)
h
2 ). The evaluation of
coordinates ri(t + h) and Si(t + h) is performed in view of the second line of Eq. (6) and

2 ) and angular Ωi(t + h

2 ) = Ωi(t

2 ) = vi(t

i (t + h

(t + h

−

−

h

i

Eq. (12), i.e., quite analogously to the case when electromagnetic ﬁelds are absent.

28

REFERENCES

[1] H. Goldstein, Classical Mechanics (Addison-Wesley, Reading, Massachusetts,

1980).

[2] J. Barojas, D. Levesque, and B. Quentrec, Simulation of diatomic homonuclear

liquids, Phys. Rev. 1092, A 7 (1973).

[3] D. Levesque, J.J. Weis, and G.N. Patey, Fluids of Lennard-Jones spheres with

dipoles and tetrahedral quadrupoles. A comparison between computer simulation

and theoretical results, Mol. Phys. 333, 51 (1984).

[4] D.J. Evans, On the representation of orientation space, Mol. Phys. 317, 34 (1977).

[5] M.P. Allen and D.J. Tildesley, Computer Simulation of Liquids (Oxford Science

Press, Oxford, 1987).

Press, Cambridge, 1995).

[6] D.C. Rapaport, The Art of Molecular Dynamics Simulation (Cambridge University

[7] C.W. Gear, Numerical Initial Value Problems in Ordinary Diﬀerential Equations

(Prentice-Hall, Engelwood Cliﬀs, NJ, 1971).

[8] A. Rahman and F.H. Stillinger, Molecular dynamics study of liquid water, J.

Chem. Phys. 3336, 55 (1971).

[9] D.J. Evans and S. Murad, Singularity free algorithm for molecular dynamics sim-

ulation of rigid polyatomics, Mol. Phys. 327, 34 (1977).

[10] J.P. Ryckaert and A. Bellemans, Molecular dynamics of liquid n-butane near its

boiling point, Chem. Phys. Lett. 123, 30 (1975).

[11] G. Ciccotti, M. Ferrario, and J.P. Ryckaert, Molecular dynamics of rigid systems

in cartesian coordinates. A general formulation, Mol. Phys. 1253, 47 (1982).

[12] L. Verlet, Computer experiments on classical ﬂuids. I. Thermodynamic properties

of Lennard-Jones molecules, Phys. Rev. 98, 159 (1967).

[13] W.C. Swope, H.C. Andersen, P.H. Berens, and K.R. Wilson, A computer sim-

29

ulation method for the calculation of equilibrium constants for the formation of

physical clusters of molecules: Application to small water clusters, J. Chem. Phys.

637, 76 (1982).

Graw-Hill, New York, 1981).

[14] R.W. Hockney and J.W. Eastwood, Computer Simulation Using Particles (Mc-

[15] D. Beeman, Some multistep methods for use in molecular dynamics calculations,

J. Comput. Phys. 130, 20 (1976).

[16] G.D. Venneri and W.G. Hoover, Simple exact test for well-known molecular dy-

namics algorithms, J. Comput. Phys. 486, 73 (1987).

[17] J.P. Ryckaert, G. Ciccotti, and H.J.C. Berendsen, Numerical integration of the

Cartesian equations of motion of a system with constraints: Molecular dynamics

of n-alkanes, J. Comput. Phys. 327, 23 (1977).

[18] H.C. Andersen, Rattle: a ‘velocity’ version of the shake algorithm for molecular

dynamics calculations, J. Comput. Phys. 24, 52 (1983).

[19] B.J. Leimkuhler and R.D. Skeel, Symplectic numerical integrators in constrained

Hamiltonian systems, J. Comput. Phys. 117, 112 (1994).

[20] R. Ahlrichs, and S. Brode, A new rigid motion algorithm for MD simulations,

Comput. Phys. Commun. 59, 42 (1986).

[21] I.P. Omelyan, Numerical integration of the equations of motion for rigid poly-

atomics: The matrix method, Comput. Phys. Commun. 171, 109 (1998).

[22] A. Kol, B. Laird, and B. Leimkuhler, A symplectic method for rigid-body molecular

simulation, in Numerical Analysis Reports (University of Cambridge, DAMTP

1997/NA5), 19 p.

[23] D. Fincham, An algorithm for the rotational motion of rigid molecules, CCP5

Information Quarterly 6, 2 (1981).

[24] D. Fincham, Leapfrog rotational algorithms, Mol. Simul. 165, 8 (1992).

30

[25] I.P. Omelyan, On the numerical integration of motion for rigid polyatomics: The

modiﬁed quaternion approach, Computers in Physics 97, 12 (1998).

[26] I.P. Omelyan, Algorithm for numerical integration of the rigid-body equations of

motion, Phys. Rev. E 1169, 58 (1998).

[27] D. Fincham, Choice of time step in molecular dynamics simulations, Comput.

Phys. Commun. 263, 40 (1986).

[28] D. Brown and J.H.R. Clarke, A comparison of constant energy, constant tempera-

ture and constant pressure ensembles in molecular dynamics simulations of atomic

liquids, Mol. Phys. 1243, 51 (1984).

[29] W.L. Jorgensen, J. Chandrasekhar, J.D. Madura, R.W. Impey, and M.L. Klein,

Comparison of simple potential functions for simulating liquid water, J. Chem.

Phys. 926, 79 (1983).

Phys. Lett. A 295, 223 (1996).

[30] I.P. Omelyan, On the reaction ﬁeld for interaction site models of polar systems,

[31] D. Bertolini and A. Tani, Generalized hydrodynamics and the acoustic modes of

water: Theory and simulation results, Phys. Rev. E 1091, 51 (1995).

[32] M. Amini and D. Fincham, Evaluation of temperature in molecular dynamics

simulation, Comput. Phys. Commun. 313, 56 (1990).

[33] A.K. Mazur, Common molecular dynamics algorithms revisited: Accuracy and

optimal time steps of St¨ormer-leapfrog integrators, J. Comput. Phys. 354, 136

(1997).

31

Table 1. Thermodynamic results for the TIP4P water using explicit, implicit and

advanced rotational algorithms incorporating the temperature constraint T = 298 K

Explicit

Implicit

Advanced

h/fs Value

Dev.(%)

Value

Value
POTENTIAL ENERGY / kJ mol−1

Dev.(%)

Dev.(%)

2
4
6
8
10
12

2
4
6
8
10
12

-41.28
-46.87
-41.83
-39.45
-37.74
-34.20

16.41
438.35
52.94
10.87
12.15
53.66

0.5
14
1.8
4.0
8.2
17

57
4083
405
3.7
16
412

-40.99
-40.73
-40.22
-39.51
-38.36
-35.07

8.87
9.89
9.89
10.11
11.46
16.59

0.2
0.9
2.1
3.8
6.6
15

15
5.6
5.6
3.5
9.4
58

-41.26
-41.21
-41.23
-41.44
-41.98
-43.77

9.76
9.93
10.28
10.35
10.47
12.75

0.4
0.3
0.3
0.9
2.2
6.5

6.9
5.2
1.9
1.2
0.1
22

SPECIFIC HEAT at constant volume / NkB

32

Figure captions

Fig. 1. The total energy ﬂuctuations as functions of the length of the NVE simu-

lations on the TIP4P water, performed in various techniques at four ﬁxed time steps:

(a) 1 fs, (b) 2 fs, (c) 3 fs and (d) 4 fs.

Fig. 2. Oxygen-oxygen (O-O) and hydrogen-hydrogen (H-H) radial distribution

functions (a), center-of-mass (b) and and angular-velocity (c) time autocorrelation

functions, and orientational relaxation (d), obtained in NVT simulations of the TIP4P

water. The results corresponding to the step sizes h = 2, 8 and 10 fs are plotted by bold

solid, short-dashed and thin solid curves, respectively. Additional long-short dashed

and dashed curves in (d) correspond to the cases of h = 4 and 6 fs. The sets of curves

related to the usual implicit and advanced leapfrog algorithms are labeled as ”U” and

”A”, respectively. The result of the usual implicit algorithm is presented in (c) by

long-dashed curve for h = 10 fs only to simplify the graph. The benchmark data are

shown as open circles. Note that the advanced-algorithm curves are indistinguishable

in (d) at h = 2, 4 and 6 fs.

33

