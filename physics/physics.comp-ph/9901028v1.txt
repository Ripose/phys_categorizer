9
9
9
1
 
n
a
J
 
8
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
8
2
0
1
0
9
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

On the numerical integration of motion for rigid

polyatomics: The modiﬁed quaternion approach

Igor P. Omelyan

Institute for Condensed Matter Physics, National Ukrainian Academy of Sciences,

1 Svientsitsky St., UA-290011 Lviv, Ukraine. E-mail: nep@icmp.lviv.ua

Abstract

A revised version of the quaternion approach for numerical integration of the

equations of motion for rigid polyatomic molecules is proposed. The modiﬁed ap-

proach is based on a formulation of the quaternion dynamics with constraints. This

allows to resolve the rigidity problem rigorously using constraint forces. It is shown

that the procedure for preservation of molecular rigidity can be realized particu-

larly simply within the Verlet algorithm in velocity form. We demonstrate that

the presented method leads to an improved numerical stability with respect to the

usual quaternion rescaling scheme and it is roughly as good as the cumbersome

atomic-constraint technique.

1

1 Introduction

Many models of statistical mechanics deal with systems composed of classical rigid

molecules. The method of molecular dynamics (MD) is widely applied for studying such

systems. All known MD techniques appropriate to simulate molecular liquids can be split

into three main approaches.

In the ﬁrst two approaches, time evolution of the system

is considered in view of translational and rotational motions. These approaches diﬀer

between themselves by parameters which are used to represent the rotational degrees of

freedom. In the classical scheme [1, 2], an orientation of the molecule is deﬁned in terms

of three Eulerian angles. As is well known [3], the equations of motion are singular in this
case. To avoid the singularities, Barojas et al [4, 5] have used two diﬀerent sets of the

Eulerian angles, each of which is applied in dependence on the orientation of the molecule.

However, this procedure involves additional complex transformations with transcendental

functions.

In the second approach the rotation motion of a molecule is described without involving

Eulerian angles. Cheung [6] has shown how to remove the singularities using special

properties of diatomic molecules. For these molecules, Singer [7] has derived rotational

equations of motion in terms of radius-vectors passed from one atom to another within

the same molecule. An extension of this scheme to triatomic molecules was considered
also [8, 9]. An alternative scheme has been proposed by Evans et al [10–12], where using

so-called quaternions [3, 13, 14] leads to a singularity free algorithm for rigid polyatomics.
In the third approach, proposed originally by Ryckaert et al [15], the cartesian equa-

tions of motion are applied with respect to individual atoms. The total force on a particle

appears as the sum of the force deriving from the potential energy and the force arising

due to holonomic constraints. These atomic constraints must be in part rigid bonds in

part linear relations to provide the rigidness of arbitrary polyatomics [16].

Apart from removing singularities a beneﬁt derived from the last two approaches lies

in the avoidance of time-consuming trigonometric functions. However, on integrating

the equations of motion numerically, one additional diﬃculty appears here, namely, the

problem of exact conservation of molecular rigidity. In the usual integration algorithms

the rigidity can not be conserved with the precision better than that of evaluating the

atom trajectories. For overcoming this drawback, it is necessary either to perform the

rescaling of quaternions [11] or, within the atomic-constraint technique, to ﬁnd solutions

for a complete system of nonlinear equations [15, 16] at each step of the integration.

2

From the aforesaid, a natural question appears about the existence of a scheme which

is free of all these drawbacks and yet has all advantages inherent in the mentioned above

approaches. In the present paper we develop the idea of using quaternions to treat rota-

tional motion. Section 2 is devoted to a general formulation of the quaternion dynamics

with constraints. Applications of this approach to particular algorithms are considered

in Sec. 3. The problem of how to adapt the Verlet algorithm to integrate the quaternion

equations of motion is also solved there. In Sec. 4 various approaches are compared and

discussed. Some concluding remarks are given in Sec. 5.

2 Quaternion dynamics with constraints

We consider a system of N identical rigid molecules with mass m, composed of M

point atoms.

In the molecular approach, evolution of the system in time is separated

into translational and rotational motions. The translational motion is applied to the

molecule as a whole and can be described by the 3N (i = 1, . . . , N) Newton equations
m d2ri
i are the positions of the center of mass and
atom a of molecule i in the laboratory ﬁxed coordinate system L, respectively, and F ab
ij

j|), where ri and ra

N ;M
j;a,b F ab

dt2 =

i − rb

ij (|ra

P

are the atom-atom forces between two diﬀerent molecules.

2, ui

In order to analyze rotational motions, we introduce the sets e ≡ (e1, e2, e3) and
1, ui
(ui
3) = Aie of orthogonal unit vectors characterizing the L-system and the moving
coordinate system Si attached to molecule i, respectively, where Ai is a rotational matrix.
The angular velocity Ωi of the i-th molecule is deﬁned as dui
components, Ωi

α. The principal
3 = Ωi, of angular velocities (i = 1, . . . , N) obey the 3N

α/dt = Ωi×ui

1 + Ωi

2 + Ωi

3ui

2ui

1ui
Euler equations [1]:

Jα

dΩi
α
dt

= K i

α(t) +

Jβ − Jγ

Ωi

β(t)Ωi

γ(t) ,

(cid:16)

(cid:17)

(1)

2ui

1ui

3ui

1 + K i

2 + K i

where (α, β, γ) = (1, 2, 3); (2, 3, 1) and (3, 1, 2). Here J1, J2 and J3 are the moments
N ;M
j;a,b δa
3e3 =
3 is the torque exerted on molecule i with respect to its center of
i − ri. Let
3) be a vector-column of positions for atom a within the molecule in the
2ui
1 + ∆a
1ui
i = ∆a
3. Then the positions of atoms in the L-system
i (t) = ri(t) + A+
i (t)∆a, where A+ denotes the matrix transposed to A.

of inertia along principal axes of the molecule,
K i
mass due to the interactions with the other molecules, Ki = Aiki and δa
∆a = (∆a
2, ∆a
Si-system, i.e., δa
at time t are ra

1e1 + ki

2e2 + ki

ij = ki

2 + ∆a

i = ra

×F ab

1, ∆a

3ui

P

i

3

It is a common practice to deﬁne an orientation of the Si-system with respect to

the laboratory frame in terms of three Eulerian angles. A numerical integration of the

corresponding equations of motion has been performed in early investigations [1, 2]. As

was soon realized, however, this procedure is very ineﬃcient because of the singularities

whenever the azimuthal angle of a molecule takes the value 0 or π [11]. It has been shown

in later investigations [10, 11] that at least four orientational parameters per molecule

(quaternion) must be used to avoid the singularities.

The orientational matrix Ai = A(qi) in terms of the quaternion qi ≡ (ξi, ηi, ζi, χi) is

given by [10, 11]:

A(qi) = 






velocity as follows

−ξ2

i + χ2
i

i − ζ 2
i + η2
−2(ξiηi + ζiχi)

2(ηiζi − ξiχi)

2(ζiχi − ξiηi)
i − η2
i − ζ 2
ξ2
−2(ξiζi + ηiχi) −ξ2

i + χ2
i

2(ηiζi + ξiχi)

2(ηiχi − ξiζi)
i + ζ 2
i − η2

i + χ2
i

(2)









and the time derivative of the quaternion is expressed via principal components of angular

˙qi ≡

˙ξi
˙ηi
˙ζi
˙χi























−ζi −χi

ηi

ξi

=

1
2

χi −ζi −ξi ηi

ξi

ηi

χi

ζi

−ηi

ξi −ζi χi












Ωi
1
Ωi
2
Ωi
3

0


































≡

Q(qi)Ωi ,

(3)

1
2

where the matrix Q is the function of qi. It is worth to underline that the matrix A
is a rotational one if the quaternion satisﬁes the equality q2
i = 1.

i = ξ2

i + χ2

i + η2

i + ζ 2

Diﬀerentiating the relation (3) over time yields

¨qi =

Q( ˙qi)Ωi + Q(qi) ˙Ωi

,

(cid:17)

1
2

(cid:16)

(4)

where Ωi = 2Q−1(qi) ˙qi. It is trivial to ﬁnd that the inverse matrix Q−1 = Q+ since
the 4 × 4 matrix Q is orthogonal when q2
i = 1. We have augmented the angular velocity
· ˙qi = ξi ˙ξi + ηi ˙ηi + ζi ˙ζi + χi ˙χi = 0

vector to involve square matrices using the result qi
which follows from the equality q2

i = 1.

Then, using the Newton and Euler equations (1), we obtain the coupled set of 7N
second-order diﬀerential equations of motion F ({ri, ¨ri, qi, ˙qi, ¨qi}) = 0 in terms of the 7N
generalized coordinates {ri, qi}. If an initial state {ri(t0), ˙ri(t0), qi(t0), ˙qi(t0)} is speciﬁed,
the evolution {ri(t), qi(t)} of the system can be unambiguously determined.

4

Let us look for an analytical solution of the quaternion equations of motion by writing

qi(t) =

q(p)
i (t0)

(t − t0)p
p!

,

P

p=0
X

(5)

where q(p)

i (t0) denotes the p -fold time derivative of qi at time t0.

It is easy to check

from the structure of equation (3) that arbitrary-order time derivatives of the quaternion
· ¨qi = 0 and so on.
constraint σi(t) ≡ q2
Therefore, if all terms (P → ∞) of the Taylor’s expansion (5) are taken into account and

i (t) − 1 = 0 are equal to zero, i.e., qi

· ˙qi = 0, ˙q2

i + qi

initially all the constraints are satisﬁed, σi(t0) = 0, they will be fulﬁlled at later times

as well.

In practice, however, the equations of motion are not solved exactly, so that

these constraints will only be satisﬁed approximately. Let the integration algorithm used
involves an error in the coordinates of order ∆tP +1, where ∆t = t − t0 is the time step.

In the simplest case of Taylor’s expansion (5), this is the order of the ﬁrst omitted term.

Then the same order of uncertainties will be accumulated at each time step in conservation
of the molecular rigidity, i.e., σi(t) = O(∆tP +1). In such a case, molecules are collapsed

or even destroyed in time. In the usual version [11] of the quaternion method, to achieve

the required rigidity at all times, it was proposed to multiply each quaternion component,

associated with the same molecule, on the common factor 1

q2

i at every time step of

the numerical integration (the so-called rescaling scheme).

.q

We consider now the question how to replace the crude quaternion renormalization

by a more natural procedure in the framework of a systematic approach. The fact that

quaternion components are not independent, requires, in general, the necessity of intro-
ducing additional forces, namely, f i(t) = −λi(t)∇qiσi(t) = −2λi(t)qi(t), which appear as
a result of the constraints. These virtual quaternion-constraint forces should be added to

the equations of motion (4) and, as a consequence, they modify the solution (5) as follows

qi(t) =

q(p)
i (t0)

P

p=0
X

(t − t0)p
p!

+

P

p=2
X

f (p−2)
i

(t0)

(t − t0)p
p!

,

(6)

where f (p−2)
tives of constraint forces, λ(0)

(t0) = −2

p−2
k=0 C k

P

i

p−2λ(k)

i (t0)q(p−2−k)

i

(t0) denote the (p − 2)-fold time deriva-

i (t0) is a value of the Lagrange multiplier λi(t), and λ(k)

i (t0)

are its k-fold time derivatives (k = 1, . . . , P − 2) at time t0. Diﬀerentiating (6), we obtain
l-fold time derivatives (l = 0, . . . , P − 2) of qi at time t:

q(l)
i (t) =

q(p)
i (t0)

P

Xp=l

(t − t0)p−l
(p − l)!

− 2

P

p−2

Xp=max{2,l}

Xk=0

p−2λ(k)
C k

i (t0)q(p−2−k)

i

(t0)

(t − t0)p−l
(p − l)!

.

(7)

5

In order to computer P − 1 unknowns λ(k)
i (t0), we have merely to exploit the information
contained in the constraint σi(t) ≡ qi(t)2 − 1 = 0. As this holds at any time, at least the
ﬁrst P − 2 time derivatives of σi(t) must vanish. Then one obtains (p = 1, ..., P − 2):

σ(p)
i (qi(t)) ≡

dp
dtp σi(t) = 2

P −1

Xk=0

p−1q(k)
C k

i (t)q(p−k)

i

(t) = 0 .

(8)

In view of explicit expressions (7), the conditions (8) together with the basic con-

straints q2
respect to the same number of unknowns λ(k)

i (t) = 1 constitute a system of P − 1 nonlinear equations per molecule with
i (t0). The equations can be linearized and

solved in a quite eﬃcient way by iteration. This is justiﬁed for ∆t → 0 because then
the terms nonlinear in λ(k)
by substituting λ(k)
i (t0) = 0 in all nonlinear terms, and iterations always converge rapidly
to the physical solutions λ(k)
i (t0) ∼ ∆tP −k−1. The contributions of quaternion-constraint
forces into the quaternion dynamics (6) are of order ∆tP +1, i.e., the same order as un-

i (t0) are small. Thus the iteration procedure can be initiated

certainties of the integration algorithm (5), but the rigidity is now fulﬁlled perfectly for

arbitrary times in future. It is worth emphasizing that these forces are imaginary and

depend on details of the numerical integration in a characteristic way, contrary to the real

bond forces in the atomic-constraint dynamics [15, 16]. They vanish if the equations of

rotational motion are solved exactly.

3 Applying actual algorithms

3.1

Integration within the Gear method

Usually, the Gear predictor-corrector algorithm [17, 18] is applied to integrate the

equations of rotational motion [1, 11, 12]. In particular, it has been used [11, 12] for the in-

tegration of the quaternion equations. Within the Gear method the quaternions and their
i (t) ∆tp−l
time derivatives are predicted using the Pascal triangle q(l)
(p−l)! ,
where l = 0, . . . , P and P is the order of the algorithm. Further, they are corrected one

i (t + ∆t) =

p=l q(p)

P

P

or more times, using new values of torques as well as rotational velocities and their time

derivatives which are predicted and corrected simultaneously with quaternion variables.

The Gear method can be modiﬁed within the quaternion-constraint dynamics as fol-

lows. To simplify notations, we choose the fourth order scheme (P = 4) (the extension to

6

arbitrary orders is trivial). Let q(l)

i (t + ∆t) (as well as q(l)

i (t)) be already deﬁned quan-

tities after the last step of the corrector procedure. Then, according to the constraint

formalism, the variables qi(t + ∆t), ˙qi(t + ∆t) and ¨qi(t + ∆t) (l = 0, 1, 2) transform into

q′

˙q′

¨q′

i(t + ∆t) = qi(t + ∆t) + f i(t)∆t2/2 + ˙f i(t)∆t3/6 + ¨f i(t)∆t4/24 ,
i(t + ∆t) = ˙qi(t + ∆t) + f i(t)∆t + ˙f i(t)∆t2/2 + ¨f i(t)∆t3/6 ,
i(t + ∆t) = ¨qi(t + ∆t) + f i(t) + ˙f i(t)∆t + ¨f i(t)∆t2/2 ,

(9)

˙f i(t) = −2(λi ˙qi(t) + ˙λiqi(t)), ¨f i(t) = −2(λi ¨qi(t) + 2 ˙λi ˙qi(t) +
where f i(t) = −2λiqi(t),
¨λiqi(t)) and λi, ˙λi, ¨λi are values of the Lagrange multiplier and its ﬁrst and second time
derivatives at time t. The expressions (9) present, in fact, (in somewhat other notations)

a particular case (P = 4) of generalized equations (7). Therefore, the three unknowns λi,
˙λi and ¨λi are found solving by iteration the system of three nonlinear equations

q′2

i = 1 ,

q′
i

· ˙q′

i = 0 ,

˙q′2

i + q′

i

· ¨q′

i = 0 .

(10)

As in the general case (8), the iteration procedure is initiated by putting λi = ˙λi = ¨λi = 0

in nonlinear terms, and unknown quantities quickly tend to the physical solutions λi ∼
∆t3, ˙λi ∼ ∆t2 and ¨λi ∼ ∆t.

3.2 Verlet algorithm in velocity form

There are the well-known group of integrators comprising Verlet [19], leapfrog [20],

velocity Verlet [21] and Beeman [22] methods. Due to their simplicity and exceptional

numerical stability they play an important role in the classical methodology of molecu-

lar dynamics. All or some of these methods are always described and compared in any

modern textbook [13, 14, 20, 23, 24]. However, the mentioned above approaches, being

constructed initially for the integration of Newton’s equations for translational motion,

are not necessarily applicable directly to rotational dynamics. To our knowledge, only the

leapfrog method has its versions for rotational motion [13]. The reason of such a situation

is that contrary to translational dynamics, the second time derivatives of variables, asso-

ciated with rotational degrees of freedom, may depend on their ﬁrst time derivatives. In

our case the pattern is complicated additionally by the necessity of including constraints

in the equations of motion. We shall show now how to solve these problems within the

Verlet algorithm in velocity form.

7

Let {ri(t), ˙ri(t), qi(t), ˙qi(t)} be a spatially-velocity conﬁguration of the system at time
· ˙qi = 0}. The translational part {ri(t), ˙ri(t)} of
t and {σi(t) ≡ qi(t)2 − 1 = 0, ˙σi(t) ≡ 2qi
variables is considered within the Verlet algorithm in the usual way [21, 24], whereas the

rotational variables {qi(t), ˙qi(t)} can be evaluated as follows. Using the principal torques
K i(t), we deﬁne angular accelerations ˙Ωi(t) and, therefore, second time derivatives ¨qi(t)
(4) on the basis of equations (1) for rotational motion. Then, taking into account the

constraint forces f i(t) = −2λi(t)qi(t) yields

qi(t + ∆t) = qi(t) + ˙qi(t)∆t + ¨qi(t)∆t2/2 + f i(t)∆t2/2 + O(∆t3) .

(11)

The Lagrange parameters λi are deﬁned from the constraint relations σi(t + ∆t) ≡
q2

i (t + ∆t) − 1 = 0 which constitute a single quadratic equation per molecule with the

following solutions

=

λi1
2

1
∆t2 "

1 − ˙q2

i ∆t2/2 ∓

1 − ˙q2

i ∆t2 − ˙qi

· ¨qi∆t3 −

i − ˙q4
¨q2
i

∆t4/4

,

(12)

r

(cid:16)

(cid:17)

#

where the time derivatives of quaternions are taken at time t. As can be veriﬁed easily,

only the ﬁrst solution is in self-consistency with the integration scheme. In the limit of
· ¨qi∆t/2, i.e., f i(t) ∼ ∆t. Therefore,
small time steps, this solution behaves as λi1 → ˙qi
the constraint forces contribute into the quaternion dynamics (11) terms of order ∆t3, i.e.,

the same order as numerical errors of the used algorithm, but the rigidity of molecules is

now fulﬁlled exactly, i.e., σi(t + ∆t) = 0.

And now we consider how to perform the second step

˙s(t + ∆t) = ˙s(t) +

¨s(t) + ¨s(t + ∆t)

∆t/2 + O(∆t3)

(13)

(cid:16)

(cid:17)

of the velocity Verlet method, where s denotes a spatial coordinate. There are no problems

to pass this step in the case of translational motion, when s ≡ ri and ˙s ≡ vi is the

translational velocity. However, the diﬃculties immediately arise for rotational motion,

because then the second time derivative ¨s can depend explicitly not only on the spatial

coordinate s, but on the generalized velocity ˙s as well. For example, choosing s ≡ qi,
we obtain on the basis of equations of motion (1) and (4) that ¨qi(t) ≡ ¨qi(qi(t), ˙qi(t)).
In view of (13) this leads to a very complicated system of four nonlinear equations per

molecule with respect to four unknown components of the quaternion velocity ˙qi(t + ∆t).
It is necessary to note that analogous problems appear at attempts to apply the leapfrog,

8

usual Verlet and Beeman methods for rotational motion (even much more diﬃcult in the

last two cases).

An alternative has been found in a rotational motion version [13] of the leapfrog

algorithm. It has been suggested to associate the quantity ˙s with the angular momentum
li = A+
Li = (J1Ωi

˙s ≡ li, where
3) = JΩi and J is the diagonal matrix of principal moments of

i Li of the molecule in the laboratory system of coordinates, i.e.,

2, J3Ωi

1, J2Ωi

inertia. Then the equation (13) is simpliﬁed,

li(t + ∆t) = li(t) +

ki(t) + ki(t + ∆t)
(cid:16)

(cid:17)

∆t/2 + O(∆t3)

(14)

and, therefore, li(t + ∆t) are easily evaluated using the torques ki(t + ∆t) in the new

spatial conﬁguration {qi(t+ ∆t)}. At the same time, new values for principal angular and
quaternion velocities are obtained (when they are needed) using the relations Ωi(t+∆t) =
J−1Ai(t + ∆t)li(t + ∆t) and ˙qi(t + ∆t) = 1

2Q(qi(t + ∆t))Ωi(t + ∆t).

Finally, we consider the third version of the velocity Verlet method for rotational

motion. The idea consists in using angular velocities as independent parameters for

describing the sate of the system in phase space. Then choosing ˙s ≡ Ωi and taking into

account Euler equations (1), we obtain from (13) the following result

(n)

Ωi
α

(t + ∆t) = Ωi

α(t) +

K i

α(t) + K i

α(t + ∆t)

∆t
2Jα (cid:20)
Ωi

+

Jβ − Jγ

(cid:16)

(cid:17)(cid:16)

β(t)Ωi

γ(t) + Ωi
β

(n−1)

(t + ∆t)Ωi
γ

(n−1)

(t + ∆t)

.

(15)

(cid:17)(cid:21)

Unless J1 = J2 = J3, the equations (15) are, in fact, the system of three quadratic
equations per molecule with respect to the three unknowns Ωi
is relatively simple and can be solved by iteration (n = 1, 2, . . .) with Ωi
α

α(t + ∆t). The system (15)
α(t)
as an approximation of zero order. A few iterations is suﬃcient for actual time steps to

(0)(t+∆t) = Ωi

ﬁnd the desired solutions with a great precision.

From a mathematical point of view, all the three representations ˙s ≡ ˙qi, li or Ωi
are completely equivalent, because the knowledge of an arbitrary quantity from the set

( ˙qi, li, Ωi) allows us to determine uniquely the rest of two ones. In the case of numerical
integration the pattern is qualitatively diﬀerent, because the investigated quantities are

evaluated approximately. The choice ˙s ≡ ˙qi can not be recommended for calculations due
· ˙qi = 0
to its complexity. Moreover, it has yet a major disadvantage that the equality qi
is broken at time t + ∆t, whereas this equality remains in law by construction in other

two cases.

9

The case ˙s ≡ li is the most attractive in view of the avoidance of nonlinear equations.

Computations show (see Sec. 4), however, that the best numerical stability with respect

to the total energy conservation exhibits the third version, when ˙s ≡ Ωi. The reason of
this can be found, taking into account that a kinetic part, 1
2)2 +
2
J3(Ωi
3)2), of the total energy is calculated directly from principal angular velocities. At
the same time, to evaluate angular velocities within the previous approach the additional
transformations Ωi = J−1Aili with approximately computed matrices Ai = A(qi) and
angular momenta li are necessary. They contribute an additional portion into accumulated

1)2 + J2(Ωi

N
i=1(J1(Ωi

P

errors at the calculations of the total energy.

4 Numerical results and discussion

We now test our integration approach on the basis of MD simulations for a TIP4P

model [25] of water. The simulations were performed in the microcanonical ensemble at

a density of 1 g/cm3 and at a temperature of 298 K. We considered a system of N = 256

molecules in the reaction ﬁeld geometry [26]. All runs were started from an identical

well equilibrated conﬁguration. Numerical stability was identiﬁed in terms of the relative
ﬂuctuations Et =

hEit of the total energy of the system during time t.
Samples of the function Et for the fourth-order Gear algorithm are presented in ﬁg. 1.

h(E − hEit)2it

q

.

It can be seen easily from the ﬁgure that within the modiﬁed version, where quaternion-

constraint transformations (9) are applied, the conservation of the total energy is im-

proved considerably in comparison with that obtained within the original version of the

algorithm, when no additional corrections are used. The system of nonlinear equations

(10) were solved with the relative iteration precision of 10−12 and the number of iterations

never exceeded 5. At the same time, applying the rescaling scheme leads even to worse

results than those given by the original version. Despite the fact that the Gear algorithm

integrates the equations of motion very well at ∆t ≤ 1 fs, it has a very small region of

stability with respect to time steps [16] and can not be used for ∆t ≥ 1.5 fs (see ﬁg. 1d).

Moreover, the scheme predictor-corrector-corrector, which was chosen by us at ∆t ≤ 1 fs

to provide an optimal performance, takes computational time per step twice larger than

the Verlet integrator (in the case ∆t = 1.5 fs, three corrector steps were used).

As the atomic-constraint technique [15, 16] is intensively exploited and its advantages

with respect to numerical stability are generally recognized, we have made comparative

10

test carrying out explicit MD runs using this method as well as the angular-velocity Verlet

algorithm (15) within the quaternion-constraint dynamics (11). The usual value of the

time step in simulating such a system is ∆t = 2 fs [27]. These two approaches required

almost the same computer time per step (96% being spent to evaluate pair interactions).
The corresponding functions Et are shown in ﬁg. 2 at four ﬁxed values ∆t = 1, 2, 3 and 4 fs.

For the purpose of comparison the results obtained within the angular-momentum version

(14) are also included in this ﬁgure (insets (a), (b)). The rescaling scheme (instead of the

quaternion-constraint dynamics) within the angular-velocity Verlet version was considered

as well.

At the smallest time step (ﬁg. 2a), all the approaches exhibit similar equivalence in

the energy conservation. The time step ∆t = 1 fs is too small, however, and impracti-

cal in simulations because it requires too much computation time to cover the suﬃcient

phase space. For larger time steps (ﬁg. 2b-d), the total energy ﬂuctuations increase drasti-

cally with increasing the length of the runs within the usual quaternion rescaling scheme,

whereas the atomic- and quaternion-constraint methods conserve the energy approxi-

mately with the same accuracy. As far as the rescaling of quaternions has been chosen,

it must be applied after each time step to achieve an optimal performance within the

Verlet integrator. For example, if no corrections are performed, the rigidity of molecules

is broken catastrophically (see the dotted curve in ﬁg. 2b). As we can see, the modiﬁed

quaternion approach always leads to improved results. Finally, we show in ﬁg. 2a,b that

the angular-momentum version of the Verlet algorithm is much more unstable and can

be used at small (∆t ≤ 1 fs) time steps only. For these reasons, taking into account also

comments on the Gear algorithm, the crude renormalization procedure is generally not

recommended and preference must be given to the modiﬁed quaternion approach within

the angular-velocity Verlet integrator. Quite a few iterations (the mean number of itera-

tions per molecule varied from 2 to 4 at ∆t = 1 – 4 fs) was suﬃcient to obtain solutions

to the system of nonlinear equations (15) with the relative iteration precision of 10−12.

This required a negligible small computation time additionally to the total time.

The calculations have shown that the same level E = 0.025% of energy conservation

can be provided by the time steps of 2.1, 3.7 and 4.0 fs within the quaternion rescaling,

atomic- and quaternion-constraint schemes. Therefore, the last two approaches allow a

time step approximately twice larger than the quaternion rescaling method. A reason

of this gain in time can be explained by the fact that the rescaling of quaternions is an

artiﬁcial procedure. It involves an unpredictable discrepancy in the calculation of trajec-

11

tories of atoms at each step of the integration process and leads to signiﬁcant deviations

of the total energy. At the same time, the atomic- and quaternion(molecular)-constraint

techniques provide the rigidity of molecules in a more natural way.

5 Conclusion

An alternative scheme to overcome the diﬃculties in simulations of rigid polyatomics

has been proposed. The scheme uses the constraint formalism for treating quaternion dy-

namics. As a result, the rigidity problem has been rigorously resolved, using quaternion-

constraint forces. Although this introduces some extra transformations, but presents no

numerical diﬃculties. In a particular case of the velocity Verlet algorithm, the constraint

version of the quaternion approach allows one to perfectly fulﬁl the rigidity of molecules at

each step of the trajectory without any additional eﬀorts and loss of precision. Avoidance

of the necessity to solve complex nonlinear equations for maintaining molecular rigid-

ity should be a beneﬁt of the presented approach with respect to the atomic-constraint

dynamics.

It has been corroborated by actual MD simulations that the quaternion rescaling

method is much less eﬃcient than the atomic- and quaternion-constraint techniques. The

last both schemes seem to be comparable in eﬃciency. The advantage of the modiﬁed

quaternion approach is that it improves the energy conservation considerably at a little

Acknowledgements. The author would like to acknowledge ﬁnancial support of the

computational cost.

President of Ukraine.

References

[1] A. Rahman and F.H. Stillinger, J. Chem. Phys. 55 (1971), 3336; 60 (1974), 1545.

[2] J.P. Ryckaert and A. Bellemans, Chem. Phys. Lett. 30 (1975), 123.

[3] H. Goldstein, ”Classical Mechanics”, 2nd edn, (Addison-Wesley), 1967.

[4] J. Barojas, D. Levesque and B. Quentrec, Phys. Rev. A 7 (1973), 1092.

[5] D. Levesque, J.J. Weis and G.N. Patey, Mol. Phys. 51 (1984), 333.

12

[6] P.S.Y. Cheung and J.G. Powles, Mol. Phys. 30 (1975), 921.

[7] K. Singer, A. Taylor and J.V.L. Singer, Mol. Phys. 33 (1977), 1757.

[8] O. Steinhauser and M. Neumann, Mol. Phys. 37 (1979), 1921.

[9] O. Steinhauser, Chem. Phys. Lett. 82 (1981), 153.

[10] D.J. Evans, Mol. Phys. 34 (1977), 317.

[11] D.J. Evans and S. Murad, Mol. Phys. 34 (1977), 327.

[12] D.J. Tildesley and P.A. Maden, Mol. Phys. 42 (1981), 1137.

[13] M.P. Allen and D.J. Tildesley, ”Computer Simulation of Liquids”, (Clarendon Press),

[14] D.C. Rapaport, ”The Art of Molecular Dynamics Simulation”, (Cambridge University

[15] J.P. Ryckaert, G. Ciccotti and H.J.C. Berendsen, J. Comput. Phys. 23 (1977), 327.

[16] G. Ciccotti, J.P. Ryckaert and M. Ferrario, Mol. Phys. 47 (1982), 1253.

[17] C. W. Gear, ANL Report No. ANL-7126, 1966.

[18] C. W. Gear, ”Numerical Initial Value Problems in Ordinary Diﬀerential Equations”,

(Prentice-Hall), 1971.

[19] L. Verlet, Phys. Rev. 159 (1967), 98.

[20] R.W. Hockney and J.W. Eastwood, ”Computer Simulation Using Particles”, (McGraw-

[21] W.C. Swope, H.C. Andersen, P.H. Berens and K.R. Wilson, J. Chem. Phys. 76 (1982),

[22] D. Beeman, J. Comput. Phys. 20 (1976), 130.

[23] J.M. Haile, ”Molecular Dynamics Simulations: Elementary Methods”, (Wiley-Inter-

1987.

Press), 1995.

Hill), 1981.

637.

science), 1992.

[24] H. Gould and J. Tobochnik, ”An Introduction to Computer Simulation Methods Appli-

cations to Physical Systems”, Part 1, (Addison-Wesley), 1988.

[25] W.L. Jorgensen et al., J. Chem. Phys. 79 (1983), 926.

[26] I.P. Omelyan, Phys. Lett. A 223 (1996) 295.

[27] D. Bertolini and A. Tani, Phys. Rev. E 51 (1995), 1091.

13

Figure captions

Fig. 1. The relative total energy ﬂuctuations as functions of the length of the sim-

ulations performed within three versions of the Gear algorithm at four ﬁxed time steps.

Note, that all three curves are indistinguishable in (a).

Fig. 2. The relative total energy ﬂuctuations as functions of the length of the sim-

ulations performed within the atomic-constraint technique and various versions of the

velocity Verlet algorithm at four ﬁxed time steps. The dotted curve in (b) corresponds

to the usual quaternion approach without any additional corrections. Note, that three of

four curves are indistinguishable in (a).

