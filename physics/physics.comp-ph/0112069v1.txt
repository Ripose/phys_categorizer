Beyond the poor man’s implementation of unconditionally stable algorithms
to solve the time-dependent Maxwell Equations

J.S. Kole∗, M.T. Figge†, and H. De Raedt‡
Centre for Theoretical Physics and Materials Science Centre
University of Groningen, Nijenborgh 4
NL-9747 AG Groningen, The Netherlands
(Dated: February 2, 2008)

For the recently introduced algorithms to solve the time-dependent Maxwell equations [1], we
construct a variable grid implementation and an improved spatial discretization implementation that
preserve the exceptional property of the algorithms to be unconditionally stable by construction.
We ﬁnd that the performance and accuracy of the corresponding algorithms are signiﬁcant and
illustrate their practical relevance by simulating various physical model systems.

PACS numbers: 02.60.Cb, 03.50.De, 41.20.Jb

I.

INTRODUCTION

In a recent paper, we introduced a family of algorithms to solve the time-dependent Maxwell equations (TDME) [1].
Salient features of these algorithms include the rigorously provable unconditional stability for d-dimensional systems
(d = 1, 2, 3) with spatially varying permittivity and permeability, as well as the exact conservation of the energy density
of the electromagnetic (EM) ﬁelds. Furthermore, we have demonstrated that - without aﬀecting the unconditional
stability of the algorithms - the order of accuracy in the time integration can be systematically increased. An important
aspect that has not been considered in our earlier work [1] concerns the eﬀect of the discretization of space on the
accuracy of the algorithms. Previously, we employed only the most simple spatial discretization, namely the central-
diﬀerence scheme on a cartesian grid with a constant mesh size [1]. We refer to this basic spatial discretization scheme
as the poor man’s implementation. Many numerical simulations of realistic physical systems require algorithms with a
more accurate spatial discretization and a more ﬂexible spatial grid for an optimal use of computer resources (CPU time
and computer memory). In the present paper we show that implementing a fourth-order accurate approximation of the
spatial derivatives and a spatial grid of variable mesh sizes preserve the unconditional stability of the algorithms. We
simulate various physical model systems using these new implementations to demonstrate the signiﬁcant improvement
with respect to the required computer resources in the computation of eigenmode spectra and to study systematically
the temporal and spatial accuracy of the algorithms.

Our presentation is organized as follows: We recapitulate the theory of constructing unconditionally stable algo-
rithms to solve the TDME in Sec. II and describe the basic properties of the poor man’s implementation in Sec. III.
Then, in Sec. IV and Sec. V, we present the implementation of, respectively, the variable grid and the improved spatial
discretization. Our conclusions are given in Sec. VI.

II. UNCONDITIONALLY STABLE ALGORITHMS TO SOLVE MAXWELL’S EQUATIONS

We consider a d-dimensional model system of EM ﬁelds in a medium with spatially varying permittivity and/or
permeability, surrounded by a perfectly conducting box. In the absence of free charges and currents, the EM ﬁelds in
such a system satisfy Maxwell’s equations [2]

∂
∂t

H =

1
µ ∇ ×

−

E

and

∂
∂t

E =

1
ε ∇ ×

H ,

div εE = 0

and

div H = 0 ,

(1)

(2)

1
0
0
2
 
c
e
D
 
0
2
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
9
6
0
2
1
1
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

∗ E-mail: j.s.kole@phys.rug.nl
† E-mail: m.t.ﬁgge@phys.rug.nl
‡ E-mail: h.a.deraedt@phys.rug.nl

http://rugth30.phys.rug.nl/compphys

where H = (Hx(r, t), Hy(r, t), Hz(r, t))T and E = (Ex(r, t), Ey(r, t), Ez(r, t))T denote, respectively, the magnetic and
the electric ﬁeld vector. The permeability and the permittivity are given by µ = µ(r) and ε = ε(r). For simplicity of
notation, we will omit the spatial dependence on r = (x, y, z)T unless this leads to ambiguities. On the surface of the
perfectly conducting box the EM ﬁelds satisfy the boundary conditions [2]

with n denoting the vector normal to a boundary of the surface. The conditions Eqs. (3) assure that the normal
component of the magnetic ﬁeld and the tangential components of the electric ﬁeld vanish at the boundary [2]. Some
important symmetries of the Maxwell equations (1)-(2) can be made explicit by introducing the ﬁelds

n

E = 0 and n

H = 0 ,

×

·

In terms of the ﬁelds X(t) and Y(t), the TDME (1) read

X(t) = √µH(t)

and Y(t) = √εE(t) .

X(t)
Y(t)

∂
∂t

(cid:18)

=

(cid:19)

0

 

1
√ε ∇ ×

1
√µ

−

1
√µ ∇ ×
0

1
√ε

X(t)
Y(t)

! (cid:18)

≡ H

(cid:18)

(cid:19)

X(t)
Y(t)

.

(cid:19)

Writing Ψ(t) = (X(t), Y(t))T , Eq. (5) becomes

∂
∂t

Ψ(t) =

Ψ(t) .

H

It is easy to show that
, with respect to the inner product
where V denotes the volume of the enclosing box. The formal solution of Eq. (6) is given by

is skew-symmetric, i.e.

−H

H

H

T =

Ψ′
Ψ
|
h

i ≡

V

ΨT

Ψ′ dr,

·

R

Ψ(t) = U (t)Ψ(0) = et

HΨ(0) ,

where Ψ(0) represents the initial state of the EM ﬁelds. The operator U (t) = et
H determines the time evolu-
Ψ(t)
Ψ(t)
Ψ(t)
dr, relating the length of Ψ(t) to the en-
tion. By construction
i
|
k
h
1(t) = e−
t
ergy density w(t)
H it follows that
t) = U −
R
≡
Ψ(0)
Ψ(0)
Ψ(t)
Ψ(t)
U (t)Ψ(0)
U (t)Ψ(0)
. Hence the time-evolution operator U (t) is an orthogonal trans-
h
i
|
h
i
|
h
i
|
formation, rotating the vector Ψ(t) without changing its length
. In physical terms this means that the energy
density of the EM ﬁelds does not change with time, as expected on physical grounds [2].

=
εE2(t) + µH2(t) of the EM ﬁelds [2]. As U (t)T = U (
=

εE2(t) + µH2(t)

Ψ
k

2 =

−

=

k

k

(cid:2)

(cid:3)

V

A numerical procedure that solves the TDME necessarily starts by discretizing the spatial derivatives. This maps
the continuum problem described by
onto a lattice problem deﬁned by a matrix H. Ideally, this mapping should
not change the basic symmetries of the original problem. The underlying symmetry of the TDME suggests to use
matrices H that are real and skew-symmetric. Since formally the time evolution of the EM ﬁelds on the lattice
is given by Ψ(t + τ ) = U (τ )Ψ(t) = eτ HΨ(t), the second ingredient of the numerical procedure is to choose an
approximation of the time-evolution operator U (τ ). The fact that U (t) is an orthogonal transformation is essential
for the development of an unconditionally stable algorithm to solve the Maxwell equations [1]. A systematic approach
to construct orthogonal approximations to matrix exponentials is to make use of the Lie-Trotter-Suzuki formula [3, 4]

H

et(H1+...+Hp) = lim

etHi/m

p

i=1
Y

m

→∞  

m

,

!

U1(τ ) = eτ H1 . . . eτ Hp

P

and generalizations thereof [5, 6]. Applied to the case of interest here, the success of this approach relies on the basic
p
i=1 Hi, where each of the matrices Hi is real
but rather trivial premise that the matrix H can be written as H =
and skew-symmetric. Expression Eq. (8) suggests that

might be a good approximation to U (τ ) if τ is suﬃciently small. In fact, it can be shown that U (τ ) and U1(τ ) are
identical up to ﬁrst order in τ [7]. Most importantly, if all the Hi are real and skew-symmetric, U1(τ ) is orthogonal
by construction. Therefore, by construction, a numerical scheme based on Eq. (9) will be unconditionally stable. The
product-formula approach provides simple, systematic procedures to improve the accuracy of the approximation to
U (τ ) without changing its fundamental symmetries. For example the orthogonal matrix

U2(τ ) = U T
1 (

τ /2) U1(τ /2)

−

2

(3)

(4)

(5)

(6)

(7)

(8)

(9)

(10)

is identical to U (τ ) up to second order in τ [5, 6]. Suzuki’s fractal decomposition approach [5] gives a general method
to construct higher-order approximations based on U1(τ ) or U2(τ ). A particularly useful approximation, which is
identical to U (τ ) up to fourth order in τ , is given by [5]

U4(τ ) = U2(aτ )U2(aτ )U2((1

4a)τ )U2(aτ )U2(aτ ) ,

−

−

41/3). From Eqs. (9)-(11) it follows that, in practice, an eﬃcient implementation of a scheme based
where a = 1/(4
on U1(τ ) is all that is needed to construct the higher-order algorithms Eqs. (10) and (11). In many applications the
approximations Un(τ ) to the time-evolution operator U (t) have proven to be very useful [4, 6, 7, 8, 9, 10, 11, 12, 13,
14, 15] and turn out to be equally useful for solving the TDME [1]. In particular, it can be shown that the diﬀerence
between the exact EM ﬁeld vector Ψ(t) = U (t)Ψ(0) and the approximate one, Ψn(t) = Un(t)Ψ(0), is bounded by [7]

(U (t)

Un(t))Ψ(0)
k

=

Ψ(t)

Ψn(t)

Cn t τ n ,

k

k
where Cn is a constant. The rigorous upper bound on the error of the EM ﬁeld vector will be used to specify
unconditionally stable algorithms by the temporal and spatial accuracy of the computed EM ﬁeld. We denote an
algorithm by TnSm if its implementation involves a time integration based on Un(τ ) and a spatial discretization
scheme based on an mth-order accurate approximation of the spatial derivatives.

k ≤

−

−

(12)

III. POOR MAN’S IMPLEMENTATION

In this section, we brieﬂy recapitulate the construction of the unconditionally stable algorithm to solve Maxwell’s
equations in a one-dimensional (1D) system. Furthermore, we discuss general properties of this implementation
refering also to the two-dimensional (2D) and three-dimensional (3D) case.

Maxwell’s equations for a 1D system extending along the x-axis contain no partial derivatives with respect to y
or z. Also ε and µ do not depend on y or z. Under these conditions, the TDME reduce to two independent sets of
ﬁrst-order diﬀerential equations [2]. The solutions to these sets are known as the transverse electric (TE) mode and
the transverse magnetic (TM) mode [2]. Restricting our considerations to the TM-mode, it follows from Eq. (5) that
the magnetic ﬁeld Hy(x, t) = Xy(x, t)/

µ(x) and the electric ﬁeld Ez(x, t) = Yz(x, t)/

ε(x) are solutions of

Note that in 1D the divergence of Hy(x, t) and Ez(x, t) is zero, hence Eqs. (2) are automatically satisﬁed. Using the
central-diﬀerence scheme, which yields a second-order accurate approximation of the spatial derivatives, we obtain

p

p

p
∂
∂t

∂
∂t

Xy(x, t) =

1

µ(x)

∂
∂x  

Yz(x, t)

ε(x) !

Yz(x, t) =

p

1
ε(x)

∂
∂x  

p
Xy(x, t)

µ(x) !

,

.

p

∂
∂t

∂
∂t

Xy(i, t) =

Yz(j, t) =

1
δ√µi (cid:18)
1
δ√εj (cid:18)

Yz(i + 1, t)

√εi+1 −

Xy(j + 1, t)

√µj+1 −

Yz(i

−
√εi
Xy(j

1, t)

,

−

1 (cid:19)
1, t)

−
√µj

1 (cid:19)

−

,

where the spatial coordinate of an EM ﬁeld component is speciﬁed through the lattice index i, e.g. Xy(i, t) stands
for Xy(x = iδ/2, t), and δ/2 the distance between two neighboring lattice points. Following Yee [16] it is convenient

3

(11)

(13)

(14)

(15)

(16)

FIG. 1: Positions of the two TM-mode EM ﬁeld components on the 1D grid.

to assign Xy(i, t) and Yz(j, t) to the odd, respectively, even numbered lattice site, as shown in Fig. 1 for a grid of n

points. The equations (15) and (16) can now be combined into one equation of the form Eq. (6) by introducing the
n-dimensional vector Ψ(t) with elements

Ψ(i, t) =

(cid:26)

Xy(i, t) = √µiHy(i, t),
Yz(i, t) = √εiEz(i, t),

i odd
i even

.

The vector Ψ(t) describes both the magnetic and the electric ﬁeld on the lattice points i = 1, . . . , n and the ith element
Ψ(t), where ei denotes the ith unit vector in the n-dimensional
of Ψ(t) is given by the inner product Ψ(i, t) = eT
i
vector space. Using this notation, it is easy to show that

·

Ψ(t) = U (t)Ψ(0) with U (t) = exp(tH) ,

where the matrix H is represented by two parts,

H = H1 + H2 ,

with

H1 =

βi+1,i

e

i

eT
i+1 −

e

eT
i

i+1

,

H2 =

′

βi+1,i+2

e

i+1

eT
i+2 −

e

eT

i+2

i+1

.

n

−

2

′

i=1
X
2
n
−

i=1
X

(cid:0)

(cid:0)

(cid:1)

(cid:1)

Here, βi,j = 1/(δ√εiµj) and the prime indicates that the sum is over odd integers only. For n odd we have

∂
∂t

Ψ(1, t) = β2,1Ψ(2, t)

and

Ψ(n, t) =

βn

1,nΨ(n

1, t) ,

−

−

−

∂
∂t

such that the electric ﬁeld vanishes at the boundaries (Yz(0, t) = Yz(n + 1, t) = 0), as required by the boundary
conditions Eqs. (3).

The representation of H as the sum of H1 and H2 divides the lattice into odd and even numbered cells. Most
1 matrix and
2 skew-symmetric matrices. Therefore, according to the general theory outlined in Sec. II, this

important, however, both H1 and H2 are skew-symmetric block-diagonal matrices, containing one 1
(n
decomposition of H is suitable to construct an orthogonal approximation

1)/2 real 2

×

−

×

U1(τ ) = eτ H1eτ H2

that is identical to the time-evolution operator U (τ ) up to ﬁrst order in τ . As the matrix exponential of a block-
diagonal matrix is equal to the block-diagonal matrix of the matrix exponentials of the individual blocks, the numerical
calculation of eτ H1 (or eτ H2) reduces to the calculation of (n
2 matrices. The matrix
exponential of a typical 2

2 matrix appearing in eτ H1 or eτ H2 is simply given by

1)/2 matrix exponentials of 2

−

×

×

exp

α

0 1
1 0

Ψ(i, t)
Ψ(j, t)

=

(cid:20)

(cid:18)

−

(cid:19)(cid:21) (cid:18)

(cid:19)

(cid:18)

−

cos α
sin α

sin α
cos α

Ψ(i, t)
Ψ(j, t)

,

(cid:19)

(cid:19) (cid:18)

and represents the rotation of two elements of the vector Ψ(t) leaving all the other elements unchanged. This property
of the time-evolution operator Eq. (23) provides the intrinsic possibility to parallelize the algorithms. Furthermore,
it is even possible to alter the ordering of the products in the time-evolution operator Un(τ ) in order to construct an
eﬃcient implementation for a particular system. The plane rotations Eq. (24) are performed by simply processing an
arbitrarily ordered list S of pairs of EM ﬁeld vector elements using

U1(τ ) =

eτ βi,j(e

i

eT
j −

e
j

eT
i ) ,

YS

instead of the odd-even decomposition Eq. (23) for which S =
1, n)
}

.

{

(1, 2), (3, 4), . . . , (n

2, n

1), (2, 3), (4, 5), . . . , (n

−

−

The implementation for 1D can be readily extended to 2D and 3D systems, as has been illustrated in Ref. [1]. In
2D, the TDME (1) separate again into two independent sets of equations and the discretization of continuum space
is done by simply reusing the 1D lattice introduced above. This is shown in Fig. 2 for the case of the 2D TM-modes.

4

(17)

(18)

(19)

(20)

(21)

(22)

(23)

(24)

(25)

−

5

(26)

(27)

FIG. 2: Positions of the three TM-mode EM ﬁeld components on the 2D grid for nx = 9 and ny = 5.

FIG. 3: Positions of the EM ﬁeld components on the 3D Yee grid.

The construction automatically takes care of the boundary conditions if nx and ny are odd and yields a real skew-
symmetric matrix H. Correspondingly, in 3D the spatial coordinates are discretized by adopting the standard Yee
grid [16], which also automatically satisﬁes the boundary conditions Eqs. (3). A unit cell of the Yee grid is shown in
Fig. 3.

In general, the time step τ and the distance δ between next-nearest neighbor grid points are related due to the

error that is introduced when the exact time-evolution operator U (τ ) is replaced by Un(τ ). We have [5, 6, 7]:

Here, γ(d) depends on the particular spatial discretization scheme used and α(n) represents the largest positive
constant that appears as a prefactor in the exponential of the approximation Un(τ ). We ﬁnd α(2) = 1/2 from
Eq. (10) and inspection of Eq. (11) yields α(4) = (1/2)(4a
0.33. It follows that for a required spatial resolution,
which determines the smallness of δ, the time step has to be chosen such that

1)

≈

−

U (τ )

Un(τ )

k

−

k ≤

γ(d)

n+1

.

α(n) τ
δ

(cid:18)

(cid:19)

τ

≤

τ ∗

≡

δ
α(n)

in order to keep the error Eq. (26) small. As an example we consider a wave packet in a 2D cavity that is simulated

by a T4S2 algorithm. For numerical purposes we use dimensionless variables throughout this paper, where the unit
of length is denoted by λ and the vacuum light velocity c is taken as the unit of velocity, while the permittivity ε and
permeability µ are measured in units of their corresponding values in vacuum, respectively, ε0 and µ0. The cavity
with ε = 1 and µ = 1 is of size 19
15 and contains a dielectric medium with ε = 2.25 and µ = 1 that has an inclined
boundary. We plot in Fig. 4 the results of simulations in which the wave packet scatters on the dielectric medium.
In the four pictures we show the EM energy density distributions that are obtained after simulation time t = 12.8
for a ﬁxed mesh size δ = 0.1 and for four diﬀerent time steps τ . It follows from Eq. (27) that the upper limit for

×

6

FIG. 4: Energy density distributions at simulation time t = 12.8 for various time steps τ obtained by the T4S2 algorithm for
a ﬁxed mesh size δ = 0.1. The wave packet has been created for parameters (σx, σy) = (2, 1.73), (x0, y0) = (5, 7.5), and k = 8
(see for details Eq. (54) in Sec. V B) and impinges on the dielectric structure from the left.

the time step is given by τ ∗ = 0.3 in this case. For τ = 0.4 the EM energy density distribution is, in fact, seen to
change dramatically such that the results become meaningless. It should be noted that the limitation Eq. (27) on
the time step is diﬀerent from the Courant number which relates the time step τ to the stability of ﬁnite-diﬀerence
time-domain (FDTD) algorithms [17] that are based on the Yee algorithm [16]. The algorithms presented in this
paper are unconditionally stable by construction for any time step τ and produce reasonable numerical results up to
τ = τ ∗, a time step at which the Yee-based FDTD algorithms may have become unstable.

We conclude this section by noting that our algorithms conserve the divergence of the EM ﬁelds only in 1D systems
but not in 2D and 3D systems. Although the initial state Ψ(t = 0) can be chosen such that the EM ﬁelds satify
Eqs. (2), the time-integration of the TDME by an algorithm based on the approximation Un(τ ) yields EM ﬁelds whose
divergence quickly acquires a ﬁnite value and then remains constant in time. This is shown in Fig. 5 where we plot
the computed norm of the magnetic ﬁeld divergence in a 3D system as a function of time. The 3D system is an empty
cavity (ε = 1 and µ = 1) of size 1.5
1.5 and we use the T2S2 algorithm. Though the divergence of the EM
ﬁelds is not conserved in 2D and 3D systems, this error can be reduced by using smaller time steps or algorithms with
higher-order time accuracy. This can be seen in Fig. 6, where we compare the algorithms T2S2 and T4S2 as a function
of the time step τ to show that the error in the EM ﬁeld divergence vanishes for the TnS2 algorithm proportional to
(τ c/δ)n.

1.5

×

×

IV. VARIABLE GRID IMPLEMENTATION

The poor man’s implementation does not provide an optimal discretization scheme for physical systems of unregular
geometrical shapes or with strongly varying permeability and/or permittivity. In a practical implementation of such
systems the grid has to be variable with a small mesh size in one region of the system and a large mesh size in another
region of the system. In this section we show how to implement a variable grid in such a way that the algorithms to
solve the TDME remain unconditionally stable by construction.

For the sake of simplicity we consider a 1D system that is discretized using a variable grid as shown in Fig. 7. In

7

(28)

(29)

FIG. 5: The norm of the divergence of the magnetic ﬁeld in a 3D empty cavity (ε = 1 and µ = 1) of size 1.5 × 1.5 × 1.5 as a
function of time t. The computation is performed with the T2S2 algorithm keeping the mesh size δ = 0.1 ﬁxed.

FIG. 6: The norm of the divergence of the magnetic ﬁeld in a 3D empty cavity (ε = 1 and µ = 1) of size 1.5 × 1.5 × 1.5 as a
function of δ/cτ . The computation is performed with the algorithms T2S2 and T4S2.

a straightforward implemention of the variable grid we would replace the constant next-nearest neighbor distance δ
in Eqs. (15) and (16) of the poor man’s implementation by the corresponding variable distance. It is convenient to
write this substitution in the form

where δi,j is the distance between grid points i and j (see Fig. 7) and

δ

→

∆i,i+1

1 +

(cid:20)

δi

δi+1,i+2

−

1,i −
2∆i,i+1

,

(cid:21)

∆i,i+1 ≡

1
2

−

(δi

1,i + 2δi,i+1 + δi+1,i+2)

is the averaged next-nearest neighbor distance. It can be easily checked that an implementation of the variable grid
that relies on the replacement Eq. (28) would destroy the skew-symmetry property of the corresponding matrix H
(see Eq. (19)). This is unphysical: The original form of the Maxwell equations do have this property. However, a
variable grid implementation that does preserve the underlying symmetry of Maxwell’s equations can be constructed
for a suﬃciently smooth, variable grid. In this case, the second term in the brackets of Eq. (28) may be neglected and

8

(30)

(31)

(32)

(33)

FIG. 7: Positions of the two TM-mode EM ﬁeld components on the 1D variable grid.

the replacement

may yield a resonable approximation of Eqs. (15) and (16) for the variable grid implementation:

δ

→

∆i,i+1 = ∆i+1,i

The corresponding matrix H is seen to be skew-symmetric,

∂
∂t

Xy(i, t) =

∂
∂t

Yz(i + 1, t) =

1
√µi (cid:18)
1
√εi+1 (cid:18)

Yz(i + 1, t)
∆i,i+1√εi+1 −
Xy(i + 2, t)

Yz(i
∆i,i

−

∆i+1,i+2√µi+2 −

1, t)

,

−
1√εi
1 (cid:19)
−
Xy(i, t)
∆i+1,i√µi (cid:19)

.

H =

n

′

i=1 (cid:20)
X

e

e

eT
i+1 −

eT
i
i
∆i,i+1√εi+1µi

i+1

+

i+1

eT
i+2 −

e
e
∆i+1,i+2√εi+1µi+2 (cid:21)

eT

i+1

i+2

,

and may again be separated into an odd and even part of which the exponents can be easily calculated following the
same steps as given above in the poor man’s implementation.

It is obvious that this variable grid implementation can, in principle, be applied in any spatial dimension d. However,
it is in general not possible to predict how to choose a grid that yields the best approximation to the true spectrum
of eigenmodes of any non-trivial d-dimensional system. We therefore studied the criteria for the choice of suitable
variable grids in particular systems numerically and present the results for a 1D and a 2D system in the remainder of
this section.

The 1D system under consideration consists of a cavity of length L = 10 with a constant permeability µ = 1 and
a varying permittivity ε. The permittivity deviates from its vacuum value (ε = 1) due to the presence of a dielectric
medium with ε = 3 that is located in the middle of the cavity and extends over a length 2, as shown in Fig. 8.
As a reference system we use a poor man’s implementation with constant next-nearest neighbor distance δ = 0.025

FIG. 8: The 1D cavity with the dielectric structure (solid line) and the two implemented variable grids: ∆i,i+1 = {0.1 ↔
0.05 ↔ 0.025} (dashed line) and ∆i,i+1 = {0.05 ↔ 0.025} (dotted line).

and calculate the eigenmodes ωn of the corresponding matrix H. For two diﬀerent variable grids we calculate the
corresponding eigenmodes ˜ωn and the deviation Γ(ωn, ˜ωn) = 1
˜ωn/ωn relative to the eigenmodes of the reference
system. The two variable grids have in common that the dielectric medium and the transitions between ε = 1 and
ε = 3 at both its sides is embedded in a grid of constant next-nearest neighbor distance which equals that of the
reference system (∆i,i+1 = δ = 0.025). Furthermore, at the left end and at the right end of the cavity the next-nearest
neighbor distance is constant over a length 2.5 and equals, respectively, ∆i,i+1 = 0.1 and ∆i,i+1 = 0.05 in the two
variable grids. The transitions in the variable grids between regions of constant next-nearest neighbor distance involve
abrupt steps between

−

where we kept the intermediate distance ∆i,i+1 = 0.05 over eight grid points, and between

∆i,i+1 = 0.1

∆i,i+1 = 0.05

∆i,i+1 = 0.025 ,

↔

↔

respectively.

In Fig. 9 we plot Γ(ωn, ˜ωn) for the ﬁrst 50 eigenmodes of both variable grids. The relative deviation is seen to

∆i,i+1 = 0.05

∆i,i+1 = 0.025 ,

↔

9

(34)

(35)

FIG. 9: Relative deviation Γ(ωn, ˜ωn) for two variable grids.

}

{

↔

↔

0.1

0.05

0.025

, while for the variable grid with ∆i,i+1 =

increase with the number of the frequency mode. As high mode numbers represent high frequencies this observation
simply reﬂects the general fact that the accuracy of the eigenmodes depends on the smallness of the mesh size
(numerical dispersion). Clearly, this also explains why the relative deviation Γ(ωn, ˜ωn) increases upto 2% for the
variable grid with ∆i,i+1 =
this
deviation remains well below 0.5%. For the ﬁrst few frequency modes, however, we observe an increase in Γ(ωn, ˜ωn).
This behavior can be related to the error that is introduced in the variable grid implementation by applying the
approximation Eq. (30) instead of the exact replacement Eq. (28). To check this statement we plot in Fig. 10 the
deviation Γ(Ωn, ˜ωn) for the ﬁrst 50 eigenmodes of the two variable grids relative to the eigenmodes Ωn that belong to
the variable grids of the exact implementation Eq. (28). We see that the increase of the relative deviation for the ﬁrst
few eigenmodes is, in fact, related to the error which is made by replacing the exact substitution Eq. (28) with the
skew-symmetry conserving approximation Eq. (30). This approximation leads to oscillations of Γ(Ωn, ˜ωn) (and also
Γ(ω, ˜ωn)) that vanish with increasing frequency mode number. From extended numerical studies (results not shown)
we ﬁnd that these variations depend on several factors, such as the size in the diﬀerence between the largest and
smallest distance ∆i,i+1 of the variable grid implementation and on how abrupt ∆i,i+1 changes with i. In practice,
it will be necessary to check the robustness of numerical results obtained by a variable grid implementation against
small changes in its parameters. Although this may sound as a serious disadvantage, the next example of a 2D system
shows that for realistic applications it may be by far more eﬃcient to perform several simulation runs with a variable
grid implementation than to use the poor man’s implementation.

0.025

0.05

↔

{

}

The 2D system we consider is given by the L-shaped cavity depicted in Fig. 11. In order to satisfy the conditions
Eq. (3) at the boundaries, the EM ﬁelds change very strongly close to the sharp edge of the cavity. Large spatial
changes of the EM ﬁelds require a small mesh size. However, for the overwhelming part of the cavity a small mesh size
would cause a waste of resources (computer memory and CPU time). Therefore, this system can be more eﬃciently

10

FIG. 10: Relative deviation Γ(Ωn, ˜ωn) for two variable grids.

FIG. 11: The L-shaped 2D cavity with a variable grid (schematically).

simulated by a variable grid implementation with an increasing number of grid points near the edge. This is done by
a uniform increase of the number of grid points along both the x- and the y-direction as is schematically drawn in
Fig. 11. Furthermore, instead of using the odd-even decomposition of the time-evolution operator (corresponding to
Eq. (23) for the 1D system) on a square grid that would contain grid points outside the L-shaped cavity, we perform
the plane rotations by processing a list S of pairs of the EM ﬁeld vector elements at the grid points that actually
belong to the L-shaped cavity (corresponding to Eq. (25) for the 1D system).

In Table I we present the results of a numerical simulation for the eight lowest TM eigenmodes in the cavity. We
used the T2S2 algorithm imposing a poor man’s implementation with δ = 0.003125 and a variable grid implementation

mode n

T2S2

GdﬁdL

constant variable constant variable
grid ωn grid ωn grid ωn grid ωn
2.9992
2.9989
3.9720
3.9807
4.9102
4.9164
5.4004
5.4150
5.5710
5.5837
6.0494
6.0592
6.7377
6.7649
6.8674
6.8876

2.9999
3.9740
4.9156
5.4077
5.5791
6.0580
6.7511
6.8797

2.9913
3.9500
4.8857
5.3843
5.5453
6.0209
6.7265
6.8492

1
2
3
4
5
6
7
8

TABLE I: The eight lowest TM eigenmodes of the L-shaped cavity (see Fig. 11).

11

ω3 Γ (in %)

4.571
4.740
4.832
4.878
4.901
4.916

constant grid δ
0.1
0.05
0.025
0.0125
0.00625
0.003125
variable grid ∆
4.717
0.1 → 0.05
4.801
0.1 → 0.025
4.840
0.1 → 0.0125
0.1 → 0.00625
4.878
0.05 → 0.003125 4.886

7.5
3.7
1.7
0.78
0.31
0

4.2
2.4
1.6
0.78
0.61

TABLE II: Error in third-lowest eigenmode of the L-shaped cavity (see Fig. 11).

with a mesh size ranging from ∆ = 0.05 to ∆ = 0.003125. Very similar to the procedure described above for the 1D
system, the mesh size is decreased by a factor 0.5 and then kept constant for several grid points to smoothen this
transition before the mesh size is decreased further. Our results are in good agreement with those obtained by the
program package GdﬁdL [18] for the same 2D system (see Table I). In Table II we show the location of the arbitrarily
chosen third-lowest eigenmode ω3 for several constant and variable grid implementations of the T2S2 algorithm. In
all simulations we set δ/cτ = 10, where in the case of a variable grid δ is replaced by the smallest mesh size. The
relative error Γ of the frequency ω3 is measured with respect to the frequency ω3 = 4.916 of the system with constant
mesh size δ = 0.003125. The numerical results obtained within the variable grid implementation are in excellent
agreement with the results of the poor man’s implementation and the program package GdﬁdL. The T2S2 algorithm
with the poor man’s implementation and δ = 0.003125 consumes about 150 times more CPU time and 10 times more
. Clearly,
computer memory than the T2S2 algorithm with variable grid implementation and ∆ =
these numbers justify additional simulation runs that are required to check the robustness of numerical results against
small changes in the parameters of a variable grid implementation.

0.003125

0.05

→

}

{

V.

IMPROVED SPATIAL DISCRETIZATION IMPLEMENTATION

Both conditional FDTD algorithms and the unconditionally stable algorithms TnSm suﬀer from numerical disper-
sion due to the discretization of continuum space on a grid with a ﬁnite mesh size [17]. Methods to reduce numerical
dispersion are taking a grid with a smaller mesh size or employing more accurate ﬁnite-diﬀerence approximations to
the spatial derivatives. The former obviously can be also used in the poor man’s implementation of unconditionally
stable algorithms, however, for several reasons it may be more desirable to implement higher-order accurate approxi-
mations of the spatial derivatives. For example, if one is interested in global features of the distribution of a system’s
if we want to determine all eigenvalues, a higher-order accurate spatial derivative implementation
eigenmodes, i.e.
would be strongly preferred. The computation of a system’s eigenmode spectrum is performed by calculating the
Ψ(t)
Ψ(0)
Fourier transform of the inner product F (t) =
[1, 19, 20]. Using independent random numbers to initial-
i
|
h
ize the elements of Ψ(0), the full eigenmode spectrum is obtained by averaging this Fourier transform. Taking just a
smaller mesh size for the grid in the poor man’s implementation does not only reduce the numerical dispersion but
also gives rise to more eigenmodes with high frequencies. In order to obtain the eigenmode spetrum with the same
spectral resolution, the sampling of F (t) would have to be done over smaller time intervals involving the computation
of more data points. It is thus desirable to implement, instead, higher-order accurate approximations of the spatial
derivatives that make a moderate use of computer resources in terms of CPU time and computer memory possible.

The procedure for the construction of higher-order approximations to spatial derivatives is standard [21]. In the
present case, we apply this procedure keeping in mind that Maxwell’s equations (5) are skew-symmetry and that
the electric and magnetic ﬁeld components are deﬁned at particular grid points. The grid of a d-dimensional system
with a constant mesh size of distance δ/2 between neighboring grid points is shown in Figs. (1)-(3). Without loss
of generality we consider a 1D system, where Ψ(i, t) = Ψ(iδ/2, t) is the ith component of the EM ﬁeld vector and
denotes an electric ﬁeld compoenent for i even and a magnetic ﬁeld component for i odd (see Sec. III for details).
Applying the second-order accurate central-diﬀerence scheme the spatial derivative of the EM ﬁeld component Ψ(i, t)

is given by

where Ψ(3)(i, t)

∂3Ψ(i, t)/∂x3. Similarly, using the third-nearest neighbor EM ﬁeld points at distance 3δ/2, we have

≡

∂
∂x

∂
∂x

Ψ(i, t) =

Ψ(i + 1, t)

Ψ(i

1, t)

−
δ

−

δ2
6

−

Ψ(3)(i, t) +

(δ4),

O

Ψ(i, t) =

Ψ(i + 3, t)

Ψ(i

3, t)

−
3δ

−

9δ2
6

−

Ψ(3)(i, t) +

(δ4).

O

A fourth-order accurate approximation of the spatial derivative ∂Ψ(i, t)/∂x is now constructed in terms of a linear
combination of Eqs. (36) and (37) which is chosen such that the terms proportional to Ψ(3)(i, t) vanish. We obtain:

∂
∂x

Ψ(i, t) =

9
8

Ψ(i + 1, t)

Ψ(i

1, t)

Ψ(i + 3, t)

Ψ(i

3, t)

−
δ

−

1
8

−

−
3δ

−

+

(δ4).

O

(cid:18)

(cid:19)
In practice, it is straightforward to implement the improved spatial discretization, since we can use the implementation
of the central-diﬀerence scheme for the two terms separately and then combine the results according to Eq. (38).
The corresponding matrix H of the 1D system (see Eq. (19)) changes from tridiagonal to ﬁve-diagonal, but most
importantly it preserves its property of being skew-symmetric. It should be noted, however, that the fourth-order
1,
accurate spatial derivative introduces errors at the boundaries since the calculation of ∂Ψ(i, t)/∂x for i = 1,2,n
and n refer, respectively, to grid points i =
1, n + 1, and n + 2 that lie outside the cavity and are implicitly
assumed to be zero.

2,

−

−

−

(cid:19)

(cid:18)

It is obvious that the fourth-order accurate approximation of the spatial derivatives can be similarly applied in
In the remainder of this section we study the numerical dispersion and the

systems of any spatial dimension d.
temporal and spatial accuracy of the algorithms for various 1D and 2D systems.

We illustrate the diﬀerence in the numerical dispersion between the poor man’s implementation and the improved
spatial discretization implementation by a comparison of the eigenmode spectra of a 1D empty cavity (ε = 1 and
µ = 1) of length L. In 1D, the continuum wave equation for the EM ﬁelds [2],

A. Numerical Dispersion

1
c2

∂2
∂t2 −

∂2
∂x2

(cid:20)

(cid:21)

Ψ(x, t) = 0 ,

kx + φ) (with a phase φ to distinguish electrical and magnetic ﬁeld
is solved by the ansatz Ψ(x, t)
. Focusing on
components) yielding the linear dispersion relation between frequency ω and wave number k: ω = c
|
the eﬀect of the spatial derivatives on the numerical dispersion, we assume perfect time integration of the algorithms
and impose periodic boundary conditions on the EM ﬁeld components: Ψp(i, t)
kpδ/2 + φ) with wave
number kp = 2πp/L and

L/(2δ). Applying the second-order accurate spatial derivative we obtain

L/(2δ) < p

cos(ωpt

cos(ωt

k
|

∝

−

∝

−

1
δ2 [Ψp(i + 2, t)

−

2Ψp(i, t) + Ψp(i

2, t)] +

−

(δ2) ,

O

while for the fourth-order accurate spatial derivative we ﬁnd

∂2
∂x2 Ψp(i, t) =

[Ψp(i + 2, t)

2Ψp(i, t) + Ψp(i

2, t)] +

−

−

−

−

[Ψp(i + 6, t)

2Ψp(i, t) + Ψp(i

6, t)] +

≤

−
∂2
∂x2 Ψp(i, t) =

2

9
8δ

(cid:19)

1
24δ
9
96δ2

2

(cid:19)

(cid:19)

(cid:18)

(cid:18)

(cid:18)

+

+

For m = 2 the analytical solution of the eigenmode spectrum for the mth-order accurate spatial derivative is given by

[Ψp(i + 2, t) + Ψp(i

2, t)

Ψp(i + 4, t)

Ψp(i

4, t)] +

−

−

−

−

(δ4) .

O

ωp

2 = 2

cos(kpδ)] ,

c
δ

2

[1

−

(cid:16)

(cid:17)

12

(36)

(37)

(38)

(39)

(40)

(41)

(42)

while for m = 4 we ﬁnd

ωp

2 =

Cl cos(lkpδ)

2 3

c
δ

(cid:16)

(cid:17)

Xl=0

with coeﬃcients C0 = 365/144, C1 =
1/288. We show in Fig. 12 that the dispersion
relations, which we obtained numerically by the mth-order accurate spatial derivative implementation for a 1D cavity
It is
of length L = 4, are in excellent agreement with the corresponding analytical solutions Eqs. (42) and (43).

87/32, C2 = 3/16, and C3 =

−

−

FIG. 12: Numerical and analytical dispersion relations for the 1D cavity of length L = 4 as obtained from calculations with
mth-order accurate approximations of the spatial derivatives (m = 2, 4). In both simulations we kept δ = 0.1 and τ = 0.01/c
ﬁxed.

clearly visible that the dispersion relation computed by the poor man’s implementation (T2S2 algorithm) suﬀers from
numerical dispersion already at frequencies above ω = 10, whereas for a grid with the same mesh size the fourth-order
accurate spatial derivative implementation (T2S4 algorithm) works well up to ω = 15.

B. Temporal and Spatial Accuracy

To perform a systematic study of the accuracy of the algorithms as a function of the time step τ and the mesh size
δ, we compute the diﬀerence between the normalized exact, Ψ(t), and the approximate, Ψn,m(t), EM ﬁeld vector as
obtained by the TnSm algorithm:

∆Ψn,m(t)

Ψ(t)

Ψn,m(t)
k

.

−

≡ k

We ﬁrst consider the propagation of a Gaussian wave packet in a 1D empty cavity (ε = 1 and µ = 1) of length

L = 30. At t = 0 the Gaussian wave packet

−
with standard deviation σ = 2 is located at x0 = 8. For t > 0 the wave packet propagates with velocity c in the
x-direction until it hits the right boundary of the cavity, becomes reﬂected, and propagates in the opposite direction.
To derive an analytical expression of the exact EM ﬁeld vector Ψ(t), we expand Ez(x, t) in the TM-modes

−

(cid:2)

(cid:3)

Ez(x, t) = exp

(x

ct)2/σ2

x0 −

Ez(x, t) =

an sin(nπx/L) sin(nπ(x0 + ct)/L),

Hy(x, t) =

an cos(nπx/L) cos(nπ(x0 + ct)/L),

∞

−

a0
2

n=1
X

+

∞

n=1
X

13

(43)

(44)

(45)

(46)

(47)

with coeﬃcients

(cid:18)
which ensure that the wave packet satisﬁes the boundary conditions Eq. (3). Using Poisson’s summation formula we
ﬁnd the following expressions for the EM ﬁeld components

(cid:19)

(cid:16)

(cid:17)

an =

2σ√π
L

exp

σ2
4

−

nπ
L

2

,

Ez(x, t) =

exp

(2nL + x + x0 −

ct)2/σ2

exp

(2nL + x

x0 + ct)2/σ2

Hy(x, t) =

exp

(2nL + x + x0 −

ct)2/σ2

+ exp

(2nL + x

x0 + ct)2/σ2

−

(cid:1)

(cid:1)

−
(cid:0)

−
(cid:0)

−

−

,

,

(cid:1)(cid:3)

(cid:1)(cid:3)

∞

n=

X
−∞ (cid:2)
∞

n=

X

−∞ (cid:2)

−
(cid:0)

−
(cid:0)

from which the exact EM ﬁeld vector Ψ(t) is constructed according to Eq. (17) on the 1D grid (see Fig. 1).

In Fig. 13 we plot ∆Ψn,m(t) as a function of the simulation time t for ﬁxed values of the mesh size δ and the time
step τ using both the T4S2 and the T4S4 algorithm. We ﬁnd that the error increases roughly proportional to the

FIG. 13: The error ∆Ψn,m(t) as a function of the simulation time t for ﬁxed values of the mesh size δ = 0.1 and the time step
τ = 0.01/c. Results are shown for the T4S2 and T4S4 algorithm.

simulation time:

∆Ψn,m(t) = √2 fn,m(τ, δ) t ,

1. The linear dependence of ∆Ψn,m(t) on t is clearly
where we used the prefactor √2 to ensure that 0
visible only for the T4S2 algorithm but is also true for the T4S4 algorithm with a much smaller slope f4,4(τ, δ). Only
at particular times t when the wave packet hits the boundaries of the cavity, the error ∆Ψ4,4(t) is seen to increase
nonlinearly in the time t and takes a value that is of the same order as ∆Ψ4,2(t). This behavior, not described by
Eq. (51), is present in fourth-order accurate spatial derivative implementations, in which the calculation of the EM
ﬁeld components close to system boundaries refer to several non-existing grid points. To study the error ∆Ψn,m(t)
as a function of the time step τ and the mesh size δ, we compute

fn,m(τ, δ)

≤

≤

fn,m(τ, δ) =

∆Ψn,m(t) .

1
√2

d
dt

In Fig. 14 we plot fn,m(τ, δ) as obtained for the 1D cavity by the four algorithms T2S2, T4S2, T2S4, and T4S4 as a
function of δ/cτ for a ﬁxed mesh size δ. For each algorithm TnSm we ﬁnd a linear decrease of log[fn,m(τ, δ)] with
τ 4, while for the T2S2 and
increasing values log[δ/cτ ]. For the algorithms T4S2 and T4S4 we ﬁnd that f4,m(τ, δ)
τ 2. This numerical result is in agreement with the rigorous upper bound on the error
T2S4 algorithms f2,m(τ, δ)
of the EM ﬁeld vector Eq. (12). For decreasing values of τ , the error in the time integration becomes negligible small
and fn,m(τ, δ) reaches minimum values which are indicated by the two lines ‘Exact S2’ for the algorithms TnS2 and

∝

∝

14

(48)

(49)

(50)

(51)

(52)

15

FIG. 14: fn,m(τ, δ) as a function of δ/cτ for the ﬁxed mesh size δ = 0.1.

FIG. 15: fn,m(τ, δ) as a function of δ for the time step τ = 0.1δ/c.

‘Exact S4’ for the algorithms TnS4. In fact, these two lines represent the numerical results that are obtained for an
exact time integration and mth-order accurate approximations to the spatial derivatives.

Next, we study fn,m(τ, δ) as a function of the mesh size δ for the time step τ = 0.1δ/c to ensure that the accuracy
of the time integration remains constant. The numerical results are plotted in Fig. 15. We see that log[fn,m(τ, δ)]
decreases linearly with increasing log[1/δ] until it levels oﬀ. At this point, the total number of operations has become so
δ4
large that it causes the numerical loss of accuracy. Outside this regime we ﬁnd for the TnS4 algorithms fn,4(τ, δ)
and for the TnS2 algorithms fn,2(τ, δ)
In analogy to the upper bound Eq. (12), the upper bound for the
mth-order accurate approximation of the spatial derivatives is given by

δ2.

∝

∝

Ψ(t)

k

−

Ψn,m(t)

k ≤

Cn,m t δm ,

(53)

where Cn,m is a constant.

We consider a second example to illustrate the numerical performance of the algorithms in 2D systems. For the

initial wave packet in the 2D cavity we make the ansatz

Ez(x, y, t) = sin(k(x

ct)) exp[

((x

ct)/σx)10

((y

y0)/σy)2] .

−
At t = 0 the wave packet is centered at (x0, y0) and moves at t > 0 with velocity c in the x-direction. The energy of the
wave packet is ﬁxed by the wave number k in the oscillating factor and its envelope is Gaussian along the y-direction

−

−

−

−

x0 −

x0 −

(54)

and has sharp edges along the x-axis (due to the exponent 10). The 2D cavity of size 12
10 with ε = 1 and µ = 1
contains two objects with dielectric constants ε = 5 and µ = 1. The parameters of the propagating wave packet are
(σx, σy) = (1.66, 1.29), (x0, y0) = (3.5, 5.5), and k = 5. In Fig. 16 we show the results for the error Eq. (44) of the
T2S2 and T2S4 algorithms with diﬀerent mesh sizes relative to a reference EM ﬁeld vector Ψ(t) that is obtained from
the T2S2 algorithm at mesh size δ = 0.025. In all simulations we kept τ = 0.1δ/c ﬁxed to compare measurements of
constant accuracy in the time integration. In Fig. 16 we show (a) the energy distribution of the initial wave packet

×

16

FIG. 16: The error ∆wn,m(r, t) for various mesh sizes and algorithms in 2D. (a) Initial energy density distribution Ψ(r, t)2. (b)
Reference energy density distribution Ψ2,2(r, t)2 at t = 6 using the T2S2 algorithm with δ = 0.025. (c) The error ∆w2,2(r, t)
on the energy density distribution at t = 6 using the T2S2 algorithm with δ = 0.1. The relative deviation is 26%. (d) The
error ∆w2,2(r, t) on the energy density distribution at t = 6 using the T2S2 algorithm with δ = 0.05. The relative deviation is
5.9%. (e) The error ∆w2,4(r, t) on the energy density distribution at t = 6 using the T2S4 algorithm with δ = 0.1. The relative
deviation is 5.1%.

(t = 0) and (b) the reference energy density distribution after simulation time t = 6 using the T2S2 algorithm. In
(c)-(e), the normalized spatial distribution of the error in the energy density distribution,

∆wn,m(r, t) =

Ψ(r, t)2
|

−

Ψn,m(r, t)2

,

|

(55)

is shown for, respectively, the algorithm T2S2 with δ = 0.1, the algorithm T2S2 with δ = 0.05, and the algorithm
T2S4 with δ = 0.1. We ﬁnd that the improved spatial discretization implementation T2S4 with δ = 0.1 performs as
well as a poor man’s implementation T2S2 with half the mesh size. The main advantage of using the T2S4 algorithm
is that it used only 20% of the computer memory and 10% of the CPU time with respect to the T2S2 algorithm.

VI. CONCLUSIONS

We have demonstrated that the previously introduced family of unconditionally stable algorithms to solve the time-
dependent Maxwell equations can be implemented with a grid of variable mesh size and with a fourth-order accurate
approximation to the spatial derivatives. The performance of the algorithms has been shown to increase signiﬁcantly as
compared to the previously applied poor man’s implementation while at the same time their property of unconditional

17

stability by construction is preserved. Performing numerical simulations on various physical model systems, we
found that a variable grid implementation can save orders of magnitude in computer memory and CPU time for a
physical system of unregular geometrical shape or with strongly varying permeability and/or permittivity. Similar
enhancements have been obtained for the fourth-order accurate spatial derivative implementation which does not only
reduce the numerical dispersion but also improves the temporal and spatial accuracy of the algorithms signiﬁcantly.
Clearly, in close analogy to the implementation of the fourth-order approximation of the spatial derivatives, the
algorithms may be improved by constructing higher-order approximations. In general, we conclude that the family of
unconditionally stable algorithms does not only preserve the fundamental symmetries of the time-dependent Maxwell
equations but is also characterized by a high degree of ﬂexibility that allows to construct implementations that are
required in diﬀerent kinds of speciﬁc applications.

This work is partially supported by the Dutch ‘Stichting Nationale Computer Faciliteiten’ (NCF). We thank W.

Bruns for providing numerical results generated by the program package GdﬁdL.

Acknowledgements

[1] J.S. Kole, M.T. Figge and H. De Raedt, Phys. Rev. E 64, 066705 (2001).
[2] M. Born and E. Wolf, Principles of Optics, (Pergamon, Oxford, 1964).
[3] H.F. Trotter, Proc. Am. Math. Soc. 10, 545 (1959).
[4] M. Suzuki, S. Miyashita, and A. Kuroda, Prog. Theor. Phys. 58, 1377 (1977).
[5] M. Suzuki, J. Math. Phys. 26, 601 (1985); ibid 32 400 (1991).
[6] H. De Raedt and B. De Raedt, Phys. Rev. A 28, 3575 (1983).
[7] H. De Raedt, Comp. Phys. Rep. 7, 1 (1987).
[8] H. Kobayashi, N. Hatano, and M. Suzuki, Physica A 211, 234 (1994).
[9] H. De Raedt, K. Michielsen, Comp. in Phys. 8, 600 (1994).
[10] A. Rouhi, J. Wright, Computers in Physics 9, 554 (1995).
[11] B.A. Shadwick and W.F. Buell, Phys. Rev. Lett. 79, 5189 (1997).
[12] M. Krech, A. Bunker, and D.P. Landau, Comp. Phys. Comm. 111, 1 (1998).
[13] P. Tran, Phys. Rev. E 58, 8049 (1998).
[14] K. Michielsen, H. De Raedt, J. Przeslawski, and N. Garcia, Phys. Rep. 304, 89 (1998).
[15] H. De Raedt, A.H. Hams, K. Michielsen, and K. De Raedt, Comp. Phys. Comm. 132, 1 (2000).
[16] K.S. Yee, IEEE Transactions on Antennas and Propagation 14, 302 (1966).
[17] A. Taﬂove and S.C. Hagness, Computational Electrodynamics - The Finite-Diﬀerence Time-Domain Method, (Artech

House, Boston, 2000).

[18] For information about the program package GdﬁdL see: http://www.gdﬁdl.de
[19] R. Alben, M. Blume, H. Krakauer, and L. Schwartz, Phys. Rev. B 12, 4090 (1975).
[20] A. Hams and H. De Raedt, Phys. Rev. E 62, 4365 (2000).
[21] See chapter 13 in: F. Scheid, Theory and Problems of Numerical Analysis, McGraw-Hill, New York, 1968.

