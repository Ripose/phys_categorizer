7
0
0
2
 
b
e
F
 
6
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
1
5
0
2
0
7
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Precise Coulomb wave functions
for a wide range of complex ℓ, η and z

N. Michel 1

Department of Physics and Astronomy, University of Tennessee, Knoxville, TN 37996, USA
Physics Division, Oak Ridge National Laboratory, P.O.B. 2008, Oak Ridge, TN 37831, USA
Joint Institute for Heavy Ion Research, Oak Ridge, TN 37831, USA

Abstract

A new algorithm to calculate Coulomb wave functions with all of its arguments complex is
proposed. For that purpose, standard methods such as continued fractions and power/asymptotic
series are combined with direct integrations of the Schr¨odinger equation in order to provide very
(ℓ)
stable calculations, even for large values of
. Moreover, a simple analytic continu-
or
(z) < 0 is introduced, so that this zone of the complex z-plane does not pose any
ation for
problem. This code is particularly well suited for low-energy calculations and the calculation of
resonances with extremely small widths. Numerical instabilities appear, however, when both
η

comparable or smaller than

are large and

and

(ℓ)

(ℓ)

(ℓ)

|ℑ

ℜ

η

|

|

|

.

|ℑ

|

Program obtainable from: CPC Program Library, Queen’s University of Belfast, N. Ireland

|

|

|ℑ

|
|ℜ
Program Summary

|

Title of the program: cwfcomplex

Catalogue number:

Program summary URL:

Licensing provisions: none

Computers on which the program has been tested: DELL GX400

Operating systems: Linux, Windows

Programming language used: C++

Memory required to execute with typical data:

No. of bits in a word: 64

1E-mail address: nmichel@utk.edu
Phone : 1-865-576-4295
Fax : 1-865-576-8746

1

No. of processors used: 1

Has the code been vectorized?: No

No. of bytes in distributed program, including test data, etc.:

No. of lines in distributed program: 2422

Nature of physical problem: The calculation of Coulomb wave functions with all of their argu-
ments complex is revisited. The new methods introduced allow to greatly augment the range
of accessible ℓ, η, and z.

Method of solution: Power/asymptotic series and continued fractions are supplemented with
(z) < 0 is
direct integrations of the Coulomb Schr¨odinger equation. Analytic continuation for
also precisely computed using linear combinations of the functions provided by standard meth-
ods, which do not follow the branch cut requirements demanded for Coulomb wave functions.

ℜ

Restrictions on the complexity of the problem:

Typical running time: N/A

Unusual features of the program: none

Keywords: Coulomb, complex analysis, numerical integration, resonances, Regge poles

PACS: 02.30.Fn, 02.30.Gp, 03.65.Ge, 23.50.+z

Long Write-up

1 Introduction

Coulomb wave functions are one of the most basic objects of particle theory. They describe the
behavior of a particle in a point-like Coulomb ﬁeld, and thus appear in virtually all domains of
quantum physics. The correspondent dimensionless Coulomb Schr¨odinger equation reads:

w′′(z) =

ℓ(ℓ + 1)
z2

(cid:18)

+

2η
z −

1

(cid:19)

w(z)

where w(z) is a Coulomb wave function, ℓ is the orbital angular momentum, and η the Som-
merfeld parameter.

The Coulomb wave functions can be expressed with hyper-geometric functions [1]. The

regular Coulomb wave function reads:

Fℓ,η(z) = Cℓ(η) zℓ+1 eiωz

2iωz)
1F1 (1 + ℓ + iωη; 2ℓ + 2;
πη + [log(Γ(1 + ℓ + iη)) + log(Γ(1 + ℓ

−

Cℓ(η) = 2ℓ exp

−

(cid:20)

iη))]

−

−

log(Γ(2ℓ + 2))

(3)

(cid:21)

2

2

(1)

(2)

In this expression, ω can be equal to
±
Outgoing (ω = 1) and incoming (ω =
way:

−

1 and the normalizing Gamow factor Cℓ(η) [1] is given.
1) Coulomb wave functions are deﬁned the following

H ω

ℓ,η(z) = eiω[z−η log(2z)−ℓ

π

2 +σℓ(η)]

ℓ + iωη, 1 + ℓ + iωη; ;

i
2ωz (cid:19)

−

log(Γ(1 + ℓ + iη))

σℓ(η) =

−
2i

2F0 (cid:18)−
log(Γ(1 + ℓ

iη))

−

where the Coulomb phase shift σℓ(η) appears [1]. The analytic continuation for complex ℓ
and η of Ref. [2, 3] for the function log(Γ(z)) occurring in Cℓ(η) and σℓ(η) is followed, thus
guaranteeing consistent values even when the negative real axis branch cut of complex variables
1 + ℓ + iη and 1 + ℓ
iη is crossed. The regular Coulomb wave function Fℓ,η, as well as the
logarithmic irregular Coulomb wave function Gℓ,η, can be expressed with H +

ℓ,η and H −

ℓ,η [1]:

−

Fℓ,η(z) =

Gℓ,η(z) =

H −

ℓ,η(z)

H +

ℓ,η(z)

−
2i
ℓ,η(z) + H −
2

H +

ℓ,η(z)

(4)

(5)

(6)

(7)

Despite the deceptively simple form of Eq. (1) and analytical expressions of Coulomb wave
functions of Eqs. (2,4), the Coulomb wave function is diﬃcult to compute numerically. Already
on the real axis, it can vary by many orders of magnitude for moderate values of
. The
situation becomes even worse when the wave function is analytically continued to the complex
plane. Analytic continuation arises when one deals, for example, with resonant states, as
energies become complex [4]. It appears also with non-integer values of ℓ with, for example,
Regge pole trajectory calculations [5]. Coulomb wave functions are multivalued functions of the
complex variable z in the general case and thus a branch cut must be imposed on the negative
z-real axis [2]. This implies that numerical calculations must be employed with care, as wave
functions issued directly from standard numerical expressions do not follow the same branch
cut discontinuities as the requested Coulomb wave function.

η

|

|

The Coulomb wave function computation has been considered in many papers. A recent
review of numerical methods and deﬁnitions for both non-relativistic and relativistic cases can
be found in Ref. [6]. Most of papers have dealt with only real arguments [7], or with at least
one of them real (ℓ in Ref. [8], z in Ref. [9]). The special important case of Whittaker functions,
with η purely imaginary (bound Coulomb wave functions), has also been treated on its own [10].
The ﬁrst paper (and only one to our knowledge) which considered all complex arguments in a
uniﬁed way is Ref. [11]. Through the use of continued fractions calculated with the powerful
Lentz method, as well as recurrence relations in ℓ and Pad´e approximants, the authors managed
to encompass a large part of the complex plane for each ℓ, η, and z. The program of Ref. [11]
quickly became a standard in the physics community and is part of the CERNLIB library [12].
However, important parts of the complex plane remained uncovered for both numerical and
theoretical reasons, as was already stated in [11]. First, because of numerical instabilities of
used recursions, one cannot calculate Coulomb wave functions, for example, close to imaginary
axes when the modulus of η or
and
integer ℓ for all z, important for low-energy narrow resonant states, has remained problematic

(ℓ) becomes large. As a consequence, the case of large

ℑ

η

|

|

3

ℑ

(z) < 0.

(z) < 0 and ω

[13]. Moreover, due to the diﬀerent branch cuts of Coulomb wave functions and asymptotic
series/continued fractions in the complex z-plane, it is impossible to directly calculate H ω
ℓ,η(z)
for

ℜ
In order to circumvent these caveats, it has been chosen to complement standard methods
with direct integrations of Eq. (1). The latter can be simply implemented, and the only require-
ment is that one has to integrate in directions of increasing modulus of the wave function to
(z) < 0 parts of the complex z-plane
avoid numerical instability [14]. Also, the
can be accessed with numerical methods, as the (wrong) Coulomb wave functions coming out
of the latter are linear combinations of the true Coulomb wave functions whose coeﬃcients can
be computed precisely, so that their determination becomes straightforward. With these new
features, it will be demonstrated that the range of arguments is much larger than in previous
programs. It is also important to state that quadruple precision is not needed with the proposed
method.

(z) < 0 and ω

ℜ

ℑ

The structure of the paper is as follows: ﬁrst, the used numerical methods will be described
in Sec. (2). Examples of calculations will then be depicted for several sets of arguments in
Sec. (3). In particular, the determination of resonant states with extremely small widths will
be discussed. The structure of the program will then be described. Finally, conclusions and
perspectives will be stated.

2 Numerical methods

2.1 Power series for Fℓ,η

The regular solution Fℓ,η can be expanded in power series [1]:

+∞

Xn=0

Fℓ,η(z) = Cℓ(η)

an zn+ℓ+1

a0 = 1
a1 =

an =

η
ℓ + 1
an−2
2η an−1 −
n(n + 2ℓ + 1)

n

∀

≥

2

(8)

(9)

This formula is very useful for small values of

|
numerical cancellations. Hence, it is used only for

|
z

z

, but is unstable for large

because of

z

|

|

1
2

.

|

| ≤

4

2.2 Asymptotic series

ℓ,η can be expanded in asymptotic series, so that for

H ω
up to a given numerical precision with a ﬁnite number of terms N [15]:

large enough, H ω

z

|

|

ℓ,η(z) can be calculated

eiω[z−η log(2z)−ℓ

π

2 +σℓ(η)]

N −1

Xn=0

bn
zn

H ω

ℓ,η(z)

≃

b0 = 1

bn+1 =

n(n + 1 + 2iωη) + iη(iη + ω)

ℓ(ℓ + 1)

2iω(n + 1)

−

n
bn ∀

≥

0

However, due to the diﬀerent branch cuts discontinuity of H ω

Eq. (10) is correct only for
complex plane, it nevertheless provides a linear combination of H +
to determine H ω

(z) < 0 and ω

(z) > 0 or

ℓ,η (see Sec. (2.6)).

ℜ

ℜ

ℑ

ℓ,η and the asymptotic series,
In the rest of the
ℓ,η, which is utilized

(z) > 0 [11].
ℓ,η and H −

In practice, the asymptotic series give a meaningful result for a given N if

< ǫ with
ǫ the numerical precision [15]. In addition, one checks if the Wronskian of the two functions
1 is equal to 2i. The Wronskian
generated by Eq. (10) respectively using ω = 1 and ω =
−
(z) > 0, Fℓ,η(z) is calculated with
value can be evaluated with Eq. (10) for
asymptotic series using Eq. (6) if H +

z
+
|
| →
ℓ,η(z) and H −
ℓ,η(z) are correctly computed with Eq. (10).

. If

∞

ℜ

|

|

aN /zN

2.3 Continued fractions
The logarithmic derivatives f ω = F ′
fractions [11]:

ℓ,η/Fℓ,η and hω = H ω′

ℓ,η/H ω

ℓ,η can be expanded in continued

f ω(z) =

+ iω +

ℓ + 1
z

hω(z) = iω

1
(cid:16)

−

η
z (cid:17)

+

−

−

1
z (cid:20)
iω
z (cid:20)

2iωaz
b + 2iωz+
ac
η + iω)+

2(z

2iω(a + 1)z
b + 1 + 2iωz +

(cid:21)

· · ·
(a + 1)(c + 1)
η + 2iω) +

2(z

(cid:21)

−
ℓ + iωη are used [11]. The
where the standard notations a = 1 + ℓ + iωη, b = 2ℓ + 2, and c =
value of f ω (also denoted as f ) is derived from Eq. (2) and is thus theoretically independent of
ω. Lentz method is used to evaluate continued fractions numerically [11].

· · ·

−

−

The f ω domain of convergence is the whole complex plane besides Fℓ,η zeros, while the one
of hω follows 2F0 analytic properties, so that it is the whole complex plane minus the half-axis
[0 :

[, where hω has a branch cut discontinuity.

−
The continued fraction hω is particularly important, as with the knowledge of Fℓ,η(z), F ′

∞

iω

ℓ,η(z),

and the Wronskian relation F ′

ℓ,ηH ω

ℓ,η −

Fℓ,ηH ω′

ℓ,η = 1, it can be used to determine H ω

ℓ,η(z) [11]:

Note that H ω
stable. If they are not, H −ω
Eq. (6). As hω and H ω

ℓ,η(z) and Fℓ,η(z) must be numerically linearly independent for this formula to be
ℓ,η(z) can be deduced from it and
ℓ,η have diﬀerent branch cuts, hω is equal to the logarithmic derivative of

ℓ,η (z) is calculated instead and H ω

H ω

ℓ,η(z) =

1
Fℓ,η(z) [f (z)

hω(z)]

−

5

(10)

(11)

(12)

(13)

(14)

ℜ

(z) > 0 or

ℓ,η only if

H ω
(z) > 0, so that Eq. (14) is correct in this zone only.
However, the continued fraction can be used even outside this zone if one takes care of branch
cuts (see Sec. (2.6)). Added to that, the continued fractions f ω and hω play a prominent role
for the calculation of Coulomb wave functions by direct integration (see Sec. (2.4)).

(z) < 0 and ω

ℜ

ℑ

|

The numerical applicability of these continued fractions is, however, hindered by spurious
eﬀects. It has been noticed in Ref. [16] that Eq. (12) exhibits anomalous convergence. When
becomes large, the general term of f ω(z) becomes very small before increasing very much,
z
|
and then only to decrease again to provide a convergent result. As a consequence, both values
of f +(z) and f −(z) are always calculated and compared to check convergence. However, the
anomalous convergence phenomenon is weaker when one chooses ω such that ω
(z) < 0 [16],
so that f ω(z) can be correct even if f +(z)

= f −(z) numerically.

ℑ

The case of hω is much better [11], but problems have nevertheless been encountered. For
3i is wrong and
hω(z)

example, the numerical value of h+(z) for ℓ = 0, η = 10, and z = 0.01
numerically equal to f (z). This diﬃculty is removed by using only the ω for which
is large enough (i.e. larger than 1 or at least larger than

h−ω(z)

f (z)

f (z)

−

−

).

|

|

|

z

|
ℓ,η(z0) and H ω′

ℓ,η(z0) with z0 not too close to the imaginary axis, chosen so that

Another problem is the very slow convergence of Eq. (13) in the vicinity of the branch cut
(see Table (1)). Direct integration is used to solve this problem. For that, if
0), one
H ω

for moderate
the number of iterations in Lentz method exceeds 100,000 (one also assumes
calculates H ω
ℓ,η|
increases from z0 to z. The slow convergence of hω is absent for z0, so that Eq. (13) can be used
for the integration starting point. Then, one integrates Eq. (1) from z0 to z, which is a stable
ℓ,η(z)/H ω
H ω
ℓ,η(z)
operation as
|
h−ω
z).
ℓ,−η(
at the end of integration. If
This formula can be demonstrated using the fact that H ω
(z) > 0 (both
), and
functions are solutions of Eq. (1) and are minimal in the considered region for
+
|
analytic continuation as both functions f1 : z
z) have the same
branch cut.

increases along the integration path. hω(z) is then equal to H ω′
ℓ,η(z) =

(z) < 0, one uses the symmetry formula hω

z) for ω
ℑ
z
| →

hω
ℓ,η(z) and f2 : z

−
h−ω
ℓ,−η(

ℓ,η(z)

H −ω

ℓ,−η(

→ −

ℓ,η|

(z)

→

∞

−

≥

∝

−

−

ℜ

ℜ

|

|

−

|

2.4 Direct integration

Considering the simplicity of the Coulomb equation (Eq. (1)), direct integration is a suitable
method to calculate Coulomb wave functions. For that, the Burlisch-Stoer-Henrici method
of Ref. [14] is used. However, one has to pay attention to two problems. Firstly, no branch
cut discontinuity can come out of direct integration, so that it is necessary to integrate in the
zones of the complex plane where branch cut eﬀects are absent. Hence, numerical integration
(z) > 0. For the other half of the complex plane, one uses the symmetry
is performed only for
ℜ
transformation z
η, leaving Eq. (1) invariant. Secondly, numerical integration is
z, η
→ −
stable only if the modulus of the Coulomb wave function increases or remains close to constant.
Increase or decrease of the wave function along the integration path is determined by its second-
order Taylor expansion at z = z0 + h:

→ −

Ψ(z)
Ψ(z0) ≃
ℓ,η, h the integration step, and (z0, Ψ(z0), Ψ′(z0)) the starting point of
where Ψ is either Fℓ,η or H ω
the numerical integration. If the modulus of the ratio deﬁned in Eq. (15) is larger than one, the

ℓ(ℓ + 1)
z2
0

2η
z0 −

1 + h

(15)

+

+

(cid:19)

1

h2
2 (cid:18)

Ψ′(z0)
Ψ(z0)

6

6
numerical integration can be performed safely. If not, the continued fraction q(z) = Ψ′(z)/Ψ(z)
is evaluated with Eq. (12) (q = f ω) or Eq. (13) (q = hω). Eq. (1) is integrated backward
from z to z0 with (z, 1, q(z)) as the starting point, guaranteeing stable integration. One
then obtains (z0, Ψc(z0), Ψ′
c(z0)) after integration, with obviously Ψc(z0) = Ψ(z0)/Ψ(z) and
Ψ′
c(z0) = Ψ′(z0)/Ψ(z). The value of (z, Ψ(z), Ψ′(z)) comes forward. The only nuisance in
this method is that the continued fraction q(z) can be wrong due to numerical instability (see
Sec. (2.3)).

|

|

|

z

Fℓ,η|

is found to decrease on its initial path, z0 is reinitialized to z/(2

This can be partially solved if one considers a direct integration of Fℓ,η(z). If

1, Fℓ,η
in the vicinity of z = 0 (non-oscillatory zone). As a consequence,
increases in modulus with
), where the power
if
from z0 to z is less likely to
series formula of Eq. (8) is available, so that a decrease of
happen. If the direct integration of Fℓ,η(z) is found to be unstable despite this change of path,
it is preferred to calculate H ω
ℓ,η is
avoided) as hω is numerically more stable than f ω (see Sec. (2.3)). Fℓ,η(z) is then calculated
with Eq. (6) and the following formula:

|
ℓ,η(z) with direct integration (ω chosen so the branch cut of hω

Fℓ,η|

(ℓ) >

−

ℜ

z

|

|

H −ω

ℓ,η (z) =

2iω
ℓ,η(z) [hω(z)

H ω

h−ω(z)]

−

ℓ,η (z) are not numerically equal, so that it is not employed if

which can be obtained similarly to Eq. (14). This process is, however, stable if H ω
ℓ,η(z) and
H −ω
is found to be smaller
than 0.1 on its integration path. This is a sound procedure as f ω(z) is usually correct in this
case if ω

(z) < 0 (see Sec. (2.3)).

Fℓ,η|

|

As a result, direct integration is a powerful tool to determine Fℓ,η(z) outside the zone of
applicability of Eq. (8). It also provides hω(z) close to its branch cut, where the numerical cost
of Eq. (13) becomes prohibitive (see Sec. (2.3)).

ℑ

2.5 H ω

ℓ,η expansion

When 2ℓ is not an integer, the following formula can be used to calculate H ω

ℓ,η [11]:

Fℓ,η eiωχ

F−ℓ−1,η

H ω

ℓ,η =

−
sin χ
σ−ℓ−1(η)

χ = σℓ(η)

−

(ℓ + 1/2)π

−

F ′
ℓ,ηF−ℓ−1,η −

Fℓ,ηF ′

−ℓ−1,η = sin χ

In practice, it has been chosen to apply it only for

1, as other methods
have been found to be more robust for other cases. For a given z, the expression of Eq. (17) is
numerically stable if the Wronskian relation between Fℓ,η and F−ℓ−1,η is respected:

1 and

| ≤

| ≥

(ℓ)

|ℑ

z

|

Note that Eq. (18) is not used to calculate sin χ as it is unstable due to cancellation eﬀects.

Another formula is preferred:

which can be demonstrated using Eqs. (8,19) with z

0.

sin χ =

(2ℓ + 1) Cℓ(η) C−ℓ−1(η)

−

→

7

(16)

(17)

(18)

(19)

(20)

2.6 Analytic continuation for

(z) < 0

ℜ

Analytic continuation for
ℜ
Eqs. (3,8), Fℓ,η(z) and Fℓ,−η(

−

(z) < 0 is ﬁrst considered for the regular function Fℓ,η. Using

z) can be shown to be proportional:

Fℓ,η(z) =
Fℓ,η(z) =

−
−

e−π(η−iℓ) Fℓ,−η(
e−π(η+iℓ) Fℓ,−η(

z) for arg(z) > 0
z) for arg(z)
0

−
−
z), so that calculations for

≤

(21)

(z)

ℜ

≥

0 are

Hence, Fℓ,η(z) can always be deduced from Fℓ,−η(
−
suﬃcient to determine Fℓ,η in all the complex plane.

ℑ

ℑ

(z) > 0, but wrong results occur when

ℜ
(z) < 0 [11]. We will denote as H ω (ASd)

The situation is more complicated for H ω
(z) < 0 and ω

ℓ,η, as the direct evaluation of Eq. (10) and Eq. (14)
(z) < 0
provides correct values for
and ω
the numerical values coming from
a naive implementation of respectively Eq. (10) and Eq. (14). As they are issued from analytic
expressions providing solutions of Eq. (1), they are still solutions of this equation even when
, and H ω (CFd)
ℓ,η
ℜ
imply that the two latter functions are linear combinations of H +
ℓ,η in this quadrant of
the z-complex plane. Their coeﬃcients will be shown to be very simple expressions of ℓ and η
and can be related to standard circuital relations [17].
+

(z) < 0. However, the diﬀerent branch cuts of H ω

, one can deduce from Eqs. (4,10) that:

and H ω (CFd)
ℓ,η

ℓ,η, H ω (ASd)

ℓ,η and H −

If one considers

(z) < 0 and ω

ℑ

ℜ

ℓ,η

ℓ,η

z

|

∞

| →
ℓ,η(z) = H ω (ASd)

ℓ,η

H ω

(z) + aω H

−ω (ASd)
ℓ,η

where aω is a constant depending on ℓ and η. The equality H −ω
region is also used. From Eqs. (6,22), one has:

ℓ,η = H

(z) for

(z) < 0 and ω

(z) < 0

(22)

ℜ

ℑ
−ω (ASd)
ℓ,η

in the considered

2iFℓ,η(x−) = H + (ASd)

ℓ,η

2iFℓ,η(x+) = H

−

(x−) + (a+ −
(x+) + (a−
−

− (ASd)
ℓ,η

1) H

− (ASd)
ℓ,η

(x−)

1) H + (ASd)
ℓ,η

(x+)

where x+ = x + iǫ and x− = x
H ω (ASd)
ℓ,η

−

are straightforward from Eqs. (8,10), so that Eq. (23) can be rewritten as:

iǫ for x < 0 and ǫ > 0. Branch cut discontinuities of Fℓ,η and

2i e−2iπℓ Fℓ,η(x+) = e−2πη H + (ASd)

ℓ,η

(x+) + e2πη (a+ −

1)H

− (ASd)
ℓ,η

(x+) + O(ǫ)

(25)

Finally, using Eqs. (24,25) with ǫ
formula:

→

0, one obtains aω = 1

e2iπ(iη−ℓω) and hence the requested

−

H ω

ℓ,η(z) = H ω (ASd)

ℓ,η

(z) +

1

e2iπ(iη−ℓω)

H

−ω (ASd)
ℓ,η

(z)

−

(cid:2)

(cid:3)

for which

(z) < 0 and ω

(z) < 0.

ℜ

ℑ

and analytic continuation, one obtains:

Considering the diﬀerent branch cut discontinuities of Eqs. (10,14) on the negative real axis

H ω (CFd)
ℓ,η

(z) = e2iπ(ℓω−iη)H ω (ASd)

(z)

ℓ,η

(23)

(24)

(26)

(27)

with

(z) < 0 and ω

(z) < 0.

ℜ

ℑ

8

Using Eqs. (6,26,27), the formulas analog to Eq. (26) for continued fractions are derived:

H ω

H ω

ℓ,η(z) = H ω (CFd)
ℓ,η
−ω (CFd)
ℓ,η(z) = H
ℓ,η

2iω

e2iπ(ℓω−iη)
(z)
(z) + 2iω e−2iπ(ℓω+iη) Fℓ,η(z)

−

−

1

(cid:2)

(cid:3)

Fℓ,η(z)

(28)

(29)

ℜ

(z) < 0, ω

with
ℑ
Fℓ,η(z) is prerequisite to determine H ω
numerical evaluation of H ω

(z) < 0 for Eq. (28) but ω

(z) > 0 for Eq. (29). As the calculation of
ℓ,η(z) with continued fraction formulas (see Eq. (14)), the

ℑ

ℓ,η(z) with Eqs. (28,29) is straightforward.
Even though the expressions of the coeﬃcients in front of H −ω
ℓ,η

in Eq. (26) and Fℓ,η in
Eqs. (28,29) are elementary, care must be given to calculate them due to possible overﬂow or
underﬂow and numerical cancellations. One has to use complex generalizations of the standard
C-language functions log1p(x) = log(1 + x) and expm1(x) = ex
0 to avoid possible
numerical inaccuracies.
As a result, the

(z) < 0 domain no longer poses any numerical problem, as the formulas

1 for x

→

−

of Eqs. (26,28,29) render it comparable to the rest of the z-complex plane.

ℜ

2.7 Poles of the Coulomb wave functions

ℜ

−

(ℓ) >

When 1 + l + iωη is a negative integer, Coulomb wave functions are undeﬁned (see Eqs. (3,5)).
Nevertheless, if one considers
1, numerical solutions of Eq. (1) always exist and can be
computed. For this, Fℓ,η is deﬁned with Eq. (8) putting arbitrarily Cℓ(η) = 1. Direct integration
can be performed precisely for Fℓ,η, as the continued fraction f ω of Eq. (12) is ﬁnite so that no
numerical inaccuracy can occur. H −ω
= f ω, so that
one can calculate two linearly independent solutions of Eq. (1) when 1 + l + iωη is a negative
integer. Note that the branch cut of H −ω
ℓ,η is, for this deﬁnition, [0 : iω
[ and not the negative
real axis. H ω
ℓ,η and Gℓ,η can, however, not be deﬁned so that they are arbitrarily put equal to
Fℓ,η and H −ω
ℓ,η respectively.

ℓ,η can still be deﬁned with Eq. (14) as h−ω

∞

2.8 Quasi-real ℓ, η and z

When ℓ, η or z are very close to their real axes with at least one of them complex, the imaginary
part of Coulomb wave functions can become tens of order of magnitude smaller than their real
parts. Consequently, it can be numerically imprecise as calculations are always provided up to
the same absolute precision for both real and imaginary parts. This is especially visible if one
10−20 keV)
deals with resonant states of extremely small widths γ such as proton emitters (γ
[18]. For these kinds of states, one generally uses approximate current formulas [19], providing
very good values for γ if it is small enough. However, it is possible to reach the same precision
directly at the Coulomb wave function level. For this, one expands the Coulomb wave functions
Fℓ,η and Gℓ,η up to ﬁrst order in the vicinity of the real axes of ℓ, η, and z:

∼

A(ℓ, η, z) = A(ℓr, ηr, x) + i

(ℓr, ηr, x) + ηi

(ℓr, ηr, x) + y

(ℓr, ηr, x)

∂A
∂ℓ

ℓi
(cid:20)

∂A
∂η

∂A
∂z

+ O(ℓ2

i , η2

i , y2)

(cid:21)

(30)

where ℓr, ηr, x and ℓi, ηi, y are respectively the real and imaginary parts of ℓ, η, and z, and
A(ℓ, η, z) is either Fℓ,η(z) or Gℓ,η(z). All values involving A(ℓr, ηr, x) are real (one considers

9

6
x > 0 only) so that function and partial derivatives can be evaluated numerically. In practice, if
< √ǫ
ǫ is the demanded numerical precision, the conditions
must be fulﬁlled for Eq. (30) to be used. It was checked that direct and approximate results
= √ǫ
yield the same results up to a precision comparable to ǫ if
with ǫ = 10−10 (see Table (2)).

= √ǫ min(1, x),

< √ǫ min(1, x),

ℓi|
|
ηi|

< √ǫ and

ηi|

ℓi|

=

y

y

|

|

|

|

|

|

|

H ω

ℓ,η(z) can be obtained straightforwardly from the knowledge of Fℓ,η(z) and Gℓ,η(z). Con-
sequently, the whole Coulomb wave function can be derived up to a given relative numerical
precision for both real and imaginary parts even if they are very diﬀerent in modulus.

2.9 Scaled wave functions and alternative normalization

It often happens that H ω
become large, but only
through the exponential factor of Eq. (4). As a consequence, the following scaled Coulomb
wave functions can also be calculated in the code:

ℓ,η(z) overﬂows or underﬂows when

or

η

z

|

|

|

|

H ω

ℓ,η(z)sc = H ω

ℓ,η(z) e−iω[z−η log(2z)]

(31)

They are particularly useful if one calculates products of Coulomb wave functions where the
diﬀerent exponential factors cancel each other.
At the limit of very small energies, where

is very large, Cℓ(η) can also overﬂow or
underﬂow, so that it is no longer possible to calculate Coulomb wave functions. However, their
normalization factor is usually unimportant, as in the case of a resonant state calculation. For
that, we introduced the following renormalized wave functions:

η

|

|

Fℓ,η(z)r = Cℓ(η)−1 Fℓ,η(z)
H ω
ℓ,η(z)r = Cℓ(η) H ω
ℓ,η(z)
Gℓ,η(z)r = Cℓ(η) Gℓ,η(z)

(32)

(33)

An example of a resonant state for which Cℓ(η) underﬂows will be given in Sec. (3.2).

2.10 Recurrence relations and associated Wronskian tests

Coulomb wave functions obey recurrence relations of their angular momentum ℓ [11]:

Sℓ
Rℓ
ℓ,η(z) = Rℓ wℓ−1,η(z)

wℓ,η(z) =
w′

wℓ−1,η(z)

ℓ−1,η(z)

w′

1
Rℓ
Sℓ wℓ,η(z)

−

−

where w is any of the F, G, H + or H − functions, Rℓ = (2ℓ + 1)

η
ℓ
(ℓ), denoted ℓr, is supposed to be larger than zero. These recurrence relations are stable
ℜ
[11], for ℓr large enough,
provided
the recurrence relations are stable with ℓr decreasing if one calculates regular Coulomb wave
functions and with ℓr increasing if one calculates irregular Coulomb wave functions. For the
irregular wave functions, one has the most stable calculations if one calculates H ω
ℓ,η(z) with ω
, ℓ0 being the angular momentum of smallest modulus. Indeed,
chosen so

increases with ℓr. As Fℓ,η(z)

0 with ℓr →

Cℓ(η)
Cℓ−1(η)

and Sℓ =

wℓ,η(z)

H −ω

H ω

ℓ
z

∞

→

+

+

|

|

.

ℓ0,η(z)

|

| ≤ |

ℓ0,η(z)

|

10

this guarantees H ω
ℓ0,η to be the minimal solution of Eq. (1) if Fℓ0,η is not. One may have,
however, a turning point ℓt before which
increases [11]. In this case, Fℓ,η has to be
Fℓ,η(z)
recurred backward from the angular momentum of largest modulus, denoted ℓ1, backward to
ℓt but forward from ℓ0 to ℓt. Conversely, H ω
ℓ,η must be recurred backward from ℓt to ℓ0 and
forward from ℓt to ℓ1.

|

|

The previous recurrence relations provide additional relations between Coulomb wave func-

tions:

Fℓ,ηH ω

F ′
ℓ,ηH ω

Fℓ+1,ηH ω
ℓ+1,η −
ℓ+1,η + Fℓ,ηH ω′

ℓ,η =
ℓ+1,η = F ′

1
Rℓ+1
ℓ+1,ηH ω

ℓ,η + Fℓ+1,ηH ω′

ℓ,η

(34)

(35)

H ω

ℓ,η(z)

If ω is chosen so
, in order to have two Coulomb wave functions numerically
linearly independent, Eqs. (34,35) provide a good test to check the accuracy of the Coulomb
wave functions calculated with the methods of previous sections, as angular momentum recur-
rence relations do not enter them.

ℓ,η (z)

| ≤ |

|

|

H −ω

The non-standard normalization deﬁned in Eq. (32) can also be used in the code along with
recurrence relations, which can be obtained straightforwardly from Eqs. (32,33). Scaling of H ω
ℓ,η
for ω =
1 (see Eq. (31))) is, however, not considered in this context, because all Coulomb
wave functions have to be numerically ﬁnite for the method to work, so that it would only
result in the trivial multiplication of H ω

ℓ,η(z) by e−iω[z−η log(2z)].

±

3 Examples

3.1 Calculations in diﬃcult zones of the complex plane

In order to illustrate the proposed numerical methods, we selected sets of ℓ, η, and z parameters
having sizable values. z is always of the form Rteiθ, where Rt =
2 is a
generalization of the turning point in the complex plane. Problems of convergence indeed
typically occur in the vicinity of this point [11].
have been chosen so that at least
and
one is large in a set of parameters (see Figs. (1,2,3,4,5)).

ℓ(ℓ + 1)
|

p|

+

+

η

η

η

ℓ

|

|

|

|

|

|

|

|

|

|

|

η

|ℑ

and

large with

It was chosen not to have both

(ℓ)
or comparable, as
calculations become unstable therein. For these values of ℓ, η, and z, Coulomb wave functions
vary by several orders of magnitude along the complex circle of radius Rt and oscillate much as
well. Hence, we represented the decimal logarithm of the modulus of Coulomb wave functions,
which varies smoothly. One should note that the discontinuities encountered at θ = π follow
the branch cuts imposed to Coulomb wave functions and are not induced by any numerical
inaccuracy. These calculations show that Coulomb wave functions can be calculated precisely
even when they vary much in argument and modulus.

(ℓ)

(ℓ)

|ℜ

|ℑ

<

|

|

3.2 Calculations of resonant states of very small widths

In order to show the possibilities of the present program related to resonant states with ex-
tremely small widths, e.g. proton emitters [18], we consider a spherical Schr¨odinger equation

11

with a Woods-Saxon potential crudely mimicking a heavy nuclear target acting on a proton
projectile:

h =

p2
2µ −

V0
1 + exp

+ Vc(r)

r−R0
d

(cid:0)

(cid:1)

where µ is the reduced mass of the proton state so that ~2/2µ = 21 MeV fm2, d is the diﬀuseness
of the potential ﬁxed at 0.63 fm, R0 is the radius of the potential of 6.5 fm, V0 is the depth of
the Woods-Saxon potential, and Vc(r) is a Coulomb potential generated by a uniformly charged
sphere of radius R0 and charge Z = 66. These parameters correspond to the proton emitter
141Ho [19].

The 2s1/2 proton state energy and width of the Hamiltonian h of Eq. (36) is calculated
for several values of V0 (see Table (3)). The width γ coming from direct integration of h is
compared with the following standard current approximation [19]:

(36)

(37)

γc =

(k)

ℜ

~2

µ (cid:12)
(cid:12)
(cid:12)
(cid:12)

2

u(R)
H +(kR) (cid:12)
(cid:12)
(cid:12)
(cid:12)

where k is the linear momentum of the proton resonant state, u(r) its radial wave function,
H +(kr) for r > R. The value R = 20 fm was chosen.
and R a radius large enough so u(r)
As expected, both values γ and γc are identical, as γ is very small. If V0 = 56.46 MeV, one
10−4 MeV while the width is numerically zero. This value could be
obtains an energy of 6.949
·
computed only through the renormalization of Coulomb wave functions of Eq. (32), as for this
energy log10(Cℓ(η)) =

535, implying Cℓ(η) underﬂow.

∝

These results show that the proposed program is very well suited for the direct calculation of
very narrow resonances, for which one has to enter numerically challenging areas of the complex
plane.
It would be interesting to use this program along with coupled-channel integration
methods [18, 19] in order to extend the current method to deformed states.

−

4 The program cwfcomplex

4.1 Routines of the program

The code cwfcomplex is written in standard C++, uses only standard libraries and is thus
portable on many machines. It is separated in four diﬀerent ﬁles: complex functions.H, cwf-
comp.H, cwfcomp.cpp and test rec rel.cpp.

complex functions.H contains elementary complex functions which are not in the standard

library, and routines calculating constants speciﬁc to the Coulomb wave functions:

inf norm: provides the inﬁnite norm of a complex number.

isﬁnite: returns true if the complex number is ﬁnite.

operators overloading of complex and integers.

•

•

•

•

expm1 : complex generalization of the function expm1(x) = ex

1 precise for x

0.

−

→

12

•

•

•

•

•

•

•

•

•

•

•

•

•

•

•

•

•

•

•

log1p: complex generalization of the function log1p(x) = log(1 + x) precise for x

0.

→

log Gamma: log(Γ(z)) calculated with the method of Ref. [3].

sigma l calc: complex Coulomb phase shift σℓ(η) (see Eq. (5)).

log Cl eta calc: log(Cℓ(η)) (see Eq. (3)).

log cut constant AS calc: logarithm of the constant in front of H

−ω (ASd)
ℓ,η

in Eq. (26).

log cut constant CFa calc: logarithm of the constant in front of Fℓ,η in Eq. (28).

log cut constant CFb calc: logarithm of the constant in front of Fℓ,η in Eq. (29).

sin chi calc: sin(χ) calculated with Eq. (20).

exp I omega chi calc: eiωχ calculated with Eqs. (18,20).

•
In cwfcomp.H, the class ODE integration and member functions extrapolation in zero, F r u,
integration Henrici and operator () performing direct integration of the Coulomb Schr¨odinger
equation are deﬁned, as well as the class Coulomb wave functions, with which one can calcu-
late all Coulomb wave functions. All the routines of the class Coulomb wave functions are in
cwfcomp.cpp .

F dF init:
direct integration (see Sec. (4.3)).

initialization of the member variables debut, F debut and dF debut used for

asymptotic series: calculate the asymptotic series in Eq. (10) for Coulomb wave function
and derivative.

continued fraction f, continued fraction h: calculate the continued fractions of respec-
tively Eq. (12) and Eq. (13).

F dF power series: calculate Fℓ,η(z) and F ′

ℓ,η(z) with Eq. (8).

ℓ,η(z) and H ω′

asymptotic expansion F dF, asymptotic expansion H dH scaled : calculate Fℓ,η(z) and F ′
(H ω

ℓ,η(z) scaled, see Eq. (31)) from Eqs. (10,26,31).
F dF direct integration, H dH direct integration: calculate Fℓ,η(z) and F ′
and H ω′

ℓ,η(z)) by direct integration of Eq. (1).

ℓ,η(z) (H ω

ℓ,η(z)

ℓ,η(z)

partial derivatives, ﬁrst order expansions: calculate Fℓ,η(z) and F ′
G′

ℓ,η(z) with the method of Sec. (2.8).

ℓ,η(z) or Gℓ,η(z) and

H dH from ﬁrst order expansions: calculate H ω

ℓ,η(z) and H ω′

ℓ,η(z) with the method of Sec. (2.8).

H dH with F dF and CF : calculate H ω

ℓ,η(z) and H ω′

ℓ,η(z) with Eqs. (13,28,29).

H dH with expansion: calculate H ω

ℓ,η(z) and H ω′

ℓ,η(z) with Eq. (17).

F dF with symmetry relations: calculate Fℓ,η(z) and F ′

ℓ,η(z) for

(z) < 0 with Eq. (21).

ℜ

13

Except F dF init, all the latter routines are private in the class Coulomb wave functions and
should not be used directly.

The following routines of the class Coulomb wave functions are public and provide the

requested Coulomb wave functions:

F dF : calculate Fℓ,η(z) and F ′

ℓ,η(z).

G dG: calculate Gℓ,η(z) and G′
ℓ,η(z) and H ω′

H dH : calculate H ω

ℓ,η(z).

ℓ,η(z).
ℓ,η(z) and H ω′

H dH scaled : calculate H ω

ℓ,η(z) scaled (see Eq. (31)).

The calculation of Gℓ,η(z) and G′
derivatives, so that one has Gℓ,η(z) = H +

ℓ,η(z) is performed by calculating Fℓ,η(z), H +
iFℓ,η(z) and G′

ℓ,η(z) = H +′

ℓ,η(z)

ℓ,η(z)

ℓ,η(z), and their
ℓ,η(z).

iF ′

The ﬁle test rec rel.cpp contains additional useful routines using the class Coulomb wave functions:

−

−

Wronskian test: function calculating Coulomb wave functions accuracy from Wronskian’s
(see Sec. (2.10)).

cwf l tables recurrence relations: routine calculating Coulomb wave functions with recur-
rence relations for integer spaced ℓ’s (see Sec. (2.10)).

F dF l tables rec rel helper, cwf l tables rec rel helper : routines called by
cwf l tables recurrence relations, not intended to be used directly.

4.2 Use of the program

Due to its object-oriented programming, cwfcomplex is easy to use. One has to declare ﬁrst a
class Coulomb wave functions with three parameters l, eta, and is it normalized, where l and
eta are two complex numbers representing ℓ and η, and is it normalized is a boolean equal
to true if one uses the standard normalization of Coulomb wave functions and false if one
uses the normalization of Eq. (32). For example, one declares class Coulomb wave functions
cwf(is it normalized,l,eta);. Then, one can use the member functions of the class cwf. For that,
one needs the complex value z, the integer omega =
ℓ,η), and two complex numbers
A, dA to store the Coulomb wave function and its derivative. The instructions to obtain A and
dA are the following:

1 (for H ω

±

cwf.F dF (z,A,dA); to compute Fℓ,η(z) and F ′

ℓ,η(z).

cwf.G dG (z,A,dA); to compute Gℓ,η(z) and G′

cwf.H dH (omega,z,A,dA); to compute H ω

ℓ,η(z).
ℓ,η(z) and H ω′

ℓ,η(z).
ℓ,η(z) and H ω′

cwf.H dH scaled (omega,z,A,dA); to compute H ω

ℓ,η(z) scaled (see Eq. (31)).

•

•

•

•

•

•

•

•

•

•

•

14

In order to test the accuracy of previous functions, one has to declare a second class

Coulomb wave functions of parameters is it normalized, l+1 and eta, for example,
class Coulomb wave functions cwf p(is it normalized,l+1,eta);. Then, the instruction const
double W = Wronskian test (z,cwf,cwf p); provides their relative precision, calculated from
their Wronskian’s and angular momentum recurrence relations (see Sec. (2.10)), stored in the
double W.

Tables of integer spaced ℓ’s Coulomb wave functions are calculated with the routine

cwf l tables recurrence relations. For this, one needs the complex angular momentum of small-
est modulus l deb, the number of angular momenta to calculate Nl, eta, is it normalized, the
number of z-variables Nz, the one-dimensional complex array of z-variables z tab, six two-
dimensional Nz x Nl complex arrays F tab, dF tab, G tab, dG tab, Hp tab, dHp tab, Hm tab
and dHm tab to respectively store the regular wave functions F and derivatives, the irregular
wave functions G and derivatives, the outgoing irregular wave functions H + and derivatives,
and the incoming irregular wave function H − and derivatives, so that F tab[iz][il] will provide
Fℓ,η(z) with ℓ =l deb+il and z =z tab[iz] (same for other tables). The instruction is then:

cwf l tables recurrence relations (l deb,Nl,eta,is it normalized,Nz,z tab,

F tab,dF tab,G tab,dG tab,Hp tab,dHp tab,Hm tab,dHm tab);

If one considers a single complex variable z, one can use the following instruction:

cwf l tables recurrence relations (l deb,Nl,eta,is it normalized,z,

F tab,dF tab,G tab,dG tab,Hp tab,dHp tab,Hm tab,dHm tab);

where F tab,...,dHm tab are now one-dimensional arrays of Nl complex numbers (F tab[il] =
Fℓ,η(z) with ℓ =l deb+il, same for other tables).

Examples are provided by the program examples.cpp, which calculates values of diﬀerent
Coulomb wave functions and derivatives on a circular z-path of the form z = Reiθ, with
[0 : 2π[, for given ℓ0, η and R, their accuracy with the function Wronskian test and a table
θ
of integer spaced ℓ’s Coulomb wave functions with the routine cwf l tables recurrence relations,
with the same parameters as before and ℓ starting from ℓ0.

∈

4.3 Recommendations

Even though there are no restrictions for the complex values used in the program, it is advised
(ℓ) >
1. Calculations have indeed been found to be more stable for these values. If
to use
−
ℜ
(ℓ)
one has
1, as Eqs. (17,18)
ℜ
≤ −
−ℓ−1,η eiωχ.
ℓ,η = H ω
imply H ω

1, one can use the symmetry transformation ℓ

ℓ
→ −

−

Due to the direct integration procedures, Coulomb wave functions should be calculated if
possible for z varying smoothly if one considers tables of Coulomb wave function values. Indeed,
the complex numbers z, Fℓ,η(z), F ′
ℓ,η(z) are stored in the class under the names debut, F debut
and dF debut after each calculation, so that the integration from this point to the next is faster
and more precise if z varies continuously in the complex plane. Also, it is better for
Fℓ,η|
to increase on its path as then no continued fraction calculation f (z) (see Eq.(12)) is needed
during direct integration.

|

15

5 Conclusion

|

|

|

|

|

|

η

or

|ℑ

|ℑ

|ℑ

|ℑ

(ℓ)

(ℓ)

(ℓ)

(η)

increases.

as important as 80, and

The computation of Coulomb wave functions with all its arguments complex is a very diﬃcult
task. The single use of power/asymptotic series and continued fractions quickly shows its
It was found that the range of accessible ℓ, η, and
limitation when
z is greatly augmented by adding the direct integration method of the Coulomb equation.
Calculations are stable for values of
can be as large as
100 as well. This method is particularly stable for the implementation of extremely narrow
(ℓ)
resonant states. However, instabilities appear when both
and
|
. For example, the values ℓ = 15i, η = 10, and z = 20eiθ
smaller or comparable to
used in a calculation similar to the ones presented in Sec. (3.1) provide wrong wave functions
in the vicinity of θ = 3π/2. This particular problem can be treated by always accepting the
value of f ω(z) in F dF direct integration for backward integration (see Sec. (2.4)). Other issues
> 1 or
can be solved by using H dH with expansion in H dH and H dH scaled even if
< 1. (The comments in the code beginning with four slashes explain to the user how
|ℑ
to make modiﬁcations accordingly.) Nevertheless, these are solutions for very particular cases
and cannot be included in a general program. Calculations can also become too long if one
< 10−5, as the continued
considers irregular Coulomb wave functions for 0 <
fraction of Eq.(13) converges very slowly for z
0 [11] and direct integration cannot be used
(ℓ)
in this region. Even though one encounters numerical problems for large values of
|
and
, this program has rendered possible calculations which could not be
undertaken with standard methods.

are large, and

or very small

< 1 and

(ℓ)/

(ℓ)

(ℓ)

|ℑ

|ℜ

|ℑ

∼

ℜ

η

η

z

z

z

ℓ

|

|

|

|

|

|

|

|

|

|

|

|

|

|

Acknowledgments

Discussions with A.T. Kruppa and J. Rotureau are gratefully acknowledged. This work was sup-
ported in part by the U.S. Department of Energy under Contracts Nos. DE-FG02-96ER40963
(University of Tennessee), DE-AC05-00OR22725 with UT-Battelle, LLC (Oak Ridge National
Laboratory), and DE-FG05-87ER40361 (Joint Institute for Heavy Ion Research).

References

[1] M. Abramowitz, Chap. 14 “Coulomb Wave Functions”, Handbook of Mathematical Func-
tions, edited by M. Abramowitz and I.A. Stegun, National Bureau of Standards, Applied
Mathematics Series - 55 (1972).

[2] J. Humblet, Nucl. Phys. 50 (1964) 1; Ann. Phys. 155 (1984) 461.

[3] K.S. K¨olbig, Comp. Phys. Comm. 4 (1972) 221.

[4] G.A. Gamow, Zs. f. Phys. 51 (1928) 204; 52 (1928) 510.

[5] A. Amaha et al., Phys. Rev. A 45 (1992) 1596.

[6] M.J. Seaton, Comp. Phys. Comm. 146 (2002) 225.

16

[7] A.R. Barnett, J. Comput. Phys. 46 (1982) 171.

[8] T. Tamura and F. Rybicki, Comp. Phys. Comm. 1 (1969) 25.

[9] T. Takemasa, T. Tamura and H.H. Wolter, Comp. Phys. Comm. 17 (1979) 351.

[10] C.J. Noble, Comp. Phys. Comm. 159 (2004) 55.

[11] I.J. Thompson and A.R. Barnett, Comp. Phys. Comm. 36 (1985) 363; J. Comput. Phys.

64 (1986) 490.

[12] CERNLIB library, C309: Coulomb Wave, Bessel, and Spherical Bessel Functions for Com-

plex Argument(s) and Order
http://wwwasdoc.web.cern.ch/wwwasdoc/shortwrupsdir/c309/top.html

[13] A.T. Kruppa, private communication.

[14] W.H. Press, S.A. Teukolsky, W.T. Vetterling and B.P. Flannery, Numerical Recipes in C,

Cambridge University Press 1988-1992.

[15] J. Todd, Survey of Numerical Analysis, McGraw-Hill Book Company, Inc., New York 1962.

[16] W. Gautschi, Math. Comp. 31 (1977) 994.

[17] A. Dzieciol, S. Yngve and P.O. Fr¨oman, J. Math. Phys. 40 (1999) 6145.

[18] A.T. Kruppa, B. Barmore, W. Nazarewicz and T. Vertse, Phys. Rev. Lett. 19 (2000) 4549.

[19] A.T. Kruppa, N. Michel and W. Nazarewicz, in Proceedings of the International Conference
on Nuclear Physics, Large and Small: Microscopic Studies of Collective Phenomena,
presented by W. Nazarewicz at Cocoyoc, Morelos, Mexico, April 19-22, 2004
Eds: Bijker, R. et al. New York, AIP (AIP Conference Proceedings 726) (2004) 7.

17

Test Input

true
(1,0.1)
(50,50)
100.156
10
3

# Description of the input parameters
#
# Boolean: true if ones uses standard normalization, false if one uses alternative normalization.
# Complex: angular momentum l.
# Complex: Sommerfeld parameter eta.
# Double: radius R of the path in the complex plane: z = R exp(i theta), theta in [0:2 pi[.
# Integer: number of points Nz to be considered on the path.
# Integer: number of points Nl for the recurrence relation : l[rec] = l+k, k in [0:Nl-1].
#
# Compilation: g++ -O3 examples.cpp -o run
# Input instruction: ./run < test.input
# The output is in test.output .

18

Test Output

is it normalized:true l:(1,0.1) eta:(50,50) R:100.156 Nz:10 Nl:3

z:(100.156,0)
F:(-1.021072923e+15,-2.836755456e+15) F’:(1.275057299e+15,-2.729507771e+15)
G:(2.836755456e+15,-1.021072923e+15) G’:(2.729507771e+15,1.275057299e+15)
H+:(5.673510913e+15,-2.042145845e+15) H+’:(5.459015542e+15,2.550114598e+15)
H-:(7.0774288e-17,1.501204734e-16) H-’:(5.671783379e-17,-1.558437769e-16)
Wronskian test: 1.628444125e-11

z:(81.02790609,58.87021973)
F:(0.01090170509,0.002924757522) F’:(0.006665318369,0.003695114571)
G:(57.24722492,-32.54791917) G’:(-42.75162529,10.97359983)
H+:(57.24430017,-32.53701746) H+’:(-42.7553204,10.98026514)
H-:(57.25014968,-32.55882087) H-’:(-42.74793017,10.96693451)
Wronskian test: 1.307402399e-11

z:(30.94990609,95.25401645)
F:(-2.246133078e-15,2.098754042e-15) F’:(-5.747597654e-16,2.506104287e-15)
G:(-4.367342675e+13,-1.907186698e+14) G’:(1.181536987e+14,1.103266317e+14)
H+:(-4.367342675e+13,-1.907186698e+14) H+’:(1.181536987e+14,1.103266317e+14)
H-:(-4.367342675e+13,-1.907186698e+14) H-’:(1.181536987e+14,1.103266317e+14)
Wronskian test: 2.604836552e-11

z:(-30.94990609,95.25401645)
F:(-3.696304706e-35,8.374503306e-35) F’:(5.116568262e-35,9.162544125e-35)
G:(2.32622983e+33,-4.170545023e+33) G’:(2.19801873e+33,4.986604576e+33)
H+:(2.32622983e+33,-4.170545023e+33) H+’:(2.19801873e+33,4.986604576e+33)
H-:(2.32622983e+33,-4.170545023e+33) H-’:(2.19801873e+33,4.986604576e+33)
Wronskian test: 6.182547672e-12

z:(-81.02790609,58.87021973)
F:(-2.432130956e-67,3.004725207e-66) F’:(3.593950134e-66,1.98955822e-66)
G:(1.065320986e+65,-5.911485321e+64) G’:(1.320210869e+64,1.651750319e+65)
H+:(1.065320986e+65,-5.911485321e+64) H+’:(1.320210869e+64,1.651750319e+65)
H-:(1.065320986e+65,-5.911485321e+64) H-’:(1.320210869e+64,1.651750319e+65)
Wronskian test: 1.818126864e-10

z:(-100.156,1.22651674e-14)
F:(7.915510206e-34,-4.070932761e-34) F’:(3.191449042e-34,1.291346723e-33)
G:(4.180561145e+103,8.128671328e+103) G’:(-1.326122108e+104,3.277393326e+103)
H+:(4.180561145e+103,8.128671328e+103) H+’:(-1.326122108e+104,3.277393326e+103)
H-:(4.180561145e+103,8.128671328e+103) H-’:(-1.326122108e+104,3.277393326e+103)
Wronskian test: 1.24249569e-16

19

z:(-81.02790609,-58.87021973)
F:(-23318.74764,-17080.04412) F’:(28164.502,-34900.64756)
G:(17080.04412,-23318.74763) G’:(34900.64758,28164.50199)
H+:(34160.08824,-46637.49527) H+’:(69801.29514,56329.004)
H-:(6.998646405e-06,8.686284079e-06) H-’:(1.393963282e-05,-1.022684069e-05)
Wronskian test: 1.320762168e-11

z:(-30.94990609,-95.25401645)
F:(-3.419604636e+30,-3.206140946e+30 ) F’:(4.148673182e+30,-5.870853625e+30)
G:(3.206140946e+30,-3.419604636e+30) G’:(5.870853625e+30,4.148673182e+30)
H+:(6.412281891e+30,-6.839209271e+30) H+’:(1.174170725e+31,8.297346365e+30)
H-:(4.01631585e-32,5.686566419e-32) H-’:(7.772167842e-32,-7.290658234e-32)
Wronskian test: 1.127990924e-11

z:(30.94990609,-95.25401645)
F:(1.125583254e+40,3.548477279e+39) F’:(3.759922307e+38,1.698605313e+40)
G:(-3.548477279e+39,1.125583254e+40) G’:(-1.698605313e+40,3.759922307e+38)
H+:(-7.096954559e+39,2.251166509e+40) H+’:(-3.397210626e+40,7.519844613e+38)
H-:(6.373392552e-43,-2.945348841e-41) H-’:(-4.036846683e-41,1.270436304e-41)
Wronskian test: 1.056406572e-11

z:(81.02790609,-58.87021973)
F:(-2.579395538e+32,7.380968215e+32) F’:(-9.701448492e+32,1.926734513e+32)
G:(-7.380968215e+32,-2.579395538e+32) G’:(-1.926734513e+32,-9.701448492e+32)
H+:(-1.476193643e+33,-5.158791075e+32) H+’:(-3.853469026e+32,-1.940289698e+33)
H-:(-4.963907579e-34,-9.779175601e-35) H-’:(2.098665903e-34,6.035174252e-34)
Wronskian test: 1.628966764e-12

Recurrence relations results for a table of z values.
z:(100.156,0)
l[rec]:(1,0.1)
F:(-1.021072923e+15,-2.836755456e+15) F’:(1.275057299e+15,-2.729507771e+15)
G:(2.836755456e+15,-1.021072923e+15) G’:(2.729507771e+15,1.275057299e+15)
H+:(5.673510913e+15,-2.042145845e+15) H+’:(5.459015542e+15,2.550114597e+15)
H-:(7.0774288e-17,1.501204734e-16) H-’:(5.67178338e-17,-1.558437769e-16)

l[rec]:(2,0.1)
F:(-9.963131598e+14,-2.756374147e+15) F’:(1.235449857e+15,-2.655381893e+15)
G:(2.756374147e+15,-9.963131598e+14) G’:(2.655381893e+15,1.235449857e+15)
H+:(5.512748294e+15,-1.99262632e+15) H+’:(5.310763785e+15,2.470899715e+15)
H-:(7.256451117e-17,1.54534022e-16) H-’:(5.855852326e-17,-1.602324976e-16)

l[rec]:(3,0.1)

20

F:(-9.584372325e+14,-2.64073598e+15) F’:(1.180083758e+15,-2.547127509e+15)
G:(2.64073598e+15,-9.584372325e+14) G’:(2.547127509e+15,1.180083758e+15)
H+:(5.28147196e+15,-1.916874465e+15) H+’:(5.094255019e+15,2.360167515e+15)
H-:(7.544527529e-17,1.613446827e-16) H-’:(6.131348038e-17,-1.670888938e-16)

z:(81.02790609,58.87021973)
l[rec]:(1,0.1)
F:(0.01090170509,0.002924757522) F’:(0.00666531837,0.00369511457)
G:(57.24722493,-32.54791916) G’:(-42.75162529,10.97359982)
H+:(57.24430017,-32.53701746) H+’:(-42.7553204,10.98026514)
H-:(57.25014969,-32.55882087) H-’:(-42.74793018,10.9669345)

l[rec]:(2,0.1)
F:(0.01069308234,0.002972399334) F’:(0.006522115638,0.003689236481)
G:(57.93801038,-33.60221658) G’:(-43.37569649,11.55133447)
H+:(57.93503798,-33.5915235) H+’:(-43.37938573,11.55785658)
H-:(57.94098278,-33.61290967) H-’:(-43.37200725,11.54481235)

l[rec]:(3,0.1)
F:(0.01038725067,0.003043902107) F’:(0.006311911265,0.003681809291)
G:(58.95045958,-35.24443848) G’:(-44.3055982,12.46205462)
H+:(58.94741568,-35.23405123) H+’:(-44.30928001,12.46836653)
H-:(58.95350348,-35.25482573) H-’:(-44.30191639,12.45574271)

z:(30.94990609,95.25401645)
l[rec]:(1,0.1)
F:(-2.246133078e-15,2.098754042e-15) F’:(-5.747597651e-16,2.506104288e-15)
G:(-4.367342673e+13,-1.907186698e+14) G’:(1.181536987e+14,1.103266317e+14)
H+:(-4.367342673e+13,-1.907186698e+14) H+’:(1.181536987e+14,1.103266317e+14)
H-:(-4.367342673e+13,-1.907186698e+14) H-’:(1.181536987e+14,1.103266317e+14)

l[rec]:(2,0.1)
F:(-2.280830781e-15,2.034967775e-15) F’:(-6.280365023e-16,2.478500727e-15)
G:(-4.826447957e+13,-1.907399944e+14) G’:(1.213466147e+14,1.081922962e+14)
H+:(-4.826447957e+13,-1.907399944e+14) H+’:(1.213466147e+14,1.081922962e+14)
H-:(-4.826447957e+13,-1.907399944e+14) H-’:(1.213466147e+14,1.081922962e+14)

l[rec]:(3,0.1)
F:(-2.331318569e-15,1.939356637e-15) F’:(-7.06875848e-16,2.436443775e-15)
G:(-5.518815356e+13,-1.904610411e+14) G’:(1.260154402e+14,1.047559123e+14)
H+:(-5.518815356e+13,-1.904610411e+14) H+’:(1.260154402e+14,1.047559123e+14)
H-:(-5.518815356e+13,-1.904610411e+14) H-’:(1.260154402e+14,1.047559123e+14)

z:(-30.94990609,95.25401645)
l[rec]:(1,0.1)

21

F:(-3.696304706e-35,8.374503306e-35) F’:(5.116568262e-35,9.162544125e-35)
G:(2.32622983e+33,-4.170545023e+33) G’:(2.19801873e+33,4.986604576e+33)
H+:(2.32622983e+33,-4.170545023e+33) H+’:(2.19801873e+33,4.986604576e+33)
H-:(2.32622983e+33,-4.170545023e+33) H-’:(2.19801873e+33,4.986604576e+33)

l[rec]:(2,0.1)
F:(-3.976658859e-35,8.274528706e-35) F’:(4.8327284e-35,9.349101023e-35)
G:(2.184541884e+33,-4.231185626e+33) G’:(2.351297285e+33,4.898721703e+33)
H+:(2.184541884e+33,-4.231185626e+33) H+’:(2.351297285e+33,4.898721703e+33)
H-:(2.184541884e+33,-4.231185626e+33) H-’:(2.351297285e+33,4.898721703e+33)

l[rec]:(3,0.1)
F:(-4.394887926e-35,8.113966164e-35) F’:(4.398972708e-35,9.619612834e-35)
G:(1.968199386e+33,-4.309629699e+33) G’:(2.572345582e+33,4.754740671e+33)
H+:(1.968199386e+33,-4.309629699e+33) H+’:(2.572345582e+33,4.754740671e+33)
H-:(1.968199386e+33,-4.309629699e+33) H-’:(2.572345582e+33,4.754740671e+33)

z:(-81.02790609,58.87021973)
l[rec]:(1,0.1)
F:(-2.432130956e-67,3.004725207e-66) F’:(3.593950134e-66,1.98955822e-66)
G:(1.065320986e+65,-5.911485322e+64) G’:(1.320210869e+64,1.651750319e+65)
H+:(1.065320986e+65,-5.911485322e+64) H+’:(1.320210869e+64,1.651750319e+65)
H-:(1.065320986e+65,-5.911485322e+64) H-’:(1.320210869e+64,1.651750319e+65)

l[rec]:(2,0.1)
F:(-3.576416599e-67,3.029259022e-66) F’:(3.559897692e-66,2.145032835e-66)
G:(1.030789257e+65,-6.225220366e+64) G’:(1.903651657e+64,1.626497749e+65)
H+:(1.030789257e+65,-6.225220366e+64) H+’:(1.903651657e+64,1.626497749e+65)
H-:(1.030789257e+65,-6.225220366e+64) H-’:(1.903651657e+64,1.626497749e+65)

l[rec]:(3,0.1)
F:(-5.328192626e-67,3.06145691e-66) F’:(3.501151213e-66,2.380004106e-66)
G:(9.770243181e+64,-6.655971946e+64) G’:(2.74025893e+64,1.583938607e+65)
H+:(9.770243181e+64,-6.655971946e+64) H+’:(2.74025893e+64,1.583938607e+65)
H-:(9.770243181e+64,-6.655971946e+64) H-’:(2.74025893e+64,1.583938607e+65)

z:(-100.156,1.22651674e-14)
l[rec]:(1,0.1)
F:(7.915510206e-34,-4.070932761e-34) F’:(3.191449041e-34,1.291346722e-33)
G:(4.180561145e+103,8.128671329e+103) G’:(-1.326122108e+104,3.277393326e+103)
H+:(4.180561145e+103,8.128671329e+103) H+’:(-1.326122108e+104,3.277393326e+103)
H-:(4.180561145e+103,8.128671329e+103) H-’:(-1.326122108e+104,3.277393326e+103)

l[rec]:(2,0.1)
F:(7.60252401e-34,-4.273651875e-34) F’:(3.593368917e-34,1.252731129e-33)

22

G:(4.388739394e+103,7.807256555e+103) G’:(-1.286466613e+104,3.690136722e+103)
H+:(4.388739394e+103,7.807256555e+103) H+’:(-1.286466613e+104,3.690136722e+103)
H-:(4.388739394e+103,7.807256555e+103) H-’:(-1.286466613e+104,3.690136722e+103)

l[rec]:(3,0.1)
F:(7.127789352e-34,-4.540648434e-34) F’:(4.144057432e-34,1.192784614e-33)
G:(4.66292605e+103,7.319737507e+103) G’:(-1.224905766e+104,4.255655031e+103)
H+:(4.66292605e+103,7.319737507e+103) H+’:(-1.224905766e+104,4.255655031e+103)
H-:(4.66292605e+103,7.319737507e+103) H-’:(-1.224905766e+104,4.255655031e+103)

z:(-81.02790609,-58.87021973)
l[rec]:(1,0.1)
F:(-23318.74764,-17080.04412) F’:(28164.502,-34900.64756)
G:(17080.04412,-23318.74763) G’:(34900.64757,28164.50199)
H+:(34160.08824,-46637.49528) H+’:(69801.29514,56329.004)
H-:(6.998646405e-06,8.686284079e-06) H-’:(1.393963282e-05,-1.022684069e-05)

l[rec]:(2,0.1)
F:(-23227.13327,-15830.94943) F’:(26224.1359,-34846.45541)
G:(15830.94944,-23227.13327) G’:(34846.45543,26224.13589)
H+:(31661.89887,-46454.26654) H+’:(69692.91084,52448.27179)
H-:(6.890524871e-06,9.17086489e-06) H-’:(1.468279939e-05,-1.002406502e-05)

l[rec]:(3,0.1)
F:(-22989.33501,-14034.3731) F’:(23425.9144,-34604.63695)
G:(14034.3731,-22989.335) G’:(34604.63697,23425.91439)
H+:(28068.7462,-45978.67001) H+’:(69209.27392,46851.8288)
H-:(6.703413121e-06,9.918798258e-06) H-’:(1.582831668e-05,-9.679629412e-06)

z:(-30.94990609,-95.25401645)
l[rec]:(1,0.1)
F:(-3.419604636e+30,-3.206140946e+30) F’:(4.148673182e+30,-5.870853625e+30)
G:(3.206140946e+30,-3.419604636e+30) G’:(5.870853625e+30,4.148673182e+30)
H+:(6.412281891e+30,-6.839209271e+30) H+’:(1.174170725e+31,8.297346364e+30)
H-:(4.01631585e-32,5.68656642e-32) H-’:(7.772167843e-32,-7.290658234e-32)

l[rec]:(2,0.1)
F:(-3.392855448e+30,-3.007724359e+30) F’:(3.853513229e+30,-5.788374417e+30)
G:(3.007724359e+30,-3.392855448e+30) G’:(5.788374417e+30,3.853513229e+30)
H+:(6.015448719e+30,-6.785710896e+30) H+’:(1.157674883e+31,7.707026457e+30)
H-:(3.986897101e-32,5.991979415e-32) H-’:(8.242309638e-32,-7.310395217e-32)

l[rec]:(3,0.1)
F:(-3.339981893e+30,-2.724844995e+30) F’:(3.435784336e+30,-5.648469464e+30)
G:(2.724844995e+30,-3.339981893e+30) G’:(5.648469464e+30,3.435784336e+30)

23

H+:(5.449689989e+30,-6.679963785e+30) H+’:(1.129693893e+31,6.871568672e+30)
H-:(3.932323694e-32,6.468436407e-32) H-’:(8.977628494e-32,-7.327940398e-32)

z:(30.94990609,-95.25401645)
l[rec]:(1,0.1)
F:(1.125583254e+40,3.548477279e+39) F’:(3.759922313e+38,1.698605313e+40)
G:(-3.548477279e+39,1.125583254e+40) G’:(-1.698605313e+40,3.759922313e+38)
H+:(-7.096954559e+39,2.251166509e+40) H+’:(-3.397210626e+40,7.519844627e+38)
H-:(6.373392558e-43,-2.945348841e-41) H-’:(-4.036846684e-41,1.270436304e-41)

l[rec]:(2,0.1)
F:(1.092775914e+40,3.208281133e+39) F’:(6.877131706e+38,1.638289489e+40)
G:(-3.208281133e+39,1.092775914e+40) G’:(-1.638289489e+40,6.877131706e+38)
H+:(-6.416562265e+39,2.185551829e+40) H+’:(-3.276578978e+40,1.375426341e+39)
H-:(1.265131507e-42,-3.049938868e-41) H-’:(-4.208492895e-41,1.233299224e-41)

l[rec]:(3,0.1)
F:(1.043809065e+40,2.740200645e+39) F’:(1.099037848e+39,1.550082818e+40)
G:(-2.740200645e+39,1.043809065e+40) G’:(-1.550082818e+40,1.099037848e+39)
H+:(-5.480401289e+39,2.087618131e+40) H+’:(-3.100165636e+40,2.198075696e+39)
H-:(2.26211583e-42,-3.213069851e-41) H-’:(-4.477068961e-41,1.172939493e-41)

z:(81.02790609,-58.87021973)
l[rec]:(1,0.1)
F:(-2.579395538e+32,7.380968215e+32) F’:(-9.701448491e+32,1.926734514e+32)
G:(-7.380968215e+32,-2.579395538e+32) G’:(-1.926734514e+32,-9.701448491e+32)
H+:(-1.476193643e+33,-5.158791075e+32) H+’:(-3.853469027e+32,-1.940289698e+33)
H-:(-4.963907579e-34,-9.779175603e-35) H-’:(2.098665903e-34,6.035174253e-34)

l[rec]:(2,0.1)
F:(-2.416251979e+32,7.159184131e+32) F’:(-9.355630991e+32,1.963184002e+32)
G:(-7.159184131e+32,-2.416251979e+32) G’:(-1.963184002e+32,-9.355630991e+32)
H+:(-1.431836826e+33,-4.832503957e+32) H+’:(-3.926368004e+32,-1.871126198e+33)
H-:(-5.124854379e-34,-1.067175763e-34) H-’:(2.104701743e-34,6.26792112e-34)

l[rec]:(3,0.1)
F:(-2.191409619e+32,6.833977857e+32) F’:(-8.857660418e+32,2.000904331e+32)
G:(-6.833977857e+32,-2.191409619e+32) G’:(-2.000904331e+32,-8.857660418e+32)
H+:(-1.366795571e+33,-4.382819238e+32) H+’:(-4.001808662e+32,-1.771532084e+33)
H-:(-5.377076882e-34,-1.205969114e-34) H-’:(2.115384163e-34,6.632005233e-34)

Recurrence relations results for a single z.
z:(100.156,0)
l[rec]:(1,0.1)

24

F:(-1.021072923e+15,-2.836755456e+15) F’:(1.275057299e+15,-2.729507771e+15)
G:(2.836755456e+15,-1.021072923e+15) G’:(2.729507771e+15,1.275057299e+15)
H+:(5.673510913e+15,-2.042145845e+15) H+’:(5.459015542e+15,2.550114597e+15)
H-:(7.0774288e-17,1.501204734e-16) H-’:(5.67178338e-17,-1.558437769e-16)

l[rec]:(2,0.1)
F:(-9.963131598e+14,-2.756374147e+15) F’:(1.235449857e+15,-2.655381893e+15)
G:(2.756374147e+15,-9.963131598e+14) G’:(2.655381893e+15,1.235449857e+15)
H+:(5.512748294e+15,-1.99262632e+15) H+’:(5.310763785e+15,2.470899715e+15)
H-:(7.256451117e-17,1.54534022e-16) H-’:(5.855852326e-17,-1.602324976e-16)

l[rec]:(3,0.1)
F:(-9.584372325e+14,-2.64073598e+15) F’:(1.180083758e+15,-2.547127509e+15)
G:(2.64073598e+15,-9.584372325e+14) G’:(2.547127509e+15,1.180083758e+15)
H+:(5.28147196e+15,-1.916874465e+15) H+’:(5.094255019e+15,2.360167515e+15)
H-:(7.544527529e-17,1.613446827e-16) H-’:(6.131348038e-17,-1.670888938e-16)

25

Table 1: Number of iterations n needed for the continued fraction h+(z) to converge up to
ǫ = 10−10 with Lentz method. The set of parameters is chosen here as ℓ = 0, η = 10, and
z = x

2i, with x varying between 0 and 1.

−

Table 2: Comparison of the Coulomb wave functions Fℓ,η(z) and Gℓ,η(z) and derivatives cal-
culated with direct and ﬁrst-order expansion methods. The second and third columns show
respectively the real and imaginary parts of the Coulomb wave functions obtained with the
direct method. The fourth and ﬁfth column provides the relative diﬀerence of the same real
and imaginary parts with those calculated with the ﬁrst-order expansion respectively. The used
set of parameters is ℓ = i10−5, η = 10 + i10−5, and z = 0.1 + i10−6.

Direct (real part) Direct (im. part) Rel. diﬀ. (real part) Rel. diﬀ. (im. part)

F
F ′
G
G′

4.306
7.635
7.787
–9.416

10−14
·
10−13
·
1011
·
1012
·

–9.033
–1.861
1.842
–2.076

10−19
·
10−17
·
107
·
108
·

10−10
10−10
10−10
10−10

1.481
2.507
3.299
3.086

·
·
·
·

10−10
6.819
·
10−10
5.467
·
10−9
1.053
·
10−10
2.849
·

x
1
0.5
0.1
0.05
0.01
0.005

n
485
1,679
35,984
137,922
3,146,899
12,107,924

26

Table 3: Energies and widths of the 2s1/2 proton state of the Hamiltonian h of Eq. (36) as
a function of the depth of the Woods-Saxon potential V0 given in MeV. γ denotes the width
obtained by direct integration of h, and γc is the width obtained by the approximate current
formula of Eq. (37). Energies are given in MeV and widths in keV.

V0 (MeV) E (MeV)

50
51
52
53
54
55
56
56.4
56.46

4.510
3.847
3.168
2.477
1.773
1.060
0.336

4.458
6.949

10−2
10−4

·
·

6.188
6.134
2.597
2.664
1.777
1.260
7.738
4.956

γ (keV)
10−1
·
10−2
·
10−3
·
10−5
·
10−8
·
10−14
·
10−36
·
10−121
·
0

γc (keV)
10−1
6.188
·
10−2
6.134
·
10−3
2.597
·
10−5
2.664
·
10−8
1.777
·
10−14
1.260
·
10−36
7.738
·
10−121
4.956
·
0

27

80

60

40

20

0

-20

-40

-60

-80
0

100

50

0

+
(z)|)
log10(|H

η = 50 + 0.1i
l = 0.1i

-
log10(|H

(z)|)

log10(|F(z)|)

0.5

1

1.5

2

θ (rad π-1

)

ℓ,η(z)
Figure 1: Decimal logarithms of
as a function of the argument
θ of z, given in units of radian over π. They are respectively represented with full, dashed, and
dotted lines. z = Rteiθ with Rt the generalized turning point
2. ℓ and η
are here respectively equal to 0.1i and 50 + 0.1i.

ℓ(ℓ + 1)
|

Fℓ,η(z)

ℓ,η(z)

, and

+

+

η

η

|

|

|

|

|

|

|

|

|

|

|

,

p

H +

H −

+
log10(|H

(z)|)

η = 50 + 50i
l = 0.1i

-50

log10(|F(z)|)

-
log10(|H

(z)|)

0

0.5

1

1.5

2

θ (rad π-1

)

28

Figure 2: Same as Fig. (1), except that ℓ and η are here respectively equal to 0.1i and 50 + 50i.

Figure 3: Same as Fig. (1), except that ℓ and η are here respectively equal to 0.1i and 1 + 80i.

200

100

0

-100

-200
0

200

100

0

-100

+
log10(|H

(z)|)

log10(|F(z)|)

η = 1 + 80i
l = 0.1i

-
log10(|H

(z)|)

0.5

1

1.5

2

θ (rad π-1

)

η = 0.1 + 0.1i
l = 100i

+
log10(|H

(z)|)

log10(|F(z)|)

-
log10(|H

(z)|)

29

0

0.5

1

1.5

2

θ (rad π-1

)

Figure 4: Same as Fig. (1), except that ℓ and η are here respectively equal to 100i and 0.1+0.1i.

100

50

0

-50

η = 50 + 50i
l = 100 + 10i

+
(z)|)
log10(|H

-
log10(|H

(z)|)

0

1

1.5

2

log10(|F(z)|)
0.5

θ (rad π-1

)

Figure 5: Same as Fig. (1), except that ℓ and η are here respectively equal to 100 + 10i and
50 + 50i.

30

