EPJ manuscript No.
(will be inserted by the editor)

6
0
0
2
 
y
a
M
 
2
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
8
0
1
5
0
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Stochastic Simulations on the Cellular Wave Computers

M. Ercsey-Ravasz1,2, T. Roska1, and Z. N´eda2,3

1 P´azm´any P´eter Catholic University, Department of Information Technology, HU-1083 Budapest, Hungary

2 Babe¸s-Bolyai University, Department of Physics, RO-400084 Cluj, Romania

3 Los Alamos National Laboratory, Center for Nonlinear Sciences, NM-87545, Los Alamos, USA

Received: date / Revised version: date

Abstract. The computational paradigm represented by Cellular Neural/nonlinear Networks (CNN) and

the CNN Universal Machine (CNN-UM) as a Cellular Wave Computer, gives new perspectives for com-

putational physics. Many numerical problems and simulations can be elegantly addressed on this fully

parallelized and analogic architecture. Here we study the possibility of performing stochastic simulations

on this chip. First a realistic random number generator is implemented on the CNN-UM, and then as an

example the two-dimensional Ising model is studied by Monte Carlo type simulations. The results obtained

on an experimental version of the CNN-UM with 128 × 128 cells are in good agreement with the results

obtained on digital computers. Computational time measurements suggests that the developing trend of

the CNN-UM chips - increasing the lattice size and the number of local logic memories - will assure an

important advantage for the CNN-UM in the near future.

PACS. 07.05.Tp Computer modeling and simulation – 05.10.Ln Statistical physics and nonlinear dynamics

– 89.20.Ff Computer science and technology

1 Introduction

problem, are just a few examples which reminds us that

computing power needs to keep up with it’s exponen-

Many areas of science and especially physics are pref-

tial growth, as expressed by Moore’s law [1]. We know

acing serious problems concerning the computing power

however that this process can not continue much further

of the presently available computers. Solving more and

solely with the classical digital computers and new com-

more complex problems, simulating large systems, ana-

putational paradigms are necessary. Parallel computing,

lyzing huge datasets for which even storing represents a

2

M. Ercsey-Ravasz et al.: Stochastic Simulations on the Cellular Wave Computers

grid computing and quantum computing are just the most

2 The CNN Universal Machine

popular examples. The goal of the present article is to

make the physicist community aware of a modern and

promising trend which is called by computational scien-

tists and engineers Cellular Wave Computers [2]. This

computer is based on the Cellular Neural/nonlinear Net-

work (CNN) and it is experimentally realized by diﬀerent

physical principles in the architecture of the CNN Univer-

sal Machine (CNN-UM). Possibilities of performing fast

image processing [3], solving in an elegant manner partial

diﬀerential equations [4,5] or studying cellular automata

models [6,7] on CNN were already studied. Here we ar-

gue, that the CNN architecture is also appropriate for

Monte Carlo (MC) type simulations on lattice models. As

a speciﬁc example we study on an experimental version of

The theory of cellular neural/nonlinear networks (CNN)

appeared in 1988 [8], but the hardware based on this

theory, like the CNN Universal Machine (CNN-UM) [9]

are just now developing. The CNN-UM is an analogic

(analog+logic) computer which has on it’s main processor

several thousands of interconnected computational units

(cells), working parallelly. The CNN-UM can be easily

connected to any PC type computer and programmed

through a special programming language [10]. This new

kind of hardware does not replace digital computers, but

due to it’s special structure and architecture it could rep-

resent an excellent platform for solving some complex prob-

lems of physics which demand high computational power.

CNN-UM is also extremly usefull as a visual or tactile

CNN-UM (the ACE16K chip which has 128 × 128 cells)

the well-known second-order phase transition in the two-

topographic microprocessor.

dimensional Ising model. Due to the fact that some simple

operations are not included in this experimental hardware

implementation, on this chip the speed of the simulations

is in the range of modern PC type computers. We will ar-

gue however, that the developing trend of this new hard-

ware (2 and 3 layer complex cell CNN-UM architectures,

and a powerful new visual microprocessor is coming out

at AnaFocus Ltd. soon) could substantially increase the

speed of such simulations, assuring an important advan-

tage for CNN computing.

The standard CNN is composed by L × L cells placed

on a square lattice and interconnected through the 8 neigh-

bors. Each cell is an electronic circuit in which the most

important element is a capacitor. The voltage of this ca-

pacitor is called the state value of the cell xi,j(t). The cell

has also an input value (voltage) ui,j, which is constant

in time and can be deﬁned at the beginning of an oper-

ation. The third characteristic of the cell is the output

value yi,j(t). This is equivalent with the xi,j state value

in a given range. More speciﬁcally it is a piece-wise lin-

ear function, bounded between −1 (white) and 1 (black):

y = f (x) ≡ 1

2 (| x + 1 | − | x − 1 |)

The connections between the cells are realized with

voltage-controlled resistors resulting that the state value

M. Ercsey-Ravasz et al.: Stochastic Simulations on the Cellular Wave Computers

3

of each cell depends on the input and output values of the

3 Random number generators on the

connected neighbors. The state equation of the CNN cells,

CNN-UM

resulting from the time-evolution of the equivalent circuit

(supposing the 8 neighbor interactions) is the following

Many applications ideal for the analogic (analog &logic)

architecture of the CNN-UM were already developed and

[8]:

dxi,j(t)
dt

1

1

X
k=−1
1

X
l=−1
1

= −xi,j(t) +

Ak,lyi+k,j+l(t) + (1)

tested. For practical purposes the most promising appli-

+

X
k=−1

X
l=−1

Bk,lui+k,j+l + zi,j

cations are for image processing, robotics or sensory com-

puting purposes [3]. The CNN architecture seems also

The coupling between neighbors can be controlled with

promising when considering complex problems in natu-

matrices A and B. Within the standard CNN (and on the

ral sciences. Studies dealing with partial diﬀerential equa-

hardwares realized up to the present days) A and B are the

tions (PDE) [4,5,12,13] or cellular automata (CA) mod-

same for all cells. Parameters zi,j are constant values and

els [6,7] prove this. Solving partial diﬀerential equations

can vary from cell to cell. The set of parameters {A, B, z}

is relatively easy and oﬀers the advantage of continuity in

is called a template. An operation is performed by giving

time [4]. Deterministic cellular automata [6] with simple

the initial states of the cells, the input image (the input

nearest-neighbor rules are also straightforward to imple-

values of all cells) and by deﬁning a template. The states of

ment in the CNN architecture. In physics however, many

all cells will vary parallelly and the result of the operation

of the interesting problems deal with stochastic cellular

will be the ﬁnal steady state of the CNN. Each operation

automaton, random initial conditions or other MC meth-

is equivalent with solving a diﬀerential equation deﬁned

ods on lattices (spin problems, population dynamics mod-

by the template itself, with the extra condition that the

els, lattice gas models, percolation etc...). Developing and

state of a cell remains bounded in the [−1, 1] region [11].

proving the eﬃciency of stochastic simulation techniques

The CNN-UM [9] is a programmable cellular wave

on the CNN-UM - using its stored (or algorithmic) pro-

computer in which each cell contains additionally a local

grammability - would be thus an important step toward

analog and a logic unit, local analog and logic memories

its success.

and a local communication and control unit. Beside these

It is known that for a successful stochastic simulation

local units, the CNN-UM has also a global analog pro-

the crucial starting point is a good random number gen-

gramming unit which controls the whole system, making

erator (RNG). While computing with digital processors,

it a programmable computer. It can be easily connected

the ”world” is deterministic and discretized, so in prin-

to PC type computers and programmed with special lan-

ciple there is no possibility to generate quickly random

guages, for example the analogic macro code (AMC).

events and thus real random numbers. The implemented

4

M. Ercsey-Ravasz et al.: Stochastic Simulations on the Cellular Wave Computers

RNGs are all pseudo-random number generators working

al. [14] called the PNP2D was chosen. This chaotic CA is

with a deterministic algorithm, and it is believed that

based on the following update rule

their statistics approximates well real random numbers.

The reproducibility of the pseudo-random numbers can

be sometimes an advantage (debugging the code) but in

many cases it presents a serious disadvantage. A ﬁrst ad-

vantage of the analog architecture is the possibility to use

the the natural noise on the device and to generate real

random numbers.

There are relatively few papers presenting or using

RNGs on the CNN-UM [14,7,15]. The known and used

ones are all pseudo-random number generators based on

chaotic Cellular Automaton (CA) type update rules, gen-

erating binary images with 1/2 probability of the black

and white pixels (logical 1 and 0, respectively). They were

used mainly in cryptography [7] and watermarking on pic-

tures [14]. In a recent paper [15] we presented a realistic

RNG by using the natural noise of the chip. An algorithm

for generating binary images with any probability of the

black pixels was also described. Here we present brieﬂy

this realistic RNG and for more details we recommend

[15].

xt+1(i, j) = (xt(i + 1, j) ∨ xt(i, j + 1)) ⊕ xt(i − 1, j) ⊕(2)

⊕xt(i, j − 1) ⊕ xt(i, j),

where i, j are the coordinates of the cells, the index t

denotes time-steps and x is a logic value 0 or 1 (repre-

senting white and black pixels, respectively). Symbols ∨

and ⊕ stand for the logical operations or and exclusive-

or (XOR), respectively. As described by the authors this

chaotic CA is relatively simple and fast, it passed all im-

portant RNG tests and shows very small correlations. It

generates binary values 0 and 1 with the same 1/2 proba-

bility independently of the starting condition. It is a good

candidate for a pseudo-random number generator and our

ﬁrst goal is to transform it into a realistic RNG. The way

to do this is relatively simple. After each time step the P (t)

result of the chaotic CA is perturbed with a noisy N (t)

binary picture (array) so that the ﬁnal output is given as:

P ′(t) = P (t) ⊕ N (t). The symbol ⊕ stands again for the

logical operation XOR, i.e. pixels which are diﬀerent on

the two pictures will become black (logic value 1). This

The natural noise of the CNN-UM chip is usually highly

operation assures that no matter how N (t) looks like, the

correlated in space and time, so it can not be used directly

density of black pixels remains the same 1/2. Because the

to generate random binary values. Our method is based

used noisy images contain only very few black pixels (logic

on a chaotic CA perturbed with the natural noise of the

values 1) we just slightly sidetrack the chaotic CA from

chip. The random nature of the noise eliminates the de-

the original deterministic path and all the good properties

terministic properties of the chaotic CA.

of the pseudo-random number generator will be preserved.

As a starting point the relatively simple but eﬃcient

The N (t) noisy picture is obtained by the following sim-

chaotic CA, presented by Crounse et al. [7] and Yalcin et

ple algorithm. All pixels of a gray-scale image are ﬁlled

M. Ercsey-Ravasz et al.: Stochastic Simulations on the Cellular Wave Computers

5

up with a constant value a and a cut is performed at a

[15]). Taking into account thus the natural trend that the

threshold a + z, where z is a relatively small value. In this

lattice size of CNN-UM chips will be growing and that

manner all pixels which have smaller value than a + z will

calculations on this chip are totally parallel, these results

become white (logic value 0) and the others black (logic

predict a promising trend. Some codes and movies about

value 1). Like all the logic operations this operation can

the RNGs on the ACE16K chip are available on the home-

be also easily represented by a CNN template. Since the

page dedicated to this study [10].

CNN-UM chip is an analog device, there will always be

a natural noise on the gray-scale image. Choosing thus a

proper z value one can always generate a random binary

4 Studying the Ising model on the CNN-UM

picture with few black pixels. These N (t) pictures might

Once a properly working RNG is available, Monte Carlo

be strongly correlated and will ﬂuctuate in time. The time-

type simulations on two-dimensional lattice-type models

like ﬂuctuations are caused by real stochastic processes in

are possible. Generating random initial conditions for cel-

the transistor circuits of the chip and can not be thus

lular automata models is straightforward and many simple

controlled. They are the source of a convenient random

stochastic lattice models can be relatively easily solved

perturbation on the chaotic CA, and are responsible for

[15]. Here we consider the well-known two-dimensional

the realistic nature of the RNG. In case one would need

Ising model. Implementing the MC study of this model on

a repeatable series of pseudo-random numbers the chaotic

the CNN-UM is however not trivial. As it will be shown

CA is simply not perturbed by the N (t) noisy picture.

later a straightforward application of the usual Glauber

Using now n independent random binary images with

[16] or Metropolis [17] algorithms could lead to problems

1/2 density of the black pixels, it is possible to generate

due to the parallel architecture of the computer.

pictures with any p probability of the black pixels (p be-

In the Ising model the spins can have two possible

ing a number represented by n-bits, when expressed as a

states σ = ±1. On the CNN-UM these states can be

power of 1/2). For more details see [15].

This RNG and the described algorithms were tested

and are properly working on an ACE16K chip which is

system is

an experimental version of the CNN-UM with 128 × 128

mapped on the ”black” and ”white” states of the cells.

Without an external magnetic ﬁeld the hamiltonian of the

H = −J X
<i,j>

σiσj,

(3)

cells. It is found that the RNG with p = 0.5 is already

< i, j > representing nearest neighbors. There are many

almost 5 times faster on the ACE16K than on modern

diﬀerent MC type methods for studying this basic lattice

PC type digital computers. Generating images with other

model. Most of them like the Metropolis or the Glauber al-

p probabilities is of course slower, depending on n (see

gorithm are of serial nature, meaning that in each step we

6

M. Ercsey-Ravasz et al.: Stochastic Simulations on the Cellular Wave Computers

update one single spin. Working however parallelly with

alized by the template: A = {0, 0, 0, 0, 2, 0, 0, 0, 0}, B =

all spins, could create some unexpected problems due to

{0, 0, 0, 1, 0, 0, 0, 0, 0}, z = 0). We generate two random

the fact that nearest neighbors are updated simultane-

images with probability exp(−8J/kT ) and exp(−4J/kT )

ously. Imagine for instance an initial state where the spin-

and we perform an AND operation between the random

values are assigned using a chessboard pattern. This state

image and the corresponding mask. After uniting the re-

will have a zero total magnetization. Let us consider now

sults of these two and the third mask (∆E ≤ 0) we get a

the zero-temperature case and the Glauber or Metropo-

new mask which marks all spins which have to be ﬂipped.

lis algorithm. Contrary to what is expected, this system

Finally we use the chessboard mask and allow only those

will not order in a simple ferromagnetic phase but it will

spins to ﬂip which correspond to black (white) pixels if

continuously switch between the two opposite chessboard

the time-step is odd (even). The CNN code developed for

patterns. For eliminating the parallel update of the neigh-

studying this problem can be also downloaded from the

bors which causes such problems but still taking advan-

home-page dedicated to this study [10]. It worth men-

tage of the parallel nature of the computer, we impose an

tioning that cluster algorithms, like the one proposed by

extra chessboard mask on the system. In each odd (even)

Swendsen and Wang [18] or Wolf [19], seem to be also

step we update parallelly the spins corresponding to the

appropriate for the parallel architecture of the CNN-UM.

black (white) cells of the chessboard mask. For the chosen

Simulation results obtained with the Metropolis type

spins the simple Metropolis algorithm is used. It is simple

algorithms are sketched on ﬁg. 1. On this ﬁgure we com-

to realize that our method is equivalent with the classical

pare results of (i) the classical Metropolis algorithm on

serial Metropolis dynamics in which the spins are updated

a digital computer, (ii) the results of our parallel algo-

in a well-deﬁned order. Detailed balance and ergodicity is

rithm simulated on a digital computer and (iii) the results

valid, so the obtained statistics should be the right one.

obtained on the ACE16K chip. By plotting the average

Implementing the above scheme on the CNN-UM is

magnetization, the speciﬁc heat and the susceptibility as

realized as follows. In each step we ﬁrst build three ad-

a function of the temperature one can conclude that dif-

ditional masks: the ﬁrst marks the spins with 4 similar

ferent results are in good agreement with each other. All

neighbors (∆E = 8J), the second one marks the spins

simulations were performed on a 128 × 128 lattice using

with 3 similar neighbors (∆E = 4J), and the third rep-

free boundary conditions.

resents all the other spins for which ∆E ≤ 0. Separat-

Fig. 1d plots the time needed for 1 MC step as a func-

ing these cells is relatively easy using logic operations

tion of the lattice size L. While on a PC type computer

and some special templates which can shift the images

this scales as L2, on the CNN-UM the time does not de-

in diﬀerent directions (for ex. shifting to right can be re-

pend on the lattice size (each command is executed in a

M. Ercsey-Ravasz et al.: Stochastic Simulations on the Cellular Wave Computers

7

2

3

4

2

3

4

<M>

1

0.8

0.6

0.4

0.2

0

1

100

80

χ

60

40

20

0

1

a

T

c

T

C
v

2.5

1.5

2

1

0.5

0

1

4
10

2
10
t (ms)

0
10

b

T
d

2
10
L

Fig. 1. Average magnetization M (a), speciﬁc heat Cv (b) and

susceptibility χ (c) are plotted as a function of the temperature

Name

—

ACE440

POS48

ACE4k

CACE1K

ACE16K

XENON

EYE-RIS

Year

1993

1995

1997

1998

2001

2002

2004

2005

Size

12 × 12

20 × 22

48 × 48

64 × 64

32 × 32 × 2

128 × 128

128 × 96 × 2

176 × 144

2

3

4

−2

10

0
10

4
10

CACE2K under fabrication

32 × 32 × 3

T for the classical Metropolis algorithm on a digital computer

TABLE 1. Evolution of the CNN-UM chip, diﬀerent physical

(squares), our parallel algorithm simulated on a digital com-

realizations. From these chips only the ACE16K is commer-

puter (triangles) and the algorithm simulated on the ACE16K

cially available, mass production is expected to begin with the

CNN-UM chip (circles). Figure (d) compares the simulation

EYE-RIS at the end of 2006.

time t (in ms) needed for 1 MC step on a Pentium 4 PC with

2.4 GHz (squares) and the CNN-UM (circles) as a function of

the lattice size L. The ﬁlled circle marks the simulation time

obtained on the ACE16K chip (L = 128).

It also worth mentioning here that this ACE16K chip

was developed mainly for image processing purposes, the

cells have only 2 Local Logic Memories (LLM) and 8 Ana-

log Memories (LAM). While performing logic operations

on our binary images we always had to copy the images

to the LLMs and save than the results again to LAMs.

fully parallel manner on the whole lattice). The time mea-

These copying processes used around 3/4 of the process-

sured on the ACE16K chip with L = 128 was 4.8ms, while

ing time. Most of this lost time could be and hopefully will

on a Pentium 4 PC working on 2.4 GHz under Linux op-

be eliminated in the future by increasing the number of

erating system the time needed for 1 MC step was 2ms.

available LLMs. One must also not forget that the CNN-

For this lattice size the simulations are still faster on the

UM was developed mainly for analog signal processing and

classical digital computers, however considering the trend

the main strength of these chips are related to gray scale

that the size of the CNN chip (Table 1) will increase in

operators. In that area the proven speed advantage is in

the near future the results are still promising.

about three orders of magnitude [2,13].

8

M. Ercsey-Ravasz et al.: Stochastic Simulations on the Cellular Wave Computers

5 Conclusions

5. T. Kozek, L.O. Chua, T. Roska, D. Wolf, R. Tetzlaﬀ,

In the present study we worked with binary images and

we exploited mainly the parallel and connectivity features

816 (1995)

of the CNN. Our results suggest that the special architec-

ture makes the Cellular Wave Computers very appropriate

for simulating lattice models and it’s natural noise can be

(1995)

F. Puﬀer, K. Lotz, IEEE Transactions on Circuits and

Systems - I: Fundamental Theory and Applications 42,

6. J.M. Cruz, L.O. Chua, IEEE Transactions on Circuits and

Systems I: Fundamental Theory and Applications 42, 715

eﬀectively used in stochastic simulations. The ongoing de-

7. K.R. Crounse, T. Yang, L.O. Chua, Fourth IEEE Inter-

veloping process of this hardware is expected to increase

national Workshop on Cellular Neural Networks and their

the number of cells and local memories, and also three-

Applications, Seville, Spain (1996)

dimensional chips with more layers of cells are expected

8. L.O. Chua, L. Yang, IEEE Transactions on Circuits and

to appear. This would assure an important advantage for

Systems 35, 1257 (1988)

these chips in the near future. We think that CNN com-

9. T.Roska, L.O. Chua, IEEE Transactions on Circuits and

puting could be eﬀectively used in computational physics

Systems - II 40, 163 (1993)

for supplementing digital computers in some complex and

10. M.

Ercsey-Ravasz,

T.

Roska,

Z.

N´eda,

time-consuming problems.

6 Acknowledgments

References

http://www.phys.ubbcluj.ro/∼zneda/cnn.html (2005)

11. L.O. Chua, T. Roska, Cellular Neural Networks and Visual

Computing (Cambridge University Press, 2002)

12. T. Kozek, T. Roska, International Journal of Theory and

cuits and Systems I: Fundamental Theory and Applica-

tions 50, 619 (2003)

14. M.E. Yalcin, J. Vandewalle, P. Arena, A. Basile, L. For-

The support of the Jedlik Laboratories of the P. P´azm´any

Applications 24, 49 (1996)

Catholic University is gratefully acknowledged.

13. I. Petr´as, T. Roska, L.O. Chua, IEEE Transactions on Cir-

1. G. Moore, Electronics 38, 114 (1965)

tuna, International Journal of Circuit Theory and Appli-

2. T. Roska, Journal of Circuits, Systems and Computers 12,

cations 32, 591 (2004)

539 (2003)

15. M. Ercsey-Ravasz, T. Roska, Z. N´eda, physics/0603121,

3. K.R. Crounse, L.O. Chua, IEEE Trans. on Circuits and

accepted in International Journal of Modern

Systems 42, 583 (1995)

Physics C

4. T. Roska, L.O. Chua, D. Wolf, T. Kozek, R. Tetzlaﬀ,

16. J. Glauber, J. Math. Physics 4, 194 (1963)

F. Puﬀer, IEEE Transactions on Circuits and Systems -

17. N. Metropolis, A. Rosenbluth, M. Rosenbluth, A. Teller,

I: Fundamental Theory and Applications 42, 807 (1995)

E. Teller, J. Chem. Phys. 21, 1087 (1953)

M. Ercsey-Ravasz et al.: Stochastic Simulations on the Cellular Wave Computers

9

18. R.H. Swendsen, J.S. Wang, Physical Review Letters 58,

86 (1987)

19. U. Wolﬀ, Physical Review Letters 62, 361 (1989)

