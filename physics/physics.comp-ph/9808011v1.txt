8
9
9
1
 
g
u
A
 
2
1
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
1
1
0
8
0
8
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

A Rational Approach to Ring Flexibility in Internal Coordinate Dynamics

Alexey K. Mazur
Laboratoire de Biochimie Th´eorique, CNRS UPR9080
Institue de Biologie Physico-Chimique
13, rue Pierre et Marie Curie, Paris,75005, France.
FAX:(33-1) 43.29.56.45. Email: alexey@ibpc.fr

Internal coordinate molecular dynamics (ICMD) is an eﬃcient method for studying biopolymers,
but it is readily applicable only to molecules with tree topologies, that is with no internal ﬂexible
rings. Common examples violating this condition are prolines and loops closed by S-S bridges in
proteins. The most important such case, however, is nucleic acids because the ﬂexibility of the
furanose rings always plays an essential role in conformational transitions both in DNA and RNA.
There are a few long-known theoretical approaches to this problem, but, in practice, rings with
ﬁxed bond lengths are closed by adding appropriate harmonic distance restraints, which is not
always acceptable especially in dynamics. This paper tries to overcome this handicap of ICMD
and proposes a rational strategy which results in practical numerical algorithms. It gives a uniﬁed
analytical treatment which shows that this problem is very close to the diﬃculties encountered
by the method of constraints in Cartesian coordinate dynamics, and certain ideas of the latter
appear helpful in the context of ICMD. The method is aﬀordable for large molecules and generally
applicable to all kinds of rings. A speciﬁc implementation for ﬁve-membered rings is described and
tested for a proline-rich polypeptide and a decamer DNA duplex. In both cases conditions are found
which make possible time steps around 10 fsec in ICMD calculations.

I. INTRODUCTION

Internal coordinate molecular dynamics1,2,3,4 (ICMD,
see Ref. 4 for a historical review) is a recent approach
in the simulation of ﬂexible polymers which, unlike the
traditional one, employs torsions and, if desired, valence
angles and bond lengths as generalized coordinates in
the equations of motion.
It originates from the Euler-
Lagrange-Hamilton formalism of classical mechanics and
makes possible modeling of polymers as chains of rigid
bodies, which automatically eliminates the most severe
time step limitations characteristic for Newtonian MD. In
addition, it drastically reduces the conﬁgurational space
of ﬂexible molecules, which is very useful for confor-
mational searches5,6, and for reﬁnement of experimental
structures by simulated annealing3,7.

Treatment of ﬂexible cycles is an inherently diﬃcult
task for ICMD. The possibility of applying this method
to large polymers rests upon recursive algorithms which
all are applicable only when the molecule is topologically
isomorphous to a tree8,9,10,11,12. Any non-rigid cycle,
therefore, makes the whole system unsuitable for ICMD.
Although a few possible approaches to this problem can
be readily sketched,13,14 until now, no practical solution
has been reported. This diﬃculty is most critical for
simulations of nucleic acids because the ﬁve-membered
sugar rings connect the bases with the sugar-phosphate
backbone, and their relative orientations are, therefore,
determined by the pseudorotation states of the sugars.
As a result, nucleic acids are completely beyond the scope
of ICMD although one cannot say that the problem did
not attract attention.15

This paper describes a rational solution of the prob-
lem of ring ﬂexibility in ICMD. The new approach has

much in common with the recent methods of constraints
in Newtonian dynamics.16 The similarity between the dif-
ﬁculties created by ring ﬂexibility in ICMD, and bond
length constraints in Newtonian MD, is intuitively clear.
Both these problems can be consistently treated by us-
ing projection operators in linear spaces, which results
in a uniﬁed formalism. A fruitful idea used, sometimes
implicitly, in Newtonian constraint dynamics is that pro-
jection operators can be applied directly in the ﬁnite-
diﬀerence form of the equations of motion. This simpli-
ﬁes computations because certain terms in the analytical
equations can be omitted, and immediately results in a
time-reversible symplectic numerical integrator.

A speciﬁc implementation for the most practically im-
portant case of ﬁve-membered rings is described and
tested here. It employs our earlier analytical approach
to ring ﬂexibility,13,17 but can also be adapted to alter-
native methods, for instance, with various pseudorota-
tion equations. Numerical algorithms suitable for other
speciﬁc cases, such as S-S bridges in proteins, are also
tested, but such cases are not studied here in detail. For
ﬁve-membered rings in proteins and nucleic acids speciﬁc
conditions that make possible time steps around 10 fsec
are considered.

II. RESULTS AND DISCUSSION

Overview of Earlier Approaches

In this section we outline the general view of the prob-
lem of ring ﬂexibility and try to divide it into distinct
separable tasks. This problem has been ﬁrst addressed by

1

(a)

(b)

(c)

FIG. 1. Schematic representation of a loop of rigid bodies.
To impose a tree topology loop (a) must be considered as
broken, which can be done in many ways, for example, as in
loops (b) or (c). Rigid bodies shown as open circles are joined
by hard sticks in pivots shown as closed circles.

G¯o and Scheraga18 who formulated the following general
approach later followed by others. Consider the example
in Fig.1. Suppose we want to describe a ﬂexible loop (a)
with certain internal coordinates that determine variable
angles at pivots and lengths of bonds. A correct def-
inition of internal coordinates always requires that the
molecule is represented as a regular tree, which means
that, conceptually, loop (a) in Fig.1 must be considered
broken in agreement with a certain tree topology, while a
correct loop closure is maintained by applying appropri-
ate constraining conditions. Hereafter this construction
is referred to as the underlying tree. The constrained
underlying tree gives the desired model with correctly
closed loops, but, in derivations, its unconstrained move-
ments are also sometimes considered. Structures (b) and
(c) in Fig.1 demonstrate that there are numerous ways
to deﬁne the underlying tree of any given loop.

Now suppose we need to sample from the ensemble of
closed loop conformations. Internal coordinates can be
denoted as an n-vector q and they should vary concert-
edly so that the k scalar constraining conditions

Cµ(q) = 0, µ = 1, ..., k.

are not violated. By inverting Eqs. (1), a set of k internal
coordinates can be, in principle, computed from the rest,
which may be written as

qd

= qd

(qf

)

where qd and qf are the k-vector of dependent and (n-
k)-vector of independent variables, respectively. Now qf
can be freely varied within the range of solubility of Eqs.
(1). Dependant coordinates qd computed by Eq.
(2)
always provide a correct loop closure in the underlying
tree. Time derivatives of Eq. (2) read

˙qd

=

¨qd

=

∂qd
∂qf ˙qf
∂qd
∂qf ¨qf

+ ˙qf d
dt

∂qd
∂qf

(1)

(2)

(3a)

(3b)

2

where ∂qd/∂qf is a k × (n − k) matrix. This approach
may be called consistent because, following to the basic
idea of internal coordinates, it reduces the number of in-
dependent variables to the true number of conformational
degrees of freedom.

The above reasoning reveals the ﬁrst task to be con-
sidered, that is, inversion of Eqs. (1) or, in other words,
construction of a correctly closed ring geometry for any
given qf . This is generally diﬃcult because Eqs. (1) are
non-linear. Practical solutions exist only in a few special
cases, notably, there are relatively simple algorithms for
loop closure with ﬂexible valence angles.13,17,19 For the
important case of ﬁve-membered rings, pseudorotation
equations give the most economical solution.20 The sec-
ond task is the calculation of dependent velocities and
accelerations, but usually this presents no serious diﬃ-
culties.

The possibility to apply this general strategy in ICMD
was ﬁrst addressed in Ref. 13. Explicit equations of mo-
tion in independent variables can be obtained by linear
transformations of the familiar ICMD equations for the
unconstrained underlying tree. It is useful to reproduce
this result here in a compact form. Let us construct
n × (n − k) matrix P as

P =

∂q
∂qf .

˙q = P ˙qf

Every column in P is composed of partial derivatives of
all internal coordinates with respect to a certain indepen-
dent variable. Thus, each column has one unit element,
n − k − 1 zeroes and k derivatives of dependent variables.
Any vector ˙qf yields velocities of the underlying tree

that fulﬁll the loop closure conditions. Similarly, the con-
strained accelerations are given by

¨q = P¨qf

+ ˙P ˙qf

.

(4)

Consider the unconstrained motion of the underlying
tree. The corresponding equations of motion can be writ-
ten as1

M(q)¨q = f (q) + u(q, ˙q),

(5)

where M(q), f (q) and u(q, ˙q) are the mass matrix, the
vector of generalized forces and the inertial term, respec-
tively. In Ref. 13 equations for independent variables in
a correctly constrained underlying tree were obtained by
summing up scalar lines in Eq. (5) corresponding to de-
pendent variables with coeﬃcients from matrix P, and
excluding ¨qd with the help of Eq. (3b). These calcu-
lations may be equivalently expressed in a matrix form
as

P∗MP¨qf

= P∗

(cid:16)f + u − M ˙P ˙qf

(cid:17)

(6)

where the asterisk denotes transposition. All accelera-
tions for the constrained underlying tree are computed
by substituting ¨qf into Eq.(4). For the following discus-
sion it is convenient to rewrite it as

¨q = hP (P∗MP)−1 P∗Mi M−1 (f + u)
+ (cid:16)I − P (P∗MP)−1 P∗M(cid:17)
˙P ˙qf
.

(7)

(n − k)3
(cid:2)

Equations (6) and (7) clearly show that the perfor-
mance of any numerical algorithm originating from the
consistent approach is limited by the necessity of invert-
ing the (n − k) × (n − k) mass matrix P∗MP. This
no longer corresponds to a tree topology therefore the
fast recursive algorithms10,11 are inapplicable and, at
least at present, only straightforward inversion is pos-
computations. In prac-
sible, which needs O
tice a reasonable maximum number of variables for cal-
culations with a straightforward mass matrix inversion
is around 100. This approach, therefore, is hardly prac-
tical for S-S bridges and prolines in globular proteins.
A minimalist representation of nucleic acids needs about
eight degrees of freedom per nucleotide, which comprises
two pseudorotation variables for a furanose ring20,21, one
torsion for the base and all backbone torsions. Thus,
a decamer duplex would be quite manageable since ma-
trices of separate strands are inverted separately, but a
hairpin of the same lengths would be more diﬃcult.

(cid:3)

This diﬃculty could be avoided, in principle, if we did
not divide internal coordinates into dependent and inde-
pendent variables. For instance, we could compute all
reaction forces in a closed loop and include them explic-
itly into equations of motion of the unconstrained tree,
which should give correct closed loop dynamics. This
idea has been in fact elaborated in robot mechanics14
and, at least theoretically, it should result in an O(n) al-
gorithm. Note also that this would be equivalent to the
introduction of holonomic constraints explicitly, similarly
to the well-known method of constraints in Cartesian co-
ordinate dynamics22. In a certain sense such an approach
may be called inconsistent because the resultant system
is constrained both implicitly and explicitly, but we will
see below that this appears more eﬃcient.

Projection Operators

In this section we brieﬂy recall a few necessary facts
concerning projection operators in linear spaces. Con-
sider a mechanical system of N free particles. Its conﬁg-
uration is determined by an n-vector of Cartesian coor-
dinates x, where n = 3N . Forces applied to particles are
given by an n-vector f . The possible values of f cover a
full n-dimensional vector space Ln.

Now let us assume that our particles are bound to move
along some hypersurface deﬁned by a constraint equation

C(x) = 0

and that initially they are placed at point x0 with zero
velocities. Vector

g = ∇C

x = x0

,

where ∇ is a multidimensional gradient operator, is or-
thogonal to the constraint hypersurface and all its or-
thogonal vectors form an (n − 1)-dimensional subspace
in Ln called tangent hyperplane P n−1. The particles are
held on the constraint hypersurface by reaction forces
given by vector f ⊥ collinear to g. Together with f this
vector must give f k ∈ P n−1:

f k = f + f ⊥ = f + α(f )g

(8)

where α(f ) is a scalar function.

It is clear that Eq. (8) applies to any vector f ∈ Ln. It
is known also that the sum of any two free forces f1 + f2
gives the corresponding sum f k
2 , and that f multiplied
by a constant results in the same multiplication of f k. In
other words, Eq.
(8) in fact deﬁnes a linear mapping
f −→ f k from Ln to P n−1, and, consequently, it can be
expressed as

1 +f k

f k = Tf

(9)

where T is an n × n matrix.

By construction, T2 = T, that is T represents a pro-
jection operator. Any such matrix can be calculated as

T = (I − ˜T) = (I − D(G∗D)−1G∗)

(10)

where I is the unit matrix, D and G are basis matrices
of the right and left zero spaces of T, respectively. By
deﬁnition, vector e belongs to the right zero space of T
if Te = 0. Such vectors form a linear subspace Dk in
Ln and n × k matrix D in Eq.
(10) consists of k its
basis vectors. It is readily veriﬁed that TD = 0. Matrix
G is constructed in the same way, and it is seen that
G∗T = 0. The two zero spaces Dk and Gk always have
the same dimension and they deﬁne a unique projection
operator.

The physical meaning of Dk and Gk is clear from the
above example. Dk determines the direction of projec-
tion. Equation (8) shows that, in our example, the corre-
sponding basis consists of a single vector g. In turn, Gk
is the orthogonal compliment to the tangent hyperplane
P n−k. In our example G1 it is identical to D1, and so we
have

T = 1 − g(g∗g)−1g∗

Finally, consider

˜T = D(G∗D)−1G∗.

(11)

It is readily veriﬁed that ˜T is also a projecting operator.
It projects upon Dk along the orthogonal subspace of Gk,
that is, along the tangent hyperplane P n−k, thus making

3

a complimentary pair with T. Equations (10) and (11)
can also be applied to a single projection, which gives
two alternative representations. In both cases, the op-
erator is deﬁned by the direction and the hyperplane of
the projection. However, in case of Eq. (10) one has to
substitute the direction itself and the orthogonal com-
pliment for the plane, whereas in Eq. (11) the opposite
combination is required.

The Analytical Equations of Constraint Dynamics

In this section we derive the basic equations of motion
for constraint dynamics directly from the above projec-
tion considerations. These equations are well-known, but
our main interest is in the reasoning rather than in the
result because similar arguments will later lead us to the
required numerical algorithm.

We consider again a system with n degrees of freedom
described by an n-vector q and the equations of motion
(5). We assume that these equations can be somehow de-
rived and solved without major diﬃculties. For Newto-
nian MD these are equations for unconstrained molecules
while in the case of ICMD these are equations for trees
of rigid bodies. These two models thus play similar roles
in our reasonings.

Now let us impose on our system a certain number of
explicit constraints deﬁned by Eq. (1). For clarity, from
now on we drop superscripts denoting dimensions of sub-
spaces. Equations (1) deﬁne an (n-k)-dimensional hyper-
surface in L and the system is held on it by generalized
reactions f ⊥ ∈ G where G is the subspace of orthogonal
vectors

gµ = ∇Cµ(q)

with an n × k basis matrix G. A straightforward deriva-
tion of equations of motion for the constrained system
would require evaluation of f ⊥ with subsequent substitu-
tion into the r.h.s. of Eq. (5):

M¨q = f + u + f ⊥.

(12)

Calculation of reactions can be bypassed as follows.

By taking time derivatives of Eq. (1) one obtains con-
straining conditions upon the tree velocities and acceler-
ations

gµ ˙q = 0
gµ¨q + ˙gµ ˙q = 0

(13a)
(13b)

Let us ﬁrst consider the case ˙gµ = 0. One can assume,
for instance, that particles are moving along space-ﬁxed
surfaces. In this case the second term in Eq. (13b) is
zero and we see that the constrained accelerations belong
to the tangent hyperplane P. Note also that accord-
ing to Eq. (12) constrained accelerations are obtained
by correcting the corresponding unconstrained vector by

M−1f ⊥, that is, by a vector from a subspace with the
basis matrix M−1G. We see, therefore, that calculation
of the constrained accelerations is nothing but a projec-
tion L −→ P along direction M−1G. The corresponding
operator is readily computed according to Eq. (10)

T = (I − ˜T) = hI − M−1G

G∗M−1G
(cid:1)
(cid:0)

−1

G∗

i

(14)

By applying it in Eq. (12) we obtain equations of motion

¨q = TM−1(f + u) =
hI − M−1G

−1
G∗M−1G
(cid:1)
(cid:0)

G∗

i M−1(f + u).

(15)

Now consider the case ˙gµ 6= 0. Equation (13b) in-
dicates that, unlike velocities, the constrained accelera-
tions no longer belong to P, but lie in another hyper-
plane which is shifted from the zero of the coordinates.
It does not, therefore, represent a subspace in L and the
constrained accelerations can no longer be obtained by a
linear mapping like Eq.(9). Let us, however, decompose
vector ¨q as

¨q = ¨qk + ¨q⊥

(16)

where ¨qk ∈ P and ¨q⊥ ∈ G. By substituting Eq. (16) into
Eq.(12) we get

M¨qk = f + u − M¨q⊥ + f ⊥.

(17)

Now we can again use operator T to compute ¨qk and, by
substituting back to Eq. (16), obtain

⊥
¨q = TM−1 (f + u) + ˜T¨q

(18)

Thus, we still avoid explicit calculation of reactions if
vector ¨q⊥ is obtained separately. This is, fortunately,
the case. By deﬁnition, ¨q⊥ is a projection of ¨q upon G
along hyperplane P. The corresponding operator can be
computed by Eq. (11). (Note that it diﬀers from ˜T in
Eq. (14) by its target hyperplane.) By using Eqs. (11)
and (13b) we get

¨q⊥ = G (G∗G)−1 G∗¨q = −G (G∗G)−1 ˙G∗ ˙q.

(19)

and substitution of Eqs. (14) and (19) into Eq. (18) gives
the required equation of motion

¨q =
hI − M−1G
M−1G

−1

G∗M−1G
(cid:1)
(cid:0)
−1 ˙G∗ ˙q
G∗M−1G
(cid:1)
(cid:0)

G∗

i M−1(f + u)−

(20)

Note that for Cartesian coordinates this gives the same
equation as that derived by using Lagrange multipliers.16
On the other hand, it is seen from Eqs. (4) and (16) that

¨q⊥ = ˙P ˙qf

and thus Eq. (7) is equivalent to Eqs. (18) and (20).
They involve the same projection operation, but employ

4

two alternative representations of the operator. These
two representations correspond to two alternative ap-
proaches to constraints in dynamics and dictate opposite
trends in computational strategies. In case of Eq. (7) the
projection operator is speciﬁed by the target plane and
the orthogonal compliment to the projecting direction,
that is according to Eq. (11). This leads to inversion of
a (n − k) × (n − k) matrix and prompts a reduction of
the degrees of freedom in the system. In contrast, in the
case of Eq. (20) the operator is speciﬁed by the direction
and the orthogonal compliment to the target plane, that
is corresponding to Eq. (10), which results in inversion
of a k × k matrix and prompts reduction of the number
of constraints and, consequently, keeping a possibly large
number of degrees of freedom. In the second case, matrix
M−1 is used several times, but this is not computation-
ally limiting and in practice Eq. (20) appears applicable
to large systems.

Let us ﬁnally obtain quasi-Hamiltonian equations for
the same system. For the unconstrained underlying tree
these equations can be expressed as4

˙p = f (q) + w(q, ˙q)
˙q = M−1p

(21a)
(21b)

where p is the n-vector of conjugate momenta and
w(q, ˙q) is the corresponding inertial term. In order to
get the equations for the constrained tree we just need to
evaluate generalized reactions from Eqs. (12) and (20)
and add them to the r.h.s. of Eq. (21a). The vector of
reaction is

f ⊥ = −G

−1
G∗M−1G
(cid:1)
(cid:0)

˙G∗ ˙q + G∗M−1(f + u)i , (22)
h

and the resultant equations read

˙p = hI − G

−1
G∗M−1G
(cid:1)
(cid:0)
˙G∗ ˙q + G∗M−1u(cid:17)
G∗M−1G
(cid:16)
(cid:1)
(cid:0)

G∗M−1

−1

i f + w −

G

˙q = M−1p.

The last equations are preferred because they are suit-
able for symplectic numerical integration and provide
much better average properties of dynamic trajectories
with large time steps.

Numerical Algorithm

Equations (23) have the same general form as Eq. (21)
and are suitable for the implicit leapfrog integrator de-
signed for the latter.4 However, here I prefer to follow the
well-tested approach of the Newtonian MD, which avoids
a straightforward integration of the analytical equations,
and uses projection considerations to derive a high pre-
cision numerical algorithm.16,22 The main idea becomes
clear from the following example. Consider an Euler step
in Cartesian coordinates:

v1 = v0 + M−1
x1 = x0 + v1h

f0 + f ⊥
0 (cid:1)
(cid:0)

h

(24a)
(24b)

where h is the step size and subscripts refer to the
time step number. Suppose coordinates x0 and veloci-
ties v0 satisfy constraints with absolute accuracy. Equa-
tion (24a) with an exact reaction f ⊥
0 computed by using
Eq. (22), for instance, would give velocities v1 with an
approximation error of O(h2). A similar error would be
propagated to the constraint conditions at the next step.
Note, however, that, according to Eq.
(24b), we can
minimize deviation of the trajectory from the next step
constraint hyperplane P1 by requiring that v1 ∈ P0. Ef-
fectively, this means that, instead of the true reaction
force f ⊥
(24a) another vector
which provides a projection of v0 + M−1f0h upon P0.
Algorithm (24), therefore, becomes

0 , we substitute into Eq.

v1 = T0
x1 = x0 + v1h

v0 + M−1f0h
(cid:0)

(cid:1)

(25a)
(25b)

where projection operator T0 is computed from x0.
This basic idea is used in the SHAKE22 and LINKS16
algorithms of Cartesian MD where unconstrained bond
lengths are corrected by using previous bond directions.
The projection in Eq. (25a) does not eliminate the error
in the constraints, but only gives the best ﬁrst approxi-
mation. The residual error can be controlled by feedback
schemes which add a small out-of-plane correction to the
projected vector v1 so as to eliminate accumulation.16

Now consider the implementation of the above strategy
for Eqs. (23). With our present notation the kernel of
the implicit leapfrog integrator for Eq. (21) reads4

fn = f (qn)

◦ qn+ 1

2

= qn− 1

2

+ (cid:16) ˙qn− 1

2

+ ˙qn+ 1

2 (cid:17)

(23a)

(23b)

◦ pn+ 1

2

◦ ˙qn+ 1

2

2

= pn− 1
= M−1
n+ 1
2

+ fnh + (cid:16)wn− 1
pn+ 1

2

2

qn+1 = qn + ˙qn+ 1

2 h

h
2

+ wn+ 1

2 (cid:17)

h
2

(26a)

(26b)

(26c)

(26d)

(26e)

where the conventional notation is used for denoting on-
step and half-step values. The lines marked by circles
are iterated until convergence of Eqs. (26b) and (26c).
Reactions depend upon both coordinates and velocities,
therefore, if computed explicitly, they should have been
added to Eq. (26c) to give

pn+ 1

2 = pn− 1

2 + fnh + (cid:16)wn− 1

2 + wn+ 1

2 (cid:17)

h
2

+

(cid:16)f ⊥

n− 1
2

+ f ⊥

n+ 1

2 (cid:17)

h
2

Following the above strategy we require that f ⊥
pro-
vide a projection of the unconstrained predicted veloci-
2 , which results in the following sequence
ties upon Pn+ 1
of calculations

n+ 1
2

5

fn = f (qn)

◦ qn+ 1
◦ ˜pn+ 1

2 = qn− 1
2 = pn− 1

2 + (cid:16) ˙qn− 1
2 + fnh +

2 + ˙qn+ 1

2 (cid:17)

h
2

h
2

+ f ⊥

n− 1
2

h
2

+ wn+ 1

2 (cid:17)
˜pn+ 1

2

2

(cid:16)wn− 1
= Tn+ 1
= Mn+ 1

2

2

M−1
n+ 1
2
˙qn+ 1

2

2

◦ ˙qn+ 1
pn+ 1
h
2

2

= pn+ 1

f ⊥
n− 1
2
qn+1 = qn + ˙qn+ 1

2 − ˜pn+ 1
h

2

2

(27a)

(27b)

(27c)

(27d)

(27e)

(27f)

(27g)

Equations (27) represent the kernel of the new algorithm.
The prediction step necessary to enter the iterative cycle
of Eqs. (27b-27d) is made by using the previous half-
step values instead of ˙qn+ 1
(27b)
and (27c). It is clear, however, that, if not additionally
controlled, the ideal ring geometry speciﬁed by Eqs. (1)
would degrade because of the approximation errors in
Eqs.
(27). There are numerous case-speciﬁc ways to
handle this problem and some of them are considered
below.

2 and wn+ 1

2 in Eqs.

Implementation for Five-Membered Rings

In this section we consider an implementation of the
above algorithm with examples of speciﬁc solutions of
the remaining practical diﬃculties, such as the construc-
tion of a correctly closed loop conformation and calcula-
tion of the projection operator. Our present implemen-
tation is speciﬁcally suited for ﬁve-membered rings and
has been tested for proline-rich polypeptides and nucleic
acids. Cystine bridges in proteins present a somewhat
diﬀerent case and should better be treated separately.

Consider once more Fig.1. It is known since the ﬁrst
analysis by G¯o and Scheraga18 that the problem of loop
closure in internal coordinates is generally reduced to six
coupled equations. Loop (b) in Fig.1 shows where this
number comes from. If the loop is broken as shown, each
half of the broken rigid body has six degrees of freedom.
In order to close the loop, six rigid body coordinates of
the two parts must be equated. Structure (c) in the same
ﬁgure shows, however, that the complexity of the prob-
lem can sometimes be reduced just by choosing a diﬀerent
underlying tree. We see that, if all angles are variable,
closure in loop (c) needs only one distance constraint.
The number of constraining conditions is always equal
to the number of degrees of freedom taken from the un-
derlying tree by the loop closure. All three loops in Fig.
1 are similar, but the underlying tree in (b) has ﬁve de-
grees of freedom more than in (c). For our algorithm
construction (c) is certainly preferable.

Let us now turn to ﬁve-membered rings. It is known
that their internal motions are well described as pseu-

q
1

2

1

q
3

q
5

3

q
4

4

q
2

5

FIG. 2. The underlying tree of a ﬁve-membered ring.
Atoms are numbered 1,...,5 corresponding to the natural tree
ordering. All bond lengths are ﬁxed. Shown by arrows are
ﬁve internal coordinates of the underlying tree that determine
the ring conformation.

dorotation with only two parameters20,21. Pseudorota-
tion equations can give constraints Eqs. (1) in an explic-
itly inverted form, which simpliﬁes calculations. How-
ever, such small rings are ﬂexible only if valence angles
vary and, therefore, any underlying tree has rather many
degrees of freedom. Thus, the number of scalar con-
straints eﬀectively introduced by the pseudorotation ap-
proach is very large even compared with loop (c) in Fig.1.
On the other hand, as we just have seen, this number,
in principle, can be reduced to one per ring, and this
appears rather easy.
Figure 2 shows

the underlying tree for a ﬁve-
membered ring.
Atoms are numbered 1,..,5, with
this ordering in ribose or deoxyribose corresponding to
C′
4. The
ring conformation is determined by ﬁve valence and di-
hedral angles q1, ..., q5 indicated by arrows. Let r1, ..., r5
denote atom position vectors and lij and eij, i, j = 1, ..., 5
denote the interatomic distances and the corresponding
unit vectors. Directions and positions of rotation axes of
ring variables are speciﬁed by the unit vectors e1, ..., e5
and position vectors rm1 , ..., rm5 , respectively. The con-
straint condition is

4 and the broken bond C′

4...O′

1, O′

4, C′

2, C′

3, C′

C = |r5 − r1| − l15 = 0

(28)

We consider ﬁrstly calculation of the projection operator
T. Each ring contributes to the basis matrix G a single
vector g with only ﬁve non-zero components obtained by
straightforward diﬀerentiation of Eq. (28):

gi =

= e15 · ei × (r5 − rmi ) .

(29)

∂C
∂qi

These computations are suﬃcient to evaluate T. In prac-
tice it is used in Eq.
(27d) in the factorized form of
Eq. (14), which results in several matrix-vector multi-
needs to be
plications. Only the term

−1
G∗M−1G
(cid:1)
(cid:0)

6

computed separately, and the cost of these computations
appears minor. The product k × k matrix is small and
essentially diagonal because constraints in diﬀerent rings
are only weakly coupled. In addition, I have found that
this term converges faster than the overall iterative cycle,
Eqs. (27b-d), and there is no need to recalculate it after
the ﬁrst two iterations.

The small deviations of the constrained bond lengths
l15 caused by the approximation errors can be either elim-
inated by exact analytical ring closure13,17,19 or reduced
to a low and stable level by feedback corrections.16 The
analytical closure is simple. Let us take variables q1, ..., q4
as independent and compute the last valence angle q5 so
that Eq. (28) is fulﬁlled. Variables q1, ..., q4 specify po-
sitions of atoms 1,...,4 and the orientation of the plane
of q5 speciﬁed by vectors e34 and an in-plane unit vector
e345 orthogonal to e34. We may write

r45 = l45 (xe34 + ye345)

(30)

where x and y are the two unknown in-plane coordinates
of the unit vector e45 They are found from the constraint
Eq. (28) and the normalization condition, which results
in

x (e14e34) + y (e14e345) =

15 − l2
l2

45 − l2
14

2l14l45

x2 + y2 = 1

(31a)

(31b)

This system is reduced to a square equation and gives a
single x > 0 solution, which solves the task. Derivatives
of the dependent angle q5, which are normally used only
for computing energy gradients during minimization, are

The feedback algorithm is constructed as follows. Sup-
pose, at the nth step, we have a non-zero value Cn in Eq.
(28). We require that

∂q5
∂qi

= −gi/g5

Cn +

˙qn+ 1

2 h = 0,

∂C
∂q

which means that at the next time step the accumulated
error must be zeroed to the ﬁrst order. It is clear that
for each ring only the component of ˙qn+ 1
orthogonal to
the constraint hypersurface matters and from Eq. (32)
it is evaluated as

2

˙q⊥

n+ 1
2

= −

Cn
|g|2h

g.

n+ 1
2

Vectors g are mutually orthogonal and by combining Eqs.
(33) for all rings we obtain a corresponding component
˙q⊥
for the whole molecule. To compute the correcting
velocity ˙qc
we require that it result from a variation
of reactions and thus belongs to the subspace with the
basis matrix M−1G. This gives a projection

n+ 1
2

(32)

(33)

7

˙qc

n+ 1
2

= ˜T ˙q

⊥
n+ 1

2 = M−1G

−1
G∗M−1G
(cid:1)
(cid:0)

G∗ ˙q⊥

n+ 1
2

. (34)

n+ 1
2

The last computation tends to reduce the extra mechan-
ical work introduced by the algorithm. The correction
obtained may be used inside the iterative cycle of the
algorithm (27) or just added to ˙qn+ 1
2 at the end. Also,
˙q⊥
can be computed for on-step or for half-step confor-
mations, or both such vectors may be combined. These
alternatives give a series of slightly diﬀerent algorithms
which are compared in the numerical tests below. Note,
however, that both the analytical closure and the feed-
back schemes break the time reversibility of algorithm
(27) and should generally increase the drift of the total
energy.

Numerical Examples

In the numerical tests presented below we address two
issues. First, we test the accuracy of the ring closure pro-
vided by the new algorithm with and without additional
corrections. Second, we check its stability with elevated
time steps, notably, the possibility of step sizes around 10
fsec for proteins and nucleic acids. This speciﬁc value is
targeted because it has been found optimal, in a certain
sense, for in-water simulations of proteins23.

We consider two test examples: one for proteins and
one for nucleic acids. The ﬁrst is a 36 residue frag-
ment of a collagen triple helix which involves 24 prolines
(ﬁle 1bﬀ24 in the protein database.25) Parameters for the
amino acids were taken from the AMBER94 set26. Ex-
cept for prolines, all bond lengths and bond angles were
ﬁxed at standard values according to the standard geome-
try approximation.27 The second test system is a decamer
DNA duplex (TA)5. Nucleotide geometry was taken from
FLEX force ﬁeld28 to provide compatibility with JUMNA
program28 which was used for preparation of the initial
duplex conformations. Except for sugar rings, the geom-
etry of the nucleotides was ﬁxed, that is the bases were
rigid and all other bond lengths and bond angles were
ﬁxed. Calculations have been performed without explicit
solvent by using the AMBER94 force ﬁeld26 with a di-
electric constant ǫ = r and phosphate charges in DNA
reduced by 0.5. These conditions emulate the eﬀects of
ion condensation and provide a reasonably accurate ap-
proximation in conformational analysis of nucleic acids.29
Pyrrolidine and furanose rings are treated similarly by
a single program. The furanose underlying tree has been
detailed above.
In the analogous construction for pro-
lines the NCδ bond is broken and replaced by a distance
constraint. Our approach generally allows for arbitrary
freezing of internal coordinates and thus can consider nu-
merous diﬀerent representations of such rings1. Here we
consider a model with only bond lengths ﬁxed and all
intra-cyclic valence angles free. These choices leave sev-
eral fast bond angle bending modes active, notably, the
scissor H-C-H mode with a frequency of around 1500

4

6

8

10

12

14

16

18

20

4

6

8

10

12

14

16

18

20

Time step (fsec)

Time step (fsec)

(a)

170

165

160

155

150

145

)
l
a
c
k
(
 

E

0.5

0.4

(b)

)
c
e
s
p
/
l
a
c
k
(
 
t
f
i
r
d
-
E

0.3

0.2

0.1

0

-0.1

-0.2

580

(a)

600

590

570

560

550

540

)
l
a
c
k
(
 

E

0.5

0.4

(b)

)
c
e
s
p
/
l
a
c
k
(
 
t
f
i
r
d
-
E

0.3

0.2

0.1

0

-0.1

4

6

8

10

12

14

16

18

20

4

6

8

10

12

14

16

18

20

Time step (fsec)

Time step (fsec)

FIG. 3. Characteristic time step dependencies of the total
energy (a) and of the E-drift (b) for a decamer DNA duplex
(TA)10. Low temperature plots are shown by thinner lines.
For comparison, in (a) the low temperature deviations are
scaled and shifted to ﬁt the range of deviations observed with
normal temperature. Similarly, in (b) the low temperature
E-drift is multiplied by 100. The dashed horizontal lines in
(a) show the band of acceptable deviation deﬁned in the text.

cm−1. Theory30 says that for a step size of 10 fsec,
the maximum frequency should be 3 times lower. To
achieve this, additional moments of inertia of 9 amu·˚A2
are applied to C-H bonds as described earlier.4 Following
earlier conclusions4,23 other hydrogen-only rigid bodies,
like thymine methyls, have additional inertia of 4 amu·˚A2
added.

With these modiﬁcations, the pseudorotation normal
modes with frequencies around 550 and 640 cm−1 for
DNA and collagen, respectively, become the fastest and
they already correspond to a harmonic characteristic
time step between 9 and 10 fsec for leapfrog-equivalent
integrators.30 However, with unfavorable collision angles,
non-hydrogen ring atoms with all valence angles free have
a considerably smaller eﬀective inertia than similar atoms
in models with ﬁxed bond angles.23 In preliminary tests
(not shown here) I observed an anharmonic limitation
below 10 fsec at normal temperature which could be over-
come by an additional increase of the ring inertia. Here
I show results obtained with the moments of ring C-C
and C-O bonds increased by 15 amu·˚A2 and 2 amu·˚A2,
respectively. This should make the inertias of all ring
bonds similar and approximately equal to that of a wa-
ter molecule, with a 50% increase for C-C bonds. As
a side eﬀect, the fastest pseudorotation frequencies are
shifted down below the already lowered hydrogen scissor
modes, and the latter thus remain the fastest in both test

FIG. 4. Characteristic time step dependencies of the total
energy (a) and of the E-drift (b) for a dodecamer collagen
triple helix. Notation is same as in Fig. 3.

systems.

Stability and step size limits were evaluated with the
testing technique and equilibration protocols proposed
and analyzed in detail elsewhere.23,30 In this method,
the test trajectory is repeatedly calculated always start-
ing from exactly the same constant-energy hypersurface.
In each run, certain system averages are evaluated and
compared with “ideal” values, i.e. the same parameters
obtained with a very small time step. The choice of such
parameters has been discussed in detail earlier.23 Here
we use only the total energy, E = ¯U + ¯K and its drift
(E-drift), where ¯U and ¯K are average potential and ki-
netic energies computed for integer steps and half-steps,
respectively. As in the previous study23 we take a devia-
tion of 0.2D[U ], where D[.] denotes operator of variance,
as the upper acceptable level for deviation of E. The step
size maximum determined is denoted as hc and called
“characteristic”. The E-drift is exactly zero for ideal
harmonic systems,30 and is thus a good indicator of an-
harmonic eﬀects. Virtually harmonic conditions are sim-
ulated by reducing the temperature down to 0.1K with
the same equilibration protocol as before.23 Relevant har-
monic frequencies were evaluated from low temperature
spectral densities of autocorrelation functions of appro-
priate generalized velocities. In all production runs the
duration of the test trajectory was 10 psec.

The results of such testing are shown in Figs. 3 and
4. For both model systems the low and normal temper-
ature plots have characteristic qualitative diﬀerences,23
but hc does not change with temperature indicating that
the time step limitations are harmonic. The hc values
are close to the expected harmonic estimate. The small

8

diﬀerence observed between the two systems can be at-
tributed to a three times larger number of hydrogen scis-
sor modes in collagen. We see that the projection step
in algorithm (27) does not deteriorate the high stabil-
ity of the original leapfrog algorithm. We conclude also
that our model for ﬁve-membered rings allows calcula-
tions with h ≈ 10 fsec. The last conclusion has been
checked by computing several nanosecond trajectories of
diﬀerent DNA oligomers (results not shown).

Plots in Figs. 3 and 4 are obtained by algorithm (27)
without corrections of constrained bond lengths. Before
considering the eﬀects of such corrections let us look more
carefully at how constraint distances behave in the above
conditions. Since algorithm (27) keeps no information
about the initial bond lengths a diﬀusive drift from initial
values is possible. Note, however, that the constrained
distances are just additional ﬁrst integrals of the con-
strained equations of motion, like momenta or the total
energy. For leapfrog-equivalent integrators deviations in
ﬁrst integrals caused by approximation errors are nor-
mally oscillatory rather than diﬀusive, and the drift may
thus be small.

Figure 5 shows the time variation of a CNδ bond in
proline during a 1 nsec trajectory. This trajectory has
been computed for a single terminally blocked residue at
normal temperature with the same conditions as above.
It is seen that the ﬂuctuations have many time scales, but
even in the slowest one they are not evidently diﬀusive.
The insertion plot shows that the high frequency ampli-
tude of the ﬂuctuations levels starting from the very ﬁrst
time step. It scales as O(h2) in agreement with the gen-
eral properties of leapfrog-like algorithms30 (not shown).
The high-frequency amplitude is evidently larger than
diﬀusive deviations accumulated for tens of picoseconds,
and, therefore, infrequent periodical corrections should
be suﬃcient to keep deviations within this range. Such
a possibility is illustrated by the solid line in the same
ﬁgure where the analytical ring closure was applied once
every 10 psec. One may note that this gives a reasonable
and certainly the safest correction strategy.

Table I compares several correcting schemes discussed
in the previous section. We noted above that numer-
ous feedback algorithms are possible due to variation of
two conditions. First, correction of generalized velocities
can be added within the iterative cycle or after it. The
last option, however, always yields a considerably higher
E-drift and such algorithms are not included in Table I.
Second, there are two possible directions of the correcting
vector computed for on-step rings and half-step rings, re-
spectively. Only one of the two directions, or an average
of the two vectors, can be used, or else they can alternate
between time steps. In the last case, however, a dramatic
loss of the overall stability of the algorithm is induced.
Thus, among many variants only three feedback strate-
gies included in Table I give acceptable results. The data
have been obtained for 10 psec trajectories of the DNA
decamer with a 10 fsec step size. Trajectories started
from the same initial state with sugar rings closed ex-

9

10

+2

0

-2

)
0
0
0
1
A

/

(
 
n
o

i
t

i

a
v
e
D

8

6

4

2

0

-2

-4

5

10

200

400

600

800

1000

Time (psec)

FIG. 5. Time variation of the constrained bond length in
a separate terminally blocked proline residue during a 1 nsec
trajectory. The dotted plot corresponds to a trajectory com-
puted by algorithm (27) with no corrections. Its initial part
is detailed in the insertion. The solid line corresponds to a
trajectory computed similarly, but with the analytical ring
closure applied once in 10 psec.

actly.

We noted above that any correcting algorithm is likely
to increase the E-drift. It appears, however, that the in-
crease is usually below the noise level for the step sizes
of interest, which is clearly seen in Table I and Fig. 3.
Except for half-step feedback corrections the E-drift is
within the range of ﬂuctuations in Fig. 3(b). A cer-
tain increase in E-drift is observed, however, with much
smaller time steps as well as with h > hc. Very good
results are obtained with analytical ring closure, which
seems to be the best choice for furanose and proline rings.
It should be noted that, in this case, with any step size, it-
erations in Eqs. (27) converge only up to a relative accu-
racy of 10−5 and then start looping. This, however, does
not seem to aﬀect either the accuracy in terms of energy
conservation, or the long time stability of the algorithm,
which also has been checked for nanosecond trajectories.
Although feedback algorithms appear unnecessary for
ﬁve-membered rings they still present signiﬁcant interest
especially for S-S bridges were both the analytical closure
and the periodical corrections are not easy. Table I shows
that, as expected, the three feedback algorithms improve
the accuracy in the targeted rings. Improvements are not
spectacular, but it is important to note that the corrected
levels of deviations are stable in time. In this respect the
last algorithm in Table I, which manages to correct both
on-step and half-step distances, is the most promising.

TABLE I. The quality of the ring closure obtained with diﬀerent correcting strategies. Data from 10 psec trajectories of
(TA)5 starting from the same initial state with all rings closed exactly. Time step 10 fsec. The rms deviations of closing bond
lengths from ideal values are shown, with corresponding maximal values given in brackets.

on-step rings (×10

−3˚A)

half-step rings (×10

−3˚A)

E-drift (×10

−2kcal/psec)

Algorithm

No correction
Analytical closure
Feedback on-step
Feedback half-step
Feedback mixed

1.50(11.3)
0(0)
0.294(1.84)
1.53(12.0)
0.837(5.72)

0.757(6.34)
0(0)
1.52(7.81)
0.369(2.90)
0.852(6.04)

-9.23
3.49
5.71
-39.5
-8.94

ACKNOWLEDGMENTS

21 H. A. Gabb, R. Lavery, and C. Pr´evost, J. Comput. Chem.,

12 A. Jain, J. Guidance, Control Dynam., 14, 531 (1991).
13 R. A. Abagyan and A. K. Mazur, J. Biomol. Struct. Dyn.,

6, 833 (1989).

14 G. Rodriguez, A. Jain, and K. Kreutz-Delgado, Int. J.

Robot. Res., 10, 371 (1991).

15 W. R. Rudnicki, B. Lesyng, and S. C. Harvey, Biopolymers,

34, 383 (1994).

16 B. Hess, H. Bekker, H. J. C. Berendsen, and J. G. E. M.

Fraaije, J. Comput. Chem., 18, 1463 (1997).

17 R. A. Abagyan and A. K. Mazur, Comput. & Chem., 14,

169 (1990).

18 N. G¯o and H. A. Scheraga, Macromolecules, 3, 178 (1970).
19 A. A. Lugovskoy and V. G. Dashevsky, J. Struct. Chem.,

20 C. Altona and M. Sundaralingam, J. Am. Chem. Soc., 94,

13, 122 (1972).

8205 (1972).

16, 667 (1995).

22 J. P. Ryckaert, G. Ciccotti, and H. J. C. Berendsen, J.

Comput. Phys., 23, 327 (1977).

23 A. K. Mazur, J. Phys. Chem. B, 102, 473 (1998).
24 G. Nemethy, K. D. Gibson, K. A. Palmer, C. N. Yoon, G.
Paterlini, A. Zagari, S. Rumsey, and H. A. Scheraga, J.
Phys. Chem, 96, 6472 (1992).

25 F. C. Bernstein, T. F. Koetzle, G. J. B. Williams, E. F.
Meyer, M. D. Brice, J. R. Rodgers, O. Kennard, T. Shi-
manouchi, and M. Tasumi, J. Mol. Biol, 112, 535 (1977).
26 W. D. Cornell, P. Cieplak, C. I. Bayly, I. R. Gould, K. M.
Merz, D. M. Ferguson, D. C. Spellmeyer, T. Fox, J. W.
Caldwell, and P. A. Kollman, J. Amer. Chem. Soc., 117,
5179 (1995).

27 F. A. Momany, R. F. McGuire, A. W. Burgess, and H. A.

Scheraga, J. Phys. Chem., 79, 2361 (1975).

28 R. Lavery, K. Zakrzewska, and H. Sklenar, Comput. Phys.

Commun., 91, 135 (1995).

29 D. Flatters, K. Zakrzewska, and R. Lavery, J. Comput.

Chem., 18, 1043 (1997).

30 A. K. Mazur, J. Comput. Phys., 136, 354 (1997).

III. CONCLUSIONS

This study is, to my knowledge, the ﬁrst successful
attempt to develop a practical ICMD approach to large
molecules with internal ﬂexible rings. It is shown here
that the strategy referred to above as “inconsistent”,
that is imposing explicit constraints upon a system al-
ready constrained implicitly, results in algorithms as fast
and as stable as those for ICMD simulations of poly-
mers with the tree topology. For the important case of
ﬁve-membered rings in nucleic acids and proteins, calcu-
lations with time steps around 10 fsec are shown to be
possible.

I wish to thank R. Lavery for useful discussions and

critical comments to the manuscript.

1 A. K. Mazur and R. A. Abagyan, J. Biomol. Struct. Dyn.,

2 A. Jain, N. Vaidehi, and G. Rodriguez, J. Comput. Phys.,

6, 815 (1989).

106, 258 (1993).

3 L. M. Rice and A. T. Br¨unger, Proteins: Struct., Funct.,

Genet., 19, 277 (1994).

4 A. K. Mazur, J. Comput. Chem., 18, 1354 (1997).
5 V. E. Dorofeyev and A. K. Mazur, J. Biomol. Struct. Dyn.,

10, 143 (1993).

6 M. G. Petukhov, A. K. Mazur, and L. A. Elyakova, Carbo-

hydr. Res., 279, 41 (1995).

7 E. T. Stein, L. M. Rice, and A. T. Br¨unger, J. Magn. Re-

son., 124, 154 (1997).

8 A. F. Vereshchagin, Engineering Cybernetics, 6, 1343

(1974).

(1987).

9 R. Featherstone, Robot Dynamics Algorithms, Kluwer Aca-

demic Publishers, Boston, 1987.

10 G. Rodriguez, IEEE J. Robot. Automat., RA-3, 624

11 G. Rodriguez and K. Kreutz-Delgado, IEEE Trans. Robot.

Automat., 8, 65 (1992).

10

