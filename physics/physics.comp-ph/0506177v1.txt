5
0
0
2
 
n
u
J
 
3
2
 
 
]
h
p
-
p
m
o
c
.
s
c
i
s
y
h
p
[
 
 
1
v
7
7
1
6
0
5
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Link: http://charles.karney.info/biblio/quat.html
E-print: arXiv:physics/0506177

Quaternions in molecular modeling

Charles F. F. Karney∗

Sarnoff Corporation, Princeton, NJ 08543-5300

(Dated: June 23, 2005)

Quaternions are an important tool to describe the orientation of a molecule. This paper considers the use of
quaternions in matching two conformations of a molecule, in interpolating rotations, in performing statistics on
orientational data, in the random sampling of rotations, and in establishing grids in orientation space. These
examples show that many of the rotational problems that arise in molecular modeling may be handled simply and
efﬁciently using quaternions.

Keywords: quaternions, rotations, molecular simulation

I. INTRODUCTION

§§

Quaternions were introduced in the mid-nineteenth cen-
tury by Hamilton [1; 2] as an extension of complex numbers
and as a tool for manipulating 3-dimensional vectors. Indeed
Maxwell used them to introduce vectors in his exposition of
electromagnetic theory [3,
10–11]. However, unlike com-
plex numbers which occupy a central role in the development
of algebra, quaternions found no similar place in mathematics
and, with the introduction of modern vector notation by Gibbs
[4], quaternions fell out of favor by the end of the nineteenth
century. Nevertheless, quaternions excel as a way of repre-
senting rotations of objects in 3-dimensional space. They are
economical to work with (both in terms of storage and com-
putation); but more importantly they offer a clean conceptual
framework which allow several problems involving rotations
to be easily solved.

Basic quaternion algebra is well covered in Hamilton’s pa-
pers [1; 2], which are both accessible and readable. These pa-
pers may be supplemented with a wealth of on-line resources
[5; 6]. Many authors over the past 20 years have “redis-
covered” the application of quaternions to rotations and it is
with some trepidation that this author inﬂicts another paper
on the subject on the scientiﬁc community. However, within
the molecular modeling community, quaternions are quite nar-
rowly applied. This paper therefore brieﬂy reviews quater-
nion algebra and then describes their applications to a broad
range of rotational problems in molecular modeling. Much of
this material has appeared before—but often scattered about
in journals for ﬁelds unrelated to molecular modeling. I have,
therefore, endeavored to organize the material, to generalize
it, and to present it with a consistent notation, with the hope
this affords a deeper appreciation of the power of quaternions
in describing rotations and encourages their wider adoption in
molecular modeling.

The outline of this paper is as follows. After introducing

∗Electronic address: ckarney@sarnoff.com

quaternions and their use in describing rotations, we tackle
various applications. First we review the quaternion method
for computing the least-squares ﬁt of two conformations of
the same molecule. We also see how to include molecular in-
versions and discuss why the least-squares ﬁt is a poor choice
to describe the orientation of a ﬂexible molecule. We next
show how to interpolate smoothly between two orientations
and that this corresponds to rotating the molecule at constant
angular velocity. In order to carry out statistics on orienta-
tional data, we give a robust deﬁnition of the mean orientation
showing how to transform the deviations from the mean to
3-dimensional space so that familiar statistical tools may be
employed. In Monte Carlo applications, we need to be able
to select a random orientation uniformly; we show that this is
trivially accomplished in quaternion space and we also con-
sider the problem of making random incremental rotations.
Finally, it is frequently useful to impose a grid on orientation
space and we illustrate how this may be done with applica-
tions to quadrature and searching.

II. QUATERNIONS

The original notation for quaternions [1] paralleled the con-

vention for complex numbers

q = q0u + q1i + q2j + q3k,

which obey the conventional algebraic rule for addition and
multiplication by scalars (real numbers) and which obey an
associative non-commutative rule for multiplication where u
is the identity element and

i2 = j2 = k2 =

u,

−
kj = i,

ij =

ji = k,

jk =

ki =

ik = j.

−

−
It is frequently useful to regard quaternions as an ordered set
of 4 real quantities which we write as

−

q = [q0, q1, q2, q3],

(1)

or as a combination of a scalar and a vector

= 1, and deﬁne an operator Rq on 3-dimensional

v
where
|
|
vectors by

q = [q0, q],

(2)

where q = [q1, q2, q3]. A “scalar” quaternion has zero vector
part and we shall write this as [q0, 0] = q0u = q0. A “pure”
quaternion has zero scalar part [0, q].

In the scalar-vector representation, multiplication becomes

p

q, p0q + q0p + p

q],

×

pq = [p0q0 −
” and “
·

·

where “
conjugate of a quaternion is given by

×

” are the vector dot and cross products. The

−
the squared norm of a quaternion is

q = [q0,

q];

2 = qq = q2
|
and its inverse is

q
|

0 + q2

1 + q2

2 + q2
3,

q−

1 = q/

q
|

2 .
|

Quaternions with
which we have q−

q
|
|
1 = q.

= 1 are called unit quaternions, for

The quaternion q can also be represented as a 2

2 complex

×

matrix,

q2 + iq3

q0 + iq1
q2 + iq3 q0 −

−

iq1 (cid:19)

,

(cid:18)

or as a 4

4 real matrix,

×

q0
q1
q2
q3
q1
q2
q3
q0 −
q1
q3
q2
q0 −
q0
q1
q2
q3 −
in these forms, quaternion multiplication becomes matrix
multiplication.

Q(q) = 



−
−
−




(3)



;

×

3 matrices, bold sans serif for quaternions and 4

The notation we adopt here is to use light-face italics for
scalar quantities, bold roman for 3-dimensional vectors and
4 ma-
3
trices. Quaternion multiplication is indicated by pq, while
“
” is used to indicate matrix-vector and vector-vector (includ-
·
ing quaternion-quaternion) contractions and in this context q
and v are treated as column vectors. Thus, we may write
Q(q), with Q given
q
|
by eq. (3). Consistent with eqs. (1) and (2), we shall number
quaternion indices starting at 0 and vector indices from 1.

q. We also ﬁnd that pq = pT

2 = qT
|

×

·

·

III. ROTATIONS

The chief application of quaternions to molecular modeling
lies in their use to represent rotations. Consider a unit quater-
nion

q = [cos(θ/2), v sin(θ/2)],

(4)

2

(5)

[0, Rq(x)] = q [0, x] q.

Multiplying out the quaternion product, we ﬁnd

Rq(x) = R(q)

x,

·

where R(q) is the tensor

R(q) = (q2

2)I + 2qq + 2q0I
q
0 − |
|
= vv + cos θ(I

×
vv) + sin θ I

q

(6)
(7)

−

v,

×
b = a

§

where the tensor, I
b [4,
a, satisﬁes (I
113]. Equation (7) is the conventional tensor representation
§
for a right-handed rotation of θ about an axis v through the
origin [4,

126].

a)

×

×

×

·

The deﬁnition, eq. (5), gives Rp(Rq(x)) = Rpq(x), so that
pq corresponds to composing rotations (with the rotation by q
q
performed ﬁrst). We also ﬁnd that Rq = R
give the same rotation—changing the sign of q is equivalent to
increasing θ by 2π in eq. (4). Unit quaternions satisfy q2
1+
q2
2 + q2
3 = 1 and the quaternion representation of rotations are
as points on a hypersphere S3 with opposite points identiﬁed.
For future reference, we note that the area of S3 is 2π2.

−
0+q2

q; i.e., q and

−

−

0, so that θ

Because q and

q give the same rotation, some care needs
to be taken when comparing two orientations represented by
qa and qb. The rotation, q = qbqa, moves from qa to qb.
When inverting eq. (4) to determine the rotation angle θ be-
tween the two orientations, we should, if necessary, change
the sign of q to ensure that q0 ≥
[0, π]. A
∈
qT
simple metric for closeness is given by cos(θ/2) =
.
a ·
Describing rotations with quaternions has a number of ben-
(cid:12)
(cid:12)
eﬁts. They offer a compact representation of rotations. Com-
pared to Euler angles, they are free of singularities. Rotations
may be composed more efﬁciently using quaternions than by
matrix multiplication. Also in contrast to rotation matrices, it
is easy to maintain a quaternion’s unit normalization (merely
divide it by
). However the chief beneﬁt is that the repre-
|
sentation of a rotation as point on S3 allows us to derive many
important results concerning rotations in a simple coordinate-
free way.

q
|

qb

(cid:12)
(cid:12)

There is one application where the matrix representation of
rotations is more efﬁcient that the quaternion representation.
If we wish to apply the same rotation to many points, then we
should form the rotation matrix using eq. (6) and transform
the points by matrix multiplication.

The conventional representation for rotations that is most
closely allied to quaternions is the axis-angle representation,
where the rotation is given by a vector s = θv which denotes
a rotation of θ =
. It is useful
|
to have an analytic relation between the quaternion and axis-
angle representations and this is provided by the quaternion
exponential [1],

about an axis v = s/

s
|

s
|

|

exp([0, s/2]) = q,

(8)

where q is given by eq. (4), This deﬁnition of the exponen-
tial follows from its series expansion. Similarly the inverse

operation is given by the quaternion logarithm

ln q = [0, s/2 + 2πnv],

(9)

where n is an integer.

It is useful here to make a distinction between “orientation”
and “rotation”. We imagine that our molecule has some ar-
bitrary but deﬁnite reference state. We apply a rotation and
a translation (jointly referred to as a “displacement”) to this
reference state and so bring the molecule to a new orientation
and position (jointly referred to as a “conﬁguration”).

IV. LEAST-SQUARES FIT

Given two conformations of the same molecule, it is often
useful to be able to determine how close the conformations
are. In order to do this, we can rigidly move one conforma-
tion so that it nearly coincides up with the other and then de-
termine the difference in the positions of the corresponding
atoms. Thus, if we are given two sets of atomic positions
yk}
xk}
with k
[1, N ] together with a set of atomic
and
{
{
“weights”
, we wish to determine the (rigid) displace-
wk}
{
ment T which minimizes

∈

E =

1
W Xk

wk |

yk −

T (xk)
|

2 ,

(10)

P

where W =
k wk. Here wk is merely a statistical weight
of an atom—it is not necessarily related to the atomic mass.
The two sets of atomic positions are ordered which presumes
that we can identify corresponding atoms. (This is not neces-
sarily a simple matter, if, for example, we are dealing with
a molecule with several identical branches.) The displace-
ment T = (q, d) may be expressed as a rotation about an
axis through the origin followed by a translation, i.e., T (x) =
Rq(x) + d.

This problem has been considered by many authors. Using
quaternions to describe the rotation leads to an elegant and ro-
bust formulation. This was ﬁrst given by Faugeras and Hebert
[7]. The method was subsequently independently discovered
by Horn [8], by Diamond [9], and by Kearsley [10]. How-
ever the original derivation of Faugeras and Hebert remains
the clearest, and we brieﬂy summarize it here including the
straightforward generalization of including arbitrary weights
wk.

If we demand that the variation of E with respect to d van-

ish, we ﬁnd that

d =

x
y
),
Rq(
i
h
h
denotes the sample average,

i −

where

. . .
i
h

=

X
h

i

1
W Xk

wkXk.

Equation (10) may now be written as

E =

1
W Xk

wk |

y′k −

2 ,
Rq(x′k)
|

(11)

(12)

(13)

3

x
where x′k = xk − h
i
eq. (13), becomes

y
and y′k = yk − h

. Using eq. (5),
i

E =

1
W Xk

(cid:12)
(cid:12)

wk

[0, y′k]

q [0, x′k] q

−

(14)

2

.

(cid:12)
(cid:12)

Because, the norm of a quaternion is unchanged on multiply-
ing it by a unit quaternion, we may right-multiply the kernel
of eq. (14) by q to give

E =

1
W Xk

wk

[0, y′k] q

2

.

−

q [0, x′k]
(cid:12)
(cid:12)

(cid:12)
(cid:12)
We need to minimize eq. (15) subject to the constraint
Because the kernel is linear in q, it can be written as

(15)

= 1.

q

|

|

(16)

[0, y′k] q

q [0, x′k] = Ak ·

q,

−
4 skew matrix

×
Ak = A(y′k + x′k, y′k −

x′k),

where Ak is a 4

with

A(a, b) =

bT

0
−
b I

(cid:18)

a (cid:19)
×
b3
b2 −
b1 −
0
−
a3 a2
b1
0
−
b2 a3
a1
0
−
0
a2 a1
b3 −



.




= 



Substituting this into eq. (15), we obtain

E =

1
W Xk

wk qT

AT
k ·

·

Ak ·

q = qT

B

q,

·

·

(17)

AT
where B =
4 symmetric matrix which has
k ·
×
h
λ3. Setting q to the
real eigenvalues, 0
λ1 ≤
eigenvector corresponding to λ0 gives the minimum value for
E = λ0.

is a 4
λ0 ≤

Aki
≤

λ2 ≤

In summary, the best ﬁt is achieved by subtracting the mean
positions from the original sets of points to give
and
y′k}
, forming the matrices Ak and B, and determining the
{
minimum eigenvalue λ0 of B. The optimal rotation is given
by setting q to the corresponding eigenvector of B and the
optimal translation is found from eq. (11). The mean squared
error for this ﬁt is λ0.

x′k}

{

{

{

and

yk}

xk}

This procedure has two attractive features. The rotation
obtained is a proper rotation (without an inversion); this is
usually the desired result. Secondly, degenerate molecules
are treated satisfactorily. For example if one or both of the
sets
is collinear, then the best ﬁt is no longer
unique. The result will be that there will be multiple minimum
eigenvalues of B with distinct eigenvectors. The general solu-
tion is obtained by setting q to a linear combination of these
eigenvectors. The method does require ﬁnding the eigenval-
ues and eigenvectors of a 4
4 matrix. However there are
×
many numerical libraries [11; 12; 13] which solve such prob-
lems and the results are accurate to round-off for small sym-
metric matrices such as B.

Horn [8] considered including a scaling in the transforma-
tion T in eq. (10). This is quite easily accommodated. How-
ever there seems little need to include such an effect in molec-
ular modeling.

Diamond [14] considers the case where inversions are al-
x′k for x′k in

lowed. This is easily achieved by substituting
eq. (13). Equation (17) then involves a matrix B′ where

−

B′ = 2

x′

h|

2 +
|

y′
|

2
|

I
i

−

B.

(18)

Consequently the rotation giving the best inverted ﬁt is the
eigenvector with the greatest eigenvalue of B, λ3. Because the
sum of the eigenvalues of B is its trace, 4
, we can
i
express the mean squared error for the inverted ﬁt as 1
2 (λ0 +
λ3). Thus, once the eigenvalues of B have been
λ1 + λ2 −
computed we immediately determine whether the inverted ﬁt
will be better than the proper ﬁt.

2+
|

y′
|

2
|

x′

h|

{

xk}

One other interesting consequence of this result for the best
ﬁt is that the rotation is not a continuous function of the con-
gives
ﬁgurations of the molecules. Let us suppose that
the position of the atoms in a molecule in some predeﬁned
conﬁguration and suppose that
gives the atom positions
{
during the course of a dynamical simulation of the molecule.
If the forces acting on the atoms are ﬁnite then yk is a C1
function (twice differentiable). During the course of the de-
formation of the molecule, B and its eigenvalues change. In
the typical case, the two smallest eigenvalues exchange roles
and q switches from one direction in R4 to an orthogonal di-
rection. This results in the orientation of the best ﬁt changing
discontinuously by 180◦.

yk}

In modeling a ﬂexible molecule, it is frequently useful to
separate the external degrees of freedom, namely position and
orientation, from the internal degrees of freedom. This allows,
for example, translational and rotational symmetry to the sys-
tem to be enforced and correlations between the motions of
atoms within a molecule to be studied. This begs the ques-
tion of how best to deﬁne the position and orientation of a
molecule. Taking the position to be the center of mass is often
the obvious choice. The position (so deﬁned) evolves accord-
ing to Newton’s second law driven by the total force on the
molecule. It is not possible to keep track of the orientation in
an analogous fashion by integrating the total angular momen-
tum, because ﬂexible bodies can change their orientation with
zero angular momentum—witness the ability of a cat always
to land on its feet. A possible deﬁnition of the orientation is
the best ﬁt orientation to a reference conformation; i.e., we
deﬁne oR(A) as the best ﬁt orientation, expressed as a quater-
nion, of the molecule in conformation A relative to a refer-
ence conformation R. Here again this choice has the attractive
feature that the whole molecule is included in the deﬁnition.
There are two problems with this prescription. Firstly, the dif-
ference in orientations between two conformations A and B
depends, in general, on the choice of reference conformation,
namely

oR(B)oR(A)

= oS(B)oS(A).

4

serious defect arises from the discussion in the previous para-
graph. Recovering the actual conﬁguration of the molecule
from the orientation deﬁned in this way is numerically un-
stable (by a ﬂip of 180◦!) whenever the lowest eigenvalues
cross. This would also lead to large and discontinuous appar-
ent internal motions of the molecule with small changes in the
atoms’ true positions. A better choice would therefore be to
make the ﬁt to some rigid (or nearly rigid) subcomponent of
the molecule [15]. Although this still yields an arbitrary def-
inition of orientation (depending on the choice of reference
subcomponent), the resulting orientation varies continuously
under continuous deformations of the molecule.

In closing this section, let us point out that Clifford [16]
extended quaternions to capture the full displacement of a
rigid body in a single object which is nowadays called a dual
quaternion. The rigid transformation is given by a screw mo-
tion about an axis which, in general, does not pass through
the origin. This formalism has been used to solve the least-
squares ﬁtting problem [17]. However the resulting steps fol-
low closely those of Faugeras and Hebert [7] as given here.
Because of this and because the elementary object on which
dual quaternions operate is a line rather than a point, there
appears to be little intrinsic advantage in using dual quater-
nions to describe rigid displacements in molecular modeling
in preference to the more explicit representation of a rotation
followed by a translation.

V. INTERPOLATING ROTATIONS

The power of the quaternion representation of rotations is
evident when we consider the problem of interpolating be-
tween two orientations of a molecule. (This application might
arise in the animation of a molecular simulation.) Suppose
we wish to interpolate between qa and qb. Because these
quaternions and their interpolants lie on the unit sphere S3,
the shortest path will be a great circle whose parametric equa-
tion is given by [18]

qa sin(θ

q(φ) =

φ) + qb sin(φ)
−
sin(θ)

,

(19)

qa,

where cos θ = qT
qb. In the computer animation commu-
a ·
nity this “spherical linear interpolation” operation is denoted
by Slerp(qa, qb; u) = q(uθ) [18]. As φ is increased from 0
to 2π, q(φ) becomes successively qa, qb,
qb, and ﬁ-
−
nally returns to qa. During this operation the corresponding
3-dimensional rotation has increased by 4π. If qT
0,
a ·
θ takes q(φ) smoothly from qa to qb. If, on
then 0
≤
the other hand, qT
qb < 0, then a shorter path is found with
a ·
θ
0

≤
π which takes q(φ) smoothly from qa to

≥
Equation (19) is derived using simple geometrical argu-
ments applied to S3 and the same result is obtained for the
great-circle interpolation for Sn. For S3, the result can also be
expressed as

qb ≥

qb.

−

−

≥

−

φ

φ

q(φ) = (qbqa)φ/θqa.

(This is easily demonstrated for simple triatomic molecules.)
Thus this deﬁnition of orientation entails a degree of “arbi-
trariness” absent in our deﬁnition of position. A second more

This relation has the interpretation: rotate to qa and then rotate
a fraction φ/θ to the path from qa to qb. The operation qu is

6
deﬁned by [1]

qu = exp(u ln q).

In fact this interpolation scheme results in the molecule un-
dergoing rotation at constant angular velocity.
In order to
show this, consider a body rotating at ω about a unit axis
v. The evolution of the orientation q satisﬁes the differential
equation

˙q = [0, (ω/2)v] q.

(20)

This is easily solved (e.g., by using ﬁnite differences and pass-
ing to the limit δt

0) to give

→

q(t) = exp([0, (ωt/2)v])q(0)

= [cos(ωt/2), v sin(ωt/2)] q(0),

which agrees with eq. (19) with the substitutions φ = ωt/2,
qa = q(0) and qb = [0, v] q(0).

Equation (20) has an interesting property. We have ˙qT

q =
·
= 1) and
0 (naturally, because the equation must maintain
= ω/2 = const. Thus ˙q is a non-zero tangent ﬁeld to S3
˙q
|
|
107]; in other words, S3, like S2n+1, allows continuous
[19,
mappings without ﬁxed points. (The mapping deﬁned by ˙q is
a rigid rotation of S3.) On the other hand, all continuous map-
pings of S2n have at least one ﬁxed point [20]. In particular,
rotations of S2 have two ﬁxed points at the poles of the axis
of rotation, while we have seen that there exist rotations of S3
with no ﬁxed points [21].

q
|

§

|

If we wish to interpolate between two conﬁgurations of a
rigid molecule, we are free to specify a point, x0, in the ref-
erence molecule which will move with constant velocity. If
the initial and ﬁnal conﬁgurations are given by Ta = (qa, da)
and Tb = (qb, db), with qT
0, then the required in-
a ·
terpolation is achieved by increasing u from 0 to 1 with the
orientation given by q(uθ) and the translation given by

qb ≥

(da + Rqa(x0))(1

u) + (db + Rqb(x0))u

Rq(uθ)(x0).

−

−

VI. MEAN ORIENTATION

∈

The mean of directional quantities has frequently presented
difﬁculties [22]. Let us assume we have N samples of some
[1, N ] and
directional quantity with weights wk for k
k wk = W . In the case where the samples are angles (e.g.,
the dihedral angles of a molecular bond) or directions (e.g.,
P
the orientations of a diatomic molecule), there is a well estab-
9.2.1]: express the directions
lished procedure [22,
§
as unit vectors in R2 or R3, nk, and determine
where we
take the sample average according to eq. (12). Now the mean
n
direction is given by
, a
ii
i|
− |h
quantity lying in [0, 1], is the “circular variance” [22,
2.3.1]
§
or “spherical variance” [22,
is deﬁned as
a simple weighted arithmetical average, eq. (12), while
denotes the physically relevant mean of a quantity.

9.2.1]. Here

, while 1

n
/
i
h

. . .
i
h

n
i
h

2.2.1,

. . .

=

|h

i|

n

n

hh

hh

ii

§

§

This procedure cannot be directly applied to unit quater-
nions used to represent rotations because of the indistin-
as axes [22,
Instead, we view
guishability of

q.

qk}

{

±

5

9.1] in R4, and deﬁne

1.1,
§
which the weighted moment of inertia of
3]. Thus we wish to minimize
[23,

as the unit quaternion about
qk}
is minimum

hh

ii

q

{

§

§

L =

1
W Xk
1
W Xk
q

T

hh

ii

·

=

=

wk qT
k ·

(I

q

q

T

)

qk

− hh

iihh

ii

·

qkqT
k )

(I

−

q

· hh

ii

T

q
wk hh
(I

ii
qqT

·

− h

)
i

q

.
ii

· hh

i

hh

− h

and

qqT

The minimum value of L is given by the minimum eigenvalue
of I
q
is corresponding eigenvector. The re-
ii
sulting L, which is a quantity lying in [0, 3
4 ], then provides a
measure of the variance of the rotations. This deﬁnition of
the mean has a number of desirable properties: it is invariant
when the signs of the qk are changed; it is independent of the
order of the samples; and it transforms properly if the samples
are transformed.

This prescription can also be applied to determine the mean
direction of objects whose symmetry makes n and
n in-
distinguishable (for example, the orientation of the diatomic
molecule N2).

−

Suppose we wish to determine the mean conﬁguration of a
. We are free
rigid molecule, i.e., the mean of
to choose a point x0 in the reference molecule whose position
in the mean conﬁguration coincides with its mean position.
(Compare this with the discussion of interpolating conﬁgura-
tions in the previous section.) A suitable deﬁnition for the
mean conﬁguration is then

Tk = (qk, dk)
}

{

T

hh

ii

= (

q

,
ii

d
i
h

hh

+

Rq(x0)
h

i −

R

q

hh

ii

(x0)).

(21)

Frequently, we need more precise information about the
distribution of conﬁgurations than its variance. We might need
to know how much the rotation about different axes are corre-
lated or whether rotational and translational motions are cou-
pled. It is also desirable to be able to ﬁt model distributions to
a set of samples. For these purposes, it is useful to be able to
map rotations onto R3 so that standard statistical tools can be
employed. We require that the mapping be measure preserv-
ing (constant Jacobian) to simplify the use of the transformed
rotations.

We have already introduced the axis-angle representation
s
π and so map
of rotations. We may make the restriction
|
0 of S3 onto a ball of radius π in R3.
the hemisphere q0 ≥
Unfortunately, the mapping, eq. (8), does not have constant
Jacobian. We can correct this by deﬁning [24] a new “turn”
vector u with the properties

| ≤

u

s,

k

=

u
|
|

s
|

| −

s
|

|

sin
π

(cid:19)

(cid:18)

1/3

.

(22a)

(22b)

This is an extension of the Lambert azimuthal equal-area pro-
jection providing a measure-preserving mapping of the hemi-
0 of S3 onto the unit ball B3. Equation (22)
sphere q0 ≥
is well behaved at the boundary,
= 1; however on this
boundary antipodal points are identiﬁed. The inverse mapping

u
|
|

has an inﬁnite derivate at
= 0 which
corresponds to shells in u space which map to the origin. This
inverse of eq. (22) is easily implemented via Newton’s method
supplemented by a Taylor series at the origin and at 3√2n.

= 3√2n for integer n

u
|
|

q

ii

hh

This mapping was introduced [24] to allow distributions of
orientations to be ﬁt using a mixture of Gaussians [25]. Given
qk}
, we compute the mean orien-
a set of sample orientations
{
. The deviations of the samples from the mean are
tation,
q
qkhh
then given by the rotations
and these are mapped to
. Because these are points in R3, we may
a set of turns
ﬁt them with a 3-dimensional Gaussian with zero mean and
uTu
.
with covariance matrix
i
h

This procedure can be extended to ﬁts of molecular conﬁg-
urations. In this case the deviations from the mean conﬁgu-
ration, eq. (21), is mapped into a point in R6; the resulting
Gaussian ﬁt will capture the correlation between the transla-
tional and rotational degrees of freedom.

uk}

ii}

{

{

In closing this section, we mention an alternative way of
ﬁtting quaternion orientational data with analytic functions,
namely in terms of spherical harmonics. The normal (3-
dimensional) spherical harmonics can be generalized to 4 (and
higher) dimensions [26; 27] and the orthogonality relation al-
lows the coefﬁcients of the harmonics to be computed sim-
q symmetry merely results in the odd harmon-
ply. The
ics dropping out. However in typical molecular interactions,
the relative orientation of the molecules is tightly constrained
which means that a large number of spherical harmonics will
be needed to represent the orientational distribution. For such
applications, a representation in terms of localized functions,
such as Gaussians, is preferable.

±

VII. RANDOM ORIENTATION

In Monte Carlo simulations [28] it is sometimes necessary
to select a molecule with a random and uniform position and
orientation, for example, when attempting to insert a molecule
into a simulation box during a grand canonical simulation
[29]. Choosing a random position is straightforward. How-
ever, we need to be careful to select the random orientation
uniformly or else detailed balance will be violated (when bal-
ancing insertions and deletions). One possibility is to choose
a random turn u in B3 and to convert this to a quaternion.
However, it is much simpler to sample directly in quaternion
space.

Let us ﬁrst establish the requirement for “uniform” sam-
pling of orientations. Composing 3-dimensional rotations is
carried out by the multiplication of unit quaternions; but we
know that pq = pT
Q(q), where Q(q), given in eq. (3), is
orthonormal if q is a unit quaternion. Thus 3-dimensional ro-
tations map into a rigid rotation of S3; a uniform density on S3
is invariant to such rotations. It follows that the task of sam-
pling a random orientation reduces to picking a random unit
quaternion uniformly on S3.

·

Marsaglia [30] provides one prescription: select x1 and y1
1 < 1; similarly, select
2 < 1; then

uniformly in (
x2 and y2 uniformly in (

1 + y2
1, 1) until s2 = x2

1, 1) until s1 = x2

2 + y2

−

q = [x1, y1, x2

s1)/s2, y2

(1

s1)/s2]

−

p

−

(1

−

p

6

is uniformly distributed on S3.

A more transparent and symmetric method (which general-
7.1]) is to pick 4 normal

izes to sampling points on Sn [31,
[0, 4) and to set
deviates gi for i

§

∈

p = [g0, g1, g2, g3],

q = p/

.

p
|

|

Although this method is less efﬁcient than Marsaglia’s, the
overall impact in the context of a molecular simulation is
probably tiny. Both of these methods return points uniformly
over the whole of S3 rather that over just one hemisphere. In
most applications, this is of no consequence.

Other representations of rotation yield more complex rules
for obtaining random orientations. For example, with Euler
angles, we would sample uniformly the ﬁrst and third angles
and the cosine of the second angle. If the orientation is given
in axis-angle space, s, then the axis, s/
s
, should be chosen
|
|
uniformly on S2, and the rotation angle,
s
, should be sampled
|
|
from [0, π] with probability (2/π) sin2(
s
/2). Of course, this
|
|
simpliﬁes when s is transformed to u space, eq. (22), leading
to a uniform distribution in B3.

A related problem is selection of random rotational moves
for use in a Monte Carlo simulation [28]. This method re-
quires that detailed balance be satisﬁed, which, in the ab-
sence of torque bias, means that the probability of selecting
the new orientation is symmetric under interchange of old and
new orientations. Because we are typically interested in small
changes in orientation, it is most convenient to select the ro-
tation in axis-angle space as exp([0, s]) and to set the new
orientation

q′ = exp([0, s])q,

s).
where s is selected from an even distribution, p(s) = p(
(This result follows because the Jacobian factor is even in s.)
Usually, we wish the choice of rotation axis to be isotropic,
and in that case we have p(s) = p(
). Thus we might select
|
|
s uniformly in a sphere of radius ∆s. Rao et al. [32] select
s
uniformly in [0, ∆s] (which results in a distribution which
|
is singular at the origin in s space). An attractive choice of
distribution is a 3-dimensional Gaussian

−

s

|

p(s) =

exp(

1
s
2 |
−
(2π)3/2∆3

2 /∆2)
|

.

Not only is this simple to sample from, but it allows torque
bias to be included in a simple manner. Torque bias is imple-
mented [32] by multiplying the a priori probability of select-
ing a move by exp(λβ tT
s), where β is the inverse tempera-
ture, λ is a constant (usually taken to be 1
2 ), and t is the torque
on the molecule. If the “starting” distribution is a Gaussian
then the torque-bias factor merely shifts the Gaussian to give

·

p(s) =

exp(

1
2

−

λβ∆2t
s
(cid:12)
(cid:12)
(2π)3/2∆3
(cid:12)
(cid:12)

−

2

/∆2)

.

This offers two simpliﬁcations over the original procedure
[32]: (a) it is trivial to sample from a shifted Gaussian; and
(b) the acceptance probability, which involves the ratio of the

6
forward and reverse a priori probabilities, is also easy to com-
pute and, in particular, it does not require the evaluation of a
normalization factor for the distribution. Similar considera-
tions obviously apply to the application of force bias for trans-
lational moves, as has been discussed by Rossky et al. [33].
Indeed, in the case of moving molecules, we would naturally
perform a combined translational and orientational move ap-
plying both force- and torque-bias simultaneously. There are
often strong gradients in the forces in molecular simulations
and a direct application of force bias in this case can lead to
poor sampling because certain transitions are effectively dis-
allowed. In such cases, it is prudent to limit the effect of the
bias by limiting the shift in the Gaussian, if necessary, to en-
sure that there a ﬁnite probability (at least 5–10%, say) of the
sampled move being in the opposite direction to the force.
This ensures that the molecule can effectively explore con-
ﬁguration space because small steps are always permitted and
it provides a simpler “safety” mechanism than the distance
scaling of λ proposed by Mezei [34].

|

s
|

Finally, some care needs to be taken to treat the possibility
of the orientation “wrapping” around. Suppose the sampled s
> π, then the resulting orientation is identical to the
has
wrapped one, s
. To ensure that detailed balance is
|
maintained, the acceptance probability should use the a priori
s (rather than the negative
probability for the reverse move
of the wrapped move). A simple expedient for avoiding this
problem is simply to reject any move with

2πs/

s
|

> π.

−

−

s
|

|

VIII. GRIDS FOR ORIENTATION

In many contexts, it is important to be able to represent the
independent variables for a problem on a grid. It is therefore
useful to be able to map orientations onto a grid. Possible
applications are binning molecular data, implementing cavity
bias in orientation [35], performing systematic searching of
orientations (where the goal is to provide more regular cov-
erage of orientation space than is achieved by random sam-
pling), and performing integrals over orientation by numerical
quadrature. Our goal is to provide a simple rule for covering
orientation space with a grid while ensuring that the grid ele-
ments are approximately of equal volumes and are not unduly
distorted. Here again, representing the orientation as a quater-
nion provides a reasonable solution.

Recall that unit quaternions lie on a hypersphere S3. Posi-
tions on S3 can be determined by 3 angle-like variables. How-
ever these are a poor basis for a grid because of singularities
in the resulting coordinate system. Instead let imagine sur-
rounding S3 by a tesseract (the 4-dimensional analogue of the
cube) of edge length 2. This consists of 8 cells which are
2 cubes tangent to S3. An exemplary cell is given by
2
×
p with p0 = 1,
1. We need only consider half of
p.
the cells of the tesseract because of the identiﬁcation of
Thus we choose to consider the four cells for which one of the
components of p is +1.

=0| ≤

pi
|

±

×

2

This then forms the basis for a cubical grid for orientation
space. This is attractive because cubical grids are simple to
index into; they are easy to reﬁne; they have an metric factor

7

≈

which is easy to compute; etc. The overall “wastefulness” of
this grids relative to a cubic grid within a domain of R3 is
given by the ratio of the volume of the cells of the tesseract
to the area (really a volume) of a hemisphere of S3, i.e., 4
×
23/π2
3.24. This might seem rather proﬂigate. However,
if we managed to arrange the grid around the S3 without any
wastage, the grid edge would be reduced by a factor of only
3√3.24

1.48.

≈

−
|

−
|

−
|

p
|

3 is due to scaling a volume element linearly by

Let us divide each of the cells of the tesseract into M 3 grid
cubes (of side 2/M ). These cubes can then be projected to
S3 by scaling p to a unit quaternion. This operation scales
4—a factor of
p
the volume of each of the grid cubes by
|
1 and
p
p
−
|
|
|
1 arises from the distortion of the cube
the last factor of
during this operation. The maximum scaling occurs at the
corners of the tesseract, e.g., p = [1, 1, 1, 1], where
= 2,
so that range of volumes for the grid elements is 16 with the
maximum distortion being a factor of 2. Mapping between an
arbitrary orientation q and a point in the grid is then achieved
as follows. We identify the component ql of q which is largest
in absolute value and set p = q/ql, giving pl = 1 and pi
=l ∈
M elements.
[
−
The resolution of the grid, given by the maximum change in
orientations between neighboring grid cells, is approximately
4/M . (We need to multiply the grid cube edge by 2 to obtain
the equivalent rotation angle, because, from eq. (4), we have
q = [1, vθ/2] for θ small.)

1, 1]. The grid then consists of 4

M

M

×

×

×

p

|

|

When the application is quadrature, it is natural to evaluate
4 at the cen-
the function and to compute the metric factor
ters of the grid cubes. For binning, we assign the samples to
the grid cube in the obvious way and again use the grid center
to compute the metric factor to obtain a sample density.

p
|

−
|

For searching applications we are most interested in the
“sphere covering” problem—how many spheres of a ﬁxed
radius are required to cover a given volume? We deﬁne
the “coverage radius” of the grid as the maximum rotation
required to bring an arbitrary orientation to its closest grid
point. In R3, the optimal sphere covering distribution of grid
If the grid dimension
points is body centered cubic [36].
is a, the coverage radius is (√5/4)a.
In our case we have
amax = 2/M and we again need to multiply this by a factor
of 2 to convert to a rotation angle. Placing a body centered cu-
bic lattice on our grid results in 8M 3 points giving a coverage
radius of √5/M . In this application we might improve the
efﬁciency, by initially conducting the search on a coarse grid
to ﬁnd a tentative optimum. Successively ﬁner grids can then
be placed in the neighborhood of the optimum orientation in
order to reﬁne the search.

A straightforward example of a orientation searching prob-
lem is the alignment of two electron density maps [37]. The
grid given here would be suitable for a “brute force” search
for the best alignment. Another example is the problem of de-
termining the volume of the smallest rectangular box (whose
edges are parallel to the coordinate axes) into which a given
molecule ﬁts. This problem arises in the study of a single
protein bathed in a solvent. In order to eliminate boundary
effects, it is possible to construct a periodic system and, for
efﬁciency, we wish the volume of the periodic cell to be min-

6
6
imum. We can solve this problem by systematically sampling
over all orientations using our grid. However, by applying the
orientational symmetries of a cube to a particular minimum-
volume solution, we can generate a set of 24 equivalent so-
lutions; and a full search over orientation space would need-
lessly ﬁnd all of these. We can use the symmetries given by
180◦ rotations about the three coordinate axes to restrict the
search to one of the tesseract cells

(23a)

(23b)

(23c)

Rotations by
±
duce the search to the cube

90◦ about the coordinate axes allow us to re-

p0 = 1.

pi
|

=0| ≤

√2

1.

−

Finally, with rotations by
±
we can eliminate the corners of the cube and require

120◦ about the leading diagonals,

p1|
|

+

p2|
|

+

p3| ≤
|

1.

|

1

1
4

≈

−

−

p
|

672√2)/3

4√2 and volume (952

The resulting region, eq (23), is a regular truncated cube with
edge 6
0.549. This
volume is about 58 times smaller than the volume of 4 cells
of the tesseract and the search is correspondingly more ef-
ﬁcient. This improvement is mainly due to the limiting the
search to 1/24 of orientation space (on account of the cube
symmetries) but is also due to the more uniform sampling we
achieve by limiting the search to a region near the center of
is closer to unity. By searching
the tesseract cell where
only over eq. (23), we ﬁnd the smallest rotation which mini-
mizes the volume. Evaluations the rotation corresponding to
the vertices of eq. (23), we ﬁnd that the volume-minimizing
62.8◦. Searching
rotation is at most sin−
over a body centered lattice in a truncated cube is easily im-
plemented by ﬁrst setting up the lattice in the cube and merely
skipping lattice points which lie in the corners of the cube,
i.e., points which fail the condition, eq. (23c). It is desirable
to extend the search into the corners by some fraction of a grid
spacing to ensure that there aren’t gaps in the coverage due to
the lattice not meshing exactly with those of the symmetric
images of the truncated cube. Alternatively, we might elect
merely to sample over the entire cube, eqs. (23a) and (23b)—
this increases the search volume by only 3.5%. Finally it is,
perhaps, important to point out for the purposes of mimicking
a single solute molecule in a solvent with a periodic system,
the “best” computational box is not given by ﬁtting a single
image of the solute into a box but rather by the more chal-
lenging problem of optimally ﬁtting the solute molecules into
its neighboring images [38].

7 + 4√2
(cid:1)

p

≈

(cid:0)

We might imagine improving the uniformity of our grid
by basing it on one of the 4-dimensional Platonic polytopes
with more than 8 cells [39; 40]. However the cells are then
tetrahedra, octahedra, or dodecahedra, and so aren’t as sim-
ply subdivided as cubes. One the other hand, these do offer
a sequence of orientations with very uniform coverage which
may be useful in some applications. For example, if we com-
bine the vertices of a hecatonicosachoron (or 120-cell, the 4-
dimensional analogue of the dodecahedron with 120 dodeca-
hedral cells and 600 vertices) with those of a hexacosichoron

8

(or 600-cell, the 4-dimensional analogue of the icosahedron
with 600 tetrahedral cells and 120 vertices) in their mutually-
dual conﬁgurations [40], we obtain 360 distinct orientations.
These may be used for systematic searching—an arbitrary ori-
entation is within 27.8◦ of one of these orientations. If these
points are used for quadrature, each of the vertices of the hex-
acosichoron should be weighted 1.4222 more heavily than the
vertices of the hecatonicosachoron. Although the hexacosi-
6 of the points, 22.1% of S3
choron vertices only account for 1
is closest to one of them.

Another interesting and useful polytope is the truncated-
cubic tetracontaoctachoron (or 48-cell) which consists of 48
regular truncated cubes [41]. This Archimedean polytope is
obtained by placing cells at the vertices of 2 icositetrachora
(or 24-cells) in their mutually dual conﬁgurations. It may be
rotated so that the cell centers coincide with the direct sym-
cl}
metry group for the cube,

, namely,

{
8 permutations of
16 permutations of

24 permutations of

[
±
1
2 ,
±
1
,
√2

1, 0, 0, 0],
1
2 ,

1
1
2 ,
2
±
, 0, 0

±
1
√2

±

±

(cid:2)

±

,
(cid:3)
.
(cid:3)

(24a)
(24b)

(24c)

∈

(cid:2)
This group has 48 members with each of the 24 cube symme-
tries counted twice by including both signs of each quaternion.
The 48 cells are obtained by pcl with p given by eq. (23) and
cl by eq. (24) for l
[1, 48]. A grid may be placed within each
cell relatively easily (as we showed in the discussion of the
volume-minimization problem) and the wastefulness of this
1.34 which is about 2.4 times
grid is then 48
≈
better than the grid based on the tesseract. The disadvantage
of such a grid is that more care must be taken to treat the faces
of the cell correctly. The triangular faces slice cut through the
grid cells at an angle and the octagonal faces ﬁt together with
a 45◦ twist. These concerns are easily allayed for searching
applications by ensuring that the search points either include
the faces or extend slightly outside cells.

0.549/(2π2)

×

IX. DISCUSSION

Let us review what properties of the quaternion representa-
tion of rotations we have used. We obviously need quaternion
algebra in using quaternions when composing rotations. This
is also used in deriving the least squares ﬁt. In carrying out the
other tasks, we just use the fact that unit quaternions are on S3
and this provides a “natural” metric for rotations (random ori-
entation and interpolating orientations) and, in addition, we
q in forming grids, computing the mean
use the identity of
orientation, and in deriving the mapping to R3.

Furthermore in working with S3, we are able to carry over
geometrical concepts from S2 or use straightforward exten-
sions from Euclidean space, R3, to R4. For this reason, it is
perhaps worth acknowledging the limits of making analogies
to the lower dimensional space. We have already seen that
S3 differs in a fundamental way from S2 in that continuous
mappings without ﬁxed points are possible on it.

±

A curious and non-obvious property of rotations which is
q identiﬁed, is

evident from their representation on S3, with

±

6
±

that rotations do not form a simply connected group. Thus, if
we rotate an object by 360◦ it returns to its original orientation
but with the sign of q changed. This means that we cannot
continuously deform the path that the object took to reduce it
to a point. However, we can do this if we rotate the object by
720◦. This property of rotations is an immediate consequence
of their representation as a pair of points

q on S3.

We can understand this behavior by ﬁrst dropping to a lower
dimensional space. The orientation of a symmetric rod (with
indistinguishable ends) can be represented by a pair of points
n on S2. A rotation by 180◦ about an axis perpendicular to
±
the rod returns the rod to its original orientation (with the ends
interchanged). But clearly the corresponding path on S2 can-
not be collapsed to a point. On the other hand, a rotation by
360◦ is easily reduced to a point by allowing the rotation axis
to become parallel to the rod. We can readily explain this phe-
nomenon because we can “label” the two ends of the rod and
thereby break the rod symmetry. (In fact, the neighborhood of
one end of the rod is inverted compared to the other—recall
that antipodal maps are mirror inverted.)

The situation is analogous for 3-dimensional rotations.
The labeling in this case may be achieved by connected our
molecule to a ﬁxed frame with strings. When the molecule
is rotated by 360◦ the strings become “entangled”. However,
counter-intuitively, the strings may be untangled with a fur-
ther rotation by 360◦. This is well illustrated by the “Air on a
Dirac String” [42] which discusses the connection to the quan-
tum spin of an electron. This also shows the “Philippine wine
dance”, which offers a convincing demonstration of the un-
tangling after the second turn: Hold a wine glass in your right
hand with your palm facing upward. You can turn the glass
a full turn counterclockwise by passing your hand under your
right armpit; at this point your arm is twisted. However you
can twist the glass a second turn over your right shoulder re-
stored both the glass and your arm to their original states. An-
other illuminating demonstration is the Dirac belt trick [43]:
Fix the tongue end of an ordinary belt to a table (e.g., by plac-
ing a heavy book on it). Allow some slack in the belt and
twist the buckle by 720◦, i.e., two full turns. The resulting
twist in the belt can be removed by looping the slack around
the buckle and pulling the belt taught. It is easily seen that it is
impossible to untwist a single turn of the buckle. This exam-
ple is useful because the orientation of the belt as a function
of distance along the belt deﬁnes a path in orientation space,
i.e., on S3. The action of undoing the 720◦ twist precisely
corresponds to deforming a double turn loop to a point in ori-
entation space.

Acknowledgment

This work was supported by the U.S. Army Medical Re-
No.
search and Materiel Command
DAMD17-03-C-0082.
The views, opinions, and ﬁnd-
ings contained in this report are those of the author and
should not be construed as an ofﬁcial Department of the
Army position, policy, or decision. No animal testing was
conducted and no recombinant DNA was used.

Contract

under

9

References

[1] W. R. Hamilton, On a new species of imaginary quantities con-
nected with a theory of quaternions, Proc. Royal Irish Acad. 2,
424–434 (1844). URL http://www.maths.tcd.ie/pub/HistMath/
People/Hamilton/Quatern1/.

[2] W. R. Hamilton, On quaternions, Proc. Royal Irish Acad. 3, 1–
16 (1847). URL http://www.maths.tcd.ie/pub/HistMath/People/
Hamilton/Quatern2/.

[3] J. C. Maxwell, A Treatise on Electricity and Magnetism, vol. 1

(Clarendon Press, Oxford, 1892), 3rd edition.

[4] J. W. Gibbs and E. B. Wilson, Vector Analysis (Yale Univ. Press,

1901).

[5] Quaternion, In Wikipedia, the free encyclopedia. URL http://

en.wikipedia.org/wiki/Quaternion.

[6] E. W. Weinstein, Quaternion, From MathWorld. URL http://

mathworld.wolfram.com/Quaternion.html.

[7] O. D. Faugeras and M. Hebert, A 3-D recognition and position-
ing algorithm using geometrical matching between primitive
surfaces, in Proc. 8th International Joint Conference on Arti-
ﬁcial Intelligence, pages 996–1002 (1983). Held in Karlsruhe,
W. Germany, Aug. 8–12, 1983.

[8] B. K. P. Horn, Closed-form solution of absolute orientation us-
ing unit quaternions, J. Opt. Soc. Am. A 4, 629–642 (1987).
[9] R. Diamond, A note on the rotational superposition problem,

Acta Cryst. A 44, 211–216 (1988).

[10] S. K. Kearsley, On the orthogonal transformation used for
structural comparisons, Acta Cryst. A 45, 208–210 (1989).
[11] E. Anderson, Z. Bai, C. Bischof, et al., LAPACK Users’ Guide
(SIAM, 1999), 3rd edition. URL http://www.netlib.org/lapack/.
[12] M. Galassi, J. Davies, J. Theiler, B. Gough, G. Jungman,
M. Booth, and F. Rossi, GNU Scientiﬁc Library Reference
Manual (Network Theory Ltd., 2002), 2nd edition. URL http:
//www.gnu.org/software/gsl/.

[13] R. Pozo, Template Numerical Toolkit for linear algebra: High
performance programming with C++ and the Standard Tem-
plate Library, Int. J. Supercomputer Appl. and High Perfor-
mance Computing 11, 251–263 (1997). URL http://math.nist.
gov/tnt/.

[14] R. Diamond, Chirality in rotational superposition, Acta Cryst.

A 46, 423 (1990).

[15] P. H. H¨unenberger, A. E. Mark, and W. F. van Gunsteren, Fluc-
tuation and cross-correlation analysis of protein motions ob-
served in nanosecond molecular dynamics simulations, J. Mol.
Biol. 252, 492–503 (1995).

[16] W. K. Clifford, Preliminary sketch of biquaternions, Proc. Lon-

don Math. Soc. 4, 381–395 (1873).

[17] M. W. Walker, L. Shao, and R. A. Volz, Estimating 3-D loca-
tion parameters using dual number quaternions, CVGIP: Image
Understanding 54, 358–367 (1991).

[18] K. Shoemake, Animating rotation with quaternion curves,
Computer Graphics 19, 245–254 (1985). Proc. SIGGRAPH
’85, San Fransisco, July 22–26, 1985.

[19] M. Beeler, R. W. Gosper, and R. Schroeppel, HAKMEM, Tech-
nical Report AIM 239, M.I.T. Artiﬁcial Intelligence Labora-
tory (1972). URL ftp://publications.ai.mit.edu/ai-publications/
pdf/AIM-239.pdf.

[20] J. Milnor, Analytic proofs of the “hairy ball theorem” and the
Brouwer ﬁxed point theorem, Amer. Math. Monthly 85, 521–
524 (1978).

[21] N. Prabhu, Fixed points of rotations of n-sphere, Internat. J.

Math. & Math. Sci. 22, 221–222 (1999).

[22] K. V. Mardia and P. E. Jupp, Directional Statistics (J. Wiley &

Sons, 1999).

[23] D. Rancourt, L.-P. Rivest, and J. Asselin, Using orientation
statistics to investigate variations in human kinematics, Appl.
Statist. 49, 81–94 (2000).

[24] C. F. F. Karney, J. E. Ferrara, and S. Brunner, Method for com-
puting protein binding afﬁnity, J. Comput. Chem. 26, 243–251
(2005). E-print arXiv:cond-mat/0401348.

[25] A. P. Dempster, N. M. Laird, and D. B. Rubin, Maximum like-
lihood from incomplete data via the EM algorithm, J. Royal
Statist. Soc. B 39, 1–38 (1977).

[26] C. M¨uller, Spherical Harmonics, vol. 17 of Lecture Notes in

Mathematics (Springer-Verlag, 1966).

[27] C. M¨uller, Analysis of Spherical Symmetries in Euclidean
Spaces, vol. 129 of Applied Mathematical Sciences (Springer-
Verlag, 1998).

[28] N. Metropolis, A. W. Rosenbluth, M. N. Rosenbluth, A. H.
Teller, and E. Teller, Equation of state calculations by fast com-
puting machines, J. Chem. Phys. 21, 1087–1092 (1953).
[29] D. J. Adams, Grand canonical ensemble Monte Carlo for a

Lennard-Jones ﬂuid, Mol. Phys. 29, 307–311 (1975).

[30] G. Marsaglia, Choosing a point from the surface of a sphere,

Ann. Math. Stat. 43, 645–646 (1972).

[31] M. E. Muller, Some continuous Monte Carlo methods for the
Dirichlet problem, Ann. Math. Stat. 27, 569–589 (1956).
[32] M. Rao, C. Pangali, and B. J. Berne, On the force bias Monte
Carlo simulation of water: Methodology, optimization and
comparison with molecular dynamics, Mol. Phys. 37, 1773–
1789 (1979).

[33] P. J. Rossky, J. D. Doll, and H. L. Friedman, Brownian dynam-
ics as smart Monte Carlo simulation, J. Chem. Phys. 69, 4628–
4633 (1978).

10

[34] M. Mezei, Distance-scaled force biased Monte Carlo simula-
tion for solutions containing a strongly interacting solute, Mol.
Simulation 5, 405–408 (1991).

[35] M. Mezei, A cavity-biased (T, V, µ) Monte Carlo method for
the computer simulation of ﬂuids, Mol. Phys. 40, 901–906
(1980).

[36] R. P. Bambah, On lattice coverings by spheres, Proc. Nat. Inst.

[37] J. A. Kovacs and W. Wriggers, Fast rotational matching, Acta

Sci. India 20, 25–52 (1954).

Cryst. D 58, 1282–1286 (2002).

[38] H. Bekker, J. P. van den Berg, and T. A. Wassenaar, A method
to obtain a near-minimal-volume molecular simulation of a
macromolecule, using periodic boundary conditions and rota-
tional constraints, J. Comput. Chem. 25, 1037–1046 (2004).

[39] H. S. M. Coxeter, Regular Polytopes (Macmillan, 1963), 2nd

edition.

[40] P. D. Bourke, Regular polytopes (Platonic solids) in 4D (2003).
This lists the vertices of all the 4-dimensional regular poly-
topes; the vertices for the hecatonicosachoron and the hexacosi-
choron are given in their mutually dual conﬁgurations, URL
http://astronomy.swin.edu.au/∼pbourke/polyhedra/platonic4d/.
[41] G. Olshevsky, Convex uniform polychora based on the ico-
sitetrachoron (24-cell) (2004). URL http://members.aol.com/
Polycell/section3.html.

[42] G. K. Francis, L. H. Kauffman, and D. J. Sandin, Air on the
Dirac strings, Film produced at Electronic Visualization Labo-
ratory, Univ. of Illinois, Chigaco (1993). URL http://www.evl.
uic.edu/hypercomplex/html/dirac.html.

[43] G. Egan, Dirac’s belt trick, Java Applet (2000). URL http://
gregegan.customer.netspace.net.au/APPLETS/21/21.html.

