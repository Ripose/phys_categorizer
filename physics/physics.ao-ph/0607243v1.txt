6
0
0
2
 
l
u
J
 
6
2
 
 
]
h
p
-
o
a
.
s
c
i
s
y
h
p
[
 
 
1
v
3
4
2
7
0
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Q. J. R. Meteorol. Soc. (2006), 128, pp. 1–999

doi: 10.1256/qj.yy.n

The remapped particle-mesh semi-Lagrangian advection scheme

By C. J. Cotter1 and J. Frank2 and S. Reich3∗
1Imperial College London, United Kingdom
2CWI Amsterdam, The Netherlands
3Universit¨at Potsdam, Germany

(Received 1 January 0000; revised 31 January 0001)

Summary

We describe the remapped particle-mesh method, a new mass-conserving method for solving the
density equation which is suitable for combining with semi-Lagrangian methods for compressible ﬂow
applied to numerical weather prediction. In addition to the conservation property, the remapped particle-
mesh method is computationally eﬃcient and at least as accurate as current semi-Lagrangian methods
based on cubic interpolation. We provide results of tests of the method in the plane, results from
incorporating the advection method into a semi-Lagrangian method for the rotating shallow-water
equations in planar geometry, and results from extending the method to the surface of a sphere.

Keywords: Semi-Lagrangian advection Mass conservation

Particle-mesh method

Spline

interpolation

1

2

4

4

5

16

Contents

1 Introduction

2 Continuity equation and particle advection

3 Remapped particle-mesh method

4 Eﬃcient implementation

5 Extension to the sphere

6 Numerical results

7
(a)
1D convergence test
. . . . . . . . . . . . . . . . . . . . . . . . . .
7
(b)
2D planar advection: Slotted-cylinder problem . . . . . . . . . . . .
7
(c)
2D planar advection: Idealized cyclogenesis problem . . . . . . . .
9
(d) Spherical advection: Solid body rotation . . . . . . . . . . . . . . .
9
(e) Spherical advection: Smooth deformational ﬂow . . . . . . . . . . . 12
( f ) Rotating shallow-water equations in planar geometry . . . . . . . . 13

7 Summary and outlook

1.

Introduction

The semi-implicit semi-Lagrangian (SISL) method, as originally introduced
by Robert [16], has become very popular in numerical weather prediction
(NWP). The semi-Lagrangian aspect of SISL schemes allows for a relatively accu-
rate treatment of advection while at the same time avoiding step size restrictions
of explicit Eulerian methods. The standard semi-Lagrangian algorithm (see, e.g.,
[19]) calculates departure points, i.e., the positions of Lagrangian particles which

∗ Corresponding author: Universit¨at Potsdam, Institut f¨ur Mathematik, Postfach 60 15 53, D-14415
Potsdam, Germany (e-mail: sreich@math.uni-potsdam.de)
c(cid:13) Royal Meteorological Society, 2006.

1

2

C. J. Cotter and J. Frank and S. Reich

will be advected onto the grid during the time step. The momentum and density
equations are then solved along the trajectory of the particles. This calculation
requires interpolation to obtain velocity and density values at the departure point.
It has been found that cubic interpolation is both accurate and computationally
tractable (see, e.g., [19]).

Ideally, as well as being eﬃcient and accurate, a density advection scheme
should exactly preserve mass in order to be useful for, e.g., climate prediction
or atmospheric chemistry calculations. Recent developments have involved com-
puting the change in volume elements, deﬁned between departure and arrival
points, making use of a technique called cascade interpolation [14]. Several such
methods have been suggested in recent years, including the methods of Nair et
al [11, 12, 13] and the SLICE schemes of Zerroukat et al [23, 24, 26, 25].

In this paper we give a new density advection scheme, the remapped particle-
mesh method, which is based on the particle-mesh discretisation for the density
equation used in the Hamiltonian Particle-Mesh (HPM) method suggested by
Gottwald, Frank & Reich [3], which itself was a combination of smoothed
particle-hydrodynamics [7, 5] and particle-in-cell methods [6]. The particle-
mesh method provides a very simple discretisation which conserves mass by
construction, and may be adapted to nonplanar geometries such as the sphere
[4]. In this paper we show that an eﬃcient scheme can be obtained by mapping
the particles back to the grid after each time step. Our numerical results show
that this scheme is at least as accurate as standard semi-Lagrangian advection
using cubic interpolation at departure points. We show how the method may be
included in the staggered semi-Lagrangian schemes, proposed by Staniforth et
al [20] and Reich [15], and show how to adapt it to spherical geometry.

In section 2 we describe the particle-mesh discretisation for the density
equation. The method is modiﬁed to form the remapped particle-mesh method in
section 3. We discuss issues of eﬃcient implementation in section 4. In section 6 we
give numerical results for advection tests in planar geometry and on the sphere,
as well as results from rotating shallow-water simulations using the remapped
particle-mesh method in the staggered leapfrog scheme [15]. We give a summary
of our results and discussion in section 7.

2. Continuity equation and particle advection

In this section we describe the particle-mesh discretisation for the density
equation. This discretisation forms the basis for the remapped particle-mesh
method discussed in this paper. For simplicity, we restrict the discussion to two-
dimensional ﬂows.

We begin with the continuity equation

∇ ·
where ρ is the density and u = (u, v)T
the Lagrangian formulation as

∈

ρt +

(ρu) = 0,

R2 is the ﬂuid velocity. We write (1) in

DX
Dt

= u,

ρ(x, t) =

ρ0(a) δ(x

X(a, t)) dA(a),

Z

−

(1)

(2)

(3)

The remapped particle-mesh advection scheme

where ρ(x, t) is the density at time t > 0 at a ﬁxed Eulerian position x = (x, y)T
R2,

∈

is the Lagrangian time derivative,

D
Dt

)y v
)x u + (
)t + (
) = (
(
·
·
·
·

X(a, t) = (X(a, t), Y (a, t))T

R2

∈

is a Lagrangian particle position at time t with initial position X(a, 0) = a
and ρ0(a) = ρ(a, 0) is the initial density at a = (a, b)T

R2.

∈

To discretise the integral representation (3), we introduce a ﬁnite set of La-
R2, β = 1, . . . , N , and a ﬁxed Eule-
∆y)T , k, l = 0, . . . , M . Then we approximate

grangian particles Xβ(t) = (Xβ(t), Yβ(t))T
rian grid xk,l = (xk, yl) = (k
the Eulerian grid density ρk,l(t)

·
ρ(xk,l, t) by

∆x, l

∈

·

∈

≈
ρ0(aβ) ψk,l(Xβ(t)) dA(aβ),

ρk,l(t) :=

Xβ

where ψk,l(x) > 0 are basis functions, which satisfy
ψk,l(x) dA(x) = 1. The
initial particle positions Xβ(0) = aβ are assumed to form a grid and dA(aβ) is
equal to the area of the associated grid cell. Equation (6) may be simpliﬁed to

R

ρk,l(t) =

mβ ψk,l(Xβ(t)),

Xβ

mβ := ρ0(aβ) dA(aβ)

where

is the “mass” of particle β.

unity (PoU) property

Let us now also request that the basis functions ψkl satisfy the partition-of-

ψk,l(x) dA(xk,l) = 1,

dA(xk,l) := ∆x∆y,

Xk,l

∈

Xk,l

for all x

R2. This ensures that the total mass is conserved since

ρk,l(t) dA(xk,l) =

mβ ψk,l(Xβ(t)) dA(xk,l) =

mβ,

(10)

Xk,l Xβ

Xβ

which is constant. The time evolution of the particle positions Xβ(t) is simply
given by

d
dt

Xβ = uβ.

Given a time-dependent (Eulerian) velocity ﬁeld u(x, t), we can discretise (8)

and (11) in time with a simple diﬀerencing method:

3

(4)

(5)

R2,

(6)

(7)

(8)

(9)

(11)

(12)

(13)

= Xn

Xn+1
β
ρn+1
k,l =

β + ∆tun+1/2

,
β
mβ ψk,l(Xn+1

β

).

Xβ

un+1/2
β

:= u(Xn

β, tn+1/2),

4

C. J. Cotter and J. Frank and S. Reich

In [3], this discretisation was combined with a time stepping method for the
momentum equation to form a Hamiltonian particle-mesh method for the rotating
shallow-water equations. The masses mβ were kept constant throughout the
simulation. In this paper, we instead combine the discretisation with a remapping
technique so that the particles trajectories start from grid points at the beginning
of each time step. Our remapping approach requires the assignment of new
particle “masses” in each time step and, hence, is fundamentally diﬀerent from
semi-Lagrangian remapping strategies described, for example, in [11].

3. Remapped particle-mesh method

In this section, we describe the remapped particle-mesh method for solving
the continuity equation. The aim is to exploit the mass conservation property
of the particle-mesh method whilst keeping an Eulerian grid data structure for
velocity updates. To achieve this we reset the particles to an Eulerian grid point
at the beginning of each time step, i.e.,

Xn

β := aβ = xk,l,

β = 1 + k + l

M.

·

This step requires the calculation of new particle “masses” mn
according to

β, β = 1, . . . , N ,

(14)

(15)

ρn
k,l =

mn

β ψk,l(aβ)

Xβ

for given densities ρn
k,l. This is the remapping step. We ﬁnally step the particles
forward and calculate the new density on the Eulerian grid using equations (12)-
(13) with mβ = mn
β. Note that the Lagrangian trajectory calculation (12) can be
replaced by any other consistent upstream approximation. Exact trajectories for
a given time-independent velocity ﬁeld u(x) will, for example, be used in the
numerical experiments.

The whole process is mass conserving since the PoU property (9) ensures

that

Xk,l

ρn+1
k,l dA(xk,l) =

mn

β ψk,l(Xn+1

β

) dA(xk,l) =

mn

β =

ρn
k,l dA(xk,l).

Xk,l Xβ

Xβ

Xk,l

(16)

4. Efficient implementation

This density advection scheme can be made eﬃcient since all the interpolation
takes place on the grid; this means that the same linear system of equations,
characterized by (15), is solved at each time step. The particle trajectories are
uncoupled and thus may even be calculated in parallel.

The computation of the particle masses in (15) leads to the solution of a
sparse matrix system. We discuss this issue in detail for (area-weighted) tensor
product cubic B-spline basis functions, deﬁned by

ψk,l(x) :=

1
∆x∆y

ψcs

x

xk

−
∆x

(cid:18)

ψcs

·

(cid:19)

y

yl

−
∆y

,

(cid:19)

(cid:18)

(17)

5

(18)

(19)

(20)

(23)

where ψcs(r) is the cubic B-spline

The basis functions satisfy

The remapped particle-mesh advection scheme

ψcs(r) =

2
r
3 − |
1
6 (2
0,

2 + 1
r
2 |
|
)3,
r
|
− |

3,
|

6 1,
r
|
|
> 2.

r
|
|
1 <
r
|

|

6 2,






Xk,l

Z

ψk,l(x) dA(xk,l) = 1

ψk,l(x) dA(x) = 1

and

as required.

where

A few basic manipulations reveal that (15) becomes equivalent to

k,l dA(xkl) = ρn
ρn

k,l ∆x∆y =

1 +

∆x2
6

δ2
x

1 +

∆y2
6

δ2
y

(cid:19)

(cid:19) (cid:18)

(cid:18)

mn
k,l

(21)

x mn
δ2

k,l =

mn

k+1,l −

2mn
∆x2

k,l + mn

k−1,l

,

y mn
δ2

k,l =

mn

k,l+1 −

2mn
∆y2

k,l + mn

k,l−1

,

(22)

are the standard second-order central diﬀerence approximations, and we replaced
k,l, etc. from now on. Eq. (21)
index β = 1 + k + l
implies that the particle masses can be found by solving a tridiagonal system along
each grid line (in each direction).

M by k, l, i.e., we write mn

k,l, Xn

·

If the cubic spline ψcs in (17) is replaced by the linear spline

ψls(r) =

r
− |

,
|

1
0,

(cid:26)

6 1,
> 1,

r
|
r
|

|
|

then the system (15) is solved by
mn

k,l = ∆x∆y ρn
The resulting low-order advection scheme possesses the desirable property that
k,l > 0 for all k, l implies that ρn+1
ρn
> 0 for all k, l, and so that monotonicity is
k,l
also preserved.

(24)

k,l.

On a more abstract level, conservative advection schemes can be derived
for general (e.g. triangular) meshes with basis functions φkl(x) > 0, which form
a partition of unity. An appropriate quadrature formula for (3) leads then to
a discrete approximation of type (7). This extension will be the subject of a
forthcoming publication.

5. Extension to the sphere

In this section we suggest a possible implementation of the remapped particle-
mesh method for the density equation on the sphere. The method follows the
particle-mesh discretisation given by Frank & Reich [4], combined with a
remapping to the grid.

6

C. J. Cotter and J. Frank and S. Reich

We introduce a longitude-latitude grid with equal grid spacing ∆λ = ∆θ =
π/J. The latitude grid points are oﬀset a half-grid length from the poles.
1/2)∆θ,
Hence we obtain grid points (λk, θl), where λk = k∆λ, θl =
J.
k = 1, . . . , 2J, l = 1, . . . , J, and the grid dimension is 2J

π
2 + (l

−

−

Let ψk,l(x) denote the (area-weighted) tensor product cubic B-spline centered

×

R3 with longitude-latitude coordinates (λk, θl), i.e.

at a grid point xkl ∈

ψk,l(x) :=

1
dA(xk,l)

ψcs

λ

λk

−
∆λ

ψcs

·

(cid:19)

θ

θl
−
∆θ

,

(cid:19)

(cid:18)

(cid:18)

where (λ, θ) are the spherical coordinates of a point x = (x, y, z)T
sphere, ψcs(r) is the cubic B-spline as before, and

∈

R3 on the

dA(xk,l) = R2 cos(θl) ∆θ∆λ.

We convert between Cartesian and spherical coordinates using the formulas

x = R cos λ cos θ,

y = R sin λ cos θ,

z = R sin θ,

and

λ = tan−1

θ = sin−1

y
x

,

(cid:16)

(cid:17)

z
R

.

(cid:16)

(cid:17)

At each time step we write the ﬂuid velocity in 3D Cartesian coordinates and
step the particles Xi,j forward. We then project the particle positions onto the
surface of the sphere as described in [4]. The Lagrangian trajectory algorithm is
then:

Xn+1

i,j = xi,j + ∆tun+1/2

i,j

+ µ xi,j,

where µ is a Lagrange multiplier chosen so that
= R on a sphere of
radius R. This alogrithm can be replaced by any other consistent approximation
upstream Lagrangian trajectories. Exact trajectories are, for example, used in
the numerical experiments.

Xn+1
i,j k
k

We compute the particle masses mn

i,j by solving the system

for given densities ρn

k,l. The density at time-level tn+1 is then determined by

ρn
k,l =

mn

i,j ψk,l(xi,j)

ρn+1
k,l =

mn

i,j ψk,l(Xn+1

i,j ).

Xi,j

Xi,j

Note that the system (30) is equivalent to

ρn
k,l dA(xk,l) =

1 +

∆λ2
6

δ2
λ

1 +

∆θ2
6

δ2
θ

mn
k,l

(cid:19)

(cid:18)

(cid:19) (cid:18)

and can be solved eﬃciently as outlined in section 4. The implementation of the
remapping method is greatly simpliﬁed by making use of the periodicity of the
spherical coordinate system in the following sense. The periodicity is trivial in
the longitudinal direction. For the latitude, a great circle meridian is formed by
connecting the latitude data separated by an angular distance π in longitude (or J

(25)

(26)

(27)

(28)

(29)

(30)

(31)

(32)

The remapped particle-mesh advection scheme

7

M

l2

8

16

32

64

128

256

512

0.549E-02

0.254E-03

0.143E-4

0.872E-6

0.541E-07

0.337E-08

0.211E-09

TABLE 1. Convergence of l2-errors as a function of ∆x = 1/M for uniform advection with U = 1 of a
sine wave on a periodic domain Ω = [0, 1) with ∆t = 0.12∆x/U and 20 time steps.

grid points). See, for example, the paper by Spotz, Taylor & Swarztrauber
[18]. It is then eﬃcient to solve the system (32) using a direct solver.

Conservation of mass is encoded in

ρn+1
k,l dA(xk,l) =

ρn
k,l dA(xk,l),

Xk,l

Xk,l

which holds because of the PoU property

ψkl(x) dA(xk,l) = 1.

Xk,l

6. Numerical results

1D convergence test
Following [26], we test the convergence rate of our method for one-
dimensional uniform advection of a sine wave over a periodic domain Ω = [0, 1).
The initial distribution is

(a)

ρ0(x) = sin(2πx)

and the velocity ﬁeld is u(x, t) = U = 1. The 1D version of our method is used to
solve the continuity equation

ρt =

(ρu)x.

−
The experimental setting is equivalent to that of [26]. Table 1 displays the
convergence of l2 errors as a function of resolution ∆x = 1/M . Note that the
results from Table 1 are in exact agreement with those displayed in Table I of
[26] for the parabolic spline method (PSM) and fourth-order accuracy is observed.

(b) 2D planar advection: Slotted-cylinder problem

Convergence is now examined for a more realistic test case. Since we use
higher-order interpolation the initial density proﬁle ρ0 needs to be suﬃciently
smooth. On the other hand, relatively sharp gradients should be present to pose
a challenge to the advection scheme. We decided to use a smoothed slotted-
2)−1
cylinder obtained by applying a modiﬁed Helmholtz operator
to the standard sharp-edged slotted cylinder [22]. The smoothing length is set to
α = 2π/64. See panel (a) in Fig. 1.

= (I

α2

H

∇

−

We compare the newly proposed scheme to the standard SL advection scheme
based on backward trajectories and bicubic interpolation (see, e.g. [19]). To
exclude any errors from the trajectory calculation we use a double periodic
domain of size [0, 2π]
[0, 2π] and apply a constant velocity ﬁeld u = 2π/3,
v = 2π. The time-step is ∆t = 0.01 and the simulations are run over a period
of T = 12 time units. Note that the initial density proﬁle ρ0 returns to its original

×

(33)

(34)

(35)

(36)

6

5

4

3

2

1

6

5

4

3

2

1

6

5

4

3

2

1

6

5

4

3

2

1

6

5

4

3

2

1

6

5

4

3

2

1

8

C. J. Cotter and J. Frank and S. Reich

Cubic Interpolation

Cubic Spline

(a) initial profile

(d) initial profile

2

4

6

2

4

6

(b) final profile (M=256)

(e) final profile (M=256)

2

4

6

2

4

6

(c) difference in profiles (M=256)

(f) difference in profiles (M=256)

0.05

0

−0.05

0.02

0.01

0

−0.01

−0.02

2

4

6

2

4

6

Figure 1. Detailed results from the linearly advected smoothed slotted-cylinder experiment with
M = 256. Left panels: classic SL interpolation using backward trajectories and bicubic interpolation.
Right panels: new advection scheme using forward trajectories and mass-conserving spline interpolation.

position after τ = 3 time units. This allows us to introduce the error

em =

ρ0(xk,l)
k

−

ρmK
k,l k

∞,

K = 300,

(37)

for m = 1, 2, 3, 4.

Simulations are performed on a spatial grid with M = 128, M = 256, and
M = 512. Errors (37) are provided in Fig. 2. It can be seen that the newly
proposed method is more accurate than the standard SL advection scheme and
that the newly proposed method achieves second-order accuracy as a function

The remapped particle-mesh advection scheme

9

(a) error cubic interpolation

(b) error splines

M=128
M=256
M=512

M=128
M=256
M=512

0
10

−1

10

−2

10

10

−3
0

0
10

−1

10

−2

10

10

−3
0

5

10
time

15

20

5

10
time

15

20

Figure 2. Displayed are the l∞-errors (37) for constant step-size ∆t and varying spatial resolution
for the lineearly advected smoothed slotted cylinder experiment. Left panel: classic SL interpolation
using backward trajectories and bicubic interpolation. Right panel: new advection scheme using forward
trajectories and mass-conserving spline interpolation.

of spatial resolution (for ﬁxed time-steps ∆t). Detailed results from simulations
with M = 256 can be found in Fig. 1.

Following the discussion of [26] the reduced order can be explained by the
−2 spectral decay
fact that the Helmholtz operator
|
in the Fourier transform of the initial density ρ0. As also explained in [26], the
improved convergence of our spline-based method over the traditional bicubic SL
method is to be expected.

leads to an approximate

k
|

H

We also implemented the standard rotating slotted-cylinder problem as,
for example, deﬁned in [10, 23]. See [23] for a detailed problem description
and numerical reference solutions. Corresponding results for the newly proposed
advection scheme can be found in Fig. 3.

(c)

2D planar advection: Idealized cyclogenesis problem
The idealized cyclogenesis problem (see, e.g., [10, 23]) consists of a circular
vortex with a tangential velocity V (r) = v0 tanh(r)/sech2(r), where r is the radial
distance from the centre of the vortex (xc, yc) and v0 is a constant chosen such
that the maximum value of V (r) is unity. The analytic solution ρ(x, t) is

ρ(x, t) =

tanh

−

y

yc

−
δ

(cid:20)(cid:18)

(cid:19)

cos(ωt)

sin(ωt)

,

(38)

x

xc

−
δ

−

(cid:18)

(cid:19)

(cid:21)

where ω = V (r)/r is the angular velocity and δ = 0.05. The experimental setting
is that of [10, 23]. In particular, the domain of integration is Ω = [0, 10]
[0, 10]
129 grid. The time step is ∆t = 0.3125 and a total of 16 time steps
with a 129
is performed. Numerical reference solutions can be found in [23] for the standard
bicubic and several conservative SL methods. The corresponding results for the
newly proposed advection scheme can be found in Fig. 4.

×

×

(d) Spherical advection: Solid body rotation

Solid body rotation is a commonly used experiment to test an advection
scheme over the sphere. We apply the experimental setting of [11, 12, 13, 24].

10

C. J. Cotter and J. Frank and S. Reich

Figure 3. Rotating slotted-cylinder problem. Top panel: numerical solutation after six rotations. Bottom
panel: error (analytic minus numerical) with contour minimum −0.5266 and contour interval 0.3803; error
measures, as deﬁned in [23], rms1 = 0.062595, rms2 = 0.037329, and pdm = -0.1454E-10 %.

The initial density is the cosine bell,

ρ0(λ, θ) =

(cid:26)

1/2 [1 + cos(πr/R)],
0,

r 6 R,
r > R,

where R = 7π/64,

and λc = 3π/2. The bell is advected by a time-invariant velocity ﬁeld

r = cos−1 [sin θ + cos θ cos(λ

λc)] ,

−

u = cos α cos θ + sin α cos λ sin θ,
v =

sin α sin λ,

−

where (u, v) are the velocity components in λ and θ direction, respectively, and
α is the angle between the axis of solid body rotation and the polar axis of the
sphere.

Experiments are conducted for α = 0, α = π/2, and α = π/2

0.05. Analytic
trajectories are used and ∆t is chosen such that 256 time steps correspond to
a complete revolution around the globe (the radius of the sphere is set equal

−

(39)

(40)

(41)
(42)

The remapped particle-mesh advection scheme

11

Figure 4. Cyclogenesis problem. Top panel: numerical soluation at time t = 5. Bottom panel: error
(analytic minus numerical) with contour minimum −0.627 and contour interval 0.418; error measures,
as deﬁned in [23], rms1 = 0.081439, rms2 = 0.037703, and pdm = -0.176259E-11 %.

α

l1

l2

0

π/2

π/2 − 0.05

0.0492

0.0591

0.0627

0.0336

0.0393

0.0397

l∞ 0.0280

0.0367

0.0374

TABLE 2. Comparison of error norms for solid body rotation with three diﬀerent values of α t after
one complete revolution using 256 time steps over a 128 × 64 grid. The meridional Courant number is
Cθ = 0.5.

to one). Accuracy is measured as relative errors in the l1, l2, and l∞ norms (as
64 grid
deﬁned, for example, in [24]). Results are reported in Table 2 for a 128
(i.e., J = 64).

×

Note that (32) may lead to a non-uniform distribution of particle masses
near the polar cap regions for meridional Courant numbers Cθ > 1. This can
imply a loss of accuracy if a “heavy” extra-polar particle moves into a polar cap

12

C. J. Cotter and J. Frank and S. Reich

(a) 72 time steps

(b) 36 time steps

(c) 18 time steps

β

l1

l2

0

π/(3J)

0

π/(3J)

0

π/(3J)

0.0491

0.0283

2.3264

0.0222

2.3217

0.0143

0.0468

0.0168

1.5124

0.0137

1.5126

0.0105

β

l1

l2

β

l1

l2

l∞ 0.0723

0.0122

l∞ 1.1383

0.0151

l∞ 1.0764

0.0143

TABLE 3. Comparison of error norms for solid body rotation with α = π/2 for diﬀerent values of
the smoothing parameter β in (43) after one complete revolution over a 128 × 64 grid (i.e., J = 64).
Panel (a): Complete revolution using 72 time step. The meridional Courant number is Cθ = 1.78. Panel
(b): Complete revolution using 36 time step. The meridional Courant number is Cθ = 3.56. Panel (c):
Complete revolution using 18 time step. The meridional Courant number is Cθ = 7.12.

region. We veriﬁed this for 72, 36 and 18, respectively, time steps per complete
revolution (implying a meridional Courant number of Cθ = 1.78, Cθ = 3.56, and
C
θ = 7.12, respectively). It was found that the accuracy is improved by
−
applying a smoothing operator along lines of constant θ near the polar caps,
e.g.,

ρn+1 =

1
"

−

(cid:18)

β
cos θ

6 ∂6
∂λ6

#

(cid:19)

−1

ρn+1
∗

,

(43)

≪

π/J, J = 64. Here ρn+1

β
denotes the density approximation obtained from
(31). The ﬁlter (43) is mass conserving and acts similarly to hyper-viscosity. The
disadvantage of this simple ﬁlter is that ρn+1

= ρn under zero advection.

∗

Results for β = 0 and β = π/192, respectively, and 72, 36 and 18 time steps,
respectively, are reported in Table 3. It is evident that ﬁltering by (43) improves
the results signiﬁcantly. Corresponding results for standard advection schemes
can be found in [11] for the case of 72 time steps per complete revolution.

(e) Spherical advection: Smooth deformational ﬂow

To further evaluate the accuracy of the advection scheme in spherical
geometry, we consider the idealized vortex problem of Doswell [1]. The ﬂow
ﬁeld is deformational and an analytic solution is available (see [9, 11] for details).
formulation. Let (λ′, θ′) be a rotated
coordinate system with the north pole at (π + 0.025, π/2.2) with respect to the
regular spherical coordinates. We consider rotations of the (λ′, θ′) coordinate
system with an angular velocity ω, i.e.,

We summarize the mathematical

where

dλ′
dt

= ω,

dθ′
dt

= 0,

ω(θ′) =

3√3 sech2(3 cos θ′) tanh(3 cos θ′)
6 cos θ′

.

An analytic solution to the continuity equation (1) in (λ′, θ′) coordinates is
provided by

ρ(λ′, θ′, t) = 1

tanh

−

3 cos θ′
5

(cid:20)

sin(λ′

ω(θ′) t)
(cid:21)

.

−

(44)

(45)

(46)

6
The remapped particle-mesh advection scheme

13

t

l1

l2

3

6

0.0019

0.0055

0.0062

0.0172

l∞ 0.0324

0.0792

TABLE 4. Comparison of error norms at diﬀerent times t for spherical polar vortex problem. Compu-
tations are performed with a step size of ∆t = 1/20 and a 128 × 64 grid.

Simulations are performed using a 128

64 grid and a step size of ∆t = 0.05.
The ﬁlter (43) is not applied. The exact solution (evaluated over the given grid)
and its numerical approximation at times t = 3 and t = 6 are displayed in Fig. 5.
The relative l1, l2 and l∞ errors (as deﬁned in [24]) can be found in Table 4.
These errors are comparable to the errors reported in [11, 24] for the standard
SL bicubic interpolation approach.

×

( f ) Rotating shallow-water equations in planar geometry

To demonstrate the behavior of the new advection scheme under a time-
dependent and compressible velocity ﬁeld, we consider the shallow-water equa-
tions (SWEs) on an f -plane [2, 17]:

(47)

(48)

(49)

(50)

Du
Dt
Dv
Dt
Dµ
Dt

= +f v

gµx,

−

−

f u

gµy,

=

=

−

−

µ (ux + vy).

D ˜µ
Dt

=

˜µ (ux + vy)

−

Here µ = µ (x, y, t) is the ﬂuid depth, g is the gravitational constant, and f is
twice the (constant) angular velocity of the reference plane.

Let H denote the maximum value of µ over the whole ﬂuid domain. We also
H. The perturbation satisﬁes the

introduce the ﬂuid depth perturbation ˜µ = µ
continuity equation

−

which we solve numerically using the newly proposed scheme. The overall time
stepping procedure is given by the semi-Lagrangian St¨ormer-Verlet (SLSV)
method proposed by Reich [15] with only equation (5.7) from [15] being replaced
by the following steps:

(i)

µn+1/2−ε = µn

[ux + vy]n+1/2−ε

∆tH
2

−

(ii) Solve (50) over a full time step using the newly proposed scheme with ve-
locities (un+1/2−ε, vn+1/2−ε) and initial ﬂuid depth perturbation ˜µn+1/2−ε =
µn+1/2−ε
H. Denote the resulting ﬂuid depth by µn+1/2+ε = ˜µn+1/2+ε +
H.

−

14

C. J. Cotter and J. Frank and S. Reich

Figure 5. Results of a polar vortex simulation over the sphere. The exact solution and its numerical
approximation at time t = 3 can be found in panels (a) and (b), respectively. Contours plotted between
0.5 and 1.5 with contour interval 0.05. Panels (c) and (d) display the same results for time t = 6.

(iii)

µn+1 = µn+1/2+ε

[ux + vy]n+1/2+ε

∆tH
2

−

The method has been implemented using the standard C-grid [2] over a
double periodic domain with Lx = Ly = 3840 km (see [20] for details). The grid
size is ∆x = ∆y = 60 km. The time step is ∆t = 20 min and the value of f
corresponds to an f -plane at 45o latitude. The reference height of the ﬂuid is
3000 km. Initial
set to H = 9665 m. The Rossby radius of deformation is LR ≈
conditions are chosen as in [20, 15] and results are displayed in an identical format
for direct comparison.

To assess the new discretization, results are compared to those from a two-
time-level semi-implicit semi-Lagrangian (SISL) method with a standard bicubic
interpolation approach to semi-Lagrangian advection (see, e.g., [8, 21]). It is
apparent from Fig. 6 that both simulations yield similar results in terms of

The remapped particle-mesh advection scheme

15

SLSV

SLSV-SISL

time = 2 days

1000

2000

3000

time = 4 days

1000

2000

3000

time = 6 days

1000

2000

3000

3000

2000

1000

0
0

3000

2000

1000

0
0

3000

2000

1000

0
0

Figure 6. Left panels: Computed time evolution, from initial time to t = 6 days, of PV over the domain
(x, y) ∈ [0, 3840 km] × [0, 3840 km] using the semi-Lagrangian St¨ormer-Verlet (SLSV) method with time
step ∆t = 20 min. Contours plotted between 6.4 × 10−8 m−1s−1 and 2.2 × 10−7 m−1s−1 with contour
interval 1.56 × 10−8 m−1s−1. Right panels: Diﬀerences (semi-Lagrangian St¨ormer-Verlet minus fully
implicit semi-Lagrangian) at corresponding times are plotted with a 10 times smaller contour interval,
where thin (thick) lines are positive (negative) contours.

potential vorticity advection. Furthermore, the results displayed in Fig. 6 are
nearly identical to those displayed in Fig. 6.1 of [15]. The implication is that
the newly proposed advection scheme in manner very similar to the traditional
SL interpolation scheme for this particular test problem. This result in not
unexpected as the ﬂuid depth remains rather smooth throughout the simulation.

16

C. J. Cotter and J. Frank and S. Reich

7. Summary and outlook

A computationally eﬃcient and mass conserving forward trajectory semi-
Lagrangian approach has been proposed for the solution of the continuity
equation (1). At every time step a “mass” is assigned to each grid point which is
then advected downstream to a (Lagrangian) position. The gridded density at the
next time step is obtained by evaluating a bicubic spline representation with the
advected masses as weights. The main computational cost is given by the need
to invert tridiagonal linear systems in (21). Computationally eﬃcient iterative or
direct solvers are available. We also proposed an extension of the advection scheme
to spherical geometry. A further generalization to 3D would be straightforward.
Numerical experiments show that the new advection scheme achieves accuracy
comparable to standard non-concerving and published conserving SL schemes.

We note that the proposed advection scheme can be used to advect momenta

according to

−
This possibility is particularly attractive in the context of the newly proposed
semi-Lagrangian St¨ormer-Verlet (SLSV) scheme [15].

∇ ·

(51)

D
Dt

(ρu) =

(ρu)

u.

Acknowledgements

We would like to thank Nigel Wood for discussions and comments on earlier

drafts of this manuscript.

References

[1] C.A. Doswell. A kinematic analysis of frontogenesis associated with a

nondivergent vortex. J. Atmos. Sci., 41:1242–1248, 1984.

[2] D.R. Durran. Numerical Methods for Wave Equations in Geophysical Fluid

Dynamics. Springer-Verlag, Berlin Heidelberg, 1998.

[3] J. Frank, G. Gottwald, and S. Reich. The Hamiltonian particle-mesh method.
In M. Griebel and M.A. Schweitzer, editors, Meshfree Methods for Partial
Diﬀerential Equations, volume 26 of Lect. Notes Comput. Sci. Eng., pages
131–142, Berlin Heidelberg, 2002. Springer-Verlag.

[4] J. Frank and S. Reich. The Hamiltonian particle-mesh method for the

spherical shallow water equations. Atmos. Sci. Lett., 5:89–95, 2004.

[5] R.A. Gingold and J.J. Monaghan.

Smoothed Particle Hydrodynamics:
Theory and application to non-spherical stars. Mon. Not. R. Astr. Soc.,
181:375–389, 1977.

[6] F. Harlow. The particle-in-cell computing methods for ﬂuid dynamics.

Methods Comput. Phys., 3:319–343, 1964.

[7] L.B. Lucy. A numerical approach to the testing of the ﬁssion hypothesis.

Astron. J., 82:1013–1024, 1977.

The remapped particle-mesh advection scheme

17

[8] A. McDonald and J.R. Bates. Improving the estimate of the departure point
in a two-time level semi-Lagrangian and semi-implicit scheme. Mon. Wea.
Rev., 115:737–739, 1987.

[9] R.D. Nair, J. Cot´e, and A. Staniforth. Cascade interpolation for semi-
Lagrangian advection over the sphere. Q.J.R. Meteor. Soc., 125:1445–1468,
1999.

[10] R.D. Nair, J. Cot´e, and A. Staniforth. Monotonic cascade interpolation for

semi-Lagrangian advection. Q.J.R. Meteor. Soc., 125:197–212, 1999.

[11] R.D. Nair and B. Machenhauer. The mass-conservative cell-integrated semi-
Lagrangian advection scheme on the sphere. Mon. Wea. Rev., 130:649–667,
2002.

[12] R.D. Nair, J.S. Scroggs, and F.H.M. Semazzi. Eﬃcient conservative global
transport schemes for climate and atmospheric chemistry models. Mon. Wea.
Rev., 130:2059–2073, 2002.

[13] R.D. Nair, J.S. Scroggs, and F.H.M. Semazzi. A forward-trajectory global

semi-Lagrangian transport scheme. J. Comput. Phys., 190:275–294, 2003.

[14] R.J. Perser and L.M. Leslie. An eﬃcient interpolation procedure for
high-order three-dimensional semi-Lagrangian models. Mon. Wea. Rev.,
119:2492–2498, 1991.

[15] S. Reich. Linearly implicit time stepping methods for numerical weather

prediction. BIT, in press, 2006.

[16] A. Robert. A semi-Lagrangian and semi-implicit numerical

integration
scheme for the primitive meteorological equations. Jpn. Meteor. Soc., 60:319–
325, 1982.

[17] R. Salmon. Lectures on Geophysical Fluid Dynamics. Oxford University

Press, Oxford, 1999.

[18] W.F. Spotz, M.A. Taylor, and P.N. Swarztrauber. Fast shallow-water
J. Comput. Phys.,

equations solvers in latitude-longitude coordinates.
145:432–444, 1998.

[19] A. Staniforth and J. Cot´e. Semi-Lagrangian integration schemes for atmos-

pheric models – A review. Mon. Wea. Rev., 119:2206–2223, 1991.

[20] A. Staniforth, N. Wood, and S. Reich. A time-staggered semi-Lagrangian
discretization of the rotating shallow-water equations. Q.J.R. Meteorolog.
Soc., submitted, 2006.

[21] C. Temperton and A. Staniforth. An eﬃcient two-time-level semi-Lagrangian
semi-implicit integration scheme. Q.J.R. Meteorol. Soc., 113:1025–1039,
1987.

[22] S.T. Zalesak. Fully multidimensional ﬂux-corrected transport algorithms for

ﬂuids. J. Comput. Phys., 31:335–362, 1979.

18

C. J. Cotter and J. Frank and S. Reich

[23] M. Zerroukat, N. Wood, and A. Staniforth. SLICE: A semi-Lagrangian
inherently conserving and eﬃcient scheme for transport problems. Q.J.R.
Meteorol. Soc., 128:801–820, 2002.

[24] M. Zerroukat, N. Wood, and A. Staniforth. SLICE-S: A semi-Lagrangian
inherently conserving and eﬃcient scheme for transport problems on the
sphere. Q.J.R. Meteorol. Soc., 130:2649–2664, 2004.

[25] M. Zerroukat, N. Wood, and A. Staniforth. Application of the parabolic
spline method (PSM) to a multi-dimensional conservative semi-Larangian
transport scheme (SLICE). Int. J. Numer. Meth. Fluids, submitted, 2006.

[26] M. Zerroukat, N. Wood, and A. Staniforth. The parabolic spline method
(PSM) for conservative transport problems. Int. J. Numer. Meth. Fluids, in
press, 2006.

