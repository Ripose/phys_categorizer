1
0
0
2
 
c
e
D
 
3
1
 
 
]
h
p
-
c
c
a
.
s
c
i
s
y
h
p
[
 
 
1
v
7
3
0
2
1
1
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

WEAP025

INTRODUCTION OF MODERN SUBSYSTEMS AT THE KEK
INJECTOR-LINAC

N.Kamikubota, K.Furukawa, KEK, Tsukuba, Japan
S.Kusano, T.Obata, Mitsubishi Electric System and Service Co. Ltd., Tsukuba, Japan

RPC (remote procedure call), based on TCP/UDP proto-
cols, are used for communication between them. A simpli-
ﬁed view of the control system is shown in Fig. 1.

 :

t

Abstract

As an accelerator control system survives over several
years, it is often the case that new subsystems are intro-
duced into the original control system. The control sys-
tem for the KEK electron/positron injector-linac has been
using Unix workstations and VME computers since 1993.
During the eight-year operation, we extended the system
by introducing a) Windows PCs, b) PLC controllers with
a network interface, and c) web servers based on modern
information technology. Although such new subsystems
are essential to improve control functionalities, they often
cause communication problems with the original control
system. We discuss the experienced problems, and present
our solutions for them.

1

INTRODUCTION

The KEK linac was constructed as an injector of the Photon
Factory storage ring about 20 years ago [1]. The ﬁrst beam
of 2.5-GeV electrons was provided in 1982. This linac
now provides electron/positron beams to several rings [2]:
a) 3.5-GeV positrons to the KEKB LER (KEK B-factory
Low-energy ring), b) 8-GeV electrons to the KEKB HER
(High-energy ring), c) 2.5-GeV electrons to the PF ring,
and d) 2.5-GeV electrons to the PF-AR ring. The ﬁrst con-
trol system, which consisted of mini-computers and CA-
MAC interfaces [3], was replaced by the present control
system in 1993 [4]. The present system comprises Unix
workstations and VME computers. It has been upgraded
occasionally [5] and used over the past eight years.

In this article, we discuss newly introduced subsystems
in recent years. They were introduced in order to improve
the control functionalities, and/or to enable better mainte-
nance capabilities. Three subsystems are described in de-
tail in Section 2. The experienced problems between the
subsystems and the original control system, and their solu-
tions are discussed in Section 3.

2 NEW SUBSYSTEMS

2.1 Control System Overview

The present control system comprises 4–6 UNIX worksta-
tions, 27 VME computers with the OS-9 operating system,
140 PLC (Programmable logic controller) controllers, and
11 CAMAC interfaces with a network port. A home-made

:

)

)

Figure 1: Simpliﬁed view of the control system.

The total number of control signals is about 6000 (in 2-
byte unit). Since 1998, when the CP violation study started
with the KEKB rings, the operation of the linac exceeded
7000 hours per year. The number of control transactions
handled by the control system increased every year, and
reached 350 transactions per sec. in June, 2001 [6].

2.2 Windows PC

Since the end of the 1980’es, we have had strong interest in
using PCs. The PC-based operator’s console system started
with DOS PCs [7], and later reinforced with Windows PCs
[8], has been successfully used for more than ten years. In
the early phase, the following points were preferable for us:
a) enhanced capability of 2-byte code (Japanese characters)
handling, b) good development environment of graphic ap-
plications, and c) low cost.

The present console system comprises about ten PCs
(Windows NT and Windows 2000). The surveillance ap-
plications for accelerator devices were developed in Vi-
sual Basic, and have been used in daily operation. The

operation log-book using MS-SQL and Access [9] is ex-
tensively used everyday with this console system.

Communication with the control system, which runs at
the Unix workstations, is made by a gateway (a Windows
PC). When the gateway receives a control request from a
console PC by the OLE, it communicates with the appropri-
ate device server(s) by using the RPC protocol (see Fig. 1).
The gateway and the present console system have been suc-
cessfully used over the past six years.

KEK linac started in May, 1994 [10]. Up to now, we have
developed many web pages to inform about the linac oper-
ation status.

a) Status of accelerator devices The web-server ma-
chine is a part of the control system. Thus, by using the
CGI (Common Gateway Interface) script, it is easy to de-
velop a homepage to show the status of any linac device. A
large number of pages have already been developed.

2.3 PLC

The main part of the control system for the KEK linac was
renewed in 1993 [4]. However, the local controllers (shown
as SBC1 in Table 1) remained. In recent years the mainte-
nance of these local controllers has become difﬁcult. Thus,
we decided to replace them with new controllers.

Table 1: Replacement of local controllers.

device and
transition
Klystron
’97-’98
Magnet
’96-’00
Vacuum
’96-’97
Trigger
’97-now
BPM
since ’97

–>SBC

transition
before
1993
phase
CAMAC VME
–>SBC
CAMAC VME
–>SBC
CAMAC VME
–>SBC
CAMAC VME
–>SBC
none

–>SBC

–>SBC

–>SBC

present
status
Ethernet
–>PLCx70
Ethernet
–>PLCx51
Ethernet
–>PLCx18
Ethernet
–>CAMACx11
Ethernet
–>VMEx19

A typical local controller should have a) a few hun-
dred I/O points, b) simple but programmable control logic,
and c) a communication path to the main control system.
Among some candidates, a PLC with a direct network port
(Yokogawa FA-M3) was chosen for klystron modulators,
magnet power-supplies, and vacuum controllers. The VME
computer was a candidate, but was not selected, because
the PLC is less expensive. The replacements of local con-
trollers since 1996 are summarized in Table 1.

It is interesting that all of the new controllers shown
in Table 1 have an Ethernet port. A background fact is
that world-standard ﬁeld networks (CAN-bus, Proﬁ-bus,
MIL1553, etc.) are not popular in Japan, and we want
to use Ethernet as a ﬁeld network. The use of a standard
Ethernet is preferable for long-term maintenance and cost
reduction. In addition, we use optic-ﬁber cables for the net-
work to local controllers in order to avoid electro-magnetic
noise from the klystron modulators.

2.4 Web and Related Topics

We have recently experienced fast improvements of infor-
mation technologies. The world-wide-web services at the

1Such old local controllers were controlled by Single Board Comput-

ers with micro-processors [3].

b) Real-time display by Java and CORBA Feasibil-
ity studies of a web-based real-time display using Java and
CORBA have been carried out. The measured round-trip
time between a Java applet and a CORBA server (at an
Unix workstation) was 50 ms [11, 12]. The server does
not consume CPU resources compared with the CGI-based
services. Recent updates have enabled realistic demonstra-
tion of the beam-current history at the KEK linac [13].

3 DISCUSSION

3.1 Problems with Subsystems

a) Windows PC The main language for the Windows-
based console PCs is Visual Basic, while the sources at the
Unix side have been developed in C language. For exam-
ple, the sources for the RPC use socket (Winsock) func-
tions at the Unix (Windows) side. Thus, the maintenances
have been made independently. This fact implies that when
we have some improvements at the Unix side, it always
takes time for the improvements inﬂuence the Windows
side.

We have operated a TCP/IP network system which con-
tains both Unix workstations and Windows PCs. As the
number of Windows PCs has increased, we experienced
communication errors by two speciﬁc intervals (2 hours
and 12 minutes). They were removed by changing the
default settings of MS Ofﬁce and Samba [15]. We also
experienced an accident in which the network burst from
Windows PCs occupied the network system, followed by
a short-time mistake of network cable connections. At the
time of the accident, the burst stopped all network modules
of the PLC controllers. We modiﬁed the parameters at the
network routers so as not to enhance the burst broadcasts.

b) PLC After the KEKB commissioning started in
1997, we developed various slow-feedback applications
[14] in order to realize stable beam injections to the KEKB
rings. By the end of 1998, the CPU capabilities of Unix
workstations were found to be insufﬁcient for increasing
demands. The analysis showed that the klystron server (see
Fig. 1) consumed a very large fraction of the CPU resources
for network communication with PLC controllers. In the
summer of 1999, we prepared on-memory cache areas to
keep klystron data at the Unix workstations. Two linux
PCs have been used to update the cached data by polling
the PLC controllers [15, 16]. The network trafﬁc decreased
to one fourth, and the problem disappeared.

Up to now we have introduced the cached scheme even
for other devices.2. Considering the number of control
transactions [6], we can conclude that the intelligence of
the PLCs was not sufﬁcient for our case. Thus, we added
more intelligent devices (PCs) between the device servers
and the PLC controllers, as shown in Fig. 1.

c) Web Web presentation of the KEK linac status
would consume larger CPU and network resources than
dedicated applications. The considerable increase of web
accesses in recent years implies that we will need more
computer resources in our control system. A more serious
problem is that we will need more man-power to maintain
both dedicated applications and web-based services. We
are eager for some tools which would enable us automati-
cally generate web contents.

3.2 Transition of Control Architecture

We are now ready to discuss the long-term transition of
the basic architecture of the control system for large ac-
celerators. Taking into account various accelerator control
systems in the past 20 years, the transitions of control stan-
dards are given in Table 2 (upper). Private expectations for
the next decade (2000’es) are shown in Table 2 (lower).

Table 2: Transition of large accelerator control.

base-machine mini-computer

console

(language)
network

local-
controller

console

base-machine
(language)
network

local-
controller

1980’es
CUI
(text-base)

FORTRAN
dedicated network
dedicated protocol
CAMAC

1990’es
GUI on X
(window-base)
Unix workstation
C
standard Ethernet
on TCP/IP
VME with
RT-OS

2000’es (private expectation)
a) GUI on Windows-PC (for operation)
b) toolkit/environment (for study)
c) Web/cell-phone (for announcement)
Linux, or 64/128bit Unix
Java, C++
TCP/IP and CORBA
http (for web)
PLC with Ethernet (for simple I/O)
Linux box (for intelligent controller)

The present control system for the KEK linac, which
started in 1993, can be expressed as a typical standard of
the 1990’es model. We conclude that our extensions (in-
troducing subsystems in the past eight years) can be under-
stood as an evolution toward the new standard of 2000’es.

2The vacuum system started to use cache in June, 2000. For magnet
power-supplies, we had a Windows PC as a gateway since 1997 [15]. The
BPM servers use cache from the start of the service in 1997.

4 ACKNOWLEDGMENT

The authors acknowledge Prof. A. Enomoto and Prof.
K. Nakahara for kindly supervising our work. We thank
I. Abe for discussions on using Windows PCs with Unix
workstations. The various improvements of PLC-based lo-
cal controllers have been carried out by A. Shirakawa. We
also thank the KEK linac operators for cooperative and suc-
cessful works to improve our control system.

5 REFERENCES

[1] J.Tanaka, Nucl. Instr. Meth. 177(1980)101-105

[2] Y.Ogawa and Linac Commissioning Group (LCG), ”Com-
missioning Status of the KEKB Linac”, Proc. PAC’99, New
York, Mar.-Apr.1999, p.2984-2986

[3] K.Nakahara, I.Abe, R.P.Bissonnette, A.Enomoto, Y.Otake,
T.Urano and J.Tanaka, Nucl. Instr. Meth. A251(1986)327

[4] N.Kamikubota, K.Furukawa, K.Nakahara and I.Abe, Nucl.

Instr. Meth. A352(1994)131-134

[5] N.Kamikubota et al., ”Improvements to Realize a Higher
the KEK Linac Control System”, Proc.

Reliability of
ICALEPCS’95, Chicago, Oct.-Nov.1995, p.1052-1055

[6] N.Kamikubota et al., ”Growth of Control Transactions of
the KEK Linac during the KEKB Commissioning”, Proc.
APAC’01, Beijing, Sep.2001; KEK-Preprint 2001-124

[7] K.Nakahara, I.Abe, N.Kamikubota and K.Furukawa, Nucl.

Instr. Meth. A293(1990)446-449

[8] I.Abe, H.Kobayashi and M.Tanaka, ”PC based Control Sys-
tem using ActiveX in the KEK e-/e+ Linac”, Proc. PCa-
PAC’99, Tsukuba, Jan.1999, KEK-Proceedings 98-10

[9] M.Tanaka, I.Abe and H.Kobayashi, ”Database system in the
KEK Linac PC-based Control”, Proc. PCaPAC’99, Tsukuba,
Jan.1999, KEK-Proceedings 98-10

[10] http://www-linac.kek.jp

[11] S.Kusano, N.Kamikubota and K.Furukawa, ”Real-time Dis-
play of Accelerator Status Using JAVA and CORBA”, Proc.
PCaPAC’99, Tsukuba, Jan.1999, KEK-Proceedings 98-10

[12] S.Kusano, N.Kamikubota and K.Furukawa, ”Study of
Sharable Applications Using Java and CORBA”, Proc.
ICALEPCS’99, Trieste, Oct.1999, p.535-537

[13] N.Kamikubota, S.Kusano and K.Furukawa,

”Archive
Databases as Distributed CORBA Objects”, presentation at
JPS meeting, Okinawa, Sep.2001

[14] K.Furukawa et al., ”Beam Switching and Beam Feedback
Systems at KEKB Linac”, Proc. LINAC2000, Monterey, CA,
Aug.2000, p.633-635

[15] N.Kamikubota, ”Introducing PCs to Unix-based control
systems”, presentation at PCaPAC2000, Hamburg, Oct.2000

[16] S.Kusano, N.Kamikubota and K.Furukawa, ”Use of Linux
PCs for Device Surveillance at the KEK Injector-linac”, to be
submitted

