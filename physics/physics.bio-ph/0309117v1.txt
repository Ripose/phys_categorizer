3
0
0
2
 
p
e
S
 
9
2
 
 
]
h
p
-
o
i
b
.
s
c
i
s
y
h
p
[
 
 
1
v
7
1
1
9
0
3
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Prediction and statistics of pseudoknots in RNA structures
using exactly clustered stochastic simulations
A. Xayaphoummine, T. Bucher, F. Thalmann & H. Isambert∗
Laboratoire de Dynamique des Fluides Complexes, CNRS-ULP,
Institut de Physique, 3 rue de l’Universit´e, 67000 Strasbourg, France

Ab initio RNA secondary structure predictions have long
dismissed helices interior to loops, so-called pseudoknots,
despite their structural importance. Here, we report that
many pseudoknots can be predicted through long time scales
RNA folding simulations, which follow the stochastic closing
and opening of individual RNA helices. The numerical efﬁ-
cacy of these stochastic simulations relies on an O(n2) clus-
tering algorithm which computes time averages over a con-
tinously updated set of n reference structures. Applying this
exact stochastic clustering approach, we typically obtain a
5- to 100-fold simulation speed-up for RNA sequences up to
400 bases, while the effective acceleration can be as high as
105-fold for short multistable molecules (≤ 150 bases). We
performed extensive folding statistics on random and nat-
ural RNA sequences, and found that pseudoknots are un-
evenly distributed amongst RNA structures and account for
up to 30% of base pairs in G+C rich RNA sequences (On-
line RNA folding kinetics server including pseudoknots :
http://kinefold.u-strasbg.fr/).

The folding of RNA transcripts is driven by intramolecular
GC/AU/GU base pair stacking interactions. This primarily leads to the
formation of short double-stranded RNA helices connected by unpaired
regions. Ab initio RNA folding prediction restricted to tree-like sec-
ondary structures is now well established[1, 2, 3, 4, 5, 6, 7, 8] and has
become an important tool to study and design RNA structures which
remain by and large refractory to many crystallization techniques. Yet,
the accuracy of these predictions is difﬁcult to assess –despite the pre-
cision of stacking interaction tables[7]– due to their a priori dismissal
of pseudoknot helices, Fig 1A.

Pseudoknots are regular double-stranded helices which provide spe-
ciﬁc structural rigidity to the RNA molecule by connecting different
“branches” of its otherwise more ﬂexible tree-like secondary structure
(Figs 1A-B). Many ribozymes, which require a well-deﬁned 3D en-
zymatic shape, have pseudoknots[9, 10, 11, 12, 13, 14, 15, 16, 17].
Pseudoknots are also involved in mRNA-ribosome interactions during
translation initiation and frameshift regulation[18]. Still, the overall
prevalence of pseudoknots has proved difﬁcult to ascertain from the
limited number of RNA structures known to date. This has recently
motivated several attempts to include pseudoknots in RNA secondary
structure predictions[19, 20, 21].

There are two main obstacles to include pseudoknots in RNA struc-
tures: a structural modeling problem and a computational efﬁciency
issue. In the absence of data bases for pseudoknot energy parameters,
their structural features have been modeled at various descriptive levels

∗Corresponding author: herve.isambert@curie.fr New address: Institut Curie,
CNRS-UMR168, 11 rue P & M Curie, 75005 Paris, France.

visualization

A

B

model

C

RNA structure
with pseudoknots

FIG. 1: A An RNA secondary structure with pseudoknots. B Minimum
set of helices deﬁned as “pseudoknots” and visualized for convenience
by colored single-stranded regions connected by two straight lines. C
The entropic cost of the actual 3D structural constraints is evaluated by
modeling RNA helices as stiff rods (black) and single-stranded regions
as ideal polymer springs. Colored single-stranded circuits deﬁne quasi-
independent structural domains referred to as “nets” in ref[21].

using polymer theory[19, 21, 22]. From a computational perspective,
pseudoknots have proved not easily amenable to classical polynomial
minimization algorithms[20] due to their intrinsic non-nested nature.
Instead, simulating RNA folding dynamics has provided an alterna-
tive avenue to predict pseudoknots[21, 22] in addition to bringing some
unique insight into the kinetic aspects of RNA folding[8, 21].

Yet, stochastic RNA folding simulations can become relatively in-
efﬁcient due to the occurrence of short cycles amongst closely related
conﬁgurations[22], which typically differ by a few helices only. Not
surprisingly, similar numerical pitfalls have been recurrent in stochas-
tic simulations of other trapped dynamical systems[23, 24, 25, 26, 27].
To address this computational efﬁciency issue and capture the slow
folding dynamics of RNA molecules, we have developed a generic al-
gorithm which greatly accelerates RNA folding stochastic simulations
by exactly clustering the main short cycles along the explored fold-
ing paths. The general approach, which may prove useful to simulate
other trapped dynamical systems, is discussed in the main subsection
of Theory and Methods. In the Results section, the efﬁcacy of these
exactly clustered stochastic (ECS) simulations is ﬁrst compared to non-
clustered RNA folding simulations, before being used to predict the
prevalence of pseudoknots in RNA structures on the basis of the struc-
tural model introduced in ref[21] and brieﬂy reviewed hereafter.

Theory and Methods

Modeling and visualizing pseudoknots in RNA structures. We
model the 3D constraints associated with pseudoknots using polymer
theory. The entropy costs of pseudoknots and internal, bulge and
hairpin loops are evaluated on the same basis by modeling the sec-
ondary structure (including pseudoknots) as an assembly of stiff rods –

representing the helices– connected by polymer springs –corresponding
to the unpaired regions, Fig 1C. In practice, free energy computations
involve the labelling of RNA structures into constitutive “nets” –shown
as colored circuits on Fig 1C– to account for the stretching of the un-
paired regions linking the extremities of pseudoknot helices, see ref[21]
for details. In addition, free energy contributions from base pair stack-
ings, terminal mismatches and co-axial stackings are taken from the
thermodynamic tables measured by the Turner lab[7].

The main limitation of this structural model is the absence of hard-
core interactions, which could stereochemically prohibit certain RNA
structures with either long pseudoknots (e.g., >11bp, one helix turn) or
a large proportion of pseudoknots (e.g., >30% of formed base pairs).
However, we found that such stereochemically improbable structures
account for less than 1-to-10% of all predicted structures, depending
on G+C content (see Results section). Hence, in practice, neglecting
hardcore interactions is rarely a stringent limitation, except for a few,
somewhat pathological cases.

Although the presence of pseudoknots in an RNA structure is not
associated to a unique set of helices, it is convenient for visualization
and statistics purposes to deﬁne the set of pseudoknots as the minimum
set of helices which should be imagined broken to obtain a tree-like
secondary structure, Fig 1B. Finding such a minimum set (with respect
to the number of base pairs or their free energy) amounts to ﬁnding the
maximum tree-like set amongst the formed helices and can be done in
polynomial time using a classical “dynamic programming” algorithm.

Modeling RNA folding dynamics and straightforward stochastic
algorithm. RNA folding kinetics is known to proceed through rare
stochastic openings and closings of individual RNA helices[28]. The
time limiting step to transit between two structures sharing essen-
tially all but one helix can be assigned Arrhenius-like rates, k± =
k◦ × exp(−∆G±/kT ), where kT is the thermal energy. k◦, which
reﬂects only local stacking processes within a transient nucleation core,
has been estimated from experiments on isolated stem-loops[28](k◦ ≃
108 s−1), while the free energy differences ∆G± between the transition
states and the current conﬁgurations (Fig 2) can be evaluated by com-
bining the stacking energy contributions and the global coarse-grained
structural model described above, Fig 1C.

Simulating a stochastic RNA folding pathway amounts to follow-
ing one particular stochastic trajectory within the large combinatorial
space of mutually compatible helices[22]. Each transition in this dis-
crete space of RNA structures corresponds to the opening or closing
of a single helix, possibly followed by additional helix elongation and
shrinkage rearrangements to reach the new structure’s equilibrium com-
patible with a minimum size constraint for each formed helix[21] (base
pair zipping/unzipping kinetics occurs on much shorter time scales than
helix nucleation/dissociation). For a given RNA sequence, the total
number of possible helices (which roughly scales as L2, where L is
the sequence length) sets the local connectivity of the discrete struc-
ture space and therefore the number of possible transitions from each
particular structure.

Formally, we consider the following generic model. Each structure
or “state” i is connected to a ﬁnite, yet possibly state-to-state vary-
ing number of neighboring conﬁgurations j via transition rates kji (the
right-to-left matrix ordering of indices is adopted hereafter). As kji is
the average number of transitions from state i to state j per unit time, the
lifetime ti of conﬁguration i corresponds to the average time before any
transition towards a neighboring state j occurs, i.e., ti = 1/
hjikji,
and the transition probability from state i to state j is pji = kjiti, with

hjipji = 1, as expected, for all state i.
Hence, in the straightforward stochastic algorithm[21, 22], each new
P
transition is picked at random with probability pji while the effective
time is incremented with the lifetime ti of the current conﬁguration

P

i

2

j

k ji

ijk

∆G ∆G−

+

FIG. 2: Stochastic transitions over a thermodynamic barrier ∆G± to
close and open an individual helix between two neighbor RNA struc-
tures, i and j. Nucleation of the new helix usually involve some local
unzipping of nearby helices at the barrier and further base pair rear-
rangements to reach equilibrium in the new structure j[21].

i[30]. However, as mentioned in the introduction, the efﬁciency of this
approach is often severely impeded by the existence of kinetic traps
consisting of rapidly exchanging states.

Exactly clustered stochastic (ECS) simulations. As in the case
of RNA folding dynamics, the simulation of other trapped dynami-
cal systems generally presents a computational efﬁciency issue.
In
particular, powerful numerical schemes have been developed to com-
pute the elementary escape times from traps for a variety of simula-
tion techniques[23, 24, 25, 26, 27]. Still a pervasive problem usually
remains for most applications due to the occurrence of short cycles
amongst trapped states, and heuristic clustering approaches have been
proposed to overcome these “numerical traps”[29].

To capture the slow folding dynamics of RNA molecules, we have
developed an exact stochastic algorithm which accelerates the simula-
tion by numerically integrating the main short cycles amongst trapped
states. This approach being quite general, it could prove useful to sim-
ulate other small, trapped dynamical systems with coarse-grained de-
grees of freedom.

In a nutshell, the ECS algorithm aims at overcoming the numerical
pitfalls of kinetic traps by “clustering” some recently explored conﬁgu-
rations into a single, yet continuously updated cluster A of n reference
states. These clustered conﬁgurations are then collectively revisited in
the subsequent stochastic exploration of states. Although stochasticity
is “lost” for the individual clustered states, its statistical properties are,
however, exactly transposed at the scale of the set A of the n reference
states. This is achieved as follows. For each pathway C A
m on A, a sta-
C
tistical weight W C
m plk is deﬁned, where k and l run over all
consecutive states along C A
m from its “starting” state i to its “exiting”
state j on A. The n×n probability matrix P A which sums the statisti-
cal weights W C
m on A between any two states
i and j of A is then introduced,

m over all pathways C A

A
m =

Q

A

A

P A

ji =

W C

A
m =

A

C

m:j←i
X

A

C

C

A
m

plk

,
(cid:19)

m:j←i(cid:18)
X

j←i
Y

(1)

and the exit probability to make a transition outside A from the state
A
j is noted: peA
hkipkj. Hence, starting from state i, the
probability to exit the set A at state j is peA
ji = 1,
ji , with
for all i of A.

j = 1 −

j peA

j P A

j P A

P

A

P

j P A

Thus, in the ECS algorithm, one ﬁrst chooses at random with proba-
bility peA
ji the reference state j of A from which a new transition
towards a state k outside A will then be chosen stochastically with
probability pkj/peA
. Meanwhile, the physical quantities of interest,
like the cumulative time lapse tA
ji to exit the set A from j starting at i,
are exactly averaged over all (future) pathways from i to j within A, as
explained in the next subsection. Finally, the new state k is added to
the reference set A whilst another reference state is removed, so as to
update A, as discussed in The O(n2) algorithm subsection.

j

Exact averaging over all future pathways. We start the discussion
with the path average time lapse to exit the set A. Let us introduce
the time lapse transform of P A: T [P A]{t} = ˜P A{t}, which sums the
C
m plk over all pathways
weighted cumulative lifetimes
C A

m on A between any two states i and j of A,
(cid:1) Q

m th

(cid:0)P

C

A

A

T [P A]ji{t} = ˜P A

ji {t} =

A

C

A
m

C

A
m

C

th

plk

,
#

(2)

m:j←i"(cid:18)
X

j←i
X

(cid:19)

j←i
Y

j

A

˜P A

j peA

where the th’s are summed over all consecutive states h –from i to
j included– along each pathway C A
m. Hence, the mean time ¯tA
to
i
exit A from any state j of A starting from conﬁguration i is, ¯tA
i =
ji {t}. However, in the context of the ECS algorithm, the
ji, the mean time to exit A from a particular
ji {t}/P A
ji .

ji = ˜P A
The average of any path cumulative quantity of interest xi can be
similarly obtained by introducing the appropriate ˜P A{x} matrix. In
particular, the instantaneous efﬁciency of the algorithm is well reﬂected
by the average pathway length ¯ℓA

time lapse of interest is ¯tA
P
ji = peA
state j, ¯tA

ji between any two states of A,

ji {t}/peA

j ˜P A

j P A

¯ℓA
ji = ˜P A

ji {ℓ}/P A
ji ,

(3)

A

A

C

C

C

P

A
m 1

, with

(cid:2)(cid:0)P

ji {ℓ} =

C
m:j←i

(cid:1) Q
m). Hence, starting from state i, ¯ℓA

A
where ˜P A
m plk
m 1 cor-
responding to the length of the pathway C A
m (1 is added at each state
along each pathway C A
ji corresponds
to the average number of transitions that would have to be performed
by the straightforward algorithm before exiting the set A at state j. As
expected, ¯ℓA
ji can be very large for a trapped dynamical system, which
accounts for the efﬁciency of the present algorithm. Since the approach
is exact, there is, however, no a priori requirement on the trapping con-
dition of the states of A and the algorithm can be used continuously.

P

(cid:3)

Similarly, the time average of any physical quantity yi –like the
pseudoknot proportion of an RNA molecule– can be calculated by
introducing the appropriate time weighted matrix ˜P A{yt}. For in-
stance, the time average energy ¯EA
ji over all pathways between any two
ji {t}, where ˜P A
ji {Et}/ ˜P A
ji = ˜P A
states i and j of A is, ¯EA
ji {Et} =
m plk

C
.
m:j←i
The actual calculation of the probability and path average matrices
(cid:3)
P
P C and ˜P C over a set C of N states will be performed recursively in
the next subsection. As an intermediate step, we ﬁrst consider hereafter
the unidirectional connection between two disjoint sets A and B.

m Ehth

(cid:2)(cid:0)P

(cid:1) Q

C

C

A

A

A

Let us hence introduce the transfer matrix T BA from set A to set B
deﬁned as T BA
ji = pji, where pji is the probability to make a transition
from state i of A to state j of B (T BA
ji = 0 if i and j are not connected).
We will assume that A has n states and B m states and that their prob-
ability and path average matrices P A, ˜P A, P B and ˜P B are known.
Starting at state i of A, we ﬁnd that the probability to exit on j of B
after crossing once and only once from A to B is, peB
j (P BT BAP A)ji,
where we have used matrix notations. Let us consider a particular path
from i in A to j in B crossing once and only once from A to B, with

statistical weight
pba
erage time to exit somewhere from the union of A and B is,

. Its contribution to the av-

A pl′k′

B plk

B

(cid:0)Q
A

(cid:1)
B

(cid:0)Q

(cid:1)
A

th +

th′

plk · pba ·

pl′k′ =

(4)

(cid:18)

j←b
X
B

a←i
X

B

(cid:19)

j←b
Y
A

a←i
Y

B

A

A

th

plk

pba

pl′k′ +

plk pba

th′

pl′k′

(cid:18)

j←b
X

a←i
a←i
Y
X
or in matrix form for any “direct” pathway from A to B,

j←b
Y

j←b
Y

(cid:18)

(cid:19)

a←i
Y

(cid:19)

T [P BT BAP A] = T [P B] T BAP A + P BT BAT [P A],

(5)

which implies that applying the usual differentiation rules to any com-
bination of probability matrices yields the correct combined path av-
erage matrices (deﬁning T [T BA]ij = 0 for all i and j). Note, this
out-of-equilibrium calculation of path average quantities is reminiscent
of the usual equilibrium calculation of thermal averages through differ-
entiation of an appropriate Partition Function. Indeed, the probability
matrices introduced here are “partition functions” over all pathways
within a set of reference states.

The O(n2) algorithm. With this result in mind, we can now return
to the calculation of the probability and path average matrices P C and
˜P C for the union C of two disjoint sets A and B.

Deﬁning P Ab = P AT AB and P Ba = P BT BA, we readily obtain
the probability matrix P C as an inﬁnite summation over all possible
pathway loops between the sets A and B (I is the identity matrix),

P C =

QAA QAB
QBA QBB

, with

(cid:18)
I +P AbP Ba +(P AbP Ba)

(cid:19)

2

+· · ·

P A = LAP A

QAA =
QBA = P BaLAP A
(cid:2)
QBB =
QAB = P AbLBP B
(cid:2)

I +P BaP Ab +(P BaP Ab)

P B = LBP B

2

(cid:3)
+· · ·

(cid:3)

where LA = [I − P AbP Ba]−1 and LB = [I − P BaP Ab]−1.

Deﬁning also ˜P Ab = ˜P AT AB and ˜P Ba = ˜P BT BA, we ﬁnally
obtain the path average matrix ˜P C from simple “differentiation” of the
“partition function” P C , Eqs.(6),

3

(6)

(7)

˜P C =

˜QAA ˜QAB
˜QBA ˜QBB

, with

(cid:18)

(cid:19)
˜QAA = ˜LAP A + LA ˜P A
˜QBA = ˜P BaLAP A + P Ba ˜LAP A + P BaLA ˜P A
˜QBB = ˜LBP B + LB ˜P B
˜QAB = ˜P AbLBP B + P Ab ˜LBP B + P AbLB ˜P B
where, ˜LA = LA
˜LB = LB

˜P AbP Ba + P Ab ˜P Ba
˜P BaP Bb + P Ba ˜P Ab
(cid:1)

LA
LB

and

(cid:0)

(cid:1)

(cid:0)

Eqs.(6) and (7) are valid for any sizes n and m of A and B. Hence P C
and ˜P C can be calculated recursively starting from N isolated states
and 2N 1 × 1 matrices P i = [1] and ˜P i{x} = [xi], with i = 1, N ,
where xi is the value of the feature of interest in state i. Clustering
those states 2 by 2, then 4 by 4, etc..., using Eqs.(6) and (7) ﬁnally
yields P C and ˜P C in O(N 3) operations (i.e., by matrix inversions and
multiplications). However, instead of recalculating everything back re-
cursively from scratch each time the set of reference states is modiﬁed,
it turns out to be much more efﬁcient to update it continuously each
time a single state is added. Indeed, Eqs.(6) and (7) can be calculated

in O(n2) operations only, when m = 1 and n = N − 1, as we will
show below. Naturally, a complete update also requires the removal of
one “old” reference state each time a “new” one is added, so as to keep
a stationary number n of reference conﬁgurations. As we will see, this
removal step can also be calculated in O(n2) operations only.

The O(n2)-operation update of the reference set, which we now out-
line, relies on the fact that T AB, P Ab and ˜P Ab are n×1 matrices and
that T BA, P Ba and ˜P Ba are 1×n matrices, when m = 1 and n = N−1
(P B and LB are simple 1 × 1 matrices for a single state B). Since
we operate on vectors, the Sherman-Morrison formula[31] can then be
used to calculate the n × n matrix LA =
I − P Ab ⊗ P Ba
=
. Hence, not only LA but also
I + P Ab ⊗ P Ba/(1 − P Ab · P Ba)
any matrix product LAM , where M is a n × n matrix, can be eval-
(cid:2)
uated in O(n2) operations [by ﬁrst calculating P BaM followed by
P Ab ⊗ (P BaM )]. Noticing that the same reasoning applies for the
n×n matrices ˜P Ab ⊗ P Ba and P Ab ⊗ ˜P Ba provides a simple scheme
to add a single reference state to A and obtain matrices P C and ˜P C in
O(n2) operations using Eqs.(6) and (7).

−1

(cid:3)

(cid:2)

(cid:3)

In order to achieve the reverse modiﬁcation consisting in remov-
ing one state B from the reference set C, it is useful to ﬁrst imag-
ine that the original P C and ˜P C were obtained by the addition of
the single state B to the n-conﬁguration set A, as given by Eqs.(6)
Identifying row QBA, column QAB and their intersection
and (7).
QBB corresponding to the single state B readily yields the vectors
P Ab = QAB/QBB, P Ba = T BA (as P B = [1]) and, hence, the
n×n matrix [LA]−1 = I − P Ab ⊗ P Ba = I − (QAB ⊗ T BA)/QBB.
This gives the following relations between the known LA, T AB, T BA,
QAA, QBB, QBA, QAB, ˜P B and ˜QAA, and the unknown P A and ˜P A,

QAA = LAP A,

˜QAA = LA

˜P A

I + T AB ⊗ QBA

+

˜P B
QBB QAB ⊗ QBA

i

(cid:1)

h

(cid:0)

which eventually provides P A and ˜P A using the Sherman-Morrison
formula[31] to invert I + T AB ⊗ QBA,

P A = [LA]−1

QAA =

I −

˜P A =

I −

(cid:16)
QAB ⊗ T BA
QBB
(cid:17)
T AB ⊗ QBA
1 − T AB · QBA

(cid:17)

I −

h(cid:16)

(cid:16)

QAB ⊗ T BA
QBB

QAA,

˜QAA −

(cid:17)
˜P B
QBB QAB ⊗ QBA

(8)

(9)

×

i

Hence, the single state B can be removed from the set of reference C
in O(n2) operations to yield the updated probability and path average
matrices P A and ˜P A.

Note, however, that this continuous updating procedure, using alter-
natively Eqs.(6,7) and Eqs.(8,9) in succession, is expected to become
numerically unstable after too many updates of the reference set. For
1 ≤ n ≤ 300, we have usually found that the small numerical drifts [as
ji − 1)2 ≃ 0] can simply be re-
j peA
measured e.g. by ǫ =
set every nth update by recalculating matrices P A and ˜P A recursively
from n isolated states in O(n3) operations, so as to keep the overall
O(n2)-operation count per update of the reference set.

j P A

A
i (

P

P

A

Another important issue is the choice of the state to be removed from
the updated reference set. Although this choice is in principle arbitrary,
the beneﬁt of the algorithm strongly hinges on it (for instance removing
one of the most statistically visited reference states usually ruins the
efﬁciency of the method). We have found that a “good choice” is often
the state j⋆ with the lowest “exit frequency” from the current state i
[i.e., 1/¯tA
ji)], but other choices may sometimes prove
more appropriate.

j⋆ i = minA

j (1/¯tA

4

A

6

10

p
u
−
d
e
e
p
s
 
 

m
h
t
i
r
o
g
a
 
 
t
e
N

l

5

10

4

10

3

10

2

10

1

10

10 0

i

ii

iii

iv

v

B

4%

i

n
o
i
t
u
b
i
r
t
s
d
 
 
p
u
−
d
e
e
p
s
 
 
t
e
N

3%

2%

1%

0%

1

10
Number  of  reference  states

100

10 0

10 1

10 2

10 3

Net  algorithm  speed−up

FIG. 3: A: Expected (grey lines) and actual (black lines) speed-up of
the approach with respect to the straightforward algorithm (see main
text).
i: Bistable molecule in Fig 4C (with a combinatorial structure
space of 37 possible helices); ii: 67-nt-long molecule with reverse se-
quence of the bistable molecule in Fig 4C (38 possible helices). The
O(n2) algorithm becomes unstable above 40 reference states in this
case (see main text); iii: Hepatitis delta virus ribozyme, Fig 4B (84
possible helices); iv: average speed-up for random 100-nt-long RNA
sequences with 50% G+C content. v: Group I intron ribozyme, Fig 4A
(894 possible helices). B: Net speed-up distribution amongst random
100-nt-long RNA sequences with 50% G+C content (iv on Fig 3A) for
a cluster of 40 reference states.

Results

Performance of the ECS algorithm. Before applying the ECS algo-
rithm to investigate the prevalence of pseudoknots in RNA structures,
we ﬁrst focus on the efﬁcacy of the approach by studying the net speed-
up of the ECS algorithm with respect to the straightforward algorithm.
As illustrated on Fig 3 for a few natural and artiﬁcial sequences, there
is an actual 101 to 105-fold increase of the ratio “simulated-time over
CPU-time” between ECS and straightforward algorithms (black lines)
for RNA shorter than about 150 nt, Fig 3. This improvement runs par-
allel to the expected speed-up (grey lines) as predicted by ¯ℓA
ji, Eq.(3),
as long as the number n of reference states is not too large (typically
n ≤ 50 here), so that the O(n2) update routines do not signiﬁcantly
increase the operation count as compared to the straightforward algo-
rithm. Hence, the ECS algorithm is most efﬁcient for small trapped
systems (when the dynamics can be appropriately coarse-grained), al-
though a several-fold speed-up can still be expected with somewhat
larger systems, such as the 394-nt-long Group I intron pictured in
Fig 4A.

Alternatively, using this exact approach may also provide a con-
trolled scheme to obtain approximate coarse-grained dynamics for
larger systems. The C routines of the ECS algorithm are freely available
upon request.

Pseudoknot prediction and prevalence in RNA structures. In the
context of RNA folding dynamics, the present approach can be used
to evaluate time averages for a variety of physical features of interest,
such as the free energy along the folding paths, the fraction of time par-
ticular helices are formed, the extension of an RNA molecule unfold-
ing under mechanical force[32], the end-to-end distance of a nascent
RNA molecule during transcription, etc. Here, we report results on
the prediction of pseudoknot prevalence in RNA structures. They have
been obtained performing several thousands of stochastic RNA fold-
ing simulations including pseudoknots. As explained in Theory and
Methods, the structural constraints between pseudoknot helices and un-

A

B

P9.1a

P9.1

P13

P6b

P3

P8

P6a

P7 P9

C

A

A

G

C

A
G

G

A

G

C
C

G

U

C

G
AGCA
A
G GG

5’
5 ’
3 ’
3’
CCC

A

3 ’

5 ’

P2

U
C

C

U

C

C
UA

A
G
G

U

A

G

C

A

C

G

A

G

G

G

G

G

A

C

C

C

C

U

G

C
C

A

U

G
G

A

A

A

P9.2

3’
3 ’
C
C
C

5’
5 ’
G
G
G

A

C

C
G
U
C
C

C

C
C
U
G
CC

A

A

A

A

GG
U
A
G
G
G
G
G
A
U
G

G

A

A

A

G
C
A
G
G

G
G
A
C
G

A

A

G

C
A
U
C
C
U
C
C
U
A
C

G

A

A

P5b

P5a

P4

P3

P2.1

U

C

C

P13

C

U
C C A

C
C
G

P2

C

U

G

G

AU

C
G
G
C
C
G
G

C

C

A
3 ’
3’

5 ’
5’

C
A
G
G
G
U

A

A

P2

G

C

U

P3

P1

G
G
C
G
C
C
G
G
C
U G

G

A

G

C

A

GGCG
U
A
A
U

P4

C
A
U
U
C
C
G
A
G
G
G
G
A

G
G
C
U
C
C
C
C
U

C

G

C

FIG. 4: RNA structure prediction with the ECS algorithm. Structures
are drawn using the “RNAMovies” software[33] adapted to visualize
predicted pseudoknots. A 394-base long Tetrahymena Group I intron:
the lowest free-energy structure found shares 80% base pair identity
with the known 3D structure, including the two main pseudoknots, P3
and P13[11, 12, 14, 15, 16, 17]. B 88-base long hepatitis delta virus
ribozyme: predicted structure shares 93% base pair identity with the
known 3D structure, including the main pseudoknot P2[21] (but not the
2-base pair long P1.1[13]); C The two structures of a bistable, 67-nt-
long artiﬁcial RNA molecule.

paired connecting regions are modeled using elementary polymer the-
ory (Fig 1C,[21]) and added to the traditional base pair stacking inter-
actions and simple loops’ contributions[7].

We found that many pseudoknots can effectively be predicted with
such a coarse-grained kinetic approach probing seconds to minutes
folding time scales. No optimum “ﬁnal” structure is actually predicted,
as such, in this folding kinetic approach. Instead, low free-energy struc-
tures are repeatedly visited, as helices stochastically form and break.
Fig 4A represents the lowest free-energy secondary structure found for
394-nt-long Tetrahymena Group I intron, which shows 80% base pair
identity with the known 3D structure, including the two main pseu-
doknots, P3 and P13[11, 12, 14, 15, 16, 17]. A number of smaller
known structures with pseudoknots are also compared to the lowest
free-energy structures found with similar stochastic RNA folding sim-
ulations in[21]. In addition, to facilitate the study of folding dynamics
for speciﬁc RNA sequences, we have set up an online RNA folding
server including pseudoknots at URL http://kinefold.u-strasbg.fr/.

Beyond speciﬁc sequence predictions, we also investigated the gen-
eral prevalence of pseudoknots by studying the “typical” proportion of
pseudoknots in both random RNA sequences of increasing G+C con-
tent (Fig 5) and in 150-nt-long mRNA fragments of the Escherichia

5

0%

25%

G

+

C

 

 

c

o

n

t

e

n

t

50%

70%

0%

25%

G

+

C

 

 

c

o

n

t

e

n

t

50%

70%

Pseudoknot  proportion

Ex:

4
12

= 33%

0%

0%

10%

20%

30%

40%

20%

10%

0%

n
o

i
t
r
o
p
o
r
p

 
 
t

o
n
k
−
P

0%

25%

50%

70%

G+C  content

0%

0%

10%

20%
150 bases long rightfix

30%

40%

known
intron  Group I
predicted
known HDV  ribozyme
predicted

10%

5%

10%

5%

10%

5%

A

s
e
r
u
t
c
u
r
t
s
 
 

n
o
i
t
u
b
i
r
t
s
i
d

 
 
t
o
n
k
o
d
u
e
s
P

A
N
R

 
 
t
s
g
n
o
m
a

B

s
e
r
u
t
c
u
r
t
s
 
 

n
o
i
t
u
b
i
r
t
s
i
d

 
 
t
o
n
k
o
d
u
e
s
P

A
N
R

 
 
t
s
g
n
o
m
a

C

s
e
r
u
t
c
u
r
t
s
 
 

n
o
i
t
u
b
i
r
t
s
i
d

 
 
t
o
n
k
o
d
u
e
s
P

A
N
R

 
 
t
s
g
n
o
m
a

0%

0%

10%
20%
Pseudoknot  proportion

30%

0%

25%

G

+

C

 

 

c

o

n

t

e

n

t

50%

70%

40%

FIG. 5: Distribution of pseudoknot proportion amongst formed base
pairs for 50-nt-long (A), 100-nt-long (B), and 150-nt-long (C) random
sequences of increasing G+C content. Projected lines correspond to
the average pseudoknot proportion in 50 (blue), 100 (red), and 150-
nt-long (green) random sequences. All three average curves are dis-
played in inset on Fig 5B. Open (and ﬁlled) symbols on Fig 5C cor-
respond to known (and predicted) pseudoknot proportions for Tetrahy-
mena group I intron, Fig 4A (triangles) and Hepatitis delta virus ri-
bozyme, Fig 4B[13, 21] (circles).

coli and Saccharomyces cerevisiae genomes. The statistical analysis
was done as follows: for each random and genomic sequence set, 100
to 1000 sequences were sampled and 3 independent folding trajectories
were simulated for each of them, using the ECS algorithm. A minimum
duration for each trajectory was determined so that more than 80-90%
of sequences visit the same free-energy minimum structures along their
3 independent trajectories. The time average proportion of pseudoknots
was then evaluated, considering this fraction of sequences having likely
reached equilibrium (including the 10-20% of still unrelaxed sequences
does not signiﬁcantly affect global statistics). In practice, slow fold-
ing relaxation limits extensive folding statistics to sequences up to 150
bases and 75% G+C content, although individual folding pathways can
still be studied for molecules up to 250 to 400 bases depending on their

speciﬁc G+C contents.

[7] Mathews, D.H., Sabina, J., Zuker, M. & Turner, D.H. (1999) J.

6

Mol. Biol. 288, 911-940.

[8] Higgs, P.G. (2000) Q. Rev. Biophys. 33, 199-253, and references

[9] Pleij, C.W.A., Rietveld, K., & Bosch, L. (1985) Nucleic Acids Res.

therein.

13, 1717-1731.

Biol. 3, 993-1009.

432-438.

395, 567-574.

[10] Tinoco, I., Jr. (1997) Nucleic Acids Symp Ser. 36, 49-51.
[11] Lehnert, V., Jaeger, L., Michel, F. & Westhof, E. (1996) Chem.

[12] Zarrinkar, P.P. & Williamson, J.R. (1996) Nature Struc. Biol. 3,

[13] Ferre-D’Amare, A.R., Zhou, K. & Doudna, J.A. (1998) Nature

[14] Sclavi, B., Sullivan, M., Chance, M.R., Brenowitz, M. & Wood-

son, S.A. (1998) Science 279, 1940-1943.

[15] Treiber, D.K., Root, M.S., Zarrinkar, P.P. & Williamson, J.R.

(1998) Science 279, 1940-1943.

[16] Pan, J. & Woodson, S.A. (1999) J. Mol. Biol. 294, 955-965.
[17] Russell, R., Millet, I.S., Doniach, S. & Herschlag, D. (2000) Na-

[18] Giedroc, D.P., Theimer, C.A. & Nixon, P.L. (2000) J. Mol. Biol.

ture Struc. Biol. 7, 367-370.

298, 167-185. Review.

[19] Gultyaev, A.P., van Batenburg, E. & Pleij, C.W.A. (1999) RNA 5,

609-617.

6515-6520.

[20] Rivas, E. & Eddy, S.R. (1999) J. Mol. Biol. 285, 2053-2068.
[21] Isambert, H. & Siggia, E. (2000) Proc. Natl. Acad. Sci. USA 97,

[22] Mironov, A.A., Dyakonova, L.P. & Kister, A.E. (1985) J. Biomol.

Struct. Dynam. 2, 953-962.

[23] Frenkel, D. & Smit, B. (1996) Understanding Molecular Simula-

tion (Academic Press) and references therein.

[24] Bortz, A.B., Kalos, M.H. & Lebowitz, J.L. (1975) J. Comput.

Phys. 17, 10.

[25] Krauth, W. & M´ezard, M. (1995) Z. Phys. B 97, 127.
[26] Voter, A.F. (1998) Phys. Rev. B 57, R13985-R13988.
[27] Shirts, M.R. & Pande, V.S. (2001) Phys. Rev. Lett. 86, 4983-4987.
[28] P¨orschke, D. (1974) Biophysical Chemistry 1, 381-386.
[29] Krauth, W. & Pluchery, O. (1994) J. Phys. A; Math. Gen. 27,

L715.

[30] In principle, the approach can be adapted to stochastically drawn
lifetimes from known distributions P i(t) with mean lifetime ti.
This effectively yields a O(n3) ECS algorithm in this case.
[31] Press, W.H., Teukolsky, S.A., Veterling, W.T. & Flannery, B.P.
(1992) Numerical recipes, 2nd Ed. (University Press, Cambridge).
J-F.,
Xayaphoummine, A., Isambert, H. and Chatenay, D. (2003)
http://arxiv.org/physics/0309063

S., Marchal,

[32] Harlepp,

T., Robert,

L´eger,

J.,

[33] Evers, D. & Giegerich, R. (1999) Bioinformatics 15, 32-37.

The results for 50-nt-long (Fig 5A), 100-nt-long (Fig 5B), and 150-
nt-long (Fig 5C) random sequences show, ﬁrst, a broad distribution in
pseudoknot proportion from a few percents of base pairs to more than
30% for some G+C rich random sequences. Such a range is in fact
compatible with the various pseudoknot contents observed in different
known structures (e.g. see triangles and circles in Fig 5C). Second,
the average proportion of pseudoknots (projected curves and inset in
Fig 5B) slowly increases with G+C content, since stronger (G+C rich)
helices are more likely to compensate for the additional entropic cost
of forming pseudoknots. Third, and perhaps more surprisingly, this
average proportion of pseudoknots appears roughly independent of se-
quence length except for very short sequences with low G+C content
(inset in Fig 5B), in contradiction with a naive combinatorial argument.
Fourth, we found that the cooperativity of secondary structure rear-
rangements ampliﬁes the structural consequences of pseudoknot for-
mation; typically, a structure with 10 helices including 1 pseudoknot
conserves not 9 but only 7 to 8 of its initial helices (while 2 to 3 new
nested helices commitantly form) if the single pseudoknot is excluded
from the structure prediction. Thus, neglecting pseudoknots usually in-
duces extended structural modiﬁcations beyond the sole pseudoknots
themselves.

We compared these results with the folding of 150-nt-long sections
of mRNAs from the genomes of Escherichia coli (50% G+C con-
tent) and Saccharomyces cerevisiae (yeast, 40% G+C content). These
genomes exhibit similar broad distributions of pseudoknots, despites
small differences due to G+C content inhomogeneity and codon bias
usage; pseudoknot proportions (mean ± std-dev.): E. coli, 15.5±6.5%
(versus 16.5±7.9% for 50% G+C rich random sequences); yeast,
14±6.6% (versus 15±7.3% for 40% G+C rich random sequences);
Hence, genomic sequences appear to have maintained a large poten-
tial for modulating the presence or absence of pseudoknots in their 3D
structures.

Overall, these results suggest that neglecting pseudoknots in RNA
structure predictions is probably a stronger impediment than the small
intrinsic inaccuracy of stacking energy parameters. In practice, combin-
ing simple structural models (Fig 1C) and exactly clustered stochastic
(ECS) simulations provides an effective approach to predict pseudo-
knots in RNA structures.

Acknowledgements

We thank J. Baschenagel, D. Evers, D. Gautheret, R. Giegerich,
W. Krauth, M. M´ezard, R. Penner, E. Siggia, N. Socci and E. Westhof
for discussions and suggestions. Supported by ACI grants n◦ PC25-01
and 2029 from Minist`ere de la Recherche, France. H.I. would also like
to acknowledge a stimulating two-month visit at the Institute for The-
oretical Physics, UCSB, Santa Barbara, where the ideas for this work
originated.

[1] Waterman, M.S. (1978) Studies in Found. and Comb., Adv. in

[2] Nussinov, R., Pieczenik, G., Griggs, J.R. & Kleitman D.J. (1978)

[3] Nussinov, R., & Jacobson, A.B. (1980) Proc. Natl. Acad. Sci. USA

Math. Suppl. Stu. 1, 167-212.

SIAM J. Appl. Math. 35, 68-82.

77, 7826-7830.

[4] Zuker, M. & Stiegler, P. (1981) Nucleic Acids Res. 9, 133-148,

and http://bioinfo.math.rpi.edu/∼mfold/

[5] McCaskill, J.S. (1990) Biopolymers 29, 1105-1119.
[6] Hofacker, I.L. , Fontana, W., Stadler, P.F., Bonhoeffer, L.S.,
Tacker M. & Schuster, P. (1994) Monatsh. Chem. 125, 167-188,
and http://www.tbi.univie.ac.at/

