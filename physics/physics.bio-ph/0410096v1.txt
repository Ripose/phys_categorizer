4
0
0
2
 
t
c
O
 
4
1
 
 
]
h
p
-
o
i
b
.
s
c
i
s
y
h
p
[
 
 
1
v
6
9
0
0
1
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Nonlinear Software Sensor for Monitoring Genetic Regulation

Processes with Noise and Modeling Errors

V. Ibarra-Junquera1∗, L.A. Torres1†, H. C. Rosu1‡, G. Arg¨uello1§,

and

J. Collado-Vides2¶

1 Potosinian Institute of Science and Technology,

Apdo Postal 3-74 Tangamanga, 78231 San Luis Potos´ı, Mexico

2 Program of Computational Genomics,

Centro de Investigaci´on sobre Fijaci´on de Nitrogeno, UNAM,

Apdo Postal 565-A Cuernavaca, Morelos 62100, M´exico

(Dated: February 20, 2014)

∗ E-mail: vrani@ipicyt.edu.mx, Fax: +52 444 834 2010
† E-mail: ltorres@ipicyt.edu.mx
‡ E-mail: hcr@ipicyt.edu.mx
§ E-mail: garguel@ipicyt.edu.mx
¶ E-mail: collado@cifn.unam.mx

1

Abstract

Nonlinear control techniques by means of a software sensor that are commonly used in chemical

engineering could be also applied to genetic regulation processes. We provide here a realistic

formulation of this procedure by introducing an additive white Gaussian noise, which is usually

found in experimental data. Besides, we include model errors, meaning that we assume we do not

know the nonlinear regulation function of the process. In order to illustrate this procedure, we

employ the Goodwin dynamics of the concentrations (1963) in the simple form recently discussed

by De Jong (2002), which involves the dynamics of the mRNA a, given protein A, and metabolite

K concentrations. However instead of considering their full dynamics, we use only the data of

metabolite K and a designed software sensor. We also show, more generally, that it is possible to

rebuild the complete set of n concentrations despite the uncertainties in the regulation function

and the perturbation due to the additive white Gaussian noise.

PACS numbers: 05.45.-a, 87.10.+e

2

I.

INTRODUCTION

Gene expression is a fundamental biochemical phenomenon that can be thought of as a

complex dynamical process with intricate regulation networks all along its stages leading

to the synthesis of proteins [2]. At the present time, its best studied regulation feature

is the DNA transcription. Nevertheless, the expression of a gene should be also regulated

during the RNA processing and transport, RNA translation, and also in the posttranslational

modiﬁcation of proteins. Control engineering is a key discipline with tremendous potential to

simulate and manipulate the processes of gene expression. In general, the control terminology

and its mathematical methods are poorly known for the majority of biologists. We mention

here that the basic concept of state of a system or process could have many diﬀerent empirical

meanings in biology. For the particular case of gene expression, the meaning of a state is

essentially that of a concentration. The typical problem in control engineering that appears

to be tremendously useful in biology is the reconstruction of some speciﬁc regulated states

under conditions of limited information. Moreover, equally interesting is the noise ﬁltering

problem. Both issues will make the subject of our study in the following.

Taking into account the fact that rarely one can have a sensor on every state variable, and

some form of reconstruction from the available measured output data is needed, a software
can be constructed using the mathematical model of the process to obtain an estimate ˆX of

the true state X. This estimate can then be used as a substitute for the unknown state X.

Ever since the original work by Luenberger [1], the use of state observers has proven useful

in process monitoring and for many other tasks. We will call herein as observer an algorithm

capable of giving a reasonable estimation of the unmeasured variables of a process. For this

reason, it is widely used in control, estimation, and other engineering applications.

Since almost all observer designs are heavily based on mathematical models, the main

drawback is precisely the dependence on the accuracy of the latter with respect to the

naturally occurring processes. Details, such as model uncertainties and noise could aﬀect

the performance of the observers. Taking into account these details is always an important

matter and should be treated carefully. Thus, in this work we will pay special attention

to estimating unknown states of the gene expression process under the worst possible case,

which corresponds to noisy data and modelling errors.

3

II. MATHEMATICAL MODEL FOR GENE REGULATION

In this section, we use the very ﬁrst kinetic model of a genetic regulation process developed

by Goodwin in 1963 [4], generalized by Tyson in 1978 [5] and most recently explained by

De Jong [6]. The model in its most general form is given by the following set of equations:

˙X1 = K1nr (Xn) − γ1X1 ,

˙Xi = Ki,i−1Xi−1 − γiXi ,

2 < i < n .

(1)

(2)

The parameters K1n, K21, . . . , Kn,n−1 are all strictly positive and represent production con-

stants, whereas γ1, . . . , γn are strictly positive degradation constants. These rate equations

express a balance between the number of molecules appearing and disappearing per unit

time. In the case of X1, the ﬁrst term is the production term involving a nonlinear nondis-

sipative regulation function. We take this as an unknown function. On the other hand,

the concentration Xi, 2 < i ≤ n, increases linearly with Xi−1. As is well known, in order

to express the fact that the metabolic product is a co-repressor of the gene, the regulation

function should be a decreasing function for which most of the authors use the Hill sigmoid,

the Heaviside and the logoid curves. The decrease of the concentrations through degrada-

tion, diﬀusion, and growth dilution is taken proportional to the concentrations themselves.

For further details of this regulation model we recommend the reader the review of De Jong

[6].

Additive
Noise

X3

Original Process

Metabolite K
(unﬁltered)

Protein A

mRNA

Software
Sensor Metabolite K

(ﬁltered)

ˆX2
ˆX1

4

FIG. 1: Schematic representation of the software sensor, where the output of the system is the

input of the software sensor and the outputs of the latter are the rebuilt concentrations.

III. NONLINEAR SOFTWARE SENSOR

Numerous attempts have been made to develop nonlinear observer design methods. One

could mention the industrially popular extended Kalman ﬁlter, whose design is based on a

local linearization of the system around a reference trajectory, restricting the validity of the

approach to a small region in the state space [3, 7]. The ﬁrst systematic approach for the

development of a theory of nonlinear observers was proposed some time ago by Krener and

Isidori [8]. In further works, nonlinear transformations of the coordinates have also been

employed to put the considered nonlinear sytem in a suitable “observer canonical form”, in

which the observer design problem may be easily solved [9, 10, 11]. Nevertheless, it is well

known that classical proportional observers tend to amplify the noise of on-line measure-

ments, which can lead to the degradation of the observer performance. In order to avoid

this drawback, this observer algorithm is based on the works of Aguilar et al.

[12] and

[13], because the integral observer proposed provides robustness against noisy measurement

and uncertainties. We show that this new structure retains all of the characteristics of the

popular (the traditional high gain) state observers of the classical literature and further-

more provides additional robustness and noise ﬁltering and thus can result in a signiﬁcant

improvement of the monitoring performances of the genetic regulation process.

In this section, we present the design of a nonlinear software sensor in which one Xj, for

j ∈ (1, ..., n), is the naturally measured state (the most easy to measure). Therefore, it

seems logical to take Xj as the output of the system

y = h(X) = Xj .

(3)

Now, considering the constant K1n and the function r (Xn) as unknown, we group them

together in a function ℑ(X).

In addition, we consider that the output function h(X) is

contaminated with a Gaussian noise. In such a case, the model given by the aforementioned

Eqs. (1) and (2), acquires the form:

where ¯ℑ(X) is a n×1 vector whose ﬁrst entry is ℑ(X) and all the rest are zero, ℓ(X) is also a
n × 1 vector of the form [−γ1X1, Ki,i−1Xi−1 − γiXi]T , δ is an additive bounded measurement
noise, and X ∈ Rn. The system is assumed to lie in a “physical subset” Ω ⊂ Rn.

˙X = ¯ℑ(X) + ℓ(X)

y = CX + δ

Γ : 




5

Then, the task of designing an observer for the system Γ to estimate the vector of states X,
despite of the unknown part of the nonlinear vector ¯ℑ(X) (which should be also estimated)

and considering that y is measured on-line and that the system is observable.

In order to provide the observer with robust properties against disturbances, Aguilar

et al considered only an integral type contribution of the measured error. Moreover, an

uncertainty estimator is introduced in the methodology of observation with the purpose to
estimate the unknown components of the nonlinear vector ¯ℑ(X). As a result, they propose

the following representation of the system

that is, in the case of the model given by Eqs. (1) and (2)

Ξ :

˙X0 = CX + δ
˙X = ¯ℑ + ℓ(X)
˙¯ℑ = Θ(X)

y0 = X0






˙X0 = Xj + δ

˙X1 = Xn+2 − γ1X1

˙Xi = Ki,iXi−1 − γiXi ,

1 < i < n ,

˙Xn+2 = Ω(X)

y = X0 .

At this point, X ∈ Rn+2, and furthermore the following equation is generated:

˙X = AX + B + Eδ ,

where

A1,j = 1, A2,2 = −γ1, A2,n+2 = 1, A3,2 = K2,2, A3,3 = −γ2,

Ai−1,i = Ki,i, Ai,i = −γi, An,n−1 = Kn,n, An,n = −γn

(4)

and the rest of the elements of A are zero, B = [0, . . . , 0, Ω(X)]T and E = [1, 0, . . . , 0]T .

We will need now the following result proven in [12].

6

An asymptotic-type observer of the system Ξ is given as follows:

˙ˆX0 = C ˆX + θ1
y0 − C ˆX
(cid:16)
˙ˆX = ˆ¯ℑ + ℓ( ˆX) + θ2
˙ˆ¯ℑ = θ3

(cid:17)
y0 − C ˆX

(cid:16)
y0 − C ˆX
(cid:16)

(cid:17)

(cid:17)

ˆy0 = ˆX0 ,

ˆΞ :






θ = S−1
θ C T ,
Si,j
ϑi+j+1 (cid:19)

(cid:18)

,

Sϑ =

where the high gain vector θ of the observer is given by:

where Sθ should be a positive solution of the algebraic Riccati equation

A +

Sθ (cid:18)

+

A +

(cid:19)

(cid:18)

ϑ
2

I

ϑ
2

I

(cid:19)

Sθ = C T C .

Notice that a dynamic extension is generated by considering the measured output of the

original system as a new additional dynamics with the aim to ﬁlter the noise. This procedure

eliminates most of the noise in the new output of the system. In [17] it has been shown that

such an observer has a exponential-type decay for any initial conditions.

A. Particular Case

For gene regulation processes, which are of interest to us here, we merely apply the

aforewritten system of equations corresponding to the asymptotic observer ˆΞ

(5)

(6)

(7)

(8)

The values of the parameters given in Table 1, not necessarily being the experimental values,

are however consistent with the requirements of the model.

Using the structure given by the equations of ˆΞ, the explicit form of the software sensor

˙X1 = K1,3r (X) − γ1X1

˙X2 = K2,1X1 − γ2X2

˙X3 = K3,2X2 − γ3X3 .

7

is:

˙ˆX0 = ˆX3 + θ1(y0 − ˆX3)
˙ˆX1 = X4 − γ1X1 + θ2(y0 − ˆy0)
˙ˆX2 = K2,1X1 − γ2X2 + θ3(y0 − ˆy0)
˙ˆX3 = K3,2X2 − γ3X3 + θ4(y0 − ˆy0)
˙ˆX4 = θ5(y0 − ˆX3) ,

ˆy0 = ˆX0 .

Notice that this dynamical structure does not involve the regulation function.

We can solve Eq. (5) and for numerical purposes we choose ϑ = 2.5 and the standard

deviation of the Gaussian noise of 0.001. Fig. (3) shows the numerical simulation that

illustrates the ﬁltering eﬀect of the software sensor over the noisy measured state. On the

other hand, Fig. (4) shows the results of a numerical simulation, where the solid lines stand

for the true states and the dotted lines indicate the estimates, respectively.

gene a

CCK

active repressor

mRNA

C

C

inactive repressor

A enzyme

K

AF

F

FIG. 2: The genetic regulatory system given by Eqs. (6) - (8) involving end-product inhibition

according to De Jong [6]. A is an enzyme and C a repressor protein, while K and F are metabolites.

The mathematical model, as used by De Jong and by us, takes into account experiments where

only metabolite K is measured.

8

FIG. 3: The numerical simulation – solid lines represent the ﬁltered states and the dotted lines

represent the noisy measured state for the evolution in time of metabolite K concentration.

time

)
K
e
t
i
l
o
b
a
t
e
m

f
o

n
o
i
t
a
r
t
n
e
c
n
o
C
(

3

X

Symbol

Meaning

TABLE I: Parameters of the model

production constant of mRNA

production constant of protein A

production constant of metabolite K 1.0

degradation constant of mRNA

degradation constant of protein A

degradation constant of metabolite K 1.0

Hill’s threshold parameter

Value

0.001

1.0

0.1

1.0

1.0

K1,3

K2,1

K3,2

γ1

γ2

γ3

ϑ

IV. CONCLUSION

The simple software sensor designed here for a schematic gene regulation dynamical

process involving end-product inhibition rebuilds in an eﬀective way the unmeasured con-

centrations of mRNA and the protein A. Thus, the limitation of those experiments in which

only the metabolite K is available can be overcame by employing the simple software sensor

applied here. In addition, this type of nonlinear observer could be used as an online ﬁlter

being robust with respect to model uncertainties, i.e., neither a known regulation function

9

)
A
N
R
m

f
o

n
o
i
t
a
r
t
n
e
c
n
o
c
(

1

X

(a)

(b)

)
A
n
i
e
t
o
r
p

f
o

n
o
i
t
a
r
t
n
e
c
n
o
c
(

2

X

time

time

FIG. 4: The numerical simulation – solid lines represent the true states generated by the original

process endowed with the Hill regulatory function and dotted lines represent the estimated con-

centrations provided by the software sensor without any knowledge about the regulatory function.

Plot (a) represents the evolution of mRNA concentration in time and plot (b) the variation of the

concentration of protein A in time.

nor the parameter K1,3 is required.

[1] D. Luenberger, IEEE Trans. Autom. Control 11, 190 (1966).

[2] B. Lewin, Genes VII, (Oxford Univ. Press, Oxford, 1999).

[3] G. Stephanopoulos, Chemical Process Control, (Prentice Hall, 1984).

[4] B.C. Goodwin, Temporal Oscillations in Cells, (Academic Press, New York, 1963)

[5] J.J. Tyson, Prog. Theor. Biology 5, 1 (1978).

[6] H. De Jong, J. Comp. Biol. 9, 67 (2002).

[7] W.A. Wolovich, Automatic Control Systems, (Saunders College Publishing, USA, 1994).

[8] A.J. Krener and A. Isidori, Systems Control Lett. 3, 47 (1983).

[9] J.P. Gauthier, H. Hammouri, and S. Othaman, IEEE Trans. Aut. Ctrl. 37, 875 (1992).

[10] J.P. Gauthier and G. Bornard, IEEE Trans. Aut. Ctrl. AC-26, 922 (1981).

[11] J.P. Gauthier and I.A.K. Kupka, Siam J. Control and Optimization 32, 975 (1994).

[12] R. Aguilar, R. Mart´ınez-Guerra, and R. Maya-Yescas, IEE Proc.-Contol Theory Appl. 150,

240 (2003).

[13] R. Aguilar-L´opez, Chem. Eng. J.,93, 113 (2003).

[14] R. Hermann and A.J. Krener, IEEE Trans. Aut. Ctrl. AC-22, 728 (1977).

10

[15] H. Shim, Y.I. Son, and J.H. Seo, Systems & Control Letters 41, 233 (2001).

[16] A. Isidori, Nonlinear Control Systems, 2nd ed. (Springer, N.Y., 1989).

[17] R. Mart´ınez-Guerra, R. Suarez, and J. De Le´on-Morales, Int. J. Robust Nonlinear Control

11, 373 (2001).

11

