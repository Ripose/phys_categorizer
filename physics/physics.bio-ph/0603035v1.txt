6
0
0
2
 
r
a

M
 
6
 
 
]
h
p
-
o
i
b
.
s
c
i
s
y
h
p
[
 
 
1
v
5
3
0
3
0
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

SIMULATIONS IN STATISTICAL PHYSICS

AND BIOLOGY: SOME APPLICATIONS

María del Pilar Monsiváis-Alonso

M.Sc. Thesis

Supervisors:

Dr. Román López-Sandoval

Dr. Haret-Codratian Rosu

Division of Advanced Materials
for Modern Technology
DMATM -IPICyT

San Luis Potosí, S.L.P., Mexico
January 20, 2006

INSTITUTO POTOSINO DE INVESTIGACIÓN

CIENTÍFICA Y TECNOLÓGICA, A.C.

POSGRADO EN CIENCIAS APLICADAS

SIMULATIONS IN STATISTICAL PHYSICS

AND BIOLOGY: SOME APPLICATIONS

Tesis que presenta

María del Pilar Monsiváis-Alonso

Para obtener el grado de

Maestro en Ciencias Aplicadas

En la opción de

Nanociencias y Nanotecnología

Codirectores de la Tesis:

Dr. Román López-Sandoval

Dr. Haret-Codratian Rosu Barbus

San Luis Potosí, S.L.P., 20 de Enero de 2006

Acknowledgments

First of all, I would like to thank my advisor Dr. Román López Sandoval for his dedication, guidance and
constant support during the development of this thesis. In the same spirit, I would like to thank my advisor Dr.
Haret Codratian Rosu Barbus for his suggestions.

I also want to acknowledge the PhD student Vrani Ibarra for his important collaboration referring to chapter 3
of this thesis and I am also grateful to Dr. José Luis Rodríguez, Dra. Yadira Vega and Dr. Raúl Balderas, who
read the document and provided helpful corrections.

I would like to thank in a special way to my parents, who always have been a support for me in everything,
as well as, to Jorge and all my friends, in particular José Miguel, Víctor Hugo, Andrea, Gerardo, Pedro and
Vianney.

My ﬁnal thanks go to CONACyT for the master fellowship (no. 182493) during the years 2003-2005.

THANKS ALL OF YOU!

Pily Monsiváis

iii

Contents

Acknowledgments

Abstract

Introduction

Introduction

1 Monte Carlo Simulations in Statistical Physics

. . . . . .

Ising and Potts Models . . . .

. . . . .
. . . . .
. . . . .
. . . . .

. . . . . .
. . . . . .
. . . . . .
. . . . . .

. . . . . .
1.1 Brief History of the Monte Carlo Method . . . . .
. . . . . .
. . . . .
1.2 Basics of the Monte Carlo Method . . . .
. . . . . .
1.3 Measurements Using the Monte Carlo Method . . .
1.4
. . . . . .
. . . . .
1.5 Some Monte Carlo Algorithms: Metropolis, Swendsen-Wang and Wolff . . . . . .
. . . . . .
1.6 Phase Transitions and Critical Exponents
. . . . . .
1.7 The Histogram Method . . . .
. . . . . .
1.8
. . . . . .
1.9 Monte Carlo Simulations on the Betts Lattice . . .
. . . . . .
q = 3, J < 0: Antiferromagnetic Case . . .
. . . . . .
q = 3, J > 0: Ferromagnetic Case . . . . .
. . . . . .
q = 4, J > 0: Ferromagnetic Case . . . . .
. . . . . .
q = 5, J > 0: Ferromagnetic Case . . . . .
. . . . . .
. . . . .

. . . . . .
. . . . . .
Identifying the Nature of Transitions and Finite Size Scaling .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .

1.9.1
1.9.2
1.9.3
1.9.4
1.9.5 Conclusion . . . . . .

. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .

. . . . .
. . . . .

. . . . . .

. . . . . .

2 Monte Carlo Simulations in Biology

. . . . . .
. . . . . .

. . . . . .
. . . . .
2.1 Proteins, DNA and Gene Expression . . .
. . . . . .
. . . . .
. . . . . .
2.2 DNA Microarrays .
. . . . . .
. . . . .
. . . . . .
2.3 Gene Clustering . .
. . . . . .
. . . . .
2.3.1 Hierarchical Clustering . . . . . .
. . . . . .
. . . . .
. . . . . .
2.3.2 K-Means Clustering .
. . . . . .
. . . . .
Self-Organizing Maps
2.3.3
. . . . . .
. . . . . .
. . . . .
2.3.4
Self-Organizing Tree Algorithm .
. . . . . .
. . . . .
2.3.5 Model Based Clustering . . . . .
. . . . . .
2.3.6 Quality-Based Algorithms . . . .
. . . . .
2.3.7 Adaptive Quality-Based Clustering . . . .
. . . . . .
2.3.8 Biclustering and Some Physics Related Algorithms . .

. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
2.4 Superparamagnetic Gene Clustering: Monte Carlo Simulations . . . . .
. . . . .
. . . . .

2.4.1 Detailed Description of SPC . . .
. . . . . .
2.4.2

Future Directions . . .

. . . . . .
. . . . . .

. . . . .
. . . . .

. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .

. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .

. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .

.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.

iv

iii

vi

1

1

3
4
6
8
9
10
13
16
18
21
22
25
29
32
35

36
37
38
39
41
42
42
42
43
44
45
45
46
47
48

3 Gompertz Equation

3.1 History of Gompertz Equation . . . . . .
. . . . .
. . . . .
. . . . . .
3.2 Tumour Growth Equations . .
. . . . .
. . . . .
. . . . . .
3.2.1 Exponential Growth .
. . . . .
. . . . .
3.2.2 Logistic Growth . . .
. . . . . .
. . . . .
. . . . .
3.2.3 Von Bertalanffy Growth . . . . .
. . . . .
. . . . .
. . . . .
. . . . .
3.2.4 Gompertz-Makeham Growth . . .
3.2.5 Mathematical Properties and Comparison Between Logistic and Gompertz Growth .

. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .

. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .
. . . . . .

. . . . .
. . . . .
. . . . .
. . . . .
. . . . .
. . . . .

.
.
.
.
.
.
.

Appendix A: Control Theory Fundamentals

Bibliography of Chapter 1

Bibliography of Chapter 2

Bibliography of Chapter 3

49
50
54
55
57
59
60
61

63

65

71

75

Abstract

One of the most active areas of physics in the last decades has been that of critical phenomena, and Monte Carlo
simulations have played an important role as a guide for the validation and prediction of system properties close
to the critical points. The kind of phase transitions occurring for the Betts lattice (lattice constructed removing
1/7 of the sites from the triangular lattice) have been studied before with the Potts model for the values
q = 3, ferromagnetic and antiferromagnetic regime. Here, we add up to this research line the ferromagnetic
case for q = 4 and 5. In the ﬁrst case, the critical exponents are estimated for the second order transition,
whereas for the latter case the histogram method is applied for the occurring ﬁrst order transition. Additionally,
Domany’s Monte Carlo based clustering technique mainly used to group genes similar in their expression levels
is reviewed. Finally, a control theory tool –an adaptive observer– is applied to estimate the exponent parameter
involved in the well-known Gompertz curve. By treating all these subjects our aim is to stress the importance
of cooperation between distinct disciplines in addressing the complex problems arising in biology.

vi

Introduction

“Minerals grow, plants grow and live,
animals grow, live and have feeling.”
Linnaeus, “Systema Naturae”, 1735

Monte Carlo simulations have been used for many years to study the properties of physical models, and have
also played a signiﬁcant role in statistics, biology, computer science and other ﬁelds, demonstrating its versality
and powerful approach. Furthermore, many advances in computation algorithms and computer technology
have made possible to study systems which would be impossible to examine only a few years ago. The
ﬁrst part of this thesis aims to give a brief explanation of the Monte Carlo method, a review of the principal
algorithms used, the study of phase transitions, ﬁnite size scaling theory and ﬁnally, some results obtained with
the Potts model for a recently proposed lattice named Betts or Maple Leaf lattice.

Since the discovery of the helical structure of DNA and various complete genome sequences, biology has seen
also an enormous advance. However, it seems that the only way to solve the complex problems raised in the
study of biological systems is to share the challenge with other scientific disciplines such as chemistry, physics,
and computer science. Research on cancer is one of the most important and interesting subjects in Biology.
This terrible disease has received tremendous attention in the last part of the XX century, because of the huge
amount of cases and the technological advances in analysis and medical treatment of tumours. Despite the
efforts of the international scientific community, there are many unanswered questions related to the evolution
of the cancer diseases, the causes that trigger them, the prediction of drugs and treatments effects, and the
development of an effective cure. The introduction of the Monte Carlo method into biological problems has
brought interesting results including the modeling of the structure and evolution of a epidermis cell nuclei,
reproducing cancer growth.

The second chapter reviews the clustering techniques commonly used to group genes with similar behaviour in
their expressions across various experiments, which helps in the construction of genetic networks and targeting
of genes involved in diseases like cancer. The superparamagnetic gene clustering algorithm is also explained
as an example of a clustering technique that employs the Monte Carlo method and is based on a physical
phenomenom, leaving the subject to future implementation.

On the other hand, mathematical procedures, in particular models based on differential equations whose terms
can represent not only the growth rate of a tumour, but also the growth or inhibition rates of substances existing
in the medium or cell-cell interactions, provide an excellent tool to describe biological processes. There also
exist empirical models that have proved to be very useful in fitting the experimental growth curves of tumours.
The Gompertz model is a famous one, although there is not a convincing explanation of why it works so well.
The Gompertz growth law has been introduced by Benjamin Gompertz in 1825 in his demographical studies,
and in mathematical terms is written:

l (a) = h0e

g a,

(1)

where l (a) is the mortality rate.

The main problem is that the biological interpretation of its characteristic parameters is not very well settled.
A link of these parameters with the biological phenomenology, if found, would make the Gompertz model

1

extremely valuable as a predictive tool. The third part of this thesis discusses some of the most important
models based on differential equations and gives a more complete idea about the formulation and applications
of the Gompertz model, and ﬁnally presents a method based on control theory capable of accurately predict
the ﬁrst stages of Gompertz growth.

The main purpose of this work is to emphasize the importance of an interdisciplinary research. Nowadays, it is
clear that many problems inherent to the biology ﬁeld need to be adressed with tools coming from areas such
as computational physics and applied mathematics.

Monte Carlo Simulations in Statistical
Physics

Chapter 1

Contents

1.1 Brief History of the Monte Carlo Method . . . .
. . . .
1.2 Basics of the Monte Carlo Method . . . .

1.3 Measurements Using the Monte Carlo Method .
. . . .
1.4

Ising and Potts Models

. . . .

. . .

. . .

. . . .
. . . .

. . . .
. . . .

. . .
. . .

. . .
. . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

1.5 Some Monte Carlo Algorithms: Metropolis, Swendsen-Wang and Wolff . .
. . . .
1.6 Phase Transitions and Critical Exponents . . . .

. . . .

. . . .

. . .

1.7 The Histogram Method . . .
1.8

. . . .
Identifying the Nature of Transitions and Finite Size Scaling . . . .

. . . .

. . . .

. . . .

. . .

. . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . .
. . .

. . .
. . .

. . .
. . .

. . .
. . .

. . .
. . .

. . .
. . .

4
6

8
9

10
13

16
18

21
22

25
29

32

35

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . .
. . .

. . .
. . .

. . . .
. . . .

. . . .
. . . .

. . . .

. . .

. . . .

. . . .

. . . .

. . .

. . . .

. . .

. . . .

. . . .

. . . .

. . .

1.9.1

1.9 Monte Carlo Simulations on the Betts Lattice . .
q = 3, J < 0: Antiferromagnetic Case . . .
. . . .
q = 3, J > 0: Ferromagnetic Case .
q = 4, J > 0: Ferromagnetic Case .
. . . .
q = 5, J > 0: Ferromagnetic Case .
. . . .

1.9.5 Conclusion . .

1.9.2
1.9.3

. . . .

. . . .

. . . .

1.9.4

. . .

3

1.1 Brief History of the Monte Carlo Method

The ﬁrst electronic computer, ENIAC, was developed during the World War II period by a group of scientists
working at the University of Pennsylvania in Philadelphia. They had realized that if electronic circuits could be
made to count, then they could do arithmetic and hence, solve difference equations at incredible speeds. This
would lead to a scientiﬁc revolution because it would give the possibility to study problems unsolved before
due to the large amount of calculations needed.

In 1946, Stanislaw Ulam, a mathematician working in Los Alamos, attended a conference about a preliminary
computational model of a thermonuclear reaction probed in ENIAC as a test for the computer. Like other
scientists, he was impressed by the speed and versatility of the ENIAC. Additionally, Ulam’s extensive
mathematical background made him aware that statistical sampling techniques that had fallen into disuse
because of tediousness of calculations, could be resuscitated with ENIAC. The basis of the Monte Carlo method
has been proposed later by him as a consequence of his interest in random processes. As Stan Ulam mentioned
in 1983, his ﬁrst thoughts and attempts to practice the Monte Carlo method were suggested by a question that
occurred to him in 1946 as he was playing solitaires. The question was what were the chances that a Canﬁeld
solitaire laid out with 52 cards will come out succcessfully? 1. After spending a lot of time trying to estimate
them by pure combinatorial calculations, he wondered whether a more practical method might not be to lay
it out say one hundred times and simply observe and count the number of successful plays. He immediately
thought about how to change processes described by certain differential equations into an equivalent form
interpretable as a succession of random operations [1]. Ulam discussed his ideas with John von Neumann,
Professor of Mathematics at the Institute for Advanced Study at Princeton, who was also a consultant to Los
Alamos and one of the principals participating in the ENIAC probe conference in 1946. Von Neumann saw
the importance of Ulam’s approach and thought that it seemed especially suitable for exploring the behaviour
of neutron chain reactions in ﬁssion devices. In March 1947, von Neumann wrote to Robert Richtmyer, the
Leader of the Theoretical Division at Los Alamos, describing a possible statistical method to solve the problem
of neutron diffusion in ﬁssionable material using the newly developed electronic computing techniques. It was
at that time when Nicholas Metropolis suggested the name Monte Carlo for this statistical method. It was
related to the fact that Stan had an uncle who would borrow money from relatives because he “just had to go to
Monte Carlo” [2] and also because of the similarities between the method and the games of chance abundant
in the capital of Monaco, the european center of gambling.

Very similar methods, not fully developed, had been used earlier. An example is Buffon’s needle problem, an
experiment performed in the of the eighteenth century, which represents one of the ﬁrst problems in geometric
probability. It consists in throwing a needle randomly on a board with parallel lines, and inferring the value of
p
from the number of times the needle intersects a line [3]; nowadays, Buffon’s needle problem is practically
solved by Monte Carlo integration. Descriptions of several modern Monte Carlo techniques appear in a paper
by Kelvin [4], written nearly one hundred years ago, in the context of a discussion on the Boltzmann equation.
In the 1940’s, Enrico Fermi also used Monte Carlo in the calculation of neutron diffusion, and later designed
the Fermiac, a Monte Carlo mechanical device used in the calculation of criticality in nuclear reactors [5].
Ulam’s contribution was to recognize the potential for the newly invented electronic computer to automate
such sampling.

The approach proposed by von Neumann in his letter was the ﬁrst formulation of a Monte Carlo computation
for an electronic machine. Von Neumann considered a spherical core of ﬁssionable material surrounded by
a shell of normal material, and the idea was to trace out the development of neutrons using random digits to
select the outcomes of the various interactions along the way, such as scattering, absorption and fission. For
example, once a neutron is selected to have an initial position with certain velocity, you have to decide the
position of the first collision and the nature of the collision. If you select a fission to occur, then the number
of emerging neutrons must be chosen, and each of the new neutrons is followed too. On the other hand, if you
decide that the outcome of the collision is scattering, the new momentum of the neutron must be determined.

1Today is quite well known that the chance of winning is low: 3.3% (www.games.solitaire.com)

If the neutron crosses a material boundary, the characteristics of the new medium must be taken into account.
At the end, a genealogical history of a neutron emerges. The same procedure is carried out for other neutrons
until a statistically valid picture is obtained. Each neutron history is analogous to a single game of solitaire,
and the use of random numbers to make the choices along the way is analogous to the random turn of the card.

To take decisions, the computer must have an algorithm for generating a uniformly distributed set of random
numbers and these numbers must be transformed into the nonuniform distribution, say g, desired for the
property of interest. In a 1947 letter, von Neumann discussed two techniques for using uniform distributions of
random numbers to generate g. The ﬁrst technique, which had already been proposed by Ulam, shown that the
function f needed to achieve this transformation is just the inverse of the nonuniform distribution function, that
1. For example, in the case of neutron physics, the distribution of free paths (how far neutrons of a
is, f = g−
given energy in a given material go before colliding with a nucleus) decreases exponentially with distance. If x
is uniformly distributed in the open interval (0, 1), then f =
ln x will give us a nonuniform distribution g with
just those properties. The rest of von Neumann letter describes an alternative technique that works when it is
difﬁcult or computationally expensive to form the inverse function, which is frequently true when the desired
function is empirical. In this approach, two uniform and independent distributions (xi) and (yi) are used. If two
numbers xi and yi are selected randomly from the domain and range, respectively, of the function f , then each
such pair of numbers represents a point in the function’s coordinate plane (xi, yi). When yi > f (xi) the point
lies above the curve for f (x), and xi is rejected; when yi
f (xi) the point lies on or below the curve, and xi is
accepted (see Fig. 1.1). Thus the fraction of accepted points is equal to the fraction of the area below the curve.
In fact, the proportion of points selected that fall in a small interval along the x-axis will be proportional to
the average height of the curve in that interval, ensuring generation of random numbers that mirror the desired
distribution [1].

−

≤

Figure 1.1: Generation of random numbers that mirror a given distribution f (x) [1].

The ﬁrst ambitious test of the Monte Carlo method consisted of nine problems in neutron transport, each one
corresponding to various conﬁgurations of materials, initial distributions of neutrons, and running times. These
problems did not include hydrodynamic and radiative effects, but complex geometries and realistic neutron-
velocity spectra were handled easily. Neutron histories were checked with a variety of statistical analyzes and
comparisons with other approaches. Conclusions about the efﬁciency of the method were quite favourable and
gave rise to enthusiasm among scientists of distinct areas. At Los Alamos, the method was quickly adopted

to study problems of thermonuclear and ﬁssion devices. Already in 1948, Ulam was able to report to the
Atomic Energy Commission about the applicability of the method for cosmic rays and in the area of the
Hamilton Jacobi partial differential equation. Other laboratory staff members started to run Monte Carlo codes
in ENIAC. Among them, J. Calkin, C. Evans and F. Evans studied thermonuclear problems, and B. Suydam
and R. Stark tested the concept of artiﬁcial viscosity for time-dependent shocks. By midyear 1949, Ulam and
Metropolis published a paper describing the Monte Carlo method and its application to integro-differential
equations [6] and the ﬁrst symposium on the method was held in Los Angeles.

The construction of a new machine began later and N. Metropolis was the leader of the group in charge of it.
He called the new machine MANIAC wishing to stop the use of acronyms for machine names, but contrary
to what he sought, it only stimulated it. In early 1952, the MANIAC became operational at Los Alamos and
soon after, Anthony Turkevich led a study of the nuclear cascades resulting from the collision of accelerated
particles with atomic nuclei. Another computational problem run on the MANIAC was a study of equations of
state based on the two-dimensional motion of hard spheres. The results were published in a famous paper in
1953 [7] and describes a strategy leading to greater computational efﬁciency for equilibrium systems obeying
the Boltzmann distribution function. The idea developed in that is that if a move of a particle in the system
causes a decrease in the total energy, the new conﬁguration should be accepted. On the other hand, if there is
an increase in energy, the new conﬁguration is accepted only if it passes through a game of chances biased by
a Boltzmann factor, otherwise, the old conﬁguration is kept.

Since then, the Monte Carlo method has been proved to be a very powerful and useful tool. For example,
deterministic methods for numerical integration of functions with many variables are very inefﬁcient because
with every additional dimension or variable, an exponential time increase takes place. The alternative way
provided by the Monte Carlo method is the following: the function in question can be estimated by randomly
selecting points in the many dimensional space and taking some kind of average of the values of the function at
these points. This method will display 1/√N convergence, i.e. quadrupling the number of sampled points will
halve the error, regardless of the number of dimensions. The use of Monte Carlo methods to model physical
problems allows us to examine more complex systems that otherwise we are not able to handle. Solving
equations which describe the interactions between two atoms is fairly simple but solving the same equations
for hundreds or thousands of atoms is impossible. With Monte Carlo methods, a large system can be sampled
in a number of random conﬁgurations, and those data can be used to describe the system as a whole. There are
currently many applications of the Monte Carlo method: stellar evolution [8], reactor design [9], cancer therapy
[10], trafﬁc ﬂow [11], ﬁnance [12], simulations of various systems of interacting particles (e.g. ferromagnetic
materials), grain growth modeling in metallic alloys [13, 14], the behaviour of nanostructures and polymers
[15], and protein structure predictions [16].

1.2 Basics of the Monte Carlo Method

In statistical mechanics, the partition function Z(H, T ) contains all the necessary information to calculate the
thermodynamic properties of a system. The difﬁculty arise when the size of the system and the number of
degrees of freedom for each particle is large, something that occurs in almost all cases. Then, summing over
the large number of possible states to calculate Z(H, T ) is extremely expensive and almost impossible even in
a computational way. The result is that, in general, the partition function can not be evaluated exactly [17].

x1, x2...
}
{

The Monte Carlo approach consists of generating a series of possible states or conﬁgurations X1, X2, ..., XN of
a system (Xi =
with xi being the position of the particles in the system), so that the probability PXi
of encountering the system in state Xi, is given by an appropriate probability density function. Averages over
phase space may be constructed by considering a large number of identical systems which are held at the same
ﬁxed conditions. These are called ensembles, (Fig. 1.2), and depending on the parameters held ﬁxed, one can
have different types of ensembles. In the case in which T is maintained constant, the set of systems obtained
is said to belong to the canonical ensemble, in which the systems are allowed to have distinct energies. On
the other hand, if the energy is ﬁxed, the ensemble is called the microcanonical ensemble. In both cases the

number of particles is also ﬁxed, but if now we allow the number of particles to ﬂuctuate, the ensemble is
named the grand canonical ensemble [17].

Figure 1.2: Graphical representation of a canonical ensemble: the positions of the particles and the energy can
change in each system, but the number of particles and the temperature is ﬁxed.

(1.1)

(1.2)

(1.3)

In the canonical approach, Z(H, T ) is calculated in the following way:

Z(H, T ) = (cid:229)

e−

H/kBT ,

all states

where kB is the Boltzmann’s constant, H denotes the Hamiltonian and T the temperature of the system. By all
states we mean taking into the sum all the available conﬁgurations for the system. The probability distribution
is called a canonical distribution if it is given according to the equation:

PX =

H(X)/kBT

e−
Z(H, T )

.

The general goal is to determine equilibrium properties of the canonical ensemble such as energy and
magnetization.
If m(X ) is the value of some physical property in a state X , and H(X ) the energy of this
state, then the canonical ensemble average for the quantity m is given by:

=

m
h

(cid:229) all states m(X )e−
Z(H, T )

H(X)/kBT

.

i
As mentioned before, the problem is how to calculate Z(H, T ) in an efﬁcient way.
If we have a ﬁnite state space X , where X(t) is the state of the system at time t, that can only take s discrete
, the stochastic process is called a Markov chain if the following condition
values X(i) ∈
}
is fulﬁlled:

X1, X2, ..., Xs
{

X =

P(X(t)|

X(t

1), ..., X(1)) = TM(X(t)|

−

X(t

−

1)),

X(t

1), ..., X(1)) is the probability of the state X(t) to occur conditioned by the occurrence of the
where P(X(t)|
−
1), ..., X(1). TM is known as the transition probability matrix. The chain is homogeneous if the
past states X(t
1)) is constant for all t, with (cid:229) X(t)
1)) = 1 for any t. That is,
transition probability TM = TM(X(t)|
the evolution of the chain in the state space X depends solely on the current state of the chain and a ﬁxed
transition (probability) matrix [18].

TM(Xt

X(t
|

X(t

−

−

−

For any starting point, the chain will converge to an invariant distribution P(X ), as long as TM is a stochastic
transition matrix with the following properties:

1. Irreducibility: for any state of the Markov chain, there is a positive probability of visiting all other states.
That is, the matrix TM can not be reduced to smaller matrices, which is also the same as stating that the
transition graph is connected.

2. Aperiodicity: the chain should not get trapped in cycles [18], i.e., the system should not be limited to a

subchain of states.

Consider now a large collection of copies of the same system in equilibrium. We allow each copy to evolve in
time and, at any instant, we will ﬁnd each different copy in one possible conﬁguration, an all the copies will
give a probability distribution over the conﬁguration space. For each point Xi in the conﬁguration space, the
probability P of ﬁnding a copy in X at time t satisﬁes the equation:

P(X ,t) = (cid:229)

d
dt

i

[P(Xi,t)TM(Xi

X )

P(X ,t)TM(X

Xi)].

→

−

→

(1.4)

→

→

Xi) and TM(Xi

TM(X
X ) are the probabilities of making a transition from the conﬁguration X to Xi and
viceversa. Because the collection is in equilibrium, the probability distribution is time invariant, and in the last
equation we must have dP(X ,t)/dt = 0 for all t. At any instant, there is an equal number of transitions to and
from the conﬁguration X . In fact, there exists an equation like (1.4) for each point in the conﬁguration space,
and the set of all such equations forms the master equation [19].

A sufﬁcient (but not necessary) condition for an equilibrium (time independent) probability distribution needed
to simulate equilibrium systems is the so-called detailed balance condition for the master equation that relates
1 and Xn through:
the transition between two conﬁgurations, Xn

−

P(X n)TM(X (n
−

1)

X (n)) = P(X (n
−
|

1))TM(X (n)

X (n
−
|

1)).

(1.5)

If we choose the Boltzmann
This method can be used for any probability distribution of conﬁgurations.
distribution, for which the probability of ﬁnding a conﬁguration X with energy H at equilibrium is given
by (1.2), and substitute it into (1.5), we get:

1)

e−
e−
This is the detailed balance condition on the transition probabilities. It is very important to note that Z(H, T )
does not appear in this expression; it only involves quantities that we know (kBT ) or that can be easily
calculated (E).

H(n
1)/kBT
H(n)/kBT = e

X (n))
|
1))
X (n
|

TM(X (n
−
TM(X (n)

D E/kBT .

(1.6)

=

−

−

Thus, we have a valid Monte Carlo algorithm if we generate a new conﬁguration X(n) from a previous one
1) such that the transition probability satisﬁes the detailed balance condition, and the generation procedure
X(n
−
is ergodic, i.e. every conﬁguration can be reached from every other conﬁguration in a ﬁnite number of iterations
[20].

1.3 Measurements Using the Monte Carlo Method

Systems generated using a valid Monte Carlo algorithm are often held at ﬁxed values of intensive variables,
such as temperature, pressure, and so on. The corresponding conjugate extensive variables (energy, volume,
etc.) will ﬂuctuate in time; indeed these ﬂuctuations will actually be observed during the Monte Carlo
simulations and will help us to measure quantities of interest such as:

Specific heat

Susceptibility

CV =

1
V (cid:18)

¶ E
¶ T (cid:19)V

c =

1
V (cid:18)

¶ M
¶ T (cid:19)V

=

(E
h

E

)2
i

i

=

E 2
h

− h

E

2.
i

i − h

=

(M
h

M

)2
i

i

=

M2
h

− h

M

2.
i

i − h

(1.7)

(1.8)

These and other similar quantities are measured for each conﬁguration and the averages and statistical errors
calculated [17].

Summarizing, the idea of Monte Carlo simulations is to create an independently and identically distributed set
of N samples from a target density P(X ) distribution function deﬁned on a high dimensional state space X
(e.g., the set of possible conﬁgurations of a system). These N samples can be used to approximate P(X ) [18].

When P(X ) has a standard form, e.g., Gaussian, it is straightforward to sample from it using easily available
routines. However, when this is not the case, we need to introduce more sophisticated techniques such as
Markov Chain Monte Carlo (MCMC) brieﬂy presented above, which is a strategy of generating samples using
a Markov chain mechanism while exploring the state space X . This mechanism is constructed with the
condition that the chain spends more time in the most important regions. In particular, it is constructed so that
the samples mimic samples drawn from the target density distribution P(X ) [18].

1.4 Ising and Potts Models

The Ising model was proposed in 1925, in the doctoral thesis of Ernst Ising, a student of Wilhelm Lenz [21].
Using a model proposed by Lenz in 1920 [22], Ising tried to explain certain empirically observed facts about
ferromagnetic materials in his thesis. The model was referred to in a paper by Heisenberg of 1928 in which
he used the exchange mechanism to describe ferromagnetism [23]. After the publication of a paper by Peierls
(1936) [24], in which he gave a non-rigorous proof that spontaneous magnetization must exist, the Ising model
became a well-established paradigm. In 1941, Kramers and Wannier calculated the Curie temperature using a
two-dimensional Ising model [25] and three years later Onsager gave a complete analytic solution of the model
[26].

As a paradigm of statistical mechanics, the Ising model tries to imitate systems in which individual elements
(e.g., atoms, animals, protein folds, biological membrane, social behaviour, etc.) modify their behaviour so as
to conform to the dynamics of other elements in their neighbourhood [27].

In most speciﬁc terms, the Ising model in statistical mechanics considers a system with spins located at the
sites of a D-dimensional lattice, where each spin can take the value +1, corresponding to spin up, or the value
-1, corresponding to spin down. The Hamiltonian of such a spin lattice system is given by:

HI =

J (cid:229)

−

s

is

B(cid:229)

j

−

i

s

i,

i, j

h

i

(1.9)

where J is the exchange constant, and s
j are the spins of the ith and jth sites respectively. The sites are
usually a pair of nearest neighbours, though calculations for more distant neighbours can also be carried out.
B is an externally applied magnetic ﬁeld with whom each spin interacts.

i and s

Figure 1.3: Lattice representations of Ising and Potts models. The red site interacts with his ﬁrst neighbours
(in yellow). Notice that in the Potts model, being a generalization of the Ising model, more than two possible
directions for the spin are available.

When J > 0, the model describes a ferromagnetic system where parallel spins are favoured and antiparallel
spins are discouraged.

In the case of J < 0, an antiferromagnetic system is modeled.

If J is randomly chosen to be 1 or -1 for each pair of nearest neighbours and remain ﬁxed during the course of
observation, we obtain a model of a spin glass [28].

The energy associated with each state depends then on the exchange energy of the particles and the interaction
of the particles with the external magnetic ﬁeld. However, in the absence of the external ﬁeld, the energy of
the system depends only on the spin exchange energy:

h
The Potts model is a generalization of the Ising model, in which spins can choose its value from a discrete set
of states (see Fig. 1.3). In 1952, C. Domb proposed it as a doctoral thesis for his student R. Potts [29]. Without
the presence of an external ﬁeld the Potts model is deﬁned through the Hamiltonian:

i

HI =

J (cid:229)

−

i, j

s

is

j.

HP =

J (cid:229)

−

i, j

d s

s

j

is

i,s

j,

(1.10)

(1.11)

h
where J denotes again the interaction exchange constant between nearest neighbours and the values s
characterized by an integer s
their energy contribution is null.

i are
i = 1, 2, ..., q. If two spins are parallel they contribute with energy J, otherwise

i

1.5 Some Monte Carlo Algorithms: Metropolis, Swendsen-Wang and Wolff

The Metropolis [7], Swendsen-Wang [30] and Wolff [31] algorithms satisfy the master equation and the
detailed balance condition for the Boltzmann distribution. Consequently, when the system reaches equilibrium,
the probability distribution of all possible conﬁgurations will be the Boltzmann distribution.

The steps of the Metropolis algorithm for an Ising model are graphically represented in Fig. 1.7 and are the
following:

1. Start with an arbitrary spin conﬁguration C0 of a lattice with N sites.

2. Select a spin randomly and independently, and ﬂip it.

3. Calculate the energy change D E which results if the spin is turned.

4. Generate a random number r such that 0 < r < 1.

5. If D E

0, accept the change; if D E > 0, the conﬁguration is accepted with a probability e−

D E/kBT . This
D E/kBT the spin is ﬂipped. If not, the new conﬁguration is rejected, and the system

≤

is resumed as: if r < e−
returns to the initial conﬁguration C0.

6. Choose randomly another spin to ﬂip and go to (3).

It is important to discard some conﬁgurations at the beginning of the chain of conﬁgurations to ensure that
the system forgets C0 and that the conﬁgurations taken into account form a canonical ensemble. Then, after
a considerable number of spins have been updated, the properties of the system are determined and added to
the statistical average which is stored. The random number r must be chosen uniformly in the interval [0, 1]
and all the successive random numbers should be uncorrelated. Note that if a spin trial is rejected, the old
state is counted again for the averages. For a q state Potts model, the new value for the chosen spin is selected
randomly among the other q

1 spin values [17].

−

Figure 1.4: Metropolis algo-
If the energy decreases
rithm:
with the spin ﬂip, the new con-
ﬁguration remains. If not, is ac-
cepted or rejected with certain
probability.

In the Metropolis algorithm, spins are updated one at a time and this single spin ﬂip is the reason why this
algorithm is inefﬁcient at critical points where the phenomenon of slowing down occurs. The standard measure
of Monte Carlo time is the Monte Carlo step per site (MCS/site), which corresponds to N trial ﬂips, regardless
of whether the trial is successful or not (N is the total number of spins in the system) [19].

The Swendsen-Wang and Wolff algorithms are cluster algorithms, where groups of spins are identiﬁed by
establishing bonds between pairs of neighbouring spins. Once the clusters in the lattice are identiﬁed, a whole
spin cluster is updated, and in this way these algorithms are more efﬁcient near critical points.

The Swendsen Wang algorithm for a q state Potts model is (Fig. 1.5):

1. Initialize the lattice of N sites with an arbitrary spin conﬁguration C0.

2. Examine every pair of neighbouring spins in the system. If neighbouring spins are not parallel, nothing
K, where
is done. If they are parallel, a bond is introduced between them with probability p = 1
K = J/kBT . (If p < 1, a random number r is generated such that 0 < r < 1, and if r < p a bond is
introduced between sites i and j).

e−

−

3. Once all clusters in the lattice have been formed, an arbitrary cluster is chosen.

4. Another random number R is generated such that 1

R

q.

≤

≤

5. All spins in the chosen cluster are assigned s

i = R.

6. Another cluster is selected randomly and return to (4).

7. When all clusters have been considered, erase the bonds, go to (2) and repeat the steps until the desired

number of conﬁgurations has been obtained.

Figure 1.5: Swendsen-Wang algorithm: Once the clusters are formed (each one is represented by a diferent
colour), their spin values are randomly modiﬁed. Some clusters maintain the same value (i.e., orange spin).
After that, the cluster formation starts again.

One Monte Carlo cycle in the Swendsen-Wang algorithm is accomplished when all clusters have been updated
(steps 2-6), and is equivalent to one Monte Carlo step per site (MCS/site) in the Metropolis algorithm [19].

The probability to set a bond between two sites depends on the temperature, which affects the resultant cluster
distribution. At very high temperature, the clusters will tend to be quite small, whereas at very low temperature
virtually all sites with nearest neighbours in the same state will belong to the same cluster and therefore there
will be a tendency for the system to oscillate back and forth between quite structures. However, near a critical
point, a quite rich array of clusters is produced and the net result is that each conﬁguration differs substantially
from its previous one. That is the main reason why the critical slowing down is reduced [17].

The Wolff algorithm is very similar to the Swendsen-Wang algorithm, the principal difference being that it
flips the spins of one particular cluster with the maximum probability of 1 in each Wolff MC cycle. The
Wolff algorithm was proposed to improve the Swendsen Wang algorithm in which signiﬁcant effort is required
in dealing with small clusters as well as large ones. However, the small clusters do not contribute to the
critical slowing down [17] and can be disregarded. The Wolff algorithm is given by the following procedure (a
graphical representation is provided in Fig. 1.6):

4. If bonds have been drawn to any nearest neighbour site j, draw bonds to all nearest neighbours k of site

1. Start with an arbitrary spin conﬁguration C0 of a lattice with N sites.

2. Randomly choose a spin to be the seed of a cluster.

3. Examine all its neighbours and draw bonds with probability p = 1

Kd id

e−

j .

−

j with probability p = 1

Kd

e−

jd k.

−
5. Repeat step (4) until no more new bonds are created.

6. Flip all spins in the cluster to a different randomly chosen spin value.

7. Go back to (1).

The measurement of Monte Carlo time is more complicated. The natural unit of time is the number of cluster
ﬂips. However, in one cluster ﬂip the number of spins visited is not equivalent to the total number of spins
in the system and hence one Wolff cluster ﬂip is not equivalent to one MC step per spin (MCS/site) or one
MC cycle in the Metropolis and Swendsen-Wang algorithms. The generally accepted method of converting to
ﬂipped at each step. The
c
MCS/site is to normalize the number of cluster ﬂips by the mean fraction of sites
i
h
Monte Carlo time then becomes well deﬁned if
is well deﬁned, and this happens only after enough ﬂips
have occurred [17].

c
i
h

Figure 1.6: Wolff algorithm: A spin is chosen randomly, and the cluster is formed from it by introducing
bonds to its neighbours and the neighbours of its neighbours with some given probability. The spin value of
the cluster is changed and then another spin is selected to start a new cluster.

Although all these algorithms satisfy detailed balance, they do not give the same results for M and c
in a
simulation. This difference is due to the very small probability for M to change sign using the Metropolis

i

M
h

algorithm for large systems, at low temperatures. This corresponds to a physical situation, and one can
and c and obtain meaningful results. However in cluster algorithms, the clusters become very
calculate
= 0; the
large at low temperatures, and by ﬂipping them, we effectively ﬂip the whole system, yielding
, a constant at low temperatures, which in turn gives a diverging c M as
variance in M is then simply
i
instead of M, and deﬁne c
just as we deﬁned c earlier. In this way, all
T
0. The solution is to use
and c
three algorithms give the same results for

at all temperatures [19].

M2
h
M
|

M
h

|
Notice that cluster algorithms become inefﬁcient at low temperatures, because in that situation, nearly all
spins in the system are ﬂipped when we ﬂip the largest cluster, which is not helpful in achieving statistically
independent conﬁgurations. In comparison, the Metropolis algorithm will be much more efﬁcient [19].

M
h

M
|

M
|

→

i

i

|

|

Once an appropiate algorithm has been selected, one of the goals of Monte Carlo simulations is the study of
the behaviour of systems in phase transitions.

1.6 Phase Transitions and Critical Exponents

One of the most common physical problems studied in simulations are phase transitions. A phase transition
occurs when a thermodynamic system passes from one phase to another one with the change of some external
variable, such as temperature or pressure. Some examples are the transitions between solid, liquid, and gaseous
phases, the transition between the ferromagnetic and paramagnetic phases of magnetic materials, and the
emergence superconductivity in certain metals when they are cooled below a critical temperature [32].

When a system goes from one phase to another, there will be in general a stage where the free energy is not
analytic. Due to this, the free energies on either side of the transition are two different functions, so one or
more thermodynamic properties will behave very differently after the transition. A system near or at the critical
point of a phase transition presents peculiar behaviours that are universal, like divergence of some quantities
and critical slowing down phenomena, which will be explained later. The most commonly examined property
in this context is the heat capacity that in the transition region may become inﬁnite, jump abruptly to a different
value, or exhibit a discontinuity in its derivative [33]. This non-analytic behaviour stems generally from the
interactions of an extremely large number of particles in a system, and does not show up with the same strength
in systems that are too small [32].

Phase transitions are generally classiﬁed into ﬁrst or second order transitions. A second order, or continuous
phase transition, can be deﬁned as a point at which a system changes from one state to another one without a
discontinuity or jump in its density, internal energy, magnetization, or similar properties. In the case of a ﬁrst
order transition, the above mentioned properties jump discontinuously as the temperature or pressure passes
through the transition point [34]. The name of different kind of phase transitions comes precisely from the
number of derivatives of the free energy that we have to count before we can see a discontinuous behaviour. If
the ﬁrst derivative is discontinuous, we have a ﬁrst order transition, if not, it is a second order one [17].
The ﬁrst-order phase transitions involve a latent heat. During such transition, a system either absorbs or releases
a ﬁxed (typically large) amount of energy. Because energy can not be instantaneously transferred between the
system and its environment, ﬁrst-order transitions are associated with “mixed-phase regimes” in which some
parts of the system have completed the transition and others have not. Continuous phase transitions, in many
cases, are associated with a change of symmetry of the system and are easier to study than ﬁrst-order transitions
due to the absence of latent heat. They have shown many interesting properties. The phenomena associated
with continuous phase transitions are called critical phenomena, because of their occurrence near critical points
and because it turns out that continuous phase transitions can be characterized by parameters known as critical
exponents [32].

In the case of many phase transitions a non-zero value of an order parameter appears, i.e., some property of the
system which is non zero in one phase (usually called the ordered phase) but identically zero in the other phase
(disordered phase). Thus, the order parameter can not be an analytic function at the transition point. The order
parameter is deﬁned differently in various kinds of physical systems [17]. For systems such as the ferromagnet,

where there is a broken symmetry below critical temperature Tc, the order parameter is the magnetization. For
systems without broken symmetry, one chooses some quantity that is very sensitive to the difference between
the two phases, and measures the difference of this quantity from its value at the critical point and below it.
For the liquid-vapor critical point, we may choose the order parameter as the difference between the actual
density of the ﬂuid and the density at the critical point. For liquid crystals the degree of orientational order is
considered as the order parameter [34].

Another quantity of interest near a phase transition is the correlation function.
In general, there will be
microscopic regions in which the characteristics of the material are correlated. This is generally measured
through the determination of a two point correlation function, which is the probability of ﬁnding that two sites
separated by a distance r have the same value of a certain given quantity r

[17]:

r (0)r (r)
.
i
h
In the case of magnetic systems, the correlation function can be measured in neutron scattering experiments,
whereas near the liquid vapour transition it can be measured by light scattering or small angle X-ray-scattering
experiments [34].

r (r) =

(1.12)

If the correlation for the appropriate quantity decays to zero as the distance goes to inﬁnity, then the order
parameter is zero [17]. Close to the critical point, the correlation length x , which tells us how far correlations
are still present, becomes extremely large. This is directly related to the large amount of long-wavelength
ﬂuctuations that occur in the system at the criticality [34]. The time taken for the system to change
conﬁguration near the critical point also increase signiﬁcantly because of the divergence of the correlation
length x . This phenomenon is called critical slowing down. For example, in the case of the Ising model,
spins tend to align with their neighbours due to the exchange interaction, and regions or clusters of spins
pointing in the same direction appear. These spins are said to be correlated, and, generally, there are clusters
of various sizes. The span of the largest one is the correlation length x , while the time it takes to break up the
existing conformation of spins and form another arrangement of clusters is called the decorrelation time t . At
the critical point, there is a low probability for a spin in the middle of a spin cluster to change its direction,
therefore spin regions are altered only at the boundary. This gives rise to a long decorrelation time which is
related to the correlation length by a power law:

where z is the dynamical critical exponent [19]. For simulations of a ﬁnite lattice of linear dimension L, x
naturally bounded by L and then the basic assumption is that:

is

t

x z,

t

(cid:181) Lz.

(1.13)

(1.14)

In an inﬁnite system, as the critical point is
These two equations describe the critical slowing down.
approached, the correlation length diverges (its value is ¥
), and from (1.13), we see that the decorrelation
time also diverges. In ﬁnite systems x does not diverge as the critical point is approached, however, it reaches
its peak with a sharp slope. Due to the power law dependence of t on x , t will also display a peak with a sharp
slope, exhibiting critical slowing down [19].

Near the transition points, the critical slowing down phenomenon produces important effects that complicate
the implementation of the Monte Carlo method. This is the main reason why the scientists introduced
alternative approaches besides canonical Metropolis algorithm, such as Wolff and Swendsen-Wang algorithms.
The computational effect of critical slowing down near a critical point can be understood in the following
manner: when we simulate ﬁnite systems at the critical point, the decorrelation time depends on the linear
dimension L through a power law as L approaches inﬁnity. Take, for example, the 2D Ising model. The
dynamical critical exponent z is known to be approximately 2 using the Metropolis algorithm. If the time it
takes to obtain 100 statistically independent conﬁgurations is t in a system with L = 32, then if L is increased
by a factor of 2 to 64, the computational time needed to obtain 100 statistically independent conﬁgurations will

G
(cid:181)
increase to 42 t. A factor of 4 is introduced because the number of spins is increased by 4, and another factor
of 4 is due to the fact that t
(cid:181) L2. In general, the amount of CPU time required to obtain a ﬁxed number of
statistically independent conﬁgurations for a system with linear dimension L is proportional to Ld+z, where d
is the spatial dimension of the model, and z is the corresponding dynamical critical exponent [19].

Data from experiments, as well as results for a number of exactly solvable models, show that in the vicinity of
the critical point Tc, the thermodynamical properties can be described by a set of simple power laws [17]. For
example, for the determination of the way which the magnitude of the order parameter approaches zero as the
critical point is reached, we may write (according to the classical theories of phase transitions such as the van
der Waals or mean ﬁeld theories):

b

,

1
|

T /Tc

M = M0 e
where M is the order parameter (i.e., the magnetization for a ferromagnet), M0 is a constant that will vary from
one system to another, e =
The temperature variation of the order parameter is very important but not the only quantity of interest. Another
key quantity is the speciﬁc heat, deﬁned as the derivative of the internal energy with respect to the temperature.
The speciﬁc heat is found to become inﬁnite at the critical point in some systems but also one can have cases
in which the speciﬁc heat is ﬁnite with only a sharp cusplike maximum at the critical point [34]. In either case,
one may deﬁne an exponent a
that characterizes the anomalous behaviour of the speciﬁc heat at the critical
point:

, and the exponent b
|

is called critical exponent [34].

(1.15)

−

Susceptibility c
is another quantity of interest. It is deﬁned as the derivative of the order parameter with respect
to the applied ﬁeld to which it is coupled, under constant temperature condition. For a magnetic system, this
quantity is precisely the magnetic susceptibility. This quantity becomes extremely large near the critical point,
and we may write the zero ﬁeld magnetic susceptibility as [34]:

Finally, the correlation length x varies as:

CV = C0 e −

a

.

c = c 0 e −

g

.

x = x 0 e −

n

,

(1.16)

(1.17)

(1.18)

is termed as critical exponent.

where, again, n
Note that the last equations represent asymptotic expressions which are only valid if e
0 and more complete
forms would include additional corrections to scaling terms which describe the deviations from the asymptotic
behaviour. The exact values of these critical exponents are known exactly only for a small number of models,
most notably for the 2D Ising square lattice [26], whose exact solution shows that a = 0, b = 1/8, and g = 7/4.
Here, a = 0 corresponds to a logarithmic divergence of the speciﬁc heat [17].
The power law behaviour near critical points is very general and many systems share the same critical
exponents. In particular, the Ising universality class refers to the class of critical phenomena that share the
same critical exponents as the Ising model [19].
Although the critical exponents, a
empirically, in the 1960’s, to be connected by the relationship:

, and g deﬁned above may be independent in principle, they were found

→

, b

−
This equality is known as the Rushbrooke relation, and the following three relations are also known [17], where
h and d are two additional critical exponents:

−

a = 2

g

2b .

(1.19)

Josephson:
Widom:
Fisher:

n D = 2

−
g = b (d
g = n (2

a

,

−
−

1) ,
h ) .

In Table 1.1 we provide the theoretical values of the critical exponents for q
course fulﬁlls the latter relations.

≤

4 2D Potts model, which of

a

b

g

n

d

q=0
q=1
q=2
q=3
q=4

−
2/3
−
0
1/3
2/3

1/6
5/36
1/8
1/9
1/12

27/18
7/4
13/9
7/6

4/3
1
5/6
2/3

18 1/5
15
14
15

h

0
5/24
1/4
4/15
1/2

Table 1.1: Some theoretical critical exponents for the 2D Potts model [35].

they can be measured in a time-
The quantities discussed above are all equilibrium or static quantities;
independent experiment in thermal equilibrium conditions, and any involved correlation function refers to
the correlation of ﬂuctuations at a single instant of time. The majority of theoretical studies and experiments
on critical phenomena are concerned with these static measurements. Thus, the usual division of systems into
different universality classes is based on these static phenomena. There are other properties of systems, known
as dynamical properties, which require a more detailed theoretical analysis. Moreover, they require a further
subdivision of the universality classes. Two systems that belong to the same universality class for their static
properties could show quite different behaviours in their dynamical properties. Some standard examples of
dynamical properties are various relaxation rates of systems slightly disturbed from equilibrium, correlations
involving ﬂuctuations at two different time instants, and transport coefﬁcients, e.g., thermal and electrical
conductivities. Among the experiments used for studying dynamical properties we quote measurements
of sound-wave attenuation and dispersion, widths of nuclear and electron magnetic resonance lines, and
inelastic scattering experiments. Typically, one ﬁnds that the relaxation rate of the order parameter becomes
anomalously slow at a critical point. However, some other relaxation rates are found to speed up and transport
coefﬁcients become large in a number of cases. In some cases, the results of a dynamical experiment may be
interpreted as an indirect measurement of a static property of the system. As a matter of fact, some of the most
precise measurements of static critical properties have been obtained by dynamical means. Examples are the
measurements of the superﬂuid properties of liquid helium, the low-frequency sound velocity of a ﬂuid, and
the frequency of nuclear magnetic resonance in a magnetic system [34].

1.7 The Histogram Method

The canonical Metropolis algorithm yields mean values of various thermodynamical quantities, (energy,
magnetization, etc) at particular values of the temperature T . Near a phase transition, many thermodynamical
quantities change rapidly, and we need to determine these quantities at closely spaced values of T . If we use
standard Monte Carlo methods, we will have to do many simulations to cover the desired T range [36]. The
use of histograms to overcome this problem became popular after the publication of a paper by Ferrenberg
and Swendsen in 1988 [37]. However, the histogram technique is one of the oldest techniques proposed
[38, 39]. Also often referred to as Ferrenberg-Swendsen reweighting technique, is used in almost all Monte
Carlo calculations of statistical physics, especially when dealing with phase transition phenomena [40]. The
idea is to use the knowledge of the equilibrium probability distribution at one value of T (and other external
parameters) to estimate the desired thermodynamical averages at neighbouring values.

A Monte Carlo simulation performed at T = T0 generates conﬁgurations of the system with a frequency
b 0H, where b 0 = 1/kBT0, and H is the Hamiltonian of the system
proportional to the Boltzmann weight, e−
being studied. In the case of a magnetic system, the probability of simultaneously observing the system with

¥
¥
¥
¥
(1.20)

(1.21)

(1.22)

(1.23)

(1.24)

(1.25)

energy E and magnetization M is given by:

Pb 0(E, M) =

1
Z(b 0)

W (E, M)e−

b 0E,

where W (E, M) is the number of conﬁgurations (density of states) with energy E and magnetization M, and
Z(b 0) is the partition function of the system. Because the simulation generates conﬁgurations according to
the equilibrium probability distribution, a histogram H(E, M) can be built during the simulation to provide an
estimate for the equilibrium probability distribution that becomes exact in the limit of inﬁnite-length run. For a
ﬁnite length-simulation, the histogram will present statistical errors, but H(E, M)/N, where N is the number of
measurements, still provides an estimate of Pb 0(E, M) over the E and M values generated during the simulation
[41]. Keeping this in mind, we modify (1.20) as follows:

H(E, M) =

˜W (E, M)e−

b 0E,

N
Z(b 0)

Pb (E, M) =

W (E, M)e−

b E.

1
Z(b )

˜W (E, M) =

H(E, M)e

b 0E ,

Z(b 0)
N

Pb (E, M) =

(b

b 0)E

H(E, M)e−
−
(b
(cid:229) E,M H(E, M)e−

b 0)E .

−

b = (cid:229)
f (E, M)
i

h

E,M

f (E, M)Pb (E, M).

where ˜W (E, M) is an estimate of the true density of states, or number of conﬁgurations, W (E, M).
The probability distribution for any value of b has the same form as (1.20):

Comparing (1.21) and (1.22), we can note that it is possible to determine ˜W (E, M) from (1.21):

and replace W (E, M) in (1.22) with it. After normalizing the distribution, we ﬁnd that the relationship between
the histogram measured at b = b 0 and the (estimated) probability distribution for an arbitrary b

is:

From Pb (E, M), the average value of any function f (E, M) can be calculated as a continuous function of b :

The histogram method is useful only when the conﬁgurations relevant to the range of temperatures of interest
occur with sufﬁcient probability during the simulation at temperature T0. For example, if we simulate an
Ising model at low temperatures at which only ordered conﬁgurations occur (most spins aligned in the
same direction), we can not use the histogram method to obtain meaningful thermodynamical averages at
temperatures for which most conﬁgurations are disordered, and viceversa [36].
In the single histogram technique, the estimated P(E, b ) is accurate only for b close to the reference value
b 0. By generating many histograms that overlap each other we can widen the range of b
. This is called the
multiple histogram technique [42]. It is also clear that we can increase the range of b by directly estimating
the density of states W (E, M). Multicanonical sampling [43] is an early technique proposed to do this. It is a
very general and useful technique being often the method of ﬁrst choice for a variety of problems that include
critical slowing down near second order phase transition points, nucleation in ﬁrst order phase transitions, and
trapping in the metastable minima in systems with rugged energy landscapes.

1.8 Identifying the Nature of Transitions and Finite Size Scaling

The behaviour near phase transitions has been one of the main objectives of studies focusing on the properties
of physical systems but a correlation length x greater than the accessible size L of the system may lead to
many difﬁculties [44]. For systems close to a second order phase transition, ﬁnite-size scaling is routinely
used to extract thermodynamic information from similar systems of fairly small size. An equivalent theory for
ﬁrst order phase transitions is clearly also of interest. A useful theory of ﬁnite-size scaling should allow us to
extract the couplings at which the transition occurs, as well as other dimensional quantities like latent heat (or
spontaneous magnetization) and speciﬁc heat (or magnetic susceptibility) [45].

First order transitions are characterized by a discontinuity in the order parameter and thermodynamic
quantities, with an associated delta-peak behaviour in the susceptibility. As a matter of fact, the jump in the
energy density is equivalent to the latent heat. However, at ﬁnite size, thermodynamic quantities become
In
continuous and rounded.
simulations, this behaviour is visible only if the simulation time t s is larger than the decorrelation time t
at the transition point.
is the surface tension of the
interface between the low temperature and high temperature phases [47]. It is the dimension D that now plays
the key role rather than the critical exponents as in the case of second order phase transitions [17].

Instead of delta function behaviour in susceptibility there is only a hump.

t s is typically very large since t

1, where s

s 2LD

e−

−

At the transition temperature of a ﬁrst-order phase transition, a mixed state can exist where two different bulk
phases are separated by an interface. The free energy densities of the two bulk phases are equal and the free
energy of the mixed state is higher than any of the coexisting pure phases by an amount Fs = s A, where A
is the area of the interface and s
is the interface tension [48]. In ﬁrst order phase transitions, the correlation
length remains ﬁnite in both the ordered and disordered phases, i.e., the correlation length does not diverge.
Thus, a different approach to ﬁnite size scaling must be used [17].

From fairly general arguments about the nature of discontinuities at a ﬁrst-order phase transition, Fisher and
Berker [49] obtained the inﬁnite volume limit approached by measurements performed at ﬁnite volumes. This
conventional scenario is based on a smooth behaviour of the renormalization group ﬂow and the existence of a
discontinuity ﬁxed point whose attraction domain contains the transition surface and has relevant exponents of
the form y = D [49]. The singularities associated with ﬁrst order transitions are generated by inﬁnite iterations
of renormalization group transformations in the thermodynamic limit. Correction terms were later calculated in
a particular phenomenological model called the double-Gaussian model, in which the peaks in the probability
distribution for the coexisting phases were approximated by Gaussians [50, 51]. This model correctly predicts
the ﬁrst term in a series of corrections in inverse powers of the volume V , around the leading term obtained by
Fisher and Berker [49].

More recent developments are due to Borgs, Kotecký and Miracle-Solé [52, 53]. The basic idea is to
decompose the partition function into a sum of the contributions, each due to one of the coexisting phases, and
to neglect contributions due to phase mixtures. Each of these contributions to the total partition function then
yield quantities related to free energies in the pure phases. The analysis proceeds by power series expansions
of these partial partition functions around the phase transition point, leading to moments expressed in inverse
powers of the volume [45]. According to this theory, for periodic boundary conditions, the speciﬁc heats and
Binder cumulants at the transition temperature can be represented by polynomials in 1/LD. If the L >> x ,
the contribution of the higher order terms are negligible [54, 55]. The difﬁculty arises when x
L. In this
case, higher order corrections are necessary and deciding the order of the transition becomes difﬁcult. Even
when large lattices are used, higher order terms may create difﬁculties during the ﬁtting procedure to the
simulation data. Such difﬁculties may be reduced by choosing the quantities for which the correction terms
play less important role. A good example for such quantity is the average energy measured at the inﬁnite lattice
transition point, which has exponentially small correction term enabling one to determine the inﬁnite lattice
critical point with great accuracy [53, 54, 56].

≥

Finite size scaling ideas for ﬁrst or second order transitions help to extract critical exponents and other

(cid:181)
information, but this requires prior knowledge of at least the nature of the transition. When the system
undergoes a weak ﬁrst order transition with x >> L, it becomes very difﬁcult to identify its nature even
with large-scale computations. This problem is even worse when one encounters a system for which nothing
is known [44, 57].

Lee and Kosterlitz [57] proposed a method which exploits the ﬁnite size scaling properties of the free energy
D F(L). These properties are unambiguous even when x >> L and, more importantly, can be implemented with
reasonable computational effort. This method depends on two key ideas: the identiﬁcation of D F(L), which
has a characteristic behaviour as a function of L at a ﬁrst or second order transition or in a single phase region,
and the usage of histograms enabling this to be computed accurately. They have shown that the positions of
the peak free energies in a histogram should scale as 1/L if the system is well into the ﬁrst order region. The
ratio of P(E) at its peaks and minimum can be used to estimate an interface free energy D F(L), signaling a
ﬁrst order transition if it increases with system size L.

This method uses the Helmholtz free energy F of a system. At low T , the low energy conﬁgurations dominate
the contributions to the partition function Z, even though there are relatively few such conﬁgurations. At high
T , the number of disordered conﬁgurations with high E is large, and hence high energy conﬁgurations have a
big contribution to Z. These considerations suggest that it is useful to deﬁne a restricted free energy Fr(E) that
includes only the main conﬁgurations at a particular energy E:

(1.26)

Fr(E) =

kT

−

e−

E/kT .

ln g(E)
(cid:3)

(cid:2)
For systems with a ﬁrst-order phase transition, a plot of Fr(E) versus E will show two local minima
corresponding to conﬁgurations that are characteristic of the high and low temperature phases. At low T , the
minimum at the lower energy will be the absolute minimum, whereas at high T the higher energy minimum
will be the absolute minimum of FrE. At the transition temperature, the two minima will have the same value
of Fr(E). For systems with no transition in the thermodynamical limit, there will only be one minimum for
all T . How will Fr(E) behave for the relatively small lattices that we can simulate? In systems with ﬁrst-
order transitions, the difference between low and high temperature phases will become more pronounced as
the system size is increased. If the transition is continuous, there are domains at all sizes, and we expect that
the behaviour of Fr(E) will not change signiﬁcantly while increasing the size. If there is no transition, there
might be a fake double minima for small systems that disappear for larger systems [36]. Lee and Kosterlitz
proposed the following method to classify phase transitions:

1. Perform a simulation at a temperature close to the suspected transition temperature and calculate H(E).
Usually, the temperature at which the peak in the speciﬁc heat occurs is chosen as the simulation
temperature.

2. Make use of the histogram method to calculate Fr(E) (cid:181)

b 0)E at neighbouring values
of T . If there are two minima in Fr(E), vary b until the values of Fr(E) at the two minima are equal.
The corresponding temperature is an estimate of the possible transition temperature Tc.

ln H0(E) + (b

−

−

3. The difference between the maxima and the minimum between the two peaks is used to estimate the free

energy barrier D Fr(E) at Tc.

4. Repeat steps (1-3) for larger systems. If D Fr(E) increases with size, the transition is ﬁrst order. If D Fr(E)
remains the same, the transition is continuous. If D Fr(E) decreases and goes to zero with size, there is
no thermodynamic transition.

The above procedure is applicable when the phase transition occurs by varying the temperature. Transitions
also can occur by varying the pressure or the magnetic ﬁeld. These ﬁeld-driven transitions can be tested by a
similar method. For example, consider the Ising model in a magnetic ﬁeld at temperatures below Tc. As we
vary the magnetic ﬁeld from positive to negative values, there is a transition from a phase with magnetization

M > 0 to a phase with M < 0. Is this a ﬁrst-order or continuous transition? To answer this question, we can
use the Lee-Kosterlitz method with a histogram H(E, M) generated at zero magnetic ﬁeld, and calculate Fr(M)
b 0)E. Because the states with
instead of Fr(E). The quantity Fr(M) is proportional to
positive and negative magnetization are equally likely to occur for zero magnetic ﬁeld, we should see a double
minima structure for Fr(M) with equal minima. As we increase the size of the system, D Fr should increase for
a ﬁrst order transition and remain the same for a continuous transition [36].

ln (cid:229) E H(E, M)e−

−

−

(b

Another way to determine the nature of a ﬁrst order phase transition is to use the Binder cumulant of energy
deﬁned by [58]:

UL = 1

E 4
2 .
i
h
E 2
3
i
h

−

If various cumulants (each one corresponding to different lattice sizes) are plot in the same graph, a behaviour
characteristic of a ﬁrst order transition appears as will be discussed in the next section.
It can be shown that the minimum value of UL is

UL,min =

2
3 −

1
3 (cid:16)

2

E 2
+ −
2E+E

E 2
−
− (cid:17)

+O(L−

d),

→

are the energies of the two phases in a ﬁrst order transition. These results are derived by
where E+ and E
considering the distribution of energy values to be a sum of Gaussians about each phase at the transition point,
which become sharper and sharper as L

[36].

−

On the other hand, equations (1.15) to (1.18) for second order transitions are valid only for inﬁnite systems
and, as a matter of fact, we can simulate only ﬁnite systems. Quantities that diverge in the inﬁnite case now
present peaks in the ﬁnite system. Furthermore, the peaks occur at a value Tc(L), for a given linear dimension
L, slightly different from the inﬁnite-lattice critical temperature Tc. However, at a second order phase change,
the critical behaviour of a system in the thermodynamical limit can be extracted from the properties of ﬁnite
systems by examining the size dependence of the singular part of the free energy density. This ﬁnite size
scaling approach was ﬁrst developed by Fisher [59]. According to his theory, the free energy of a system of
linear dimension L is described by the scaling ansatz:

F 0(tL1/n
Tc)/Tc, h is the magnetic ﬁeld and F 0 is a scaling function. The critical exponents a

, g , and
where t = (T
n all correspond to the values for the inﬁnite system. Appropriate differentiation of the free energy yields the
various thermodynamic properties with their corresponding scaling forms:

F(L, T, h) = L−

hL(g +b )/n

(1.29)

a )/n

, b

−

),

(2

−

,

(1.27)

(1.28)

(1.30)

b /n m0 xt ,

m = L−
C = La /n C0 xt ,
c = Lg /n
c 0 xt ,

is the temperature scaling variable [41].

where xt = tL1/n
To determine the transition temperature accurately one find the location of the peak in a thermodynamic
derivative, for example, speciﬁc heat. For a ﬁnite lattice the peak occurs at the temperature where the scaling
function Z0(xt ) is maximum, i.e., when

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
This temperature is the ﬁnite lattice (or effective) transition temperature Tc(L), deﬁned through the condition
xt = x∗t to vary with the lattice size, asymptotically, as:

xt =x∗t

dZ0(xt )
dxt

= 0.

Tc(L) = Tc + Tcx∗t L−

1/n

.

¥
These results for the scaling of thermodynamic quantities and Tc(L) are valid only for sufﬁciently large L
and temperatures close to Tc. Corrections to ﬁnite size scaling must be taken into account for smaller systems.
w, such that, for example, the magnetization
These are introduced as power law corrections with an exponent
w). As we move away from Tc, corrections to scaling
at Tc would scale with system size like L−
due to irrelevant scaling ﬁelds, or nonlinearities in the scaling variables must be introduced. Corrections due
leading to additional terms like a1tq + a2t2q + ...,
to irrelevant ﬁelds are expressed in terms of an exponent q
while nonlinearities in the scaling variables give rise to corrections terms of the form b1t1 + b2t2 + ..., [41].
If we take one correction term into account, the estimate for Tc(L) is then modiﬁed in terms of the coupling
K = J/kBT as follows:

b /n (1 + cL−

−

Kc(L) = Kc + l L−

1/n

(1 + bL−

w).

Before this equation can be used to determine Kc, it is necessary to have an accurate estimate for n and accurate
values for Kc(L).
It has traditionally been difﬁcult to determine n
from Monte Carlo simulation data because of a lack of
quantities which provide a direct measurement. This situation was greatly improved by Binder’s introduction
of the fourth order magnetization cumulant U [58] deﬁned by:

where m is the magnetization per spin. Binder showed that the slope of the cumulant at Kc, or anywhere in
the ﬁnite size scaling region, varies with system size like L1/n . In particular, the maximum value of the slope
scales as L1/n . If we take into account a correction to scaling term, the size dependence of the peak becomes:

The location of the maximum slope of U also serves as an estimate for an effective transition coupling which
can be used to determine Kc. In the same paper, Binder introduced the cumulant crossing method which extracts
a transition temperature by examining the behaviour of the magnetization cumulant for different lattice sizes.
Additional estimates for n can also be obtained by considering the logarithmic derivative of any power of the
magnetization, which has the same scaling properties as the cumulant slope. The location of the maximum
slope also provides an additional Kc(L):

U = 1

m4
h
m2
3
h

2 ,
i
i

−

dU
dK |

max = aL1/n

(1 + bL−

w).

¶
¶ K ln

mn
h

i

¶
= 1
¶ K h
mn
i
h
mnE
= h
i
mn
i − h
h

mn
E

i
.
i

(1.31)

(1.32)

To this end, the methods of ﬁnite size scaling are very helpful to determine the behaviour of inﬁnite systems
from data obtained on ﬁnite systems.

1.9 Monte Carlo Simulations on the Betts Lattice

Research of properties of lattices distinct from the commonly studied ones (square, triangular lattice) is a
key step in the development and prediction of the behaviour of possible new materials. A different lattice
proposed by Donald Betts is constructed removing 1\7 of the sites in a two dimensional triangular lattice [65],
accomplishing that each vertex has a coordination number of ﬁve and yielding another translationally invariant
lattice (see Fig.1.7). This structure is known as Betts or Maple Leaf lattice, and lies between the kagomé and
triangular ones, which have coordination numbers of four and six, respectively. It has a hexagonal unit cell of
six sites and ﬁfteen bonds, it is invariant under rotations through multiples of 60 ◦, and, contrary to the kagomé
and honeycomb lattices, it has no inversion symmetry [66]. To study the critical behaviour of this lattice, we

performed Monte Carlo simulations using the Potts model for q = 3, q = 4 and q = 5.

Figure 1.7: Maple Leaf lattice

For the q-Potts model, the magnetization is deﬁned as follows:

m =

Nmax
1

1/q

−
1/q

,

(1.33)

−
where Nmax is the maximum number of equally oriented spins for certain conﬁguration. We denote the lineal
6. Earlier work
size of the system studied as L, and this is related to the number of sites as nsit = L
has been already done on this lattice for q = 3, using the Metropolis algorithm, by Wang and Southern [67].
We applied Wolff algorithm instead, due to its proved better performance, and obtained similar results for
ferromagnetic and antiferromagnetic cases. As predicted, calculations shown a second order transition for the
ferromagnetic case and a ﬁrst order transition for the antiferromagnetic case. For q = 4 and q = 5 there is no
published work. We focus on the ferromagnetic regime in which the transition is found to be of second order
for q = 4 and of ﬁrst order for q = 5. In the latter case, the transition is very weak and more calculations are
needed to obtain better results.

×

×

L

1.9.1 q = 3, J < 0: Antiferromagnetic Case

We selected four lattice sizes L = 12, 18, 24 and 36 to perform Monte Carlo simulations. The number of
105, and
Monte Carlo steps used to equilibrate the system before making the average was of the order of 2
105. Binder cumulants of the order parameter E as a function
the number of steps used for averaging was 6
of temperature for all lattice sizes demonstrate that the system undergoes a ﬁrst order transition, as each curve
shown a deep minima whose value moves to lower temperature regions (Fig. 1.8). The critical temperature is
obtained from the deep minimums showed by all curves, and its near Tc = 0.444.
In Fig. 1.9, specific heats for each lattice size are plotted. There, the lattice size effect on the results can bee
clearly seen: the peaks are sharper and moves toward smaller temperatures at larger lattice sizes. The transition
temperature can be estimated as the temperature where the peaks have their maximum values, and obviously,
the best approximation is obtained for the largest lattice size.

×

×

0.665

0.4

0.42

0.44

0.46

0.48

0.5

kT

Figure 1.8: Energy cumulants suggesting a ﬁrst order phase transition for q = 3, J < 0, Tc = 0.444 and four
lattice sizes.

0.6665

0.666

0.6655

m
u
C
r
e
n
E

30

25

20

10

5

v
C

15

L=12
L=18
L=24
L=36

L=12
L=18
L=24
L=36

0.4

0.42

0.44

0.46

0.48

0.5

kT

Figure 1.9: Specific heats for q = 3, J < 0 and the same four lattice sizes.

Realizing that the phase transition appears to be of ﬁrst order, the next step is to calculate the energy distribution
106 steps to
histograms P(E) for various lattice sizes near the estimated critical temperature. We used 1
106 steps for averaging. The histograms always present two well-deﬁned peaks,
equilibrate the system and 4
and while increasing L, the minimum between the peaks becomes deeper. Moreover, the histograms are sharper
when more sites are taken into account (see Fig. 1.10). As explained in section 1.8, this is typical for ﬁrst order
phase transition, conﬁrming the nature of the transition for this case.

×

×

Tc=0.447812

Tc=0.445515

a)

)

E
P

(

c)

7000

6000

5000

4000

3000

2000

1000

4000

3000

)

E
P

(

2000

1000

0.3
E

0.3
E

b)

4000

3000

)

E
P

(

2000

1000

d)

4000

3000

)

E
P

(

2000

1000

0.3
E

0.3
E

0.1

0.2

0.4

0.5

0.1

0.2

0.4

0.5

Tc=0.44448

Tc=0.443847

0.1

0.2

0.4

0.5

0.1

0.2

0.4

0.5

Figure 1.10: Energy histograms for lattice sizes a) L = 12, b) L = 18, c) L = 24, and d) L = 36 for q = 3, J < 0.

The results shown in the present subsection correspond well with the values reported by Wang and Southern
[67]. The transition temperature reported by them is Tc = 0.445 and their histograms present a behaviour
identical to ours.

1.9.2 q = 3, J > 0: Ferromagnetic Case

In this case, the used lattice sizes are L = 18, 24, 30, 36, 48, 54 and 60. We considered a larger number of lattice
sizes in order to have more points available to estimate the critical exponents. The number of Monte Carlo
105. Binder cumulants
steps used to thermalize was 2
of the order parameter m as a function of temperature for the various L values demonstrated that the system
undergoes a second order transition. This is presented in Fig. 1.14. The critical temperature is obtained from
the intersection of all curves, each curve corresponding to a distinct lattice size. The obtained value for the
critical temperature is Tc = 1.2275. In Fig. 1.15, specific heats for different values of L are shown.

105, and the number of steps for averaging was 6

×

×

Figure 1.11: Magnetization cumu-
lant showing second order transi-
tion at Tc = 1.2275. (q = 3, J > 0).

Figure 1.12: Specific heats for
distinct lattice sizes for q = 3, J >
0.

L=18
L=24
L=30
L=36
L=48
L=54
L=60

1.23

m
u
C
 
g
a
M

0.6

0.5

0.4

0.3

0.2

v
C

25

40

35

30

20

15

10

1.24

kT

1.25

1.26

L=18
L=24
L=30
L=36
L=48
L=54
L=60

1.23

1.24

1.25

1.26

1.27

kT

We used ﬁnite size scaling techniques (see section 1.9) to calculate the critical exponents. To obtain n , for
example, we calculated the logarithmic derivative of the magnetization in a range near the critical temperature
for all lattice sizes selected, and the maximum value obtained for each curve was plotted against lattice size in
a log-log plot. A line was ﬁtted to these points, and its slope gave an estimate of the value of 1/n . Fig. 1.16
illustrates the procedure. It is important to note that logarithmic derivatives of higher orders of magnetization
can be also used to obtain estimations of 1/n .

To calculate a
, the quantities plotted as functions of lattice sizes are the maximum values of specific heat Cv.
Again, a linear ﬁt gives the value of a /n , from which a can be estimated using the value of n obtained earlier.

1

M
 
g
o
l
 
r
e
d
 
g
o

l

2.5

3

2

1.5

1

0.5

0

0

1.5

x
a
m

v
C
 
g
o

l

1

MC results 
linear fit

y=1.20723 x + 0.405137 

0.2

0.4

0.6

0.8

1.2

1.4

1.6

1.8

2

1
log L

Figure 1.13: Values of the logarithmic derivatives of the magnetization for different sizes of Betts lattice versus
the logarithm of L. The slope of the ﬁtted line y gives the value of n

for q = 3.

The data and the linear ﬁt are shown in Fig. 1.17.

MC results
linear fit

y = 0.46407x + 0.72963

0.5

0

0.2

0.4

0.6

0.8

1.2

1.4

1.6

1.8

2

1
log L

Figure 1.14: Log-log plot of the maximum values of CV for distinct sizes of Betts lattices. The fit gives the
value of a /n

for q = 3.

The critical exponent b
is extracted from the magnetization values at the critical temperature suggested by the
Binder cumulant of magnetization. The logarithm of these values (remember that each value corresponds to a
b /n .
lattice size) are plotted versus the logarithm of L, and the slope of the line ﬁtting the data corresponds to
−
If instead, the maximum values of the susceptibility are plotted versus L, the critical exponent g
is obtained
using the same procedure. (see Figs. 1.18 and 1.19).

MC results
linear fit

-0.2

y = - 0.11888x - 0.018635

0

0.2

0.4

0.6

0.8

1.2

1.4

1.6

1.8

2

1
log L

Figure 1.15: Logarithms of magnetization at the Tc value suggested by the magnetization cumulant versus
logarithms of L values. The ﬁt gives

for q = 3.

b /n

−

MC results
linear fit

y = 1.7629 - 0.48606

0

0.2

0.4

0.6

0.8

1.2

1.4

1.6

1.8

2

1
log L

Figure 1.16: Logarithms of susceptibility at the critical temperature versus logarithms of different linear sizes
L. The ﬁt gives g /n

for q = 3.

0

-0.1

 

c
T
M
 
g
o

l

x
a
m

1.5

 

 
g
o

l

2.5

3

2

1

0.5

0

-0.5

c
One of the common procedures used to obtain the transition temperature consists in plotting the temperature at
1/n . A
which the logarithmic derivatives of the magnetization for each lattice size have their maxima versus L−
line is ﬁt to the data and the intersection of this line with the y-axis gives an approximate of the true transition
temperature. This can be seen in Fig. 1.17 from which one gets Tc = 1.22676.

1.26

1.25

1

M

 
 
x
a
m
c
T

1.24

1.23

1.22

MC results
linear fit

y = 1.0376x + 1.2268

1.21
0

0.01

0.03

0.04

0.02
 -1/v

L 

Figure 1.17: Estimation of the transition temperature Tc (q = 3, J > 0).

In the next table, the critical exponents calculated by Wang and Southern [67], the values obtained in this work,
and the theoretical values are summarized. The values obtained with the Monte Carlo simulations agree well
to the 2D Potts classical values, but are not perfectly equal. This can be due to numerical errors, lattice size
effects and also because the Betts lattice can be seen as a triangular lattice with a large number of defects.
Something that is not so clear to us is why values obtained with the Wolff algorithm are less similar to the
universal values than those calculated by Wang and Southern.

a /n
b /n
g /n
1/n

Wang & Southern Results Our Results
0.04
0.42
±
0.132
0.002
±
0.05
1.74
±
0.02
1.19
±

0.464068
0.118885
1.76294
1.20723

0.00479
±
0.000203
±
0.01072
±
0.004891
±

Theory
0.4
0.13333
1.73333
1.2

Table 1.2: Comparison of the reported critical exponent values with the universal values predicted for the q = 3
2D-Potts model.

1.9.3 q = 4, J > 0: Ferromagnetic Case

105, and the number of steps for averaging is 6

The used lattice sizes are once again in the range L = 18 to L = 60. The number of Monte Carlo steps used
105. The Binder cumulant of the order
to thermalize is 2
parameter m as a function of temperature shows that the system undergoes a second order transition, and it
is displayed in Fig. 1.21. The critical temperature is obtained from the intersection of all curves, each curve
corresponding to a distinct lattice size, and is near Tc = 1.126. In Figs. 1.22 and 1.23, specific heats and
susceptibilities for different values of L are shown.

×

×

Figure 1.18: The Binder magnetiza-
tion cumulant for q = 4, J > 0.

Figure 1.19: Specific heats for dif-
ferent lattice sizes (q = 4, J > 0).

L=18
L=24
L=30
L=36
L=48
L=54
L=60

0.1

1.12

1.125

1.13
kT

1.135

20
1.12

1.125

1.13

1.135

1.14

1.145

kT

Figure 1.20: Susceptibilities for
different lattice sizes (q = 4, J > 0).

L=18
L=24
L=30
L=36
L=48
L=54
L=60

L=18
L=24
L=30
L=36
L=48
L=54
L=60

m
u
C
 
g
a
M

0.6

0.5

0.4

0.3

0.2

100

80

60

40

v
C

500

400

300

200

100

0
1.12

1.125

1.13

1.14

1.145

1.135
kT

c
The critical exponents were obtained with the same procedures explained for q = 3. Different thermodynamic
quantities are calculated for each lattice size, and the values near critical temperature are plotted against linear
size in various log-log plots. A line is ﬁt to the data and its slope is representative of some critical exponent,
depending on which thermodynamic quantity was selected to be plotted (Fig. 1.24 to Fig. 1.27). The critical
temperature is estimated in the same way explained earlier, and is shown in Fig. 1.28.

Figure 1.21: Values of the
logarithmic
derivatives of
magnetization for different
sizes of Betts lattice, versus
logarithm of L. The ﬁt gives
the value of 1/n
for q = 4,
J > 0.

Figure 1.22: Logarithm of
the maximum value of Cv
for different sizes of Betts
lattice, versus logarithm of L.
The ﬁt gives the value of a /n
for q = 4, J > 0.

2.5

3

2

1.5

1

0.5

1

M
 
g
o
l
 
r
e
d
 
g
o

l

2.2

2

1.8

1.6

x
a
m

 
v
C
 
g
o

l

1.4

1.2

1

0.8

0

MC results
linear fit

y = 1.3852x + 0.38994

0

0.2

0.4

0.6

0.8

1.2

1.4

1.6

1.8

2

1
log L

MC results
linear fit

y = 0.64454 + 0.87703

0.2

0.4

0.6

0.8

1.2

1.4

1.6

1.8

2

1
log L

 

c
T
M
g
o

 

l

-0.06

-0.08

-0.1

-0.12

-0.14

-0.16

-0.18

-0.2

0

2.5

3

2

1

0.5

0

-0.5

0

1.145

x
a
m

1.5

 

 
g
o

l

1

1.14

M
 
x
a
m
c
T

1.135

1.13

1.125

MC results
linear fit

y = -0.056253x - 0.0791

0.2

0.4

0.6

0.8

1.2

1.4

1.6

1.8

2

1
log L

MC results
linear fit

y = 1.7556x - 0.38982

0.2

0.4

0.6

0.8

1.2

1.4

1.6

1.8

2

1
log L

MC results
linear fit

y = 1.0286x + 1.1257

1.12

0

0.005

0.015

0.02

0.01
-1/v
L 

Figure 1.23: Logarithms of
the magnetization values at
the critical
temperature of
various lattice sizes versus
logarithms of L. The ﬁt gives
for q = 4, J > 0.

b /n

−

at

Figure 1.24: Logarithms of
the
the susceptibilities
critical temperature of vari-
ous lattice sizes versus loga-
rithms of L. The ﬁt gives g /n
for q = 4, J > 0

Figure 1.25: Estimation of
temperature for
the critical
q = 4, J > 0.

c
The values obtained for the critical exponents are summarized in the next table, along with the theoretical
values expected. The value obtained for b
is not near the expected value, and this can be due to an effect of
magnetic frustration on the lattice. More calculations need to be done in the future, with larger lattice sizes,
however it could be that this lattice does not belong to an universal group.

0.644537
0.0562526
±
1.75564
1.38519

Our Results Theory
1
0.125
1.75
1.5

0.03695
±
0.004001
0.02506
0.03172

a /n
b /n
g /n
1/n

±
±
Table 1.3: Comparison of critical exponent values obtained by us with the universal values predicted
theoretically for q = 4 2D-Potts model.

1.9.4 q = 5, J > 0: Ferromagnetic Case

×

105, and the number of steps for averaging is 6

The lattice sizes considered once again are in the range L = 18 to L = 60. The number of Monte Carlo steps
105. The Binder cumulant of the
used to thermalize is 2
order parameter E as a function of temperature suggests that the system undergoes a ﬁrst order transition, and
it is presented in Fig. 1.29. The critical temperature is obtained from the deep of all curves, each curve corre-
sponding to a different lattice size, and is near Tc = 1.0575. Speciﬁc heats are shown in Fig. 1.30.
For the calculation of energy histograms, the number of Monte Carlo steps used for thermalization is 1
and the number of steps for averaging varies from 3
next lattice sizes. The results are shown in Fig. 1.31.

106 for lattice sizes until L = 36, and 4

106,
×
106 for the

×

×

×

Energy histograms confirm that the transition is first order. The histograms are narrow at increased lattice size,
and the valleys also become deeper.

m
u
C
r
e
n
E

0.667

0.666

0.665

0.664

0.663

0.662

L=18
L=24
L=30
L=36
L=48
L=54
L=60

1.04

1.06

1.08

1.1

1.12

kT

Figure 1.26: Energy cumulant for q = 5, J > 0. The transition temperature is near 1.0575.

100

80

60

40

20

v
C

L=18
L=24
L=30
L=36
L=48
L=54

0
1.04

1.05

1.07

1.08

1.06
kT

Figure 1.27: Speciﬁc heats for q = 5, J > 0.

a)

10000

)

E
P

(

8000

6000

4000

2000

0

c)

15000

)

E
P

(

10000

5000

e)

20000

15000

)

E
P

(

10000

g)

)

E
P

(

5000

0

25000

20000

15000

10000

5000

0

b)

12000

9000

)

E
P

(

6000

3000

d)

15000

)

E
P

(

10000

5000

f)

)

E
P

(

25000

20000

15000

10000

5000

0

Tc=1.0598

Tc=1.05866

-4

-3.8

-3.4

-3.2

-3.6

E

0

-4

-3.8

-3.4

-3.2

-3.6

E

Tc=1.057919

Tc=1.05758

0

-4

-3.8

-3.4

-3.2

0

-4

Tc=1.0571

Tc=1.057

-3.6

E

-3.6

E

Tc=1.057013

E

-3.6

E

-4

-3.8

-3.4

-3.2

-4

-3.8

-3.4

-3.2

-4

-3.8

-3.4

-3.2

-3.6

E

Figure 1.28: Energy histograms for
lattice sizes a) L = 18, b) L = 24, c)
L = 30, d) L = 36, e) L = 48, f) L = 54
and g) L = 60.

1.9.5 Conclusion

The results obtained with Monte Carlo simulations and ﬁnite size scaling techniques show clearly the kind of
transition for each of the cases presented. The calculated critical exponents were near the theoretical values
for second order phase transitions, except for the exponent b
in the case q = 4 that requires a more detailed
analysis. Remember that for J > 0 the transition is supposed to be of second order for q
4 and of ﬁrst order
for q > 4. As it lies at the border between the two, the case q = 4 is difﬁcult to assess. Another aspect that
must be taken into account for further analysis is the type of lattice, because it is quite probable that magnetic
frustration effects could modify the magnetization-related critical coefﬁcients. For ﬁrst order transitions, the
values of the free energy barriers could be estimated from the difference between the two peaks and the valley.

≤

As we mentioned at the end of section 1.1, Monte Carlo simulations are a helpful tool in other areas. Thus,
in the next chapter we will move on and review a cluster identiﬁcation technique that involves Monte Carlo
calculations for the analysis of biological data.

Monte Carlo Simulations in Biology

Chapter 2

Contents

2.1 Proteins, DNA and Gene Expression . . .
. . . .
2.2 DNA Microarrays . .

. . . .

. . .

2.3 Gene Clustering . . .

. . .
2.3.1 Hierarchical Clustering . . .

. . . .

2.3.2 K-Means Clustering .
Self-Organizing Maps
2.3.3

. . .
. . .

. . . .
. . . .

. . . .
. . . .

2.3.4
2.3.5 Model Based Clustering . .

Self-Organizing Tree Algorithm . .
. . . .

. . . .
2.3.6 Quality-Based Algorithms .
2.3.7 Adaptive Quality-Based Clustering . . . .

. . . .

2.3.8 Biclustering and Some Physics Related Algorithms . . .

2.4 Superparamagnetic Gene Clustering: Monte Carlo Simulations

2.4.1 Detailed Description of SPC . . . .
. . . .
2.4.2

Future Directions . . .

. . .

. . . .
. . . .

. . . .
. . . .

. . .
. . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . .
. . .

. . .
. . .

. . .
. . .

. . .
. . .

. . .
. . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . .
. . .

. . .
. . .

. . .
. . .

. . .
. . .

. . .
. . .

. . .
. . .

. . .
. . .

37
38

39
41

42
42

42
43

44
45

45
46

47
48

36

2.1 Proteins, DNA and Gene Expression

Proteins are the complex molecules that make life possible. Keratin, essential in the structural conformation
of our hair and nails, is one among the many proteins used as supporting materials in biology. Cells are also
made of proteins, and enzymes, which are responsible for all chemical reactions inside living organisms, are
proteins too. The information to produce the sequence of amino acids conforming certain protein resides in
the DNA molecule, making it of great importance for life.

A single strand of DNA is formed by unities named nucleotides. Each nucleotide is composed by deoxyribose
(a sugar formed by ﬁve carbons), a phosphate group, and one of the four possible nitrogenous bases: adenine
(A), cytosine (C), guanine (G) and thymine (G). Phosphodiester bridges link the phosphate group of a
nucleotide and the sugar of the next one, building in this way a chain of nucleotides. The DNA molecule
is formed when two of these linear chains are joined by hydrogen bonds connecting the nitrogenous bases
standing out of the sugar-phosphate backbone of each chain. All this chemical construction has a double helix
structure envisioned in 1952 by Cricks and Watson [1]. The diameter of the helix is of 2 nm, and adjacent
bases are separated by 0.34 nm along the helix axis. Hence, the helix repeats itself every 10 residues on each
chain at intervals of 3.4 nm. Only speciﬁc pairs of bases can form hydrogen bonds: the purine base A always
pairs with the pyrimidine base T through two hydrogen bonds, and the other pyrimidine base C always pairs
with the purine base G this time by three hydrogen bonds [2]. A possible explanation for this situation is that
two purines require more than 2 nm for connection, which does not fit within the diameter of the helix. On the
other hand, there is too much space for two pyrimidines to get close enough to form hydrogen bonds between
them [3]. The rules of base pairing tell us that if we can “read” the sequence of nucleotides on one strand
of DNA, we can immediately infer the complementary sequence on the other strand. Thus, DNA looks like
a chemical code based on four letters, each one corresponding to the four nitrogenous bases, aligned along a
double-helicoidal chain. At the same time, the genetic code is a universal translation table formed by three-
bases words called codons. Each codon codiﬁes for a speciﬁc amino acid, so different sequences of codons
build distinct proteins, and they can also build RNA molecules with a functional role. One can obtain 64
distinct combinations mixing the four nitrogenous bases in clusters of three letters. This quantity is enough to
code for the 20 amino acids forming all proteins, and, as a matter of fact, almost all amino acids have more
than one codon to codify them. Three of these triplets are left apart to code for chain termination to release
proteins at the end of their production process. Moreover, one triplet is left as a signal to start the synthesis
process. A segment of DNA sequence with the instructions to codify for a functional product, protein or RNA,
is named a gene, and the genome is the collection of all the “recipes” for the products that an organism needs.
The genome of a simple organism such as yeast has around 7,000 genes and the latest estimate for the human
genome is of 25,000 genes [4]. It is important to stress that not all chain segments codify for proteins or RNA
molecules: an overwhelming majority of human DNA (98%) contains non-coding regions (introns) that do not
represent any particular functional product [5], although it is believed that they help to protect the genes.

Every cell of multicellular organisms has the entire set of information needed, but only some genes are
expressed depending on the function of the cell. For example, cells in our retina need photosensitive molecules,
whereas our liver do not. A gene is expressed in a cell when the protein or RNA it codes for is synthesized.
The large majority of abundantly expressed genes are associated with common functions, such as metabolism,
and hence are expressed in all cells. However, there will be differences in the expression proﬁles of different
cells, and even in a single cell, expression will vary with time, in a manner dictated by external and internal
signals that reﬂect the state of the organism and the cell itself [5].

Although DNA molecule contains all the instructions to make a huge amount of diverse proteins, DNA is not
able to come out of the eucaryotic cell nucleus. Therefore, when certain protein is needed, another molecule
called messenger RNA (m-RNA) is formed from DNA in a fundamental process called transcription, and is
this molecule who travels outside the nucleus carrying the information. RNA is also a nucleic acid but is
formed by a single of nucleotides, and its sugar (ribose) is slightly different from deoxyribose. Besides, RNA
has uracil U instead of the base thymine T. In cells, one can ﬁnd three important types of RNA: messenger

RNA (m-RNA), which transports the instructions to make a protein from the nucleus to the ribosomes, transfer
RNA (t-RNA) which carries the amino acids to the ribosomes where the proteins are assembled and is found
in the cytoplasm, and, ﬁnally, the r-RNA, or ribosomal RNA, which is one of the substances from what the
ribosomes are made out [6].

In the transcription process, the portion of DNA containing the sequence for the needed product splits off, and
then the free RNA nucleotides existing in the nucleus are attached to the exposed DNA nucleotides forming
a complementary chain of RNA. This m-RNA chain comes out of the nucleus carrying a complementary
sequence and arrives ﬁnally to the ribosome, where the sequence is translated into a protein(translation
process). A cell may need a large number of some proteins and a small number of others, i.e. every gene
may be expressed at a different level. The manner in which the instructions to start and stop transcription are
given for a certain gene is governed by regulatory networks. Transcription is regulated by special proteins,
called transcription factors, which bind to speciﬁc locations on the DNA, upstream from the coding region.
Their presence at the right site initiates or suppresses transcription. The basic paradigm of gene expression
analysis states that the biological state of a cell is reﬂected by its expression proﬁle: the expression levels of
all the genes of the genome. These in turn are reﬂected by the concentrations of the corresponding m-RNA
molecules [5].

Several genomes of diverse organisms have been completed in the last years, the human genome, published on
2002, among them. Now, the main focus is to understand the underlying function and mechanisms behind these
genomes. Some of the questions that remain unanswered included what are the functional roles of different
genes, how genes are regulated, how do genes and gene products interact, how does gene expression level
differ in various cell types and states, and how is gene expression changed by various diseases or compound
treatments[7].

2.2 DNA Microarrays

Although m-RNA is not the ultimate product of a gene, transcription is the ﬁrst step in gene regulation,
and information about the transcript levels is needed as a ﬁrst approach for understanding gene regulatory
networks. DNA microarrays or DNA chips are one of the latest breakthroughs in experimental molecular
biology precisely because they allow to monitor the expression of thousands of genes at the same time.
The potential this technology is tremendous: monitoring gene expression levels in different developmental
stages, tissue types, clinical conditions and different organisms can help understanding gene function and gene
networks, assist in the diagnosis of disease conditions and reveal effects of medical treatments.

There are currently two main technologies that generate large-scale gene expression data: cDNA and
oligonucleotide microarrays. CDNA microarrays contain large sets of complementary DNA sequences several
In oligonucleotide
hundred bases long, each set representing a gene, immobilized on a solid substrate.
microarrays, each gene is represented on the array by a set of 15-20 different oligonucleotide probes designed
to hybridize perfectly to some particular sequence, and some mismatch control oligonucleotides, identical to
the perfect match probes except for a single base-pair mismatch. These mismatch control oligonucleotides
allow estimation of cross-hybridization, improving reproducibility and accuracy of RNA quantiﬁcation, and
reducing the rate of false-positives. In general, oligonucleotides used consist about 20-25 nucleotides, and are
synthesized in situ with photolithography techniques [8], [9]. In brief, functioning of microarrays is based on
the preferential binding of complementary single stranded nucleic acid sequences, and a single microarray may
contain tens of thousands of spots. One of the most popular experiments involving cDNA microarrays consists
in compare m-RNA abundance in two samples. The m-RNA molecules are extracted from cells taken from two
tissues of interest (e.g. tumour and normal tissues) [10]. They are reverse transcribed from RNA to DNA and
their concentration is enhanced. The resulting DNA is transcribed back into ﬂuorescently marked single strand
RNA. For example, tumour tissue is labeled with a red dye and normal tissue with a green one. The solution
of marked and enhanced m-RNA molecules (“targets”) that are copies of the m-RNA molecules originally
extracted from the tissue, is placed on the chip and diffuses over the collection of single strand DNA probes.

When an m-RNA encounters a part of the gene of which it is a perfect copy, it hybridizes to it with a high
afﬁnity (considerably higher than with a bit of DNA of which it is not a perfect copy) and when the m-RNA
solution is washed off, only those molecules that found their perfect match remain stuck to the chip. Next, the
chip is illuminated with a laser, and the stuck targets ﬂuoresce. If RNA from tumour tissue is in abundance,
the spot will emit red light, but if instead RNA from normal tissue is in abundance, it will appear green. If
tumour and normal RNA bind equally, the spot will be yellow, while if neither binds, it will not ﬂuoresce
and appear black [7]. Therefore, by measuring the light intensity emanating from each spot, one obtains a
measure of the number of targets that stuck, which, in turn, is proportional to the concentration of these m-
RNA in the investigated tissues. CDNA microarrays are a differential technique because only ratios between
both ﬂuorescence wavelengths give meaningful information and hence, only relative expressions levels are
obtained. On the other hand, with oligonucleotide arrays, absolute expression levels are measured [11].
The characterization of genes expressed differently in normal and their corresponding tumour cells has been
particularly important [12]. Arrays have also being used to discover transcribed regions in genomic DNA [13];
to detect polymorphism in copy number of regions of the genome[14], which may be a new and important class
of mutation; and to analyze ampliﬁcations and deletions that are associated with oncogenic transformation and
some inherited conditions [15], [16]. A number of diagnostic applications for arrays have been suggested. The
ﬁrst to be granted approval by the US Food and Drug Administration is the Roche AmpliChip for cytochrome
P450. This test will help doctors determine an individual’s genotype to determine appropriate drugs and doses
to prescribe, minimizing harmful drug reactions [17].

2.3 Gene Clustering

Microarray data analysis can be divided into two general classes: supervised and unsupervised analysis. The
supervised approach assumes that for some (or all) proﬁles we have additional information, such as functional
classes for the genes, or diseased/normal states attributed to the samples. We can viewed this additional
information as labels attached to the rows or columns. Having this information, a typical task is to build a
classiﬁer able to predict the labels from the expression proﬁle. If a clasifﬁer that is able to distinguish between
two different, but morphologically closely related tumour tissues, can be constructed, such a classiﬁer can be
used for diagnosis. Classiﬁers are trained on a subset of data with a priori given classiﬁcation and tested on
another subset with known classiﬁcation. After assessing the quality of the prediction they can be applied to
data with unknown classification [7]. Unsupervised data analysis consists on clustering expression profiles to
find groups of co-regulated genes or related samples. An example of these two kind of clustering combined to
predict clinical outcome of breast cancer can be seen at [18].
Some short DNA sequences in or around the gene, speciﬁcally in the promoter region, serve as switches that
control gene expression. Special proteins (transcription factors) interact with these binding sites, and represses
or activates the transcription process of the gene [11]. Various genes that share common functions or the same
regulatory mechanism at the sequence level, can have the same binding site sequence. As a result, similar
expression patterns can correspond to similar binding site patterns. Then, a key step in the analysis of gene
expression data is the detection of groups of genes that exhibit similar behaviour of expression patterns (i.e.
are coexpressed), based on the idea that these genes share common regulatory or functional roles, assumption
that has proved right in many experiments (see for example [19]).

The challenge is then transformed into the problem of clustering genes into groups based on their similarity in
expression proﬁles. Instead of clustering genes, experimental conditions can also be clustered, the task being
now to ﬁnd groups of experimental conditions (which can be, for example, tumour samples) across which all
the genes behave similarly. This type of clustering can be helpful for diagnosis. In gene expression, elements
to be clustered are usually genes and the vector of each gene is its expression pattern; similarity between
genes can be measured in various ways that are problem dependent, for example by the correlation coefﬁcient
between vectors. The goal is to partition the elements into subsets, i.e. clusters, so that elements in the same
cluster are highly similar to each other and elements from different clusters have low similarity to each other.

An essential step to obtain an effective cluster analysis is the preprocessing of the initial data. Although this
work does not attempt to give a detailed explanation of the various preprocessing steps, the most common
ones are mentioned in the following. The ﬁrst step is the normalization of the hybridization intensities
within a single experiment or across experiments. Besides, expression ratios are not symmetrical in the
sense that upregulated genes have expression ratios between one and inﬁnity, while downregulated genes
have expression ratios squashed between one and zero. Taking the logarithms of these expression ratios results
in symmetry between expression values of up- and downregulated genes. This preprocessing step is called
nonlinear transformation of the data. Other, but uncommonly used transformations, include square, square
root, and inverse transformations. Missing value replacement is another step, and is made only in the case
of using a clustering algorithm that are not able to handle missing values due to technical reasons in the
data. Some genes do not really contribute to the biological process because their expression values show
little variation over the different experiments, and another problem are expression proﬁles with a considerable
number of missing values. This non desirable data is removed in the ﬁltering process. Biologists are mainly
interested in grouping gene expression proﬁles that have the same relative behaviour, i.e. genes that are up-
and downregulated together. Genes showing the same relative behaviour but with diverging absolute behaviour
will have a relatively high Euclidean distance, and cluster algorithms based on this distance measure will
therefore wrongfully assign the genes to different clusters. This can be prevented by applying standardization
or rescaling to the gene expression proﬁles so that they have zero mean and unit standard deviation. ([11]).

In a typical experiment to monitor gene expression levels several DNA chips are used, and since each DNA chip
contains thousands of spots, a huge amount of information is obtained. These results are summarized in a G
S
expression table, in which G represents the number of genes placed on every chip and S is the number of DNA
chips used (each chip accounting for different conditions, experiments, time points or samples). Therefore,
each row on this matrix corresponds to one particular gene and each column to a different sample. Each
element Egs of the matrix represents the expression level of gene g in sample or condition s. Each column
is called the proﬁle of that condition, and each row vector is the expression pattern of a gene across all the
conditions, commonly named expression proﬁle. If the input data for a clustering problem is given in this
form, it said to be as ﬁngerprint data. Other type of input data is similarity data, where pairwise similarity
values between elements are used. These values can be computed from ﬁngerprint data. Alternatively, the
data can represent pairwise dissimilarity. Fingerprints contain more information than similarity values, but the
latter can be used to represent the input to clustering in any application. Moreover, the ﬁngerprint matrix is
of order G
G. It is important to note that in gene expression
applications typically G >> S, while in tissue classiﬁcation applications often G << S [20].

S while the similarity matrix is of order G

×

×

×

We need a way to measure the similarity (or distance) between the genes or samples being compared and
clustered. We can regard these rows or columns in the matrix as points in n-dimensional space or as n-
dimensional vectors, where n is the number of samples for gene comparison, or number of genes for sample
comparison. The natural, so called Euclidean distance between these points in the n-dimensional space may
be the most obvious, but not necessarily the best choice. There is no theory how to choose the best distance
measure. Possibly one right distance measure in the expression proﬁle space does not exist, and the choice
should depend on the problem studied [7]. Some distance metrics commonly applied are the following:

1. Pearson correlation. The Pearson correlation r is the dot product of two normalized vectors (i.e.

the
cosine between two vectors). It measures the similarity in the shapes of two proﬁles, while not taking the
magnitude of the proﬁles into account, and therefore suits well the biological intuition of coexpression.

2. Squared Pearson correlation. This is the square of the Pearson correlation, which considers two vectors
pointing in the exact opposite directions to be perfectly similar, which might also be interesting for
biologists (because repression is a form of coexpression).

3. Euclidean distance. Euclidean distance measures the length of the straight line connecting the two
points. It measures the similarity between the absolute behaviours of genes, while the biologists are more
interested in their relative behaviours. Thus, a standardization procedure is needed before clustering

using Euclidean distance. Importantly, after standardization, the Euclidean distance between two points
2 = 2(1
y
x and y is related to the Pearson correlation by
|

−
4. Jackknife correlation. The jackknife correlation is an improvement for the Pearson correlation (which
is not robust to outliers). Jackknife correlation increases the robustness to single outliers by computing
a collection of all the possible leave-one-(experiment-)out Pearson correlations between two genes and
then selecting the minimum of the collection as the ﬁnal measure for the correlation.

r
− |

).
|

x
|

The ﬁrst generation of cluster algorithms used for gene expression proﬁles were developed for purposes did
not related with biological research (e.g. hierarchical clustering, K-means and self organizing maps(SOM)).
Although it is possible to obtain biologically meaningful results with these algorithms, some of their
characteristics often complicate their use for clustering expression data. More recently, new algorithms have
been developed speciﬁcally for gene expression proﬁle clustering to overcome some of the limitations of earlier
methods. These algorithms include, among others, model-based algorithms, the self-organizing tree algorithm
(SOMA), quality-based algorithms, and biclustering algorithms. Also, some procedures have been developed
to help biologists estimate some of the parameters needed for the ﬁrst generation of algorithms, such as the
number of clusters present in the data. While it is impossible to give an exhaustive description of all clustering
algorithms developed for gene expression data, we try here to illustrate some of them.

2.3.1 Hierarchical Clustering

Agglomerative or hierarchical clustering algorithms ([21]) are among the oldest and most widely used
clustering methods applied to gene expression data. Typically, the algorithm takes each expression proﬁle
as one cluster at the beginning. Then computes the distance between every pair of clusters, and the pair of
clusters with the minimum distance is merged; the procedure is carried on iteratively until all elements ends
into one single cluster. The whole clustering process is presented as a tree called a dendrogram and the original
data are often reorganized in a heat map demonstrating the relationships between genes or conditions. After
the full tree is obtained, the determination of the ﬁnal clusters is achieved by cutting the tree at a certain level or
height, which is equivalent to putting a threshold on the pairwise distance between clusters. The decision of the
ﬁnal clusters is arbitrary, because it is difﬁcult to predict which level will give the best biological results. Note
that the memory complexity of hierarchical clustering is quadratic in the number of gene expression proﬁles,
which can be a problem due to the large number of genes involved in experiments.

As in every step of agglomerative clustering, the two subsets that are closest or more similar to each other are
merged, the distance between two clusters has to be deﬁned. There are four common options:

1. Single linkage. The distance between two clusters is taken as the distance between the two closest data

points, each point belonging to a different cluster.

2. Complete linkage. The distance between the two furthest data points, each one in a different cluster.

3. Average linkage. Both single linkage and complete linkage are sensitive to outliers. Average linkage
provides an improvement by deﬁning the distance between two clusters as the average of the distances
between all pairs of points in the two clusters.

4. Ward’s method. At each step of agglomerative clustering, instead of merging the two clusters that
minimize the pairwise distance between clusters, Ward’s method ([22]) merges the two clusters that
minimize the “information loss” for the step. The “information loss” is measured by the change in the
sum of squared error of the clusters before and after the merge. In this way, Ward’s method assesses the
quality of the merged cluster at each step of the agglomerative procedure.

These methods yield similar results if the data consist of compact and well separated clusters. However, if
some of the clusters are close to each other or if the data have a dispersed nature, the results can be quite

different. Ward’s method, although less well known, often produces the most satisfactory results [23].

Eisen et al. developed a clustering software package based on average linkage hierarchical clustering [19]. The
clustering program is called Cluster, and the accompanying visualization program is called TreeView. Both
programs are available at http://rana.lbl.gov/EisenSoftware.htm.

2.3.2 K-Means Clustering

K-means clustering ([24], [25]) is a simple and popular partitioning method for data analysis. The number
of clusters K in the data is needed as an input for the algorithm. K-means starts by assigning at random all
gene expression proﬁles to one of the K clusters. Iteratively, the center, which is nothing more than the average
expression vector of each cluster, is calculated and then the gene expression vectors are reassigned to the cluster
with the closest cluster center. The initial mean vectors are called the seeds. The iterative procedure converges
when all the mean vectors of the clusters remain stationary or the given number of iterations is exceeded. Since
it is difﬁcult to predict the number of clusters in advance, the predeﬁnition of the number of clusters by the user
is arbitrary. In practice, this implies the use of a trial-and-error approach where a comparison and biological
validations of several runs of the algorithm with different parameter settings are necessary ([11]). Another
parameter that inﬂuence the result of K-means clustering is the choice of the seeds. The algorithm suffers from
the problem that with different seeds the algorithm can yield very different result.

2.3.3 Self-Organizing Maps

SOM ([26]) is a technique developed by Kohonen for ﬁtting a number of reference vectors to the distribution
of gene data, by means of a set of nodes. The nodes are the intersections of a two-dimensional grid (usually of
hexagonal or rectangular geometry). In the high-dimensional input space (with the gene expression vectors),
each node represents a reference vector (similar to the mean vectors in the K-means algorithm). The dimension
of the grid (e.g.
lattice of 6x5 nodes) needs to be speciﬁed a priori. The initial position of the reference
vectors is randomly chosen, and then the algorithm selects a random data vector p, identiﬁes the node np
whose reference vector is closest to p, and updates the position of all reference vectors towards p according
to a predeﬁned learning function. The amount of position adjustment determined by the learning function
decreases as the distance between n and np (in the grid) and the iteration number grow. The intuition for
this learning process is that the reference vectors that are close enough to p will be pulled towards it, and the
stiffness of the grid structure will propagate some of impact to neighbouring nodes. As a result, a reference
vector is pulled more towards input vectors that are closer to the reference vector itself and is less inﬂuenced
by the input vectors located further away. In the meantime, this adaptation procedure of reference vectors is
reﬂected on the output nodes (nodes associated with similar reference vectors are pulled closer together on
the output grid). The algorithm terminates when convergence of the reference vectors is achieved or after
completing a pre-deﬁned number of training iterations.

Because of the advantage in visualization, choosing the geometry of the output grid is not as crucial a problem
as the choice of the number of clusters for a K-means method. Like the K-means method, the initial choice of
reference vectors remains a problem that inﬂuences the ﬁnal clustering result of SOM clustering. A good way
to seed the reference vectors is to use the result from a principal component analysis(PCA) [23].

Tamayo et al. [27] devised a gene expression clustering software, GeneCluster, which uses the SOM algorithm.
The software is available at
http://www.broad.mit.edu/cancer/software/genecluster2/gc2.html.

2.3.4 Self-Organizing Tree Algorithm

SOTA combines SOM and hierarchical clustering techniques. As in SOM, SOTA maps the input gene proﬁles
to an output space of nodes. However, the nodes in SOTA, instead of being in a two-dimensional grid, are in
the topology (or geometry) of a binary tree. The number of nodes in SOTA is not ﬁxed from the beginning (in

contrast to SOM) because the tree structure of the nodes grows during the clustering procedure.

The initial system is composed of two external elements, denoted as cells, connected by an internal element
that its called node, like a tree with two leaves. Each cell (or node) is a reference vector with the same size
as the gene proﬁles.
In the beginning, the entries of the two cells and the node are randomly initialized.
The series of operations performed until a cell generates two descendants is called a cycle. During a cycle,
cells and nodes are repeatedly adapted by the input gene proﬁles. Adaptation in each cycle consists on the
presentation of all expression proﬁles to the network, and this implies two steps: ﬁrst, each gene proﬁle is
associated with the cell whose reference vector is located closest to it, and second, the reference vector of
this cell and its neighbouring nodes, including its parent node and its sister cell, are updated based on some
neighbourhood weighting parameters (which perform the same role as the neighbourhood function in SOM).
Thus, a cell is moved into the direction of the expression proﬁles that are associated with it. The network
follows its growing process by replicating the cell whose associated proﬁles exhibits the highest heterogeneity,
i.e., the largest variability (deﬁned by the maximal distance between two proﬁles that are associated with the
same cell). This cell gives rise to two new descendants cells and become a node. The values of the two new
cells are identical to the node that generate them and the whole procedure starts again. The growing process
ends when the heterogeneity of the system falls below a threshold. This threshold can be set to zero for a
fully resolved dendogram similar to that provided by hierarchical clustering. If the threshold is obtained from
the randomized distribution of data, SOTA will provide the cluster hierarchy that minimizes the probability of
having missassigned genes to them [28].

SOTA has two crucial advantages: the topology is that of a hierarchical tree, and the clustering obtained is
proportional to the heterogeneity of the data, instead of the number of items (this is due to the fact that SOTA
is distribution preserving while SOM is topology preserving). In both SOM and SOTA, the training process
changes the vectors in the nodes to weighted averages of the gene expression patterns associated to them. The
advantage in the case of SOTA is that the binary topology produces a nested structure in which nodes at each
level are averages of items below them (items that can be nodes or in the case of terminal nodes, genes). This
makes it straightforward to compare average patterns of gene expression at different hierarchical levels even
for large data sets [28].

2.3.5 Model Based Clustering

Model Based Clustering assumes that the data are generated by a ﬁnite mixture of underlying probability
In this case, each cluster Ci is represented by a
distributions such as multivariate normal distributions.
multivariate Gaussian model pi in d dimensions:

pi(y j

m i,(cid:229)

|

i

) =

1
(2p )d/2

d/2
i |

|

1/2(y j

m i)T ((cid:229)

i)−

1(y j

e−

−

m i),

−

(2.1)

i the mean and covariance matrix of the multivariate normal

i can be represented by its eigenvalues decomposition, which in general takes the

where y j is an expression proﬁle and m i and (cid:229)
distribution respectively [11].
The covariance matrix (cid:229)
following structure:

= l iDiAiDT
i ,

i

(2.2)

where Di is the orthogonal matrix of the eigenvectors of (cid:229)
i, Ai is a diagonal matrix whose elements are
i, and l i is the constant of proportionality. This decomposition implies a
proportional to the eigenvalues of (cid:229)
nice geometric interpretation of the clusters: Di controls the orientation, Ai controls the shape, and l i controls
the volume of the cluster. Note that simpler forms of the covariance structure can be used (e.g., by having some
of the parameters take the same values across clusters), thereby decreasing the number of parameters that have
to be estimated but also decreasing the model ﬂexibility (capacity to model more complex data structures).

(cid:229)
(cid:229)
The mixture model p itself takes then the following form:

where K is the number of clusters and p i is the prior probability that an expression proﬁle belongs to cluster Ci
so that:

p(y j) =

p i pi(y j

m i,(cid:229)

|

),

i

K

i=1

K

i=1

p i = 1.

(2.3)

(2.4)

i(i = 1, ..., K), and K itself) of this mixture model. In a ﬁrst step p i, m i, (cid:229)

In practice we would like, given a collection of expression proﬁles y j( j = 1, ..., n), to estimate all the parameters
(p i, m i, (cid:229)
i(i = 1, ..., K) are estimated
with an EM algorithm using a ﬁxed value for K and a ﬁxed covariance structure [11]. In the EM algorithm,
the Expectation steps and Maximization steps alternate.
In the E step, the probability of each observation
In the M step the
belonging to each cluster is estimated conditionally on the current parameter estimates.
model parameters are estimated given the current group membership probabilities. When the EM algorithm
converges, each observation is assigned to the group with the maximum conditional probability [29]. This
parameter estimation is then repeated for different values for K and different covariance structures. The
result is thus a collection of different models ﬁtted to the data and all having a speciﬁc value for K and a
speciﬁc covariance structure. In a second step the best model in this group of models is selected (i.e., the
most appropriate number of parameters and a covariance structure is chosen here). This model selection step
involves the calculation of the Bayesian Information Criterion (BIC) for each model [30], which is not further
discussed here.

A good implementation for model based clustering (called MCLUST) is available at
reported good results using this software on several
www.stat.washington.edu/fraley/mclust. Yeung et al.
synthetic data sets and real expression data sets. McLachlan et al.
[31] have also implemented model-
based clustering in a Fortran program called EMMIX, which is also freely available from the web at
http://www.maths.uq.edu.au/˜gjm/emmix/EMMIX.f.

2.3.6 Quality-Based Algorithms

Quality-based algorithms produces clusters with a quality guarantee that ensures that all members of a cluster
are coexpressed (this property is called transitivity). This concept was introduced by Heyer, Kruglyak and
Yooseph, ([32]) and their implementation is called QT _ Clust. The quality of a cluster C is deﬁned as a
diameter (equal to 1
si j, where si j is the jackknife correlation between expression proﬁles i and j),
but the method can be easily extended to other deﬁnitions.

mini, j

−

∈

The algorithm considers every expression proﬁle in the data set as a cluster seed (one could also call this a
cluster center) and iteratively assigns the expression proﬁles to these clusters that cause a minimal increase in
diameter until the diameter threshold, i.e., quality guarantee, is reached. Note that at this stage every expression
proﬁle is made available to every candidate cluster and that there are as many candidate clusters as there are
expression proﬁles. At this point, the candidate cluster that contains the most expression proﬁles is selected as
a valid cluster and removed from the data set where after the whole process starts again. The algorithm stops
when the number of points in the largest remaining cluster falls below a threshold. Note that this stop criterion
implies that the algorithm will terminate before all expression proﬁles are assigned to a cluster.

This approach has some advantages, for example it is possible to ﬁnd clusters containing highly coexpressed
genes, and these clusters might therefore be good seeds for further analysis. Moreover, genes not really
coexpressed with other members of the data set are not included in any of the clusters. Some disadvantages
are that the quality guarantee of the clusters is a user deﬁned parameter hard to estimate, it is hard to use by
biologists, needs extensive parameter ﬁne-tuning, and produces clusters all having the same ﬁxed diameter not
optimally adapted to the local data structure [11].

(cid:229)
(cid:229)
2.3.7 Adaptive Quality-Based Clustering

In the ﬁrst step, a quality-based
Adaptive quality-based clustering ([33]) consist of a two-step approach.
approach is performed to locate a cluster center in an area where the density of gene expression proﬁles is
locally maximal using a preliminary estimate of the radius (i.e.
In the second
step, called adaptive step, the algorithm re-estimates the radius of the cluster so that the genes belonging to it
are, in a statistical sense, signiﬁcantly coexpressed. To this end, a bimodal and one-dimensional probability
distribution (the distribution consists of two terms: one for the cluster and one for the rest of the data) describing
the Euclidean distance between the data points and the cluster center is ﬁtted to the data using an expectation-
maximization (EM) algorithm.

the quality) of the cluster.

Finally, step one and two are repeated, using the re-estimation of the quality as the initial estimate needed in
the ﬁrst step, until the relative difference between the initial and re-estimated quality is sufﬁciently small. The
cluster is subsequently removed from the data and the whole procedure is restarted. Note that only clusters
whose size exceeds a predeﬁned number are presented to the user.

In adaptive quality-based clustering, users have to specify a threshold for quality control. This parameter has
a strict statistical meaning and is therefore much less arbitrary (in contrast to the case in QT_Clust). It can be
chosen independently of a speciﬁc data set or cluster and it allows for a meaningful default value (95%) that
in general gives good results. This makes the approach user friendly without the need for extensive parameter
ﬁne-tuning. Furthermore, with the ability to allow the clusters to have different radius, adaptive quality-based
clustering produces clusters adapted to the local data structure[11]. An application of Adaptive Quality- Based
Clustering to nervous system is found in [34].

However, the method has some limitations like it does not converge in every situation. A server running the
program is available at http://homes.esat.kuleuven.be/˜thijs/Work/Clustering.html

2.3.8 Biclustering and Some Physics Related Algorithms

Clustering can be applied to either the rows or the columns of the data matrix, separately. Biclustering, on the
other hand, performs clustering in these two dimensions simultaneously. This means that clustering derives a
global model while biclustering produces a local model[35]. The term biclustering was ﬁrst used by Cheng and
Church [36] in gene expression data analysis. It refers to a distinct class of clustering algorithms that perform
simultaneous row-column clustering. One of the earliest biclustering formulations is the direct clustering
algorithm introduced by Hartigan [24], also known as block clustering.

The goal of biclustering techniques is thus to identify subgroups of genes and subgroups of conditions,
by performing simultaneous clustering of both rows and columns of the gene expression matrix, instead
of clustering these two dimensions separately. We can then conclude that, unlike clustering algorithms,
biclustering algorithms identify groups of genes that show similar activity patterns under a speciﬁc subset
of experimental conditions [35].

There are also several physics related clustering algorithms, e.g. Deterministic Annealing [37] and Coupled
Mass [38]. Deterministic Annealing uses the same cost function as K-means, but rather than minimizing it
for a ﬁxed value of clusters K, it performs a statistical mechanics type analysis, using a maximum entropy
principle as its starting point. The resulting free energy is a complex function of the number of centroids and
their locations, which are calculated by a minimization process. This minimization is done by lowering the
temperature variable slowly and following minima that move and every now and then split (corresponding to
a second order phase transition). Since it has been proven [39] that in the generic case the free energy function
exhibits ﬁrst order phase transitions, the deterministic annealing procedure is likely to follow one of its local
minima [5].

Finally, it is important to stress that clustering methods have been used in a large variety of scientiﬁc disciplines
and applications that include pattern recognition [40], learning theory [41], astrophysics [42], medical images
and data processing [43], machine translation of text [44], satellite data analysis [45], as well as speech

recognition [46].

2.4 Superparamagnetic Gene Clustering: Monte Carlo Simulations

This method takes the data points generated by gene expression proﬁles as sites of an inhomogeneous Potts
ferromagnet, and was ﬁrst proposed by Eytan Domany et al. [47]. The presence of clusters in the data gives
rise to magnetic grains, and working in the superparamagnetic phase, the SPC algorithm decides if a data
point belong to the same grain using the pair correlation function of the Potts spins. Additionally, temperature
controls the level of resolution obtained.

A Potts system is said to be homogeneous when its spins are on a lattice and all nearest neighbour couplings
are equal, Ji j = J. This system exhibits two phases, at high temperatures is paramagnetic or disordered, and
at low temperatures is ordered. In the disordered phase the correlation function Gi j decays to 1/q when the
distance between points vi and v j is large (remember from last chapter, that q is the number of possible states
in the Potts model). This is the probability to ﬁnd two completely independent Potts spins in the same state.
At very high temperatures even neighbouring sites have Gi j
1/q. As the temperature is lowered, the system
undergoes a sharp transition to an ordered, ferromagnetic phase, meaning that one Potts state dominates the
system. At very low temperatures Gi j
In strongly inhomogeneous Potts models, spins form magnetic grains with very strong couplings between
neighbours that belong to the same grain, and very weak interactions between all other pairs. At low
temperatures such a system is also ferromagnetic, but as the temperature is raised the system may exhibit
an intermediate, super-paramagnetic phase. In this phase strongly coupled grains are aligned (i.e. are in their
respective ferromagnetic phases), while there is no relative ordering of different grains. This is illustrated in
Fig. 2.1.

1 for all pairs vi, v j, i.e. all spins have the same q [48].

≈

≈

Figure 2.1: At high T all sites have different spin values, but as T is lowered, regions of aligned spins appears
(superparamagnetic phase). At low T, the system is completely ordered.

At the transition temperature from the ferromagnetic to super-paramagnetic phase a pronounced peak of c
is observed [47]. As the temperature is further raised, the super-paramagnetic to paramagnetic transition is
reached; each grain disorders and c abruptly diminishes by a factor that is roughly the size of the largest
cluster. Thus the temperatures where a peak of the susceptibility occurs and the temperatures at which c
decreases abruptly indicate the range of temperatures in which the system is in its super-paramagnetic phase.
In principle, one can have a sequence of several transitions in the super-paramagnetic phase: as the temperature
is raised the system may break ﬁrst into two clusters, each of them in turn breaks into more (macroscopic) sub-
clusters and so on. Such a hierarchical structure of the magnetic clusters reﬂects a hierarchical organization of
the data into categories and sub-categories [49].

In concreteness, SPC method consists on three stages. First, to specify the Hamiltonian which governs the
system. Second, ﬁnd the temperature range where the superparamagnetic phase take place, taking into acount
the susceptibility behaviour. Finally, the correlation of neighbouring pairs of spins, Gi j is measured and, taking

into account these values, the clusters are formed.

2.4.1 Detailed Description of SPC

Each expression proﬁle is represented as a point in a D dimensional space, and a random spin value s
i,
i = 1, 2, ..., q is assigned to it. A small value q hinders the identiﬁcation of the SPM clusters since different
clusters are then forced to point into the same Potts direction. Too large q makes the calculations more
cumbersome. However, the results depend only weakly on the value of q. In the next step, the neighbours
of each spin vi are calculated using the K mutual neighbour criterion. This criterion initially calculates the K
nearest points of each site. If vi has v j among its K nearest points, and v j, in turn, has vi as one of its K nearest
points, then vi and v j are considered as neighbours.
The average number of neighbours ˆK and the average of all distances a between neighbouring pairs vi and v j
are then computed, and ﬁnally the interaction couplings which will appear in the Hamiltonian will be calculated
as follows:

Choosing Ji j in this way creates strong interactions between spins associated with the data from high density
regions, and weak interactions between neighbours that are in low density regions [50].

Any different assignment of spins to data points S has an energy cost given by:

d2
i j
2a2

1
ˆK

e−

Ji j = 


0



if vi and v j are neighbours

otherwise

H(S) = (cid:229)

Ji jd s

i,s

j ,

i, j

(2.5)

(2.6)

i = s

where the sum is over neighbouring sites. The function d s
j is the Kroenecker symbol taking the value 1
i,s
when s
j and 0 otherwise. The lowest possible energy cost, H(S) = 0 is attained when we assign the same
spin to all points, which corresponds to all data points being assigned to the same cluster. Moreover, as one
chooses interactions that are a decreasing function of the distance di j, then the closer two points are to each
other, the more likely is for them to be in the same state. In summary, this Hamiltonian procedure penalizes
placing spins at points i, j in different clusters, and this penalty decreases with the distance between the points
[49].

The next step is the calculation of magnetization, susceptibility and correlation function for pairs of neighbours
Gi j over a range of temperatures using Monte Carlo technique. The original creators of SPC used the Swendsen
Wang algorithm.

As the temperature increases, M varies from 1 to 0 via sharp phase transitions. At low temperatures the system
is fully magnetized and the ﬂuctuations in m are negligible. As T increases to the point where the single cluster
breaks into subclusters (or become completely disordered), ﬂuctuations become very large. Hence, one expect
to identify the transitions at which clusters break up by the sharp peaks of the susceptibility [51].
The strategy is to vary T and measure c (T ). Transitions show up as peaks of c . At temperatures between
transitions, we expect to observe relatively stable phases that correspond to some clusters being ordered
internally and uncorrelated with other clusters. Within each such phase, Gi j is measured. The value of Gi j
is the probability to ﬁnd the two Potts spins s
j in the same state, i.e. the probability to ﬁnd them in the
same cluster. By the relation to granular ferromagnets we expect that the distribution of Gi j is bimodal; if both
spins belong to the same ordered grain (cluster), their correlation is close to 1; if they belong to two clusters
that are not relatively ordered, the correlation is close to 0. Rather than thresholding the distances between
pairs of points to decide their assignment to clusters, we use the pair correlations, which reﬂect a collective
aspect of the data’s distribution [49].

i and s

Clusters are identiﬁed in three steps:

1. Build the cores of the clusters using a thresholding procedure. If Gi j > 0.5, a link is set between the
neighbour data points vi and v j. The resulting connected graph depends weakly in the value used in this
thresholding, as long as it is bigger than 1/q and less than 1
2/q [49]. The reason is that the distribution
of the correlations between two neighbouring spins peaks strongly at these two values and is very small
between them.

−

2. Capture points lying in the periphery by linking each point to its neighbour of maximal correlation. Of

course, some points were already linked in step one.

3. Data clusters are identiﬁed as the linked components of the graph obtained in the previous steps.

The temperature controls the resolution at which the data are clustered.
It is intuitively clear that if a set of data points form a dense cloud, isolated from the rest of the data,
the corresponding spins will form a ferromagnetic domain at some low temperature, which will become
paramagnetic and lose its correlations only at a high temperature. Hence the size of the temperature interval
dT in which such a ferromagnetic domain exists can be used as a measure of the stability and signiﬁcance of
the corresponding data cluster.
Some of the demonstrated useful properties of SPC are the following: (a) the number of clusters is determined
by the algorithm itself and not externally prescribed (as is done by SOM and K-means); (b) presents stability
against noise; (c) generates a hierarchy (dendrogram) and provides a mechanism to identify in it robust, stable
clusters (by the value of dT ); (d) ability to identify a dense set of points forming a cloud of an irregular (non-
spherical shape) as a cluster [5].

The SPC method has been used in various contexts, like computer vision [52], speech recognition [49] and
identiﬁcation of clusters of companies in stock indices [53]. Its ﬁrst direct application to gene expression data
has been for analysis of the temporal dependence of the expression levels in a synchronized yeast culture [54],
identifying gene clusters whose variation reﬂects the cell cycle. Subsequently, the SPC was used to identify
primary targets of p53 [55], the most important tumour suppressor that acts as a transcription factor of central
importance in human cancer. SPC has been used also to cluster protein sequences [56], and to classify or
identify new genes associated with colon and skin cancer [57].

2.4.2 Future Directions

The location of the superparamagnetic phase in the SPC algorithm is closely related to the phase transitions
occurring in the system. The introduction of the Wolff algorithm instead of the originally used Swendsen-
Wang algorithm will probably improve the efﬁciency of the method, and this is left for future investigations,
as well as a comparison of different methods with the SPC algorithm.

Chapter 3

Gompertz Equation

Contents

3.1 History of Gompertz Equation . .
. . .
3.2 Tumour Growth Equations .

3.2.1 Exponential Growth .
3.2.2 Logistic Growth . . .

. . .
. . .

3.2.3 Von Bertalanffy Growth . .
. . . .
3.2.4 Gompertz-Makeham Growth . . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . .
. . .

. . .
. . .

. . .
. . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . . .
. . . .

. . .
. . .

. . .
. . .

. . .
. . .

3.2.5 Mathematical Properties and Comparison Between Logistic and Gompertz Growth .

50
54

55
57

59
60

61

49

3.1 History of Gompertz Equation

x),
In 1724 Moivre presented his hypothesis of uniform decrement, summarized in the expression y(x) = K(w
where y(x) represents the surviving persons with age x, K is the slope or velocity with which the population
diminishes in the mortality table, and w is the maximum survival age for the population. The Moivre straight
line was recommended for an age range between 12 and 86, in which it adjusted better. This linear hypothesis
was exceeded by Benjamin Gompertz, who believed in the existence of two general causes of mortality: chance
and the increasing inability of men to avoid death. Gompertz took into account only the biological causes, and
his hypothesis was based on the following idea: “Men resistance to death diminish with time in a proportional
rate” [1].

−

Benjamin Gompertz was a British mathematician interested, besides other subjects as astronomy, in the
problem of life insurances and mortality rates in the nineteenth century. He worked with death and population
records of people in England, Sweden and France between ages 20 and 60 and noted that the arithmetic
increases in age were consistently accompanied by geometric increases in mortality, and that this law of
geometrical progression appeared in large portions of the different tables of mortality. Nowadays, the simple
formula describing the exponential rise in death rates between sexual maturity and extreme old age, g (t) = eg t
is better known as Gompertz equation. In his ﬁrst paper about this subject published in 1820 [2], Gompertz
identiﬁed this peculiar pattern among different european populations for a limited portion of the age range. For
his second paper, Gompertz used equal intervals of longer periods of time than in his previous work and found,
for example, that the differences in the natural logarithm between successive 10 year age intervals between
ages 15 and 55 in a mortality table for Deparceaux, France, were all nearly identical. Gompertz believed
he had discovered a general law of mortality after observing similar patterns of geometrical progression in
other tables of mortality, and published it in 1825 in the Philosophical Transactions of the Royal Society, in
a paper whose title was “On the Nature of the Function Expressive of the Law of Human Mortality” [3]. In
his third paper he improved his original notation and ﬁnally presented the last one in 1860, published after his
death, where he noted that in his primary equation for geometric progression, the parameters were supposed to
represent constant quantities for a very long term of years [4].

From 1825 to 1862 Gompertz was involved on the subject of what was called vital statistics in an effort
to understand why there were consistent age patterns of death among people. Gompertz assumed that human
beings have certain powers of integration and that those powers could be divided into a principal or fundamental
part and an auxiliary part responsible for the maintenance of the principal power of integration. This auxilar
force is some kind of recuperative force, a power to oppose destruction that the organisms lose in equal
proportions in equal small intervals of time. Gompertz also believed on the presence of powers destroying
this auxiliary force and multiplied this hypothetical force against life by the population alive to estimate the
number of deaths in the age interval. Gompertz realized that if the force to destroy life operated equally on
everyone, then all individuals should have the same length of life, something he knew could not be true. As a
possible explanation, Gompertz emphasized the importance of chance in the timing with which death occurs.
At that time the concept of genetic heterogeneity was not known, instead, Gompertz invoked chance to explain
why members of a presumed homogeneous cohort die at different times [5].

After Gompertz death, the subject remained mostly unknown in the scientiﬁc community. In 1860, W. M.
Makeham improved Gompertz law of mortality incorporating a term due to chance in the equation. He noted
that the logarithms of the probabilities of living from Gompertz’s formula increased at a faster pace at higher
age than at younger ages, so he developed a theory of partial forces of mortality that intended to explain this.
Makeham linked the diseases associated with the diminution of the vital power to speciﬁc organ systems -the
lungs, heart, kidneys, stomach and liver, and brain. These diseases represented a signiﬁcant portion of total
mortality at that time and worked well in solving the observed problem of greater increased forces of mortality
at older ages than at younger ages. His formula accurately portrayed the mortality experience of various human
populations between ages 10 and 95 [6].

Gompertz and Makeham recognized that the original Gompertz equation did not apply to the entire age range,

the formula was intended to apply only between the ages of 20 and 60. In fact, Gompertz suggested in his last
paper that there are four distinct periods in the life span between which separate laws of mortality apply: birth
to 12 months, 12 months to 20 years, 20 years to 60 years, and 60 years to 100 years. Even within this range
he recognized that his formula worked best “provided the intervals be not greater than certain limits.” The
applicability of the Gompertz function to only a speciﬁed range within the life span have been recognized by
many researchers but still nowadays some researchers reject the entire Gompertz paradigm after ﬁnding that it
does not apply to older ages for some organisms [5].

Scientists started searching biological explanations for Gompertz’s law of mortality until the ﬁrst years of
the twentieth century, motivated in part by the fact that increases in mortality among nonhuman species also
followed Gompertz’s law for a large portion of their life span. Differences among species were assumed to be
just a matter of scale.

Brownlee (1919) suggested that mortality due to senescent causes should be expressed ﬁrst at about age 12,
become the dominant force of total mortality by age 30, and advance at an exponential rate from ages 12 to
85. He also recognized that a law of mortality was likely to be obscured by nonsenescent mortality. Brownlee
identiﬁed a formula that accurately describes the rate of decay of substances subject to the action of organic
ferments (i.e., bacteria exposed to a disinfecting solution) which he believed produced a time dependent decay
analogous to the loss of vital power. He found that his formula corresponded to Makeham’s adjustment of
Gompertz’s equation, leading him to the conclusion that life depends on the energy of certain substances in the
body, an energy which is gradually being destroyed throughout life [7].

Wright (1926) [8] appears to have ﬁrst suggested the use of the Gompertz curve for biological growth.
Following Wright, Davidson (1928) used the Gompertz curve to represent the growth in body weight of cattle
[10]. Weymouth, McMillin and Rich (1931) used the Gompertz curve to represent the growth in shell size of
the razor clam [9]. They stated that the curve also gives good ﬁts for the guinea pig and the rat. It must be
noted that they have found necessary in their most extensive series, the use of two different curves to graduate
the ﬁrst and second halves of their data. Weymouth and Thompson (1931) also applied the Gompertz curve to
the growth of the Paciﬁc cockle [11]. Since then, a number of authors ﬁtted Gompertz formula to growth data
for animals and organisms with remarkable success.

Already in 1934, Casey ﬁtted the Gompertz model to tumour growth data and was followed by numerous
authors [12]. The general conclusion has been that the Gompertz law very well describes tumor growth, but a
biological explanation for this success has not been found.

The ﬁrst person who attempted to perform an interspecies comparison of mortality, in this case, the mortality
schedules of Drosophila and humans, was Raymond Pearl. Pearl (1921) plotted the survival curves of US
males in 1910 on a scale with those of the longwinged male Drosophila [13]. Although Pearl acknowledged
the arbitrary nature of this comparison, particularly in the choice of the beginning age interval for both species,
he demonstrated a remarkable similarity in the curves. In his second study (1922), Pearl reﬁned his interspecies
approach and found that the form of the distributions was fundamentally the same [14]. In addition, he found
that humans had a higher life expectancy at every age relative to the Drosophila, a discovery that he attributed to
humans’ control over their environment. Pearl was the ﬁrst to manipulate experimentally the living conditions
of his study populations to test the importance of accidental deaths on the survival curves. He was convinced
that his research would reveal a “fundamental biological law” of mortality for more than one species, but after
two decades of research using this scaling approach on an expanded repertoire of species, Pearl and Minor
[15] emphatically declared that a universal law of mortality did not exist. Pearl and Minor identiﬁed what
Makeham had identiﬁed 68 years before as the main problem -the inability to partition total mortality into its
intrinsic and extrinsic causes of death.

In the 50’s, researchers turned to the use of radiation, which they thought was a method to accelerate
senescence, for understanding aging and making interspecies extrapolation of mortality risks. George Sacher
(1950), a pioneer in this ﬁeld, assumed that the effects of radiation combined additively with natural aging,
without introducing new pathology [16]. Under this assumption, the Sacher model accounted for natural aging

by the inclusion of a simple linear time dependent term to the integral lethality function for radiation injury. He
observed that at low daily dose rates, the reciprocal difference in mean survival times for a control and for an
irradiated population was proportional to the intensity of exposure. In 1952 Austin Brues and George Sacher
envisioned injury as a process that disrupts the normal physiological oscillations about a mean homeostatic
state within an organism, and that there were lethal injuries that an organism could not tolerate. Brues and
Sacher noted that this biological model of injury and failure lead directly to the formulation Gompertz derived
to describe his law of human mortality [17]. Using mean survival times, Sacher estimated cumulant lethality
functions to compare empirically the similarities and differences in species’ responses to radiation injury within
phases of the injury process. Sacher and Trucco, however, noted that they had insufﬁcient knowledge about the
ﬂuctuation process in real systems and that the very fact of performing an observation introduced a disturbance
in the study [18].

Like Brody before him, Failla (1958) deﬁned vitality as the reciprocal of the age speciﬁc mortality rate [19].
After expressing the Gompertz function in terms of vitality, he suggested that the resulting equation described
the loss of vitality from a one hit random process acting on the cell population. Failla concluded that the
vitality curve must describe a deterioration in the function of cells with age. He attributed the deterioration of
function to somatic mutations, and interpreted the Gompertz aging parameter (derived from mortality data)
as an estimate of the spontaneous somatic gene mutation rate per cell per year. With some assumptions
about generation length and the number of genes in diploid cells, Failla (1960) calculations suggested that
the mutation rate per generation was similar across species [20]. This would imply that the somatic mutation
rate per unit time is higher in short-lived animals than in animals with longer life span.

Szilard (1959) also developed a theory on the nature of the aging process based on the concept of accumulated
somatic damage [21]. Inherited mutations in somatic genes whose function is critical late in the life span
was viewed as the major explanation for the different lengths of human beings’ life. Like Sacher’s lethal
bound, Szilard envisioned death occurring when the fraction of somatic cells unaffected by mutation reached
a critical threshold. He suggested that the magnitude of life shortening following exposure to radiation should
be inversely related to the square root of the number of chromosomes of a species. As such, mice and humans
should experience a similar radiation-induced life shortening when expressed as a fraction of the life span.

The quantitative as well as the biological importance of the Gompertz distribution was further enhanced by
the work of Bernard Strehler and Albert Mildvan (1960) [22], these investigators presented a Gompertz-based
theory of mortality and aging that was based on disruptions of the homeostatic state of an organism. Their
approach differed from that of Sacher in the functional form of the equations used to describe the disturbances
of the “ energetic environment” of an organism challenged by stress. Strehler also made several important
observations of the biological effects of radiation compared to the effects of aging. He noted that (1) aging
effects are typically associated with post-mitotic cell whereas radiation primarily affects dividing cells; (2)
radiation damage is primarily genetic whereas the effects of aging appear to be more broad spectrum; (3) some
species (e.g., Drosophila) do not exhibit life shortening even after large doses of radiation; and (4) the dose
required to double the mortality rate (i.e., Gompertz slope) produces a much larger increase in the mutation
rate. Based on this observations, Strehler rejected the notion that radiation acts through a general acceleration
of the normal aging process.

Studies of radiation effects continued to make extensive use of the Gompertz distribution throughout the
1960’s. Like Greenwood (1928) before him [23], Grahn (1970) proposed to use the ratio of Gompertz slopes to
adjust for life span differences when making mortality comparison between species [24]. Grahn successfully
used this scaling approach to predict reductions in human life expectancy following radiation exposure from
doses response relationships observed in mice.

It seems that within the ﬁeld of radiation, extrapolation between species had some success, but this differs from
Pearl’s conclusion that a fundamental law of mortality applying to various species does not exist. The reason
lies on the environmental conditions of the animals being compared, because Pearl’s studies were based on the
comparison with species that experienced high levels of exogenous mortality, and the laboratory animals used

in radiation studies came from controlled environments without predation and where infectious diseases were
minimized. These environmental conditions are far more similar to the sheltered environment and medical
attention received by humans, leading to a better comparison between species [5].

The modern development of biodemography originated with a series of articles published by Weiss and
colleagues [25]. Weiss (1990) recognized that the ﬁeld of genetic epidemiology could provide insights into
the biological constraints inﬂuencing the shape of the mortality function in populations. Weiss’s merging of
the ﬁelds of demography and genetics and his subsequent elaboration using principles of evolutionary biology
served as a launching point for the latest developments in the ﬁeld of biodemography.

For most species survival beyond the age of reproduction is an extremely rare event with most deaths for a
cohort occurring just after birth. At these ages the vast majority of deaths result from forces of mortality that
are unrelated with senescence (e.g., predation or diseases). In this hostile environments, early reproduction
has become an essential element in species’ reproductive strategies ([26]). Consistent patterns of growth and
development observed within species suggest that the reproductive biology of organisms alive today represents
a genetic legacy of responses to environmental conditions that prevailed during early evolutionary history of
each species. The modern evolutionary theory of senescence is based on the premise that selection is effective
in altering gene frequencies until the time before the end of the reproductive period. When the normally high
force of external mortality is controlled and survival beyond the end of reproductive period becomes a common
occurrence, senescence and senescent-related diseases and disorders have the opportunity to be expressed.
Because there are common forces (i.e., extrinsic mortality) responsible for molding species’reproductive
strategies, a common pattern of intrinsic mortality, an evolutionary imprint, may become visible when species
[27] have argued that the timing of
are compared on a biologically comparable time scale. Carnes et al.
genetically determined processes such as growth and development are driven by a reproductive biology, molded
by the necessity of early reproduction, which in turn is driven by the normally high external force of mortality.
If individual senescence is an inadvertent consequence of these developmental processes as predicted from
the evolutionary theory of senescence, then age patterns of intrinsic mortality in a population should also be
calibrated to some element(s) of a species’s reproductive biology. These ideas have been introduced in various
computational models.

Recent mortality schedules reveal a more pure biological inﬂuence because the external causes of death
have been dramatically reduced by medical and technological advances and almost everyone now lives to
his biological potential. At the same time, a greater understanding of biological processes has also allowed the
modiﬁcation of intrinsic mortality (e.g. medicine, treatments and operations) altering the survival trajectories
of individuals whose intrinsic diseases have already been expressed. From this perspective, the biological
life span of a specie is one based on a mortality schedule that would prevail in the absence of survival time
manufactured by medical or pharmaceutical intervention of any kind - a view consistent with that of Raymond
Pearl. When enough members of a population beneﬁt from these medical interventions, it is possible that the
life span of the population will exceed its biologically based limits. All past research on mortality suggests
that Gompertz was right all along: there are biological reasons for why death occurs when it does, and a law
of mortality for many species may very well exists. Which is the limit imposed by this law of mortality for
humans, and the degree to which these limits can be manipulated is still subject of great interest [5].

The Gompertz equation was developed exclusively for human beings both as an empirical tool to describe the
age pattern of death from all causes during a limited time frame, and as representing a law of mortality that
arises from inherent biological processes. Gompertz never imagined that his equation would become a tool
used in the analysis not only of failure time of organisms but also of failure time of mechanical devices and in
the description of biological and tumour growth.

3.2 Tumour Growth Equations

A mathematical model of tumour growth is a mathematical expression of the dependence of tumour size
in time. The common feature is that growth follows a sigmoid curve with three distinct phases: the initial
exponential phase, the linear phase and the plateau. The most widely used framework is consider tumour
growth as a dynamical system described by ordinary differential equations, although some growth models are
formulated successfully also by partial differential equations.

The simple tumour growth model is described by a single, ﬁrst order, autonomous differential equation:

y(t) = f (y)

y(0) = y0 > 0,

(3.1)

where y(t) > 0 is tumour size at time t and f (y) is a function describing the growth rate. The solution of
(3.1) has the remarkably property of a monotonic ascending function of time when f (y0) > 0, or a monotonic
In the case of an ascending function, this implies that the
descending function of time when f (y0) < 0.
stationary (critical) point corresponds to the maximum possible tumor size, ym, achieved for t
. Similarly,
in the case of a descending function, the stationary point achieved for t
0. The model given by
Eq. (3.1) describes continuous tumour growth which asymptotically approaches the ﬁnite value ym or inﬁnity
(that corresponds to the unattainable unrestricted growth). On the other hand, (3.1) can describe continuous
tumour regression from size y = y0 to extinction (y = 0) at some ﬁnite time or when t
. However, the
solution of (3.1) can not describe oscillatory tumour growth with regressions and relapses. The solution y(t)
represents a sigmoidal ascending curve characteristic of tumour growth if a unique point of inﬂection exists.
This condition can be achieved for some simple functions f (y). It is conceivable that functions f (y) exist
which yield solutions with multiple inﬂection points resulting in “multisigmoidal” curves. Such curves would
describe tumor growth with recurrent stagnation phases [28].

is ys

→

→

→

≥

More complex models of tumour growth kinetics are described by systems of ordinary autonomous ﬁrst-order
differential equations:

dy
dt = f (y, x1, . . . , xn),
dxi
dt = fi(y, x1, . . . , xn),
for i = 1, . . . , n and with initial conditions y(0) = y0 > 0, xi(0) = x0. Here xi, . . . , xn are variables describing
various factors responsible for tumour growth (e.g., levels of available nutrients, growth factor activity, size
of quiescent cell population, etc.). The functions f and fi and the variables xi are chosen to represent growth
mechanisms of particular interest. Unlike the simple model given by Eq. (3.1), the system of two differential
equations (n = 1 in Eq. (3.2)) can describe smooth oscillatory tumor growth [28].

(3.2)

(cid:26)

There is no further advance without specifying model functions f (y) that represent tumor growth mechanisms.
The ﬁrst approach is to consider the classical chemical kinetics paradigm, based on mass conservation. For
tumour growth this paradigm can be expressed in its simplest form by:

y(t +

t) = y(t) + G(y(t))

t
△
t is equal to the size at time t enlarged by G(y(t))

D(y(t))

△

△

−

t.

t (generation of mass)
The tumor size (mass) at time t +
△
during the small time interval
t (degradation of mass) during the same time
interval. The functions G(y) > 0 and D(y) > 0 are the growth and degradation rates respectively, assumed to
depend on tumor size only. Within the limit of t

△
t, and diminished by D(y(t))

0, (3.3) becomes a differential equation:

△

△

−
Necessary conditions for the establishment of a sigmoidal (ascending) growth curve includes:

= G(y)

D(y),

y(0) = y0 > 0.

→

dy
dt

(3.3)

(3.4)

G(y0) > D(y0);

•

¥
¥
¥
Only one solution ym > y0 of G(y) = D(y) exists as does only one solution yi > 0 of dG(y)

dy = dD(y)

dy

, and

•

•

yi < ym.

In the latter case, ym is the maximal tumor size achieved asymptotically and yi is the tumor size at the inﬂection
point. The stated conditions can be met easily if both G(y) and D(y) are monotonic ascending functions. In
a typical kinetics paradigm, these functions are given by the power function, kyn, where k is the rate constant
and n is the order of the process.

The second approach takes a fundamental idea: tumor growth results from exponential cell proliferation (often
called “Malthusian growth”) described by:

This equation describes unrestricted growth leading to inﬁnite tumor size, a notion not supported by
Initially tumor growth behaves approximately according to (3.5), but eventually it becomes
observation.
stagnant due to restrictions within the tumor itself and those imposed by the environment. Thus, exponential
growth must be modiﬁed to include terms that restrict growth. This can be achieved by multiplying y on the
ym F(y) = 0. The corresponding differential
right-hand side of (3.5) with a function F(y) > 0 satisfying limy
equation is:

→

dy
dt

= a y,

a > 0.

dy
dt

= a yF(y).

(3.5)

(3.6)

Biologically, the function F(y) can be interpreted as a growth function, i.e. as the ratio of proliferating cells in
tumour versus total cell population, or more generally, the ratio of growing tumour mass versus total tumour
1 and that parameter a be interpreted as the
mass. The consequence of this interpretation requires that F(y)
growth rate constant for the hypothetical unrestricted growth.

≤

The maximal tumor size, ym, predicted by the model is often designated as carrying capacity, S > 0, of the
environment for tumors in vitro or of the host for tumors in vivo. It is useful to introduce S explicitly into the
growth fraction model:

dy
dt

= a yg
(cid:16)

y
,
S (cid:17)

y(0) = y0 > 0.

(3.7)

Mathematically, both considered approaches [yielding Eq. (3.4) or Eq. (3.7)] are equivalent and one can easily
transform one equation into the other. However, on the vantage point of modeling and interpretation, the two
approaches are quite different. The same differential equation can yield an intuitively acceptable interpretation
in one approach, while it can lack a transparent interpretation in the other. The paradigms of mass conservation
and growth fraction can obviously be used in development of more elaborated models yielding systems of
equations Eq. (3.2) [28].

3.2.1 Exponential Growth

If the number of cells in a tumour at time t is denoted by y(t), then, at time t + D
expressed as y(t + D
y(t + D
t)
long interval than in a short one) so:

t, the number of cells would be
t can be found subtracting
y(t), but this number is proportional to the duration of the time interval (i.e. more cells arrive in a

t). The number of cells added to the tumour in the time interval D

−

y(t + D

t)
y(t+D

y(t) = ND
y(t)
= N.

−
t)
−
t

t,

(3.8)

Suppose that the increase in number of the cell population is due entirely to cells being born. As time progresses
the division or birth rate may be altered so that more or less divisions occur, so the number of cells born in the
interval D
t may vary with time. Moreover, if there are more cells at time t, more divisions are likely to occur

D
and N will also depend on y(t). Letting D
respect to t, and we have:

t

→

0, the left-hand side of Eq. (3.8) becomes the derivative of y with

dy(t)
dt

= N

t, y(t)
,
}
{

where we show explicitly the quantities on which N depends. The expression (1/y)(dy/dt) is known as the
speciﬁc growth rate. Therefore, another way of describing Eq. (3.9) is to say that the speciﬁc growth rate is
N(t, y)/y.

It is plausible to assume that, in a short time interval, there will be about twice as many births as in a time
interval of half its length. Thus, one could expect that the number of births would be proportional to y(t)D
t
t with a
when D
a suitable constant. Then Eq. (3.9) becomes:

t is small. If the birth rate does not change in the time interval, D

t can be expressed as a y(t)D

which states that the speciﬁc growth rate is a
, the same for all times and all sizes of tumour. This equation has
the same form of the expression found in Eq. (3.5) and its solution can be realized by the following procedure:

leading to:

where y0 is any constant that can be ﬁxed by putting t = 0 in Eq. (3.12), and evidently is the size of the tumour
at t = 0.

dy(t)
dt

= a y(t),

a

y(t)
t
dy
0 dt =
y ,
y(0)
a t = ln
R
R
y(t)/y(0)
,
}
{

y(t) = y0e

a t,

(3.9)

(3.10)

(3.11)

(3.12)

)
t
(
y

20

15

10

5

0

0

0.5

1

1.5

2

2.5

3

Exponential Curve

t

Figure 3.1: Exponential growth, with y0 = 1, a = 1. See Eq. (3.12)

The behaviour of a tumour, or a population, as time increases according to (3.12) is displayed in ﬁgure (3.1).
The size grows steadily, and the increase becomes dramatic as time goes on. Of course, in any real situation,
there will be a limit to the growth because of a shortage of essential supplies or insufﬁcient food. Nevertheless,

many organisms exhibit exponential growth in their initial stages [29].

Notice that Eq. (3.10) has been derived on the assumption that only births can occur. In the event that there
are deaths but no births the same equation can be reached. However, a
is now a negative number since the
population or cell number decreases in the time interval D
t. It follows from (3.12) that the population decays
exponentially with time from its size at t = 0.

More facets of the population problem can be incorporated in this equation. For instance, we may postulate
that the number of deaths in the short time interval D
t. Similarly, individuals may enter the given
area from outside, say I(t)D
t. Likewise, some may depart from the area giving
rise to E(t)D

t emigrants. We can model this population facets via the following equation:

t immigrants in the interval D

t is b y(t)D

leading to:

y(t + D

t)

y(t) = a y(t)D

t

b y(t)D

t + I(t)D

t

E(t)D

t,

−

−

−

dy(t)
dt

=

a

(cid:0)

b

−

y(t) + I(t)
(cid:1)

−

E(t),

t

→

when D
0. More generally, I and E could be made to depend on y so that Eq. (3.14) (often called Verhulst´s
differential equation) can be difﬁcult to solve. Notwithstanding, it is transparent that, if we hope to predict
the size of a population at a given time, to ﬁnd the solution of a differential equation will be an essential
requirement [29].

3.2.2 Logistic Growth

A characteristic that must be taken into account is that the multiplication in cell numbers is restricted by
crowding effects. Biochemically, these may be due to lack of nutrients, shortage of oxygen, change in pH or
the production of inhibitors, for example. Whatever the cause, the cells are interacting between them. Since
each cell can interact with y others, there are y2 possibilities in total. This suggests that, in Eq. (3.9), we should
put:

N

t, y(t)
}
{

= a y(t)

b y(t)2,

−

where a and b are positive constants. The term involving a
increase due to division. The term containing b
the substitution of Eq. (3.15) toward Eq. (3.9) we have:

is the same as before and takes into account the
represents the inhibition on growth causes by crowding. With

which is called the differential equation of logistics. In the growth fraction paradigm Eq. (3.7), the equation
equivalent to Eq. (3.16) is:

where S = a /b
If we integrate Eq. (3.16) from 0 to t, we obtain:

.

dy
dt

= a y

b y2,

−

dy
dt

= a y(1

y/S),

−

t
0 dt =

R

R
t = 1
a
= 1
= 1

y(t)
y(0)

a y
y(t)
y(0)
R
a ln

a ln

(cid:16)

(cid:16)

dy
b y2 ,
−
1
y −
(cid:16)
y
a
b y
(cid:17)|
−
b y(0)
y(t)
{
b y(t)
y(0)
{

a

b
b y
−
y(t)
y(0),
a
a

−
−

dy,

(cid:17)

.
}
} (cid:17)

(3.13)

(3.14)

(3.15)

(3.16)

(3.17)

(3.18)

Hence, solving for y(t), we have:

b y(0)
y(t)
{

−

a

=
}
y(t) =

b y(t)
{
b y(0)+

y(0)ea t
a
}
−
a y(0)
a t ,
b y(0)
a
{

e−
}

−

(3.19)

which is known as the logistic law of growth. In terms of the carrying capacity S = a /b
next form:

, Eq. (3.19) takes the

Sy(0)
S
{
The logistic curve is used to model a great variety of physical situations in which growth of a quantity is
“self-limited”, that is, the growth rate of the quantity depends on the size of the quantity in such a way that if
the quantity grows beyond a certain level, the growth rate decreases. The logistic model nicely describes the
behaviour of certain types of growth in business, economics, populations and sales forecasts [29].

y(t) =

(3.20)

e−
}

y(0)+

a t .

y(0)

−

)
t
(
p

 3.5

N0/a

 3

 2.5

 2

N0/2a

 1.5

p(0)

 1

 0.5

 0

 0

 0.2

t0

 0.4

 0.6

 0.8

 1

 1.2

 1.4

Logistic curve

t

Figure 3.2: Logistic curve with a = 3, b = 1, y(0) = 1.

The curve of logistic growth is shown in ﬁgure (3.2), assuming that a > b y(0). The curve rises steadily from
the value y(0) at t = 0 to an eventual value of a /b
, there being neither maxima nor minima in the curve. There
is, however, a point of inﬂexion where the curve crosses its tangent at t = t0 where:

t0 =

ln

1
a

a

b y(0) −

(cid:16)

1
,
(cid:17)

(3.21)

and y(t0) = a /2b

.

Notice that the ﬁnal value a /b of y does not involve y(0), so that, no matter what the initial size of the
population, its ﬁnal size is always the same and does not depend on the starting size of the population.

In 1838, Verhulst proposed this model as a description of population growth. The model had been virtually
forgotten until Pearl “rediscovered” it years later. Since then it has been often used as a point of departure for
more advance population models. In 1945, Rashevsky, one of the founders of modern mathematical biology,
arrived to the logistic model by considering tumor growth. Interestingly, the logistic model was used for ﬁtting
to tumor growth data much less frequently than the Gompertz model. On the other hand, the logistic model has
been used in kinetics models describing immune response to tumor, where it has served as a mathematically

simple description of immunologically unaffected tumor growth. Similarly, the logistic model has been used
in models for chemotherapy optimization [28].

It is important to remember that the logistic law assumes that all cells divide at the same rate, and this is not
always true. There are types in which some cells divide faster than others. Whether the logistic law can be
applied still depends upon the differences between the various rates of division present. If the rates are not too
far apart it is probably feasible to take a as their average. For greater deviations may be necessary to adopt a
model in which the statistics of the number of cells of a given age and type at a given time play a part [29].

The immediate generalization of the logistic model Eq. (3.16) is:

with solution

dy
dt

= a y

n
b y

,

−

n > 1,

y =

k

k
− (cid:16)

−

h

n

y1
−
0

n )t

ea (1
−
(cid:17)

i

1

−

(1

n ) ,

k =

.

a
b

Function (3.23) is often designated as the Richard function. The solution of Eq. (3.22) has been thoroughly
, and n as
discussed by Fletcher. Interestingly, when this model was ﬁtted to tumor growth data with y0, a
free parameters, in most cases it was found that n
1. Clearly, n cannot be exactly 1, because then (3.22)
would describe unrestricted exponential growth. However, if (3.22) is reparametrized somewhat peculiarly as:

, b

≈

dy
dt

=

a +

n

(cid:16)

y
1 (cid:17)

n

−

b

−

n
y

1

b

−

= ay

by

−

1

,

yn

1

−

n

−
1

−

then in the limit n
by ln y, using the general result:
cx
limx
1 can be interpreted as a clear indication that the
−
Gompertz model is a much more adequate description of tumor growth kinetics than is the logistic model [28].

x = ln c.. The result that ﬁtting to data yielded n

1 one obtains the Gompertz model dy/dt = ay

0
→

→

≈

−

1

3.2.3 Von Bertalanffy Growth

The combination of the chemical kinetics paradigm and the principle of allometry led von Bertalanffy to
formulate the model of organismic growth represented by the equation:

It was shown that for any m and n
functions, but in terms of the modiﬁed beta-function,

the solution of Eq. (3.25) can not be expressed in terms of elementary

dy
dt

m

= a y

n
b y

,

−

m > 0,

n > 0.

b (x, r, s) =

(1

u)r

−

1us

−

1 du

x

Z

1/2

−

and its inverse.
The model characterized by m = 2/3 and n = 1 is based on the so called “surface rule”, which is often named
von Bertalanffy model. The underlying notion is that the anabolic growth rate is proportional to the surface
area (expressed as y2/3 where y is interpreted as volume), and the catabolic growth rate is proportional to the
volume itself. Another especial case of Eq. (3.25) is the generalized logistic model with m = 1, presented by
Eq. (3.22), and its counterpart with n = 1:

dy
dt

= a ym

b y,

−

m < 1.

The solution of this equation is of the same form as Eq. (3.23), because Eq. (3.27) can be formally transformed
into Eq.
(3.27)
(3.22) by parameter redeﬁnition, as clearly presented by Fletcher. Obviously, model Eq.
contains the von Bertalanffy “surface rule” model.

(3.22)

(3.23)

(3.24)

(3.25)

(3.26)

(3.27)

Returning to the general model Eq. (3.25), we wish to point out its not obvious relationship to the Gompertz
model. Similarly to the generalized logistic model, Eq. (3.25) can be reparametrized into:

In the limit e

→

0, one then obtains the so called “generalized Gompertz model”:

dy
dt

= aym

1
e bym

(ye

−

1).

−

dy
dt

m

= ay

m

by

ln y,

−

which for m = 1 reduces to the original Gompertz model.
described by the generalized von Bertalanffy model with m
model [28].

In practice, this means that tumor growth data
1, are described also by the Gompertz

1, n

≈

≈

3.2.4 Gompertz-Makeham Growth

In the paradigm of chemical kinetics (see Eq. (3.4)), the equation

dy
dt

= a y

b y ln y,

−

y(0) = y0 > 0,

has the Gompertz growth formula as the unique solution. The growth rate a y reﬂects the Malthusian law with
clear interpretation, but the degradation rate lacks any such interpretation.

In the growth fraction paradigm (Eq. (3.7)), the equation equivalent to Eq. (3.30) is obtained for g(z) =
i.e.

−

ln z,

dy
dt

g y ln

=

−

y
,
S (cid:17)

(cid:16)

y(0) = y0 > 0.

(3.31)

Thus the growth fraction g(z) is the simplest possible elementary transcendental function which obeys
g(z)
(0, 1] with g(1) = 0. Besides the simplicity argument, there is not an obvious interpretation
of the growth fraction function. The solution of Eq. (3.31) and Eq. (3.30) reads:

[0, 1) for z

∈

∈

b t )

e−

ln y0)(1

y = y0e(a /b
y = y0eln(S/y0)(1
e−
−
g t
ln(S/y0)e−

−

= Se−

.

−
g t )

Comparison of (3.30) and (3.31) yields interesting relations among parameters:

(3.33)
These relations suggest that the inherent growth rate constant g (the rate constant for unrestricted growth, i.e.,
S
is also proportional to the Malthusian growth rate
constant a
. This indicates that the Gompertzian growth is regulated by the parameter g which controls both
growth and degradation [28].

) is equal to the degradation rate constant b and yet g

→

b = g ,

a = g ln S.

If we start from Eq. (3.31) and declare the growth fraction a new time dependent variable:

The solution (3.32) satisﬁes also the system of equations:

x = g(

) = ln

y
S

S
.
y (cid:17)

(cid:16)

dy

dt = g xy,
g x,
dx
dt =
−

with initial conditions y(0) = y0 and x(0) = ln(S/y0). From here, it is clear that the parameter g
is at the same
time the inherent growth rate constant and the rate constant for the temporal decrease of the growth fraction.

(3.28)

(3.29)

(3.30)

(3.32)

(3.34)

(3.35)

¥
This certainly is a peculiarity of the Gompertz model which supports the idea that the single parameter a
controls an inhibitory feedback mechanism operating in tumors. Beyond this and beyond the transparent
structure of Eq. (3.35), that has a simple interpretation, other fundamental insights are not apparent. Another
possibility to present the Gompertz model as a system of two differential equations is based on the introduction
of the effective growth rate x′1 = g x as a variable:

dy
dt = x1y,
dx1
dt = g x1.
This system of equations is interpreted as describing exponential growth with exponential retardation.
However, this can be inferred directly from Eq. (3.30).

(3.36)

(cid:26)

3.2.5 Mathematical Properties and Comparison Between Logistic and Gompertz Growth

It is convenient to write equation Eq. (3.32) as:

in which c and b are essentially positive quantities. From Eq. (3.37) it is clear that as x becomes negatively
inﬁnity y will approach zero, and as x becomes positively inﬁnity y will approach c. Differentiating Eq. (3.37)
we have:

and it is apparent that the slope is always positive for ﬁnite values of x, and approaches zero for inﬁnite values
of x. Differentiating again:

y = ce−

bx

ea

−

,

dy
dx

= cbea
−

bxe−

bx

ea

−

= byea
−

bx,

d2y
dx2 = b2yea

bx(ea
−

−

bx

1),

−

x =

a
b

;

y =

c
e

,

and we obtain the point of inﬂection in:

or approximately, when 37 % of the ﬁnal growth has been reached. Therefore, when we desire to ﬁt growth
data which show a point of inﬂection in the early part of the growth cycle, we may use the Gompertz curve
with the expectation that the approximation to the data will be good. Notice Figure 1, which shows the form
of the curve for the case c = 1, a = 0, b = 1; there are also shown the logistic and the ﬁrst derivative of the
Gompertz curve [30].

The logistic possesses the same number of constants as the Gompertz curve, but has the point of inﬂection
mid-way between the asymptotes. It is described by the following equation:

c
1 + ea
It has been found useful to add a constant term to the logistic, giving it a lower asymptote different from zero:

(3.41)

y =

bx .

−

This procedure is equally applicable to the Gompertz curve giving:

y = d +

c
1 + ea

bx .

−

y = d + ce−

bx

ea

−

.

The Gompertz curve and the logistic possess similar properties which make them useful for the empirical rep-
resentation of growth phenomena. Each curve has three arbitrary constants, which corresponds essentially to

(3.37)

(3.38)

(3.39)

(3.40)

(3.42)

(3.43)

Gompertz Curve
First Derivative G
Logistic Curve

1

)
t
(
y

0.5

0
-3

-2

-1

0

1

3

2

t

Figure 3.3: Gompertz curve and its ﬁrst derivative, and the logistic curve, with c = 1, a = 0, b = 1.

the upper asymptote, the time origin, and the time unit or rate constant. In each curve, the degree of skewness,
as measured by the relation of the ordinate at the point of inﬂection to the distance between the asymptote, is
ﬁxed [30].

To illustrate the mathematical properties of the Gompertz and logistic curves, the table from [30] has been
reproduced on the next page.

The Gompertz equation is used as a predictive tool in demography [31]. However, the Gompertz law of expo-
nential increase in mortality rates with ages is observed in many other biological species, such as rats, mice,
fruit ﬂies and ﬂour beetles [32], not only on humans, and, therefore, some general theoretical explanation for
this phenomenon is required. Furthermore, it often ﬁts growth of organisms, organs and tumours. Despite
numerous attempts, no consensus has been forged about the biological foundation of the broad applicability of
the model [33].

CURVE
Equation
Number of Constants
Asymptotes
Inﬂection
Straight line of equation
Symmetry

Growth rate
Maximum growth rate
Relative growth rate as
function of time
Relative growth rate as
function of size

−

bx

ea

GOMPERTZ
y = ce−
3
y = 0, y = c
x = a
b , y = c
b
loglog c
y = a
Assymetrical

dy
dx = byea
−
bc
e
dy
1
dx = bea
−
y

bx

bx

−

bx = bylog c
y

−

bx

LOGISTIC
y = 1
1+ea
3
y = 0, y = c
x = a
b , y = c
2
log c
y
y = a
−
−
Symmetrical
inﬂection
dy
dx = b
c y(c

y)

−

dy
dx =

b
1+e−

a+bx

bc
4
1
y

bx

about

1
y

dy
dx = b(logc

logy)

−

1
y

dy

dx = b

c (c

y)

−

Table 3.1: Mathematical properties of Gompertz and logistic curves.

Figure 3.4: A simple feedback control loop.

Appendix A: Control Theory Fundamentals

Control theory deals with the behaviour of dynamical systems over time. In a few words, is the mathematical
study of how to manipulate the parameters affecting the behaviour of a system to produce the desired or op-
timal outcome. Control theory plays an important role in the design of manufacturing processes in industry,
robotics, transportation, and biology, among other applications. Some of its basic concepts are the following:

System: set of elements that act in coordination to perform some objective.

Plant, P: is the physical element that one desires to control. Some examples are motors, ovens, navigation
systems, bioreactors, etc.

Output signal, y(t): is the variable that one wishes to control (position, velocity, pressure, temperature, etc).
Is also called control variable.

Reference Signal, r(t): is the desired value for the output signal to reach.

Error, e(t): the difference between the reference signal and the real output signal.

Control signal, c(t): is the signal produced by the controller C in order to modify the control variable in such
a way that the error decreases.

Process: steps that drive us to certain result.

Perturbation: a signal affecting the output of the system, deviating it from the desired value.

Sensor: device that turns the value of certain physical quantity (pressure, temperature, ﬂow, etc.)
electrical signal codiﬁed in analogic or digital forms.

into an

Closed-loop controller: the output of the system y(t) is compared to the reference value r(t), through the
measurement performed by a sensor. The controller then takes the difference between the reference and the
output, the error e(t), to change the inputs u(t) to the system under control. Is known as feedback control.

Open-loop controller: the output signal y(t) is not monitored to generate a control signal c(t). There is no
direct connection between the output of the system and its input u(t). One of the main disadvantages of this
type of controller is the lack of sensitivity to the dynamics of the system under control.

Stability: means that for any bounded input over any amount of time, the output will also be bounded. This is
known as BIBO stability. If a system is BIBO stable then the output cannot diverge if the input remains ﬁnite.

The most simple closed-loop controller is a so-called single-input-single-output (SISO) control system, and
is presented in Fig. 3.4. Examples where one or more variables can contain more than a value (MIMO, i.e.
Multi-Input-Multi-Output - for example when outputs to be controlled are two or more) are frequent. In such
cases variables are represented through vectors instead of simple scalar values.

If we assume the controller C and the plant P are linear and time-invariant (i.e.: elements of their transfer
function C(s) and P(s) do not depend on time), we can analyze the system shown in the Fig. 3.4 by using the

Laplace transform on the variables. This gives us the following relations:

Solving for Y(s) in terms of R(s), we obtain:

Y (s) = P(s)U (s)

U (s) = C(s)E(s)

E(s) = R(s)

Y (s)

−

Y (s) =

P(s)C(s)
1 + P(s)C(s) (cid:19)

(cid:18)

R(s)

(3.44)

(3.45)

(3.46)

(3.47)

The term P(s)C(s)
1+P(s)C(s) is referred to as the transfer function of the system. If we can ensure P(s)C(s) >> 1, i.e. it
has very great norm with each value of s, then Y (s) is approximately equal to R(s). This means we control the
output by simply setting the reference.

Controllability and observability are main issues in the analysis of system before decide the best control
strategy to be applied. Controllability is related to the possibility to force the system in a particular state
by using an appropriate control signal. If a state is not controllable, then no signal will ever be able to force
the system to reach a level of controllability. Observability instead is related to the possibility to“observe”,
through output measurements, the system occupying a state. If a state is not observable, the controller will
never be able to correct the closed-loop behaviour if such a state is not desirable.

Every control system must guarantee ﬁrst the stability of the closed-loop behaviour. For linear systems, this
can be obtained directly placing the poles. The behaviour of a non-linear system is not expressible as a linear
function of its state or input variables, so non-linear control systems used instead speciﬁcal theories (normally
based on Lyapunov Theory) to ensure stability without regard to inner dynamics of the systems. The possibility
to fulﬁll different speciﬁcations varies from the model considered and/or the control strategy chosen.
Solutions to problems of uncontrollable or unobservable system include adding actuators and sensors.

An observer is an auxiliary dynamical system which uses the available measurement on the system in order to
provide an estimate ˆx of the state of the system. The dynamical nature of an observer means that the estimates
of the state variable are provided on line. By an adaptive scheme we mean an observer that is able to provide
an estimate state even in face of parameter uncertainties.

http://en.wikipedia.org/wiki/Control_theory

Bibliography: Chapter 1

[1] R. Eckhardt, Stan Ulam, John Von Neumann, and the Monte Carlo Method, Los Alamos Science, Vol.

15, 1987, p. 131.

[2] N. Metropolis, The Beginning of the Monte Carlo Method, Los Alamos Science, Vol. 15, 1987, p. 125.

[3] A. Hall, On an Experimental Determination of p , Messeng. Math., Vol. 2, 1873, p. 113.

[4] Lord Kelvin, Nineteenth Century Clouds Over the Dynamical Theory of Heat and Light, Phil. Mag.,

Vol. 6, 1901, p. 1.

Vol. 44, 1949, p. 335.

[5] H.L. Anderson, Metropolis, Monte Carlo, and the MANIAC, Los Alamos Science, Vol. 14, 1986, p. 96.

[6] N. Metropolis and S. Ulam, The Monte Carlo Method, Journal of the American Statistical Association,

[7] N. Metropolis, A. Rosenbluth, M. Rosenbluth, A. Teller and E. Teller, Equation of State Calculations

by Fast Computing Machines, The Journal of Chemical Physics, Vol. 21, 1953, p. 1087.

[8] M. Giersz, Monte Carlo Simulations of Star Clusters - II. Tidally Limited, Multi-mass Systems with
Stellar Evolution, Monthly Notices of the Royal Astronomical Society, Vol. 324, 2001, p. 218.
arXiv:astro-ph/0103001

F. A. Rasio, J. M. Fregeau, and K. J. Joshi, Binaries and Globular Cluster Dynamics, in The Inﬂuence
of Binaries on Stellar Population Studies, ed. D. Vanbeveren (Dordrecht: Kluwer), 2001, p. 387.
arXiv:astro-ph/0103001

[9] D. B. Graves, M. J. Kushner, Inﬂuence of Modeling and Simulation on the Maturation of Plasma
Technology: Feature Evolution and Reactor Design, J. Vac. Sci. Technol. A, Vol. 21, 2003, p. S152.

J. L. Hutton, N. R. Smith, Use of a Monte Carlo Hybrid Technique for Power Shape Calculations,
MC2000, International Conference on Advanced Monte Carlo for Radiation Physics, Particle Transport
Simulation and Applications, Lisbon, Portugal, 2000.

[10] R. Spaic, R. Ilic, M. Dragovic, and B. Petrovic, Generation of Dose-Volume Histograms Using
Monte Carlo Simulations on a Multicellular Model in Radionuclide Therapy, Cancer Biotherapy and
Radiopharmaceuticals, Mary Ann Liebert, Inc. Vol. 20, 2005.

C. M. Ma, E. Mok, A. Kapur, T. Pawlicki, D. Findley, S. Brain, K. Korster, and A. L. Boyer, Clinical
Implementation of a Monte Carlo Treatment Planning System, Med Phys, Vol. 26, 1999, p. 2133.

[11] A. L. Rodrigues and M. J. Oliveira, Continuous Time Stochastic Models for Vehicular Trafﬁc on

Highways, Braz. J. Phys., Vol.34, 2004, p. 373.

D. Chowdhury, K. Ghosh, A. Majumdar, S. Sinha, and R. B. Stinchcombe, Particle-hopping Models
of Vehicular Trafﬁc: Distributions of Distance Headways and Distance Between Jams, Physica A, Vol.
246, 1997, p. 471. arXiv:cond-mat/9706094

65

[12] C. F. Kelliher and L. S. Mahoney, Using Monte Carlo Simulation to Improve Longterm Investment

Decisions, The Appraisal Journal, Vol. 68, 2000, pp. 44-56.

W.J. Hurley, On the Use of Martingales in Monte Carlo Approaches to Multiperiod Parameter
Uncertainty in Capital Investment Risk Analysis, The Engineering Economist, Vol. 43, 1998, p. 169.
http://www.ﬁndarticles.com/p/articles/mi_qa3621/is_199801/ai_n8786476

[13] E. A. Holm, G. N. Hassold and M. A. Miodownik, On Misorientation Distribution Evolution During

Anisotropic Grain Growth, Acta mater., Vol. 49, 2001, p. 2981.

[14] A. Rollett and P. Manohar, Chapter 4: The Monte Carlo Method, in Continuum Scale Simulation of
Engineering Materials: Fundamentals - Microstructures - Process Applications, Wiley-VCH Verlag,
2004, p. 76.

[15] D. S. Mainardi and P. B. Balbuena, Monte Carlo Simulation of Cu-Ni Nanoclusters: Surface Segregation

Studies, Langmuir, Vol. 17, 2001, p. 2047.

Y. Kwon and D. Tománek, Orientational Melting in Carbon Nanotube Ropes, Phys. Rev. Let. Vol. 84,
2000, p. 14.

V. H. Crespi, N. G. Chopra, M. L. Cohen, A. Zettl and V. Radmilovic, Site-selective Radiation Damage
of Collapsed Carbon Nanotubes, Applied Physics Letters, Vol. 73, 1998, p. 2435.

[16] D. G. Covell, Folding Protein Alpha-Carbon Chains into Compact Forms by Monte Carlo Methods,

Proteins: Structure, Function and Genetics, Vol. 14, 1992, p. 409.

A. Kolinski, P. Klein, P. Romiszowski, and J. Skolnicky, Unfolding of Globular Proteins: Monte Carlo
Dynamics of a Realistic Reduced Model, Biophysical Journal, Vol. 85, 2003, p. 3271.

A. Irbäck, Hybrid Monte Carlo Simulation of Polymer Chains, The Journal of Chemical Physics, Vol.
101, 1994, p. 1661.

A. Sikorski and P. Romiszowski, Monte Carlo Simulations of Protein-like Heteropolymers, Acta
Biochimica Polonica, Vol. 48, 2001.

[17] D. P. Landau and K. Binder, A Guide to Monte Carlo Simulations in Statistical Physics, Cambridge

University Press, 2nd ed., 2002.

[18] C. Andrieu, N. de Freitas, A. Doucet, M. Jordan, An Introduction to MCMC for Machine Learning,

Machine Learning, Vol. 50, 2003, p. 5.

[19] R. Sun, Cluster Algorithms for the Ising Model and the Widom-Rowlinson Model, chapter 1 and chapter

2, thesis, 1998, Clark University.

[20] P. Coddington,

http://www.npac.syr.edu/users/paulc/lectures/montecarlo/p_montecarlo.html

[21] E. Ising, Beitrag zur Theorie des Ferromagnetismus, Zeitschr. f. Physik, Vol. 31, 1925, p. 253.

[22] W. Lenz, Beitrag zum Verständnis der Magnetischen Eigenschaften in Festen Körpern, Phys. Zeitschr.,

Vol. 21, 1920, p. 613.

[23] W. Heisenberg, Zur Theorie des Ferromagnetismus, Zeitschr. f. Physik, Vol. 49, 1928, p. 619.

[24] R. Peierls, On Ising’s Model of Ferromagnetism, Proc. Cambridge Phil. Soc., Vol. 32, 1936, p. 477.

[25] H. A. Kramers and G. H. Wannier, Statistics of the Two-Dimensional Ferromagnet. Part I, Phys. Rev.,

Vol. 60, 1941, p. 252.

[26] L. Onsager, Crystal Statistics. I. A Two-Dimensional Model with a Order-Disorder Transition, Phys.

Rev., Vol. 65, 1944, p. 117.

[27] http://scienceworld.wolfram.com/physics/IsingModel.html

[28] E. Marinari, G. Parisi and J.J. Ruiz-Lorenzo, Numerical Simulations of Spin Glass Systems, in Spin
Glasses and Random Fields, edited by P. Young,(Singapore: World Scientiﬁc), 1997, p. 130. arXiv:cond-
mat/9701016

[29] R. B. Potts, Some Generalized Order-Disorder Transformations, Proc. Camb. Phil. Soc. Vol. 48, 1952,

p. 106.

Rev. Lett., Vol.58, 1987, p. 86.

[30] R. H. Swendsen and J. S. Wang, Nonuniversal Critical Dynamics in Monte Carlo Simulations, Phys.

[31] U. Wolff, Collective Monte Carlo Updating for Spin Systems, Phys. Rev. Lett., Vol. 62, 1989, p. 361.

[32] http://en.wikipedia.org/wiki/Phase_transition

[33] http://www.absoluteastronomy.com/encyclopedia/p/ph/phase_(matter).htm

[34] chapter 3: Critical Phenomena and phase Transitions in Condensed Matter Physics (Physics through

the 1990s), National Academy Press, Washington D.C., 1986.
http://www.nap.edu/books/0309035775/html/

[35] F.Y. Wu, The Potts Model, Rev. Mod. Phys., Vol. 54, 1982, p. 235.

[36] H. Gould, J. Tobochnik, and W. Christian, chapter 15: Monte Carlo Simulations of Thermal Systems,
in Introduction to Computer Simulation Methods: Applications to Physical Systems, Addison-Wesley,
3rd. ed., 2006.

[37] A. M. Ferrenberg and R. H. Swendsen, New Monte Carlo Technique for Studying Phase Transitions,

Phys. Rev. Lett., Vol 61, 1988, p. 2635.

[38] Z. W. Salsburg, J. D. Jackson, W. Fickett and W. W. Wood, Application of Monte Carlo Method to the
Lattice Gas Model. I. Two dimensional Triangular Lattice, J. Chem. Phys., Vol. 30, 1959, p. 65.

D. A. Chesnut and Z. W. Salsburg, Monte Carlo Procedure for Statistical Mechanical Calculations in a
Grand Canonical Ensemble of Lattice Systems, J. Chem. Phys., Vol. 38, 1963, p. 2861.

I. R. McDonald and K. Singer, Discuss. Faraday Soc., Vol. 43, 1967, p. 40.

I. R. McDonald and K. Singer, Machine Calculation of Thermodynamic Properties of a Simple Fluid at
Supercritical Temperature, J. Chem. Phys., Vol. 47, 1967, p. 4766.

I. R. McDonald and K. Singer, Estimation of the Adequacy of the 12-6 Potential for Liquid Argon by
Means of Monte Carlo Calculations, J. Chem. Phys., Vol. 50, 1969, p. 2308.

J. P. Valleau and D. N. Card, Monte Carlo Estimation of Free Energy by Multi-Stage Sampling, J. Chem.
Phys., Vol. 57, 1972, p. 5457.

G. Bhanot, S. Black, P. Carter and R. Salvador, A New Method for the Partition Function of Discrete
Systems with Applications the 3D Ising Model, Phys. Lett. B, Vol. 183, 1987, p. 331.

G. Bhanot, K. M. Bitar, S. Black, P. Carter and R. Salvador, The Partition Function of Z(2) and Z(8)
Lattice Gauge Theory in Four Dimensions, a Novel Approach to Simulations of Lattice Systems, Phys.
Lett. B, Vol. 187, 1987, p. 381.

[39] G. Torrie and J. P. Valleau, Monte Carlo Free Energy Estimates Using Non- Boltzmann Sampling:

Application to the Sub-Critical Lennard-Jones Fluid, Chem. Phys. Lett., Vol. 28, 1974, p. 578.

1990, p. 137.

lat/9305006

355.

[40] K. Venu, V. S. S. Sastri and K. P. N. Murthy, Nematic - Isotropic Transition in Porous Media - A Monte

Carlo Study, Europhys. Lett., Vol. 58, 2002, p. 646.

[41] A. M. Ferrenberg and D. P. Landau, Critical Behavior of the Three-Dimensional Ising Model: A High

Resolution Monte Carlo Study, Phys. Rev. B, Vol.44, 1991, p. 5081.

[42] A. M. Ferrenberg and R. H. Swendsen, New Monte Carlo Data Analysis, Phys. Rev. Lett., Vol 63, 1989,

p. 1195.

C. H. Bennet, Efﬁcient Estimation of Free Energy Difference from Monte Carlo Data, J. Comput. Phys.,
Vol. 22, 1976, p. 245.

N. A. Alves, B. A. Berg, and R. Villanova, Ising Model Monte Carlo Simulations: Density of States and
Mass Gap, Phys. Rev. B, Vol. 41, 1990, p. 383.

[43] B. A. Berg and T. Neuhaus, Multicanonical Algorithms for First Order Phase Transition, Phys. Lett. B,

Vol. 267, 1991, p. 249.

B. A. Berg and T. Neuhaus, Multicanonical Ensemble: A New Approach to Simulation of First Order
Phase Transition, Phys. Rev. Lett., Vol. 68, 1992, p. 9.

[44] J. Lee and J. M. Kosterlitz, New Numerical Method to Study Phase Transition, Phys. Rev Lett., Vol. 65,

[45] S. Gupta, Finite-Size Scaling at Phase Coexistence, Nucl. Phys. B, Vol. 409, 1993, p. 663. arXiv:hep-

[46] K. Rummukainen, Lectures Notes, Finite Size Scaling

http://theory.physics.helsinki.ﬁ/ xﬁles/simu/03/

[47] J. C. Niel and J. Zinn-Justin, Finite Size Effects in Critical Dynamics, Nucl. Phys. B, Vol. 280, 1987, p.

K. Binder, Monte Carlo Calculation of the Surface Tension for Two- and Three-Dimensional Lattice-
Gas Models, Phys. Rev. A, Vol. 25, 1982, p. 1699.

[48] Y. Iwasaki, K. Kanaya, Leo Kärkkäinen,K. Rummukainen, and T. Yoshié, Interface Tension in

Quenched QCD, Phys. Rev. D, Vol. 49, 1994, p. 3540. arXiv:hep-lat/9309003

[49] M. E. Fisher and A. N. Berker, Scaling for First-Order Phase Transitions in Thermodynamic and Finite

Systems, Phys. Rev. B, Vol. 26, 1982, p. 2507.

[50] K. Binder and D. P. Landau, Finite-Size Scaling at First-Order Phase Transitions, Phys. Rev. B, Vol. 30,

1984, p. 1477.

[51] M. S. Challa, D. P. Landau and K. Binder, Finite-Size Effects at Temperature-Driven First-Order

Transitions, Phys. Rev. B, Vol. 34, 1986, p. 1841.

[52] C. Borgs, R. Kotecký , A Rigorous Theory of Finite Size Scaling at First Order Phase Transitions, J.

Stat. Phys., Vol. 61, 1990, p. 79.

1992, p. 529.

[53] C. Borgs, R. Kotecký, S. Miracle-Solé , Finite-Size Scaling for Potts Models, J. Stat. Phys., Vol. 62,

[54] A. Billoire, Nucl. Phys. (Proc. Suppl.), Vol. B42, 1995, p. 21.

[55] B. Ortakaya, Y. Gündüç, M. Aydin and T. Çelik, Scaling of Cluster Fluctuations in Two-Dimensional q

= 5 and 7 State Potts Models, arXiv:hep-lat/9701017

[56] A. Billoire, R. Lacaze and A. Morel, Nucl. Phys., Vol. B370, 1992, p. 773.

[57] J. Lee and J. M. Kosterlitz, Finite-Size Scaling and Monte Carlo Simulations of First-Order Phase

Transition, Phys. Rev B, Vol. 43, 1991, p. 3265.

[58] K. Binder, Finite Size Scaling Analysis of Ising Model Block Distribution Functions, Z. Phys. B-

Condensed Matter, Vol. 43, 1981, p. 119.

[59] M. E. Fisher, Critical Phenomena, ed. M.S. Green (Academic Press London).

M. E. Fisher and M. N. Barber, Scaling Theory for Finite-Size Effects in the Critical Region, Phys. Rev
Lett. Vol. 28, 1972, p. 1516.

[60] A. M. Ferrenberg and R. H. Swendsen, Optimized Monte Carlo Data Analysis, Phys. Rev. Lett., Vol.
63, 1989, p. 1195. C. H. Bennet, Efﬁcient Estimation of Free Energy Difference from Monte Carlo Data,
J. Comput. Phys., Vol. 22, 1976, p. 245. N. A. Alves, B. A. Berg, and R. Villanova, em Ising Model
Monte Carlo Simulations: Density of States and Mass Gap, Phys. Rev. B, Vol. 41, 1990, p. 383.

[61] A. Billoire, T. Neuhaus and B. Berg, Saclay preprint, 1992, SPhT-92/120.

[62] K. P. N. Murthy, Monte Carlo: Basics, arXiv:cond-mat/0104215

[63] K. P. N. Murthy, An Introduction to Monte Carlo Simulations in Statistical Physics, arXiv:cond-

mat/0104167

preprint 89-021, 1989.

[64] U. Wolff, Asymptotic Freedom and Mass Generation in the O(3) Nonlinear Sigma Model, DESY

[65] D.D. Betts, Proc. Nat. Sci. Inst. Sci., Vol. 40, 1995, p. 95.

[66] D. Schmalfub, P. Tomczak, J. Schulenburg and J. Richter, The Spin-1/2 Heisenberg Antiferromagnet on

a 1/7-Depleted Triangular Lattice: Ground State Properties, Phys. Rev. B, Vol. 65, 2002, p. 224405.

[67] Z.F. Wang and B. W. Southern, Three-state Potts Model on the Maple Leaf Lattice, Phys. Rev. B, Vol.

68, 2003, p. 094419.

Bibliography: Chapter 2

[1] J. D. Watson and F. H. C. Crick, Molecular Structure of Nucleic Acids - A Structure for Deoxiribose

Nucleic Acid, Nature, Vol. 171, 1953, p. 737.

[2] http://www-biol.paisley.ac.uk/courses/stfunmac/glossary/DNAmol.html

[3] http://users.rcn.com/jkimball.ma.ultranet/BiologyPages/B/BasePairing.html

[4] International Human Genome Sequencing Consortium, Finishing the Euchromatic Sequence of the

Human Genome, Nature, Vol. 431, 2004, pp. 931-45.

[5] E. Domany, Cluster Analysis of Gene Expression Data, arxiv:physics/0206056

[6] http://cellbio.utmb.edu/cellbio/ribosome.htm

[7] A. Brazma and J. Vilo, Gene Expression Data Analysis, FEBS letters 480, 2000, pp. 17-24.

[8] A. Schulze and J. Downward, Navigating Gene Expression Using Microarrays: A Technology Review,

Nature Cell Biology, Vol. 3, 2001, pp. E190 - E195.

[9] D. Gerhold, T. Rushmore, and C. T. Caskey, DNA Chips: Promising Toys Have Become Powerful Tools,

TIBS 24, 1999, pp. 168-173.

303, 1999, pp. 179-205.

[10] M. B. Eisen and P. O. Brown, DNA Arrays for Analysis of Gene Expression, Methods Enzymol., Vol.

[11] Y. Moreau, F. De Smet, G. Thijs, K. Marchal, B. De Moor, Functional Bioinformatics of Microarray
Data: From Expression to Regulation, Proceedings of the IEEE, Vol. 90, No. 11, 2002, pp. 1722-1743.

[12] Golub,T.R. et al., Molecular Classiﬁcation of Cancer: Class Discovery and Class Prediction by Gene

Expression Monitoring, Science 286, 1999, pp. 531-537.

[13] Hughes, T.R. et al., Experimental Annotation of the Human Genome Using Microarray Technology,

Nature, Vol. 409, 2001, pp. 922-927.

[14] Lucito, R. et al., Representational Oligonucleotide Microarray Analysis: A High-Resolution Method to

Detect Genome Copy Number Variation, Genome Res., Vol. 13, 2003, pp. 2291-2305.

[15] Anand, R. and Southern, E. M., Pulsed Field Gel Electrophoresis, in Gel Electrophoresis of Nucleic

Acids, eds Rickwood, D. and Hames, B.D., IRL Press, Oxford, 1990, pp.101-123.

[16] Edwin Southern, Tools for Genomics, Nature Medicine, Vol. 11, No. 10, 2005, pp. 1029 - 1034.

[17] http://www.fda.gov/cdrh/mda/docs/k042259.html

[18] L. J. van’t Veer et al., Gene Expression Proﬁling Predicts Clinical Outcome of Breast Cancer, Letters to

Nature Vol. 415, 2002, pp. 530-536.

71

[19] M. B. Eisen, P. T. Spellman, P. O. Brown and D. Botstein, Cluster Analysis and Display of Genome-Wide

Expression Patterns, Proc. Natl. Acad. Sci. USA, Vol. 95, Genetics, 1998, pp. 14863-14868.

[20] R. Sharan, R. Elkon, R. Shamir, Cluster Analysis and its Applications to Gene Expression Data, Ernst
Schering Research Foundation Workshop, Vol. 38: Bioinformatics and Genome Analysis, Editors: H.-
W. Mewes, H. Seidel, B. Weiss, Springer-Verlag, Berlin Heidelberg, 2002, pp. 83-108.

[21] Lance, G.N. and Williams, W.T., A General Theory of Classiﬁcatory Sorting Strategies. I. Hierarchical

Systems, Computer Journal., No. 9., 1967.

Lance, G. N. and Williams, W.T., A General Theory of Classiﬁcatory Sorting Strategies. Il. Clustering
Systems, Computer Journal., No. 10., 1967.

[22] J.H. Ward, Hierarchical Grouping to Optimize an Objective Function, Journal of the American

Statistical Association, Vol. 58, 1963, pp. 236-244.

[23] Q. Sheng, Y. Moreau, F. De Smet, K. Marchal, B. De Moor, Advances in Cluster Analysis of Microarray
data, in Chapter 10 of Data analysis and visualization in genomics and proteomics, (Azuaje F., and
Dopazo J., eds.), Jonh Wiley and Sons Ltd. (Chichester, UK), 2005, pp. 153-173.

[24] J. A. Hartigan, Clustering Algorithms, John Wiley and Sons, New York, 1975, p. 351.

[25] S. Tavazoie, J. D. Hughes, M. J. Campbell, R. J. Cho and G. M. Church, Systematic Determination of

Genetic Network Architecture, Nature Genetics, Vol. 22, No. 7, 1999, pp. 281-285.

[26] T. Kohonen, Self-Organizing Maps, Springer Series in Information Sciences, Vol. 30, 1995; Third,

extended edition, New York, 2001.

[27] P. Tamayo, D. Slonim, J. Mesirov, Q. Zhu, S. Kitareewan, E. Dmitrovsky, E. S. Lander and T. R.
Golub, Interpreting Patterns of Gene Expression with Self Organizing Maps: Methods and Application
to Hematopoietic Differentiation, Proc. Natl. Acad. Sci. USA, Vol. 96, Genetics, 1999, pp. 2907-2912.

[28] J. Herrero, A. Valencia and J. Dopazo, A Hierarchical Unsupervised Growing Neural Network for

Clustering Gene Expression Patterns, Bioinformatics, Vol. 17, no. 2, 2001, pp. 126-136.

[29] K. Y. Yeung, C. Fraley, A. Murua, A. E. Raftery and W. L. Ruzzo, Model Based Clustering and Data
Transformations for Gene Expression Data, Bioinformatics, Vol. 17, No. 10, 2001, pp. 977-987.

[30] G. Schwarz, Estimating the Dimension of a Model, The Annals of Statistics, Vol. 6, No. 2, 1978, pp.

461-464.

[31] G. J. McLachlan, R. W. Bean and D. Peel, A Mixture Model-Based Approach to the Clustering of

Microarray Expression Data, Bioinformatics, Vol. 18, No. 3, 2002, pp. 413-422.

[32] L.J. Heyer, S. Kruglyak, and S. Yooseph, Exploring Expression Data: Identiﬁcation and Analysis of

Coexpressed Genes, Genome Research, Vol. 9, No. 11, 1999, pp. 1106-1115.

[33] F. De Smet, J. Mathys, K. Marchal, G. Thijs, B. De Moor and Y. Moreau, Adaptive Quality-Based

Clustering of Gene Expression Proﬁles, Bioinformatics, Vol. 18, No.5, 2002, pp. 735-746.

[34] X. Wen, S. Fuhrman, G. S. Michaels, D. B. Carr, S. Smith J. L. Barker and R. Somogyi, Large-Scale
Temporal Gene Expression Mapping of Central Nervous System Development, Proc. Natl. Acad. Sci.
USA, Vol. 95, Neurobiology, 1998, pp. 334-339.

[35] S. C. Madeira and A. L. Oliveira, Biclustering Algorithms for Biological Data Analysis: A Survey, IEEE

Transactions on Computational Biology and Bioinformatics, Vol. 1, No. 1, 2004, pp. 24-44.

[36] Y. Cheng and G.M. Church, Biclustering of Expression Data, Proc. Eighth Intern. Conf. Intelligent

Systems for Molecular Biology (ISMB 00), 2000, pp. 93-103.

[37] K. Rose, E. Gurewitz and G. C. Fox, Statistical Mechanics amd Phase Transitions in Clustering, Phys.

Rev. Lett., Vol. 65, No. 8, 1990, pp. 945-948.

[38] L. Angelini, F. De Carlo, C. Marangi, M. Pellicoro, and S. Stramaglia, Clustering Data by

Inhomogeneous Chaotic Map Lattices, Phys. Rev. Lett., Vol. 85, No. 3, 2000, pp. 555-557.

[39] J. Schneider, First Order Phase Transitions in Clustering, Phys. Rev. E, Vol. 57, No. 2, 1998, pp. 2449-

[40] R. O. Duda and P.E. Hart, Pattern Classiﬁcation and Scene Analysis, New York, NY., Wiley and Sons.,

[41] J. Moody and C.J. Darken, Fast Learning in Networks of Locally-Tuned Processing Units, Neural

Computation, Vol. 1, No. 2, 1989, pp. 281-294.

[42] A. Dekel and M. West, On Percolation as a Cosmological Test, Astrophys. J., Vol. 288, 1985, pp. 411-

2451.

1973.

417.

[43] W. E. Phillips, R. P. Velthuizen, S. Phuphanich, L.O. Hall, L.P. Clarke and M.L. Silbiger, Application
of fuzzy K-means segmentation technique for tissue differentiation in MR images of a hemorrhagic
glioblastoma multiforme, Magnetic Resonance Imaging, Vol. 13, 1995, pp. 277-290.

[44] L. Cranias, H. Papageorgiou and S. Piperidis, Clustering: A Technique for Search Space Reduction
in Example Based Machine Translation, proceedings of the 1994 IEEE International Conference on
Systems, Man, and Cybernetics. Humans, Information and Technology, 1, 1-6. IEEE, New York, 1994.

[45] A. Baraldi and F. Parmiggiani, A Neural Network for Unsupervised Categorization of Multivalued Input
Patterns: An Application to Satellite Image Clustering, IEEE Transactions on Geoscience and Remote
Sensing, Vol. 33, No. 2, 1995, pp. 305-316.

[46] T. Kosaka and S. Sagayama, Tree-Structured Speaker Clustering for Fast Speaker Adaptation,
proceedings of the 1994 IEEE International Conference on Acoustics, Speech and Signal Processing
1, 1994, IEEE, New York, pp. 245-248.

[47] M. Blatt, S. Wiseman and E. Domany, Super-Paramagnetic Clustering of Data, Phys. Rev. Lett., Vol.

76, 1996, pp. 3250-3255.

1998, pp. 3767-3787.

[48] S. Wiseman, M. Blatt and E. Domany, Super-Paramagnetic Clustering of Data, Phys. Rev. E, Vol. 57,

[49] M. Blatt, S. Wiseman and E. Domany, Data Clustering Using a Model Granular Magnet, Neural

Computation, Vol. 9,1997, pp. 1805-1842. arxiv:cond-mat/9702072

[50] O. Barad, Advanced Clustering Algorithm for Gene Expression Analysis using Statistical Physics
Methods, M.Sc Thesis conducted under the supervision of Prof. Eytan Domany Weizmann Institute
of Science, December 2003 Chapter 4 Superparamagnetic Clustering-SPC.

[51] E. Domany, Super-paramagnetic Clustering of Data- The Deﬁnitive Solution of an Ill-Posed Problem,

Physica A, Vol. 263, 1999, pp. 158-169.

[52] E. Domany, M. Blatt, Y. Gdalyahu and D. Weinshall, Super Paramagnetic Clustering of Data:
Aplication to Computer Vision, Conference on Computational Physics, Granada, 1998; Comp. Phys.
Comm., Vol. 121-122, 1999, p. 5.

[53] L. Kullmann, J. Kertész, R. N. Mantegna, Identiﬁcation of Clusters of Companies in Stock Indices Via

Potts Super-Paramagnetic Transitions, Physica A, Vol. 287, 2000, pp. 412-419.

[54] G. Getz, E. Levine, E. Domany and M.Q. Zhang, Super-Paramagnetic Clustering of Yeast Gene

Expression Proﬁles, Physica A, Vol. 279, 2000, pp. 457-464.

[55] K. Kannan, N. Amariglio, G. Rechavi, J. Jakobo-Hirsch, I. Kela, N. Kaminski, G. Getz, E. Domany and
D. Givol, DNA Microarrays Identiﬁcation of Primary and Secondary Target Genes Regulated by p53,
Oncogene, Vol. 20, 2001, pp. 2225-2234.

[56] I. Tetko, A. Facius, A. Ruepp and H-W Mewes, Super Paramagnetic Clustering of Protein Sequences,

BMC Bioinformatics, Vol. 6, No. 1, 2005, p. 82.

[57] H. Gal, Genome-Wide Expression Analysis using Novel Clustering Methods; Implications for Colon
and Skin Cancer, M.Sc Thesis conducted under the supervision of Prof. Eytan Domany and Prof. David
Givol Weizmann Institute of Science January 2003 Chapter 3: Clustering Methods.

Bibliography: Chapter 3

[1] A. Mina Valdés, Funciones de Sobrevivencia Empleadas en el Análisis Demográﬁco, Papeles de

Población, No. 28, CIEAP/UAEM, El Colegio de México, México, 2001, pp. 131-154.

[2] B. Gompertz, A Sketch on an Analysis and the Notation Applicable to the Estimation of the Value of Life

Contingencies, Phil. Trans. Roy. Soc. L., Vol. 110, 1820, pp. 214-294.

[3] B. Gompertz, On the Nature of the Function Expressive of the Law of Human Mortality, Phil. Trans.

Roy. Soc. L., Vol. 115, 1825, pp. 513-585.

[4] B. Gompertz, On the Uniform Law of Mortality from Birth to Extreme Old Age, and on the Law of

Sickness, Journal of the Institute of Actuaries, Vol. 16, 1872, pp.329-344.

[5] S. Jay Olshansky and Bruce A. Carnes, Ever since Gompertz, Demography, Vol. 34, No. 1, The

Demography of Aging, 1997, pp. 1-15.

[6] W. M. Makeham, On the Law of Mortality, Journal of the Institute of Actuaries, Vol. 13, 1867, pp.

[7] J. Brownlee, Notes on the Biology of a Life Table, Journal of the Royal Statistical Society, Vol. 82, 1919,

325-358.

pp. 34-77.

[8] S. Wrigth, Book Review, in J. Am. Stat. Assoc., Vol. 21, 1926, p. 494.

[9] F. W. Weymouth, H. C. McMillin and W. H. Rich, Latitude and Relative Growth in the Razor Clam,

Siliqua patula, J. Exp. Biol., Vol. 8, 1931, pp. 228-249.

[10] F. A. Davidson, Growth and Senescence in Purebred Jersey Cows, Univ. of Ill. Agr. Exp. Sta. Bull., No.

302, 1928, pp. 192-199.

[11] F. W. Weymouth and S. H. Thompson, The Age and Growth of the Paciﬁc Cockle (Cardium corbis,

Martyn), Bull. Bur. Fisheries, Vol. 46, 1930-1931, Bur. Fish. Doc. No. 1101, pp. 633-641.

[12] A. E. Casey, The Experimental Alteration of Malignancy with an Homologous Mammalian Tumor

Material I, Am. J. Cancer, Vol. 21, 1934, pp. 760-775.

[13] R. Pearl, Experimental Studies on the Duration of Life, The American Naturalist, Vol. 55, 1921, pp.

481-509.

Vol. 56, 1922, pp. 398-405.

[14] R. Pearl, A Comparison of the Laws of Mortality in Drosophila and in Man, The American Naturalist,

[15] R. Pearl and J. R. Miner, Experimental Studies on the Duration of Life. The Comparative Mortality of

Certain Lower Organisms, Quarterly Review of Biology, Vol. 10, 1935, pp. 60-79.

[16] G. A. Sacher, The Survival of Mice under Duration of Life Exposure to X-Rays at Various Dose Rates,

Working Paper CH-3900, Metallurgical Laboratory, University of Chicago, 1950.

75

[17] A. M. Brues and G. A. Sacher, Analysis of Mammalian Radiation Injury and Lethality, Symposium on

Radiobiology, edited by J.J. Nickson, 1952, pp. 441-465.

[18] G. A. Sacherand and E. Trucco, The Stochastic Theory of Mortality, Annals of the New York Academy

of Sciences, Vol. 96, 1962, pp. 985-1007.

[19] G. Failla, The Aging Process and Cancerogenesis, Annals of the New York Academy of Sciences, Vol.

71, 1958, pp. 1124-1140.

[20] G. Failla, The Aging Process and Somatic Mutations, in The Biology of Aging edited by B. L. Strehler

et al., American Institute of Biological Science, pp. 170-175.

[21] L. Szilard, On the Nature of the Aging Process, Proceedings of the National Academy of Sciences, Vol.

45, 1959, pp. 30-45.

14-19.

pp. 267-294.

[22] B.L. Strehler and A. S. Mildvan, General Theory of Mortality and Aging, Science, Vol. 132, 1960, pp.

[23] M. Greenwood, Laws of Mortality from the Biological Point of View, Journal of Hygiene, Vol. 28, 1928,

[24] D. Grahn, Biological Effects of Protracted Low Dose Radiation Exposure of Man and Animals, in Late

Effects of Radiation, edited by R. J. M Fry et al., 1970, pp. 101-136.

[25] K. Weiss, Are the Known Chronic Diseases Related to the Human Lifespan and its Evolution?, American

Journal of Human Biology, Vol. 1, 1989, pp. 307-319.
K. Weiss, The Biodemography of Variation in Human Frailty, Demography, Vol. 27, 1990, pp. 185-206.

[26] S. C. Stearns, Reproductive Life Span and Ageing, in the Evolution of Life Histories, Oxford University

Press, 1992, pp. 180-205.

[27] B. A. Carnes, S. J. Olshansky, and D. A. Grahn, Continuing the Search for a Law of Mortality,

Population and Development Review, Vol. 22, 1996, pp. 231-264.

[28] Z. Bajzer, S. Vuk-Pavlovi´c, and M. Huzak, A Survey of Models for Tumor-Immune System Dynamics,
Chapter 3: Mathematical Modeling of Tumor Growth Kinetics, Birkhauser Publishing, 1997, pp. 89-
133.

[29] D. S. Jones and B. D. Sleeman, Differential Equations and Mathematical Biology, Chapman & Hall

CRC Press Company, London, UK, 2003, p.18.

[30] C. P. Winsor, The Gompertz Curve as a Growth Curve, Proceedings of the National Academy of

Sciences, Vol. 18, No. 1, 1932, pp. 1-8.

[31] L. D. Mueller, T. J. Nusbaum and M. R. Rose, The Gompertz Equation as a Predictive Tool in

Demography, Experimental Gerontology, Vol. 30, No. 6, 1995, pp. 553-569.

[32] L. A. Gavrilov and N. S. Gavrilova, The Quest for the Theory of Human Longevity, The Actuary, Vol.

36, No. 5, 2002, p. 10.

[33] Z. Bajzer and S. Vuk-Pavlovi´c, New Dimensions in Gompertzian Growth, Journal of Theoretical

Medicine, Vol. 2, 2000, pp. 307-315. all, Inc., 1992).

Gompertz Curve
Logistic Curve
First Derivative G

 1

 0.8

 0.6

 0.4

 0.2

 0

-3

-2

-1

 0

 1

 2

 3

500

400

300

200

100

0

L=18
L=24
L=30
L=36
L=48
L=54
L=60

1.23

1.24

1.25

1.26

kT

c
d)

15000

)

(

E
P

10000

5000

Tc=1.05758

0

-4

-3.8

-3.6

E

-3.4

