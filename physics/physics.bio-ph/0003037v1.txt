Crystalizing the Genetic Code

L. Frappata, A. Sciarrinob,a, P. Sorbaa

a Laboratoire d’Annecy-le-Vieux de Physique Th´eorique LAPTH

CNRS, UMR 5108, associ´ee `a l’Universit´e de Savoie

BP 110, F-74941 Annecy-le-Vieux Cedex, France

b Permanent adress: Dipartimento di Scienze Fisiche, Universit`a di Napoli “Federico II”

and I.N.F.N., Sezione di Napoli

Complesso di Monte S. Angelo, Via Cintia, I-80126 Napoli, Italy

Abstract

New developments are presented in the framework of the model introduced by the
authors in refs. [1, 2] and in which nucleotides as well as codons are classiﬁed in crystal
bases of the quantum group Uq(sl(2) ⊕ sl(2)) in the limit q → 0. An operator which
gives the correspondence between the amino-acids and the codons is now obtained for any
known genetic code. The free energy released by base pairing of dinucleotides as well as
the relative hydrophilicity and hydrophobicity of the dinucleosides are also computed. For
the vertebrate series, a universal behaviour in the ratios of codon usage frequencies is put
in evidence and is shown to ﬁt nicely in our model. Then a ﬁrst attempt to represent the
mutations relative to the deletion of a pyrimidine by action of a suitable crystal spinor
operator is proposed. Finally recent theoretical descriptions are reviewed and compared
with our model.

0
0
0
2

 
r
a

 

M
6
1

 
 
]
h
p
-
o
i
b

.
s
c
i
s
y
h
p
[
 
 

1
v
7
3
0
3
0
0
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

PACS number: 87.10.+e, 02.10.-v

LAPTH-787/00
DSF-TH-9/00
physics/0003037
March 2000

1 Introduction

Among the numerous and important questions oﬀered to the physicist by the sciences of life,

the ones relative to the genetic code present a particular interest.
Indeed, in addition to
the fundamental importance of this domain, the DNA structure on the one hand and the

mechanism of polypeptid ﬁxation from codons on the other hand possess appealing aspects
for the theorist. Let us, in a brief summary, select some essential features [3]. First, as well

known, the DNA macromolecule is constituted by two linear chains of nucleotides in a double
helix shape. There are four diﬀerent nucleotides, characterized by their bases: adenine (A) and

guanine (G) deriving from purine, and cytosine (C) and thymine (T) coming from pyrimidine.
Note also that an A (resp. T) base in one strand is connected with two hydrogen bonds to a
T (resp. A) base in the other strand, while a C (resp. G) base is related to a G (resp. C)

base with three hydrogen bonds. The genetic information is transmitted to the cytoplasm via
the messenger ribonucleic acid or mRNA. During this operation, called transcription, the A,

G, C, T bases in the DNA are associated respectively to the U, C, G, A bases, U denoting the
uracile base. Then it will be through a ribosome that a triplet of nucleotides or codon will be

related to an amino-acid. More precisely, a codon is deﬁned as an ordered sequence of three
nucleotides, e.g. AAG, ACG, etc., and one enumerates in this way 4×4×4 = 64 diﬀerent codons.
Following the universal eukariotic code (see Table 4), 61 of such triplets can be connected in

an unambiguous way to the amino-acids, except the three following triplets UAA, UAG and
UGA, which are called non-sense or stop-codons, the role of which is to stop the biosynthesis.

Indeed, the genetic code is the association between codons and amino-acids. But since one
distinguishes only 20 amino-acids1 related to the 61 codons, it follows that the genetic code is
degenerated. Still considering the standard eukariotic code, one observes sextets, quadruplets,
triplets, doublets and singlets of codons, each multiplet corresponding to a speciﬁc amino-acid.

Such a picture naturally suggests to look for an underlying symmetry able to describe the
observed structure in multiplets, in the spirit of dynamical symmetry scheme which has proven
so powerful in atomic, molecular and nuclear physics. We review at the end of this paper these

recent approaches.

In refs.

[1, 2] we have proposed a mathematical framework in which the codons appear

as composite states of nucleotides. The four nucleotides being assigned to the fundamental
irreducible representation of the quantum group Uq(sl(2) ⊕ sl(2)) in the limit q → 0, the
codons are obtained as tensor product of nucleotides. Indeed, the properties of quantum group
representations in the limit q → 0, or crystal basis, are well adapted to take into account the
nucleotide ordering. Then properties of this model have been considered. We will generalize

some of them in the following and also propose new developments.

1Alanine (Ala), Arginine (Arg), Asparagine (Asn), Aspartic acid (Asp), Cysteine (Cys), Glutamine (Gln),
Glutamic acid (Glu), Glycine (Gly), Histidine (His), Isoleucine (Ile), Leucine (Leu), Lysine (Lys), Methionine
(Met), Phenylalanine (Phe), Proline (Pro), Serine (Ser), Threonine (Thr), Tryptophane (Trp), Tyrosine (Tyr),
Valine (Val).

1

The paper is organized as follows. We start in sect. 2 by recalling the main aspects of the
model. In sect. 3 we build out of the generators of Uq→0(sl(2)⊕sl(2)) a reading operator, which
gives the correct correspondence between codons and amino-acids for each of the 12 presently

known genetic codes. This construction generalizes in a synthetical way the one started in [1]
for the eukariotic and vertebrate mitochondrial codes, the diﬀerent reading operators acting

on codons and providing the same eigenvalue for a given amino-acid whatever the considered
code. In sect. 4 some physical properties of dinucleotide states are ﬁtted. In sect. 5, we analyze
ratios of codon usage frequency for several biological species belonging to the vertebrate class

and put in evidence a universal behaviour, which ﬁts naturally in our model. In sect. 6, making
use of the general crystal basis mathematical framework, we represent the mutation induced

by the deletion of a pyrimidine by the action of a suitable crystal spinor operator. In sect. 7
we review and compare with our model the recent symmetry approaches to the genetic code.

Finally in sect. 8 we give a few conclusions and discuss some directions of future developments.

2 The Model

We consider the four nucleotides as basic states of the ( 1
2) representation of the Uq(sl(2) ⊕
sl(2)) quantum enveloping algebra in the limit q → 0. A triplet of nucleotides will then be
obtained by constructing the tensor product of three such four-dimensional representations.
Actually, this approach mimicks the group theoretical classiﬁcation of baryons made out from

2, 1

three quarks in elementary particles physics, the building blocks being here the A, C, G, T/U
nucleotides. The main and essential diﬀerence stands in the property of a codon to be an

ordered set of three nucleotides, which is not the case for a baryon.

Constructing such pure states is made possible in the framework of any algebra Uq→0(G) with
G being any (semi)-simple classical Lie algebra owing to the existence of a special basis, called
crystal basis, in any (ﬁnite dimensional) representation of G. The algebra G = sl(2) ⊕ sl(2)
appears the most natural for our purpose. The complementary rule in the DNA–mRNA tran-
scription may suggest to assign a quantum number with opposite values to the couples (A,T/U)
and (C,G). The distinction between the purine bases (A,G) and the pyrimidine ones (C,T/U)

can be algebraically represented in an analogous way. Thus considering the fundamental repre-
sentation ( 1
2) of sl(2)⊕sl(2) and denoting ± the basis vector corresponding to the eigenvalues
± 1
2 of the J3 generator in any of the two sl(2) corresponding algebras, we will assume the fol-
lowing “biological” spin structure:

2, 1

C ≡ (+, +)

sl(2)V l

G ≡ (+, −)

sl(2)H

←→

←→

sl(2)H

2

U ≡ (−, +)

l sl(2)V

A ≡ (−, −)

(1)

(2)

the subscripts H (:= horizontal) and V (:= vertical) being just added to specify the algebra.

Now, we consider the representations of Uq(sl(2)) and more speciﬁcally the crystal bases
obtained when q → 0. Introducing in Uq→0(sl(2)) the operators J+ and J− after modiﬁcation
of the corresponding simple root vectors of Uq(sl(2)), a particular kind of basis in a Uq(sl(2))-
module can be deﬁned. Such a basis is called a crystal basis and carries the property to undergo
in a specially simple way the action of the J+ and J− operators: as an example, for any couple
of vectors u, v in the crystal basis B, one gets u = J+v if and only if v = J−u. More interesting
for our purpose is the crystal basis in the tensorial product of two representations. Then the
following theorem holds [4] (written here in the case of sl(2)):

Theorem 1 (Kashiwara) Let B1 and B2 be the crystal bases of the M1 and M2 Uq→0(sl(2))-
modules respectively. Then for u ∈ B1 and v ∈ B2, we have:

J−(u ⊗ v) = (cid:26) J−u ⊗ v ∃ n ≥ 1 such that J n
J+(u ⊗ v) = (cid:26) u ⊗ J+v ∃ n ≥ 1 such that J n

J+u ⊗ v otherwise

u ⊗ J−v otherwise

−u 6= 0 and J+v = 0

+v 6= 0 and J−u = 0

(3)

(4)

Note that the tensor product of two representations in the crystal basis is not commutative.
However, in the case of our model, we only need to construct the n-fold tensor product of the
fundamental representation ( 1
2 ) of Uq→0(sl(2)⊕sl(2)) by itself, thus preserving commutativity
and associativity.

2, 1

Let us insist on the choice of the crystal basis, which exists only in the limit q → 0. In a
codon the order of the nucleotides is of fundamental importance (e.g. CCU → Pro, CUC →
Leu, UCC → Ser). If we want to consider the codons as composite states of the (elementary)
nucleotides, this surely cannot be done in the framework of Lie (super)algebras. Indeed in the

Lie theory, the composite states are obtained by performing tensor products of the fundamental
irreducible representations. They appear as linear combinations of the elementary states, with
symmetry properties determined from the tensor product (i.e.
for sl(n), by the structure of

the corresponding Young tableaux). On the contrary the crystal basis provides us with the
mathematical structure to build composite states as pure states, characterized by the order of
In order to dispose of such a basis, we need to consider the limit q → 0.
the constituents.
Note that in this limit we do not deal anymore either with a Lie algebra or with an universal

deformed enveloping algebra.

To represent a codon, we have to perform the tensor product of three ( 1

2 ) representations
of Uq→0(sl(2) ⊕ sl(2)). However, it is well-known (see Tables 4) that in a multiplet of codons
relative to a speciﬁc amino-acid, the two ﬁrst bases constituent of a codon are “relatively
stable”, the degeneracy being mainly generated by the third nucleotide. We consider ﬁrst the

2, 1

tensor product:

2, 1
( 1

2) ⊗ ( 1

2, 1

2) = (1, 1) ⊕ (1, 0) ⊕ (0, 1) ⊕ (0, 0)

(5)

3

where inside the parenthesis, j = 0, 1
dimensional sl(2) representation. We get, using Theorem 1, the following tableau:

2 , 1 is put in place of the 2j + 1 = 1, 2, 3 respectively

→ su(2)H
↓

su(2)V

(0, 0)

(CA)

(1, 0)

( CG UG UA )

(0, 1) 


CU
GU
GA




(1, 1) 


CC UC UU
GC AC AU
GG AG AA




From Table 4, the dinucleotide states formed by the ﬁrst two nucleotides in a codon can be put

in correspondence with quadruplets, doublets or singlets of codons relative to an amino-acid.
Note that the sextets (resp. triplets) are viewed as the sum of a quadruplet and a doublet

(resp. a doublet and a singlet). Let us deﬁne the “charge” Q of a dinucleotide state by

Q = J (1)

H,3 + J (2)

H,3 + J (2)

V,3

(6)

where the superscript (1) or (2) denotes the position of a codon in the dinucleotide state.
The dinucleotide states are then split into two octets with respect to the charge Q: the eight

strong dinucleotides associated to the quadruplets (as well as those included in the sextets) of
codons satisfy Q > 0, while the eight weak dinucleotides associated to the doublets (as well as

those included in the triplets) and eventually to the singlets of codons satisfy Q < 0. Let us
remark that by the change C ↔ A and U ↔ G, which is equivalent to the change of the sign
of J3,α or to reﬂexion with respect to the diagonals of the eq.(2), the 8 strong dinucleotides are
transformed into weak ones and vice-versa.

If we consider the three-fold tensor product, the content into irreducible representations of

Uq→0(sl(2) ⊕ sl(2)) is given by:

( 1
2, 1

2) ⊗ ( 1

2 , 1

2 ) ⊗ ( 1

2, 1

2) = ( 3

2 , 3

2) ⊕ 2 ( 3

2, 1

2 ) ⊕ 2 ( 1

2, 3

2) ⊕ 4 ( 1

2, 1
2)

(7)

The structure of the irreducible representations of the r.h.s. of Eq. (7) is (the upper labels

denote diﬀerent irreducible representations):

2) ≡

( 3
2, 3




CCC UCC UUC UUU
GCC ACC AUC AUU
GGC AGC AAC AAU
GGG AGG AAG AAA



GCG ACG AUG AUA (cid:19)
2)1 ≡ (cid:18) CCG UCG UUG UUA
2, 1
( 3
CGG UGG UAG UAA (cid:19)
2 )2 ≡ (cid:18) CGC UGC UAC UAU
2, 1
( 3





CCU UCU
GCU ACU
GGU AGU
GGA AGA

2)2 ≡

( 1
2, 3

CUC CUU
GUC GUU
GAC GAU
GAG GAA




4

2 , 3
( 1

2)1 ≡




GCA ACA (cid:19)
2 )1 ≡ (cid:18) CCA UCA
2, 1
( 1
GUG GUA (cid:19)
2)3 ≡ (cid:18) CUG CUA
( 1
2, 1

2)2 ≡ (cid:18) CGU UGU
CGA UGA (cid:19)
2, 1
( 1
CAG CAA (cid:19)
2 )4 ≡ (cid:18) CAC CAU
( 1
2, 1

The correspondence with the amino-acids is given in Table 10 (for the eukariotic code).
Let us close this section by drawing the reader’s attention to Fig. 1 where is speciﬁed

for each codon its position in the appropriate representation. The diagram of states for each
representation is supposed to lie in a separate parallel plane. Thick lines connect codons

associated to the same amino-acid. One remarks that each segment relates a couple of codons
belonging to the same representation or to two diﬀerent representations. This last case occurs

for quadruplets or sextets of codons associated to the same amino-acid.

3 The Reading (or Ribosome) operator R

3.1 General structure of the reading operator

As expected from formula (7), our model does not gather codons associated to one particular
amino-acid in the same irreducible multiplet. However, it is possible to construct an operator
R out of the algebra Uq→0(sl(2) ⊕ sl(2)), acting on the codons, that will describe the various
genetic codes in the following way:

Two codons have the same eigenvalue under R if and only if they are associated to the same

amino-acid. This operator R will be called the reading operator.

It is a remarkable fact that the various genetic codes share the same basic structure. As we
mentioned above, the dinucleotides can be split into “strong” dinucleotides CC, GC, UC, AC,

CU, GU, CG and GG that lead to quartets and “weak” ones UU, AU, UG, AG, CA, GA, UA,
AA that lead to doublets. Let us construct a prototype of the reading operator that reproduces

this structure.

The ﬁrst part of the reading operator R is responsible for the structure in quadruplets given
essentially by the dinucleotide content. It is given by (the ci are arbitrary coeﬃcients)

4

3c1 CH + 4

3c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 .

(8)

The operators Jα,3 (α = H, V ) are the third components of the total spin generators of the
algebra Uq→0(sl(2)⊕sl(2)). The operator Cα is a Casimir operator of Uq→0(sl(2)α) in the crystal
basis. It commutes with Jα± and Jα,3 and its eigenvalues on any vector basis of an irreducible
representation of highest weight J is J(J + 1), that is the same as the undeformed standard
second degree Casimir operator of sl(2). Its explicit expression is

Cα = (Jα,3)2 + 1

2 Xn∈Z+

n

Xk=0

5

(Jα−)n−k(Jα+)n(Jα−)k .

(9)

Note that for sl(2)q→0 the Casimir operator is an inﬁnite series of powers of Jα±. However
in any ﬁnite irreducible representation only a ﬁnite number of terms gives a non-vanishing
contribution.
PH and PV are projectors given by the following expressions:

PH = J d

H+ J d

H−

and

PV = J d

V + J d

V − .

The second part of R gives rise to the splitting of the quadruplets into doublets. It reads

where the projector PD is given by

− 2PD c3 JV,3

PD = (1 − J d

V + J d

V −)(J d

H+ J d

H−)(J d

H− J d

H+) + (1 − J d

H+ J d

H−)(1 − J d

V + J d

V −)

+ (1 − J d

H+ J d

H−)(J d

V + J d

V −)(J d

H− J d

H+) .

(10)

(11)

(12)

The third part of R allows to reproduce the sextets viewed as quartets plus doublets. It is

where the projector PS is given by

− 2PS c4 JV,3

PS = (J d

H− J d

H+) [(J d

H+ J d

H−)(1 − J d

V + J d

V −) + (J d

V + J d

V −)(J d

V − J d

V +)(1 − J d

H+ J d

H−)] .

(13)

(14)

At this point, one obtains the eigenvalues of the reading operator R for the 64 codons, where
Y = C,U (pyrimidines), R = G,A (purines) and N = C,U,G,A:

CCN = −c1 − c2
UCN = 3c1 − c2
CUN = c1 − c2
CGN = −c1 + c2
UUY = 5c1 − c2 − 3c3
AUY = 5c1 + 3c2 − c3 − c4
UGY = 3c1 + c2 − c3 − c4
AGY = 3c1 + 5c2 + c3 + c4
CAY = c1 + c2 − c3
GAY = c1 + 5c2 + c3
UAY = 5c1 + c2 − c3
AAY = 5c1 + 5c2 + c3

GCN = −c1 + 3c2
ACN = 3c1 + 3c2
GUN = c1 + 3c2
GGN = −c1 + 5c2
UUR = 5c1 − c2 − c3
AUR = 5c1 + 3c2 + c3 + c4
UGR = 3c1 + c2 + c3 + c4
AGR = 3c1 + 5c2 + 3c3 + 3c4
CAR = c1 + c2 + c3
GAR = c1 + 5c2 + 3c3
UAR = 5c1 + c2 + c3
AAR = 5c1 + 5c2 + 3c3

(15)

The coeﬃcients c3 and c4 are ﬁxed as follows. The coeﬃcient c3 is set to the value c3 = 4c1 by
requiring that the quartet CUN and the doublet UUR, associated to the amino-acid Leu, lead
to the same R-eigenvalue. It remains to reproduce the Ser sextet. This is achieved by taking
for the coeﬃcient c4 the value c4 = −4c1 − 6c2, such that the ﬁnal eigenvalues for the codons

6

are the following:

CCN = −c1 − c2
CUN = c1 − c2
UUY = −7c1 − c2
UGY = 3c1 + 7c2
CAY = −3c1 + c2
UAY = c1 + c2

GCN = −c1 + 3c2
GUN = c1 + 3c2
UUR = c1 − c2
UGR = 3c1 − 5c2
CAR = 5c1 + c2
UAR = 9c1 + c2

UCN = 3c1 − c2
CGN = c1 + c2
AUY = 5c1 + 9c2
AGY = 3c1 − c2
GAY = 5c1 + 5c2
AAY = 9c1 + 5c2

ACN = 3c1 + 3c2
GGN = −c1 + 5c2
AUR = 5c1 − 3c2
AGR = 3c1 − 13c2
GAR = 13c1 + 5c2
AAR = 17c1 + 5c2

(16)

(17)

(18)

The prototype of the reading operator R takes ﬁnally the form:

R = 4

3 c1 CH + 4

3c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

and the correspondence codons/amino-acids is given as follows:

CCN → Pro
CUN → Leu
UUY → Phe
UUR → Leu
CAY → His
CAR → Gln

UCN → Ser
GUN → Val
AUY → Ile
AUR → Met
UAY → Tyr
UAR → Ter

GCN → Ala
CGN → Arg
UGY → Cys
UGR → Trp
GAY → Gln
GAR → Glu

ACN → Thr
GGN → Gly
AGY → Ser
AGR → unassigned (X)
AAY → Asn
AAR → Lys

3.2 The various genetic codes

In this section, we will determine the reading operators for the following genetic codes:
– the Eukariotic Code (EC),
– the Vertebral Mitochondrial Code (VMC),

– the Yeast Mitochondrial Code (YMC),
– the Invertebrate Mitochondrial Code (IMC),

– the Protozoan Mitochondrial and Mycoplasma Code (PMC),
– the Echinoderm Mitochondrial Code (EMC),

– the Ascidian Mitochondrial Code (AMC),
– the Flatworm Mitochondrial Code (FMC),

– the Ciliate Nuclear Code (CNC),
– the Blepharisma Nuclear Code (BNC),
– the Euplotid Nuclear Code (ENC),

– the Alternative Yeast Nuclear Code (alt. YNC),
Let us emphasize that each of these codes is very close to the assignment (18). The main

diﬀerences between the biological codes and the prototype code (18) are the following:

• assignment of the doublet AGR either to Arg (codes EC, YMC, PMC, CNC, BNC, ENC,
aYNC), Ser (codes IMC, EMC, FMC), Gly (code AMC) or the stop signal Ter (code
VMC).

Such an assignment is done by the following term in the reading operator:

c5 PAG (cid:16) 1

V,3(cid:17)
2 − J (3)

7

(19)

α,3 are the third components corresponding to the third nucleotide of a

The operators J (3)
codon. Of course, these last two operators can be replaced by J (3)
The projector PAG is given by

α,3 = Jα,3 − J d

α,3.

PAG = (J d

H+ J d

H−)(J d

H− J d

H+)(1 − J d

V + J d

V −)(J d

V − J d

V +)

and the coeﬃcient c5 by

for Arg
for Ser
for Gly
for Ter

c5 = −4c1 + 14c2
c5 = 12c2
c5 = −4c1 + 18c2
c5 = 6c1 + 14c2

(20)

(21)

• splitting of some doublets into singlets (one element of the singlet combining to another

doublet to form a triplet):

Met → Met + Ile for the EC, PMC, EMC, FMC, CNC, BNC, ENC, aYNC codes;
Lys → Lys + Asn for the FMC and EMC codes;
Trp → Trp + Ter for the EC, CNC, BNC, aYNC codes;
Trp → Trp + Cys for the ENC code;
Ter → Tyr + Ter for the FMC code;

Such an assignment is done through the following term in the reading operator:

c6 PXY (cid:16) 1

2 − J (3)

V,3(cid:17)(cid:16) 1

H,3(cid:17)
2 − J (3)

(22)

where we use the projector PAU for the splitting of the Met doublet, PAA for the Lys
doublet, PU G for the Trp doublet, and PU A for the Ter doublet. These projectors are
given by

PAU = (1 − J d
PAA = (1 − J d
PU G = (J d
H+ J d
PU A = (1 − J d

H+ J d
H+ J d
H−)(J d
H+ J d

H−)(J d
H−)(J d
H− J d
H−)(J d

H− J d
H− J d
H+)(1 − J d
H− J d

V + J d
H+)(J d
H+)(1 − J d
V + J d
H+)(1 − J d

V − J d
V −)(J d
V + J d
V −)(J d
V −)(1 − J d
V + J d

V +)
V − J d
V − J d
V −)(1 − J d

V +)
V +)
V − J d

V +)

The coeﬃcient c6 takes the following values:

for Met → Met + Ile
for Lys → Lys + Asn
for Trp → Trp + Cys
for Trp → Trp + Ter
for Ter → Ter + Tyr

c6 = 12c2
c6 = −8c1
c6 = 12c2
c6 = 6c1 + 6c2
c6 = −8c1

(23)

(24)

(25)

(26)

(27)

• in the case of the CNC and BNC codes, the Ter doublet is changed in Gln as follows:

Ter → Gln for the CNC code by the term

Ter → Ter + Gln for the BNC code by the term

− 4c1 PU A (cid:16) 1

V,3(cid:17)
2 − J (3)

− 4c1 PU A (cid:16) 1

2 − J (3)

V,3(cid:17)(cid:16) 1

H,3(cid:17)
2 + J (3)

8

(28)

(29)

• in the case of the alternative YNC code, the last quartet Leu is split into a triplet Leu
coded by (CUC,CUU,CUA) and a doublet Ser coded by (CUG). The corresponding term
in the reading operator is

2c1 PCU (cid:16) 1

2 − J (3)

V,3(cid:17)(cid:16) 1

H,3(cid:17)
2 + J (3)

where the projector PCU is given by

PCU = (1 − J d

H+ J d

H−)(1 − J d

H− J d

H+)(J d

V + J d

V −)(1 − J d

V − J d

V +)

(30)

(31)

• in the case of the Yeast Mitochondrial Code, the quartet CUN codes the amino-acid
Thr rather than Leu. This change is achieved by multiplying the quartets term (8) by
(1 + 2PCU ) for the horizontal part and by (1 − 4PCU ) for the vertical part.

3.2.1 The Eukariotic Code (EC)

The Eukariotic Code is the most important one and is often referred to as the universal code.

The diﬀerences between the Eukariotic Code and the prototype code are the following:

prototype code EC
Met
Arg
Trp

Met
X
Trp

AUG
AGG
UGG

prototype code EC
Ile
Arg
Ter

Met
X
Trp

AUA
AGA
UGA

Hence from (19), (21), (22) and (27), the reading operator for the Eukariotic Code is

REC = 4

3 c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

3c1 CH + 4
+(−4c1 + 14c2) PAG (cid:16) 1
V,3(cid:17)
2 − J (3)
+h12c2 PAU + (6c1 + 6c2) PU Gi(cid:16) 1

2 − J (3)

V,3(cid:17)(cid:16) 1

H,3(cid:17)
2 − J (3)

(32)

3.2.2 The Vertebral Mitochondrial Code (VMC)

The Vertebral Mitochondrial Code is used in the mitochondriae of vertebrata. The diﬀerences

between the Vertebral Mitochondrial Code and the prototype code are the following:

prototype code VMC
Ter

X

AGG

prototype code VMC
Ter

X

AGA

Hence from (19) and (21), the reading operator for the Vertebral Mitochondrial Code is

RV M C = 4

3c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

3c1 CH + 4
+(6c1 + 14c2) PAG (cid:16) 1

V,3(cid:17)
2 − J (3)

(33)

9

3.2.3 The Yeast Mitochondrial Code (YMC)

The Yeast Mitochondrial Code is used in the mitochondriae of yeast such as Saccharomyces,

Candida, etc. The diﬀerences between the Yeast Mitochondrial Code and the prototype code
are the following:

prototype code YMC
Thr
Thr
Arg

Leu
Leu
X

CUC
CUG
AGG

prototype code YMC
Thr
Thr
Arg

Leu
Leu
X

CUU
CUA
AGA

Hence from (19) and (21), the reading operator for the Yeast Mitochondrial Code is

RY M C = ( 4

3c1 CH − 4c1 PH JH,3)(1 + 2PCU ) + ( 4
+(−8c1 PD + (8c1 + 12c2) PS) JV,3 + (−4c1 + 14c2) PAG (cid:16) 1

3c2 CV − 4c2 PV JV,3)(1 − 4PCU )
V,3(cid:17)
2 − J (3)

(34)

3.2.4 The Invertebrate Mitochondrial Code (IMC)

The Invertebrate Mitochondrial Code is used in the mitochondriae of some arthopoda, mollusca,
nematoda and insecta. The diﬀerences between the Invertebrate Mitochondrial Code and the

prototype code are the following:

prototype code

AGG

X

IMC
Ser

prototype code

AGA

X

IMC
Ser

Hence from (19) and (21), the reading operator for the Invertebrate Mitochondrial Code is

RIM C = 4

3c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

3c1 CH + 4
+12c2 PAG (cid:16) 1

V,3(cid:17)
2 − J (3)

(35)

3.2.5 The Protozoan Mitochondrial and Mycoplasma Code (PMC)

The Protozoan Mitochondrial and Mycoplasma Code is used in the mitochondriae of some

protozoa (leishmania, paramecia, trypanosoma, etc.) and for many fungi. The diﬀerences
between the Protozoan Mitochondrial and Mycoplasma Code and the prototype code are the
following:

prototype code PMC
Met
Arg

Met
X

AUG
AGG

prototype code PMC
Ile
Arg

Met
X

AUA
AGA

Hence from (19), (21), (22) and (27), the reading operator for the Protozoan Mitochondrial
Code is

RP M C = 4

3 c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

3c1 CH + 4
+(−4c1 + 14c2) PAG (cid:16) 1

2 − J (3)

V,3(cid:17) + 12c2 PAU (cid:16) 1

2 − J (3)

V,3(cid:17)(cid:16) 1

H,3(cid:17)
2 − J (3)

(36)

10

3.2.6 The Echinoderm Mitochondrial Code (EMC)

The Echinoderm Mitochondrial Code is used in the mitochondriae of some asterozoa and echi-

nozoa. The diﬀerences between the Echinoderm Mitochondrial Code and the prototype code
are the following:

prototype code EMC
Met
Ser
Lys

Met
X
Lys

AUG
AGG
AAG

prototype code EMC
Ile
Ser
Asn

Met
X
Lys

AUA
AGA
AAA

Hence from (19), (21), (22) and (27), the reading operator for the Echinoderm Mitochondrial
Code is

REM C = 4

3c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

2 − J (3)

V,3(cid:17) +h12c2 PAU − 8c1 PAAi(cid:16) 1

2 − J (3)

V,3(cid:17)(cid:16) 1

H,3(cid:17)
2 − J (3)

(37)

3 c1 CH + 4
+12c2 PAG (cid:16) 1

3.2.7 The Ascidian Mitochondrial Code (AMC)

The Ascidian Mitochondrial Code is used in the mitochondriae of some ascidiacea. The diﬀer-

ences between the Ascidian Mitochondrial Code and the prototype code are the following:

prototype code AMC
Gly

X

AGG

prototype code AMC
Gly

X

AGA

Hence from (19) and (21), the reading operator for the Ascidian Mitochondrial Code is

RAM C = 4

3c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

3c1 CH + 4
+(−4c1 + 18c2) PAG (cid:16) 1

V,3(cid:17)
2 − J (3)

(38)

3.2.8 The Flatworm Mitochondrial Code (FMC)

The Flatworm Mitochondrial Code is used in the mitochondriae of the ﬂatworms. The diﬀer-

ences between the Flatworm Mitochondrial Code and the prototype code are the following:

prototype code FMC
Ter
Met
Ser
Lys

Ter
Met
X
Lys

UAG
AUG
AGG
AAG

prototype code FMC
Tyr
Ile
Ser
Asn

Ter
Met
X
Lys

UAA
AUA
AGA
AAA

Hence from (19), (21), (22) and (27), the reading operator for the Flatworm Mitochondrial

Code is

RF M C = 4

3c1 CH + 4
+12c2 PAG (cid:16) 1

3c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3
H,3(cid:17)
2 − J (3)

V,3(cid:17) +h12c2 PAU − 8c1 PAA − 8c1 PU Ai(cid:16) 1

V,3(cid:17)(cid:16) 1

2 − J (3)

2 − J (3)

(39)

11

3.2.9 The Ciliate Nuclear Code (CNC)

The Ciliate Nuclear Code is used in the nuclei of some ciliata, dasyclasaceae and diplomonadida.

The diﬀerences between the Ciliate Nuclear Code and the prototype code are the following:

prototype code CNC
Trp
Gln
Met
Arg

Trp
Ter
Met
X

UGG
UAG
AUG
AGG

prototype code CNC
Ter
Gln
Ile
Arg

Trp
Ter
Met
X

UGA
UAA
AUA
AGA

Hence from (19), (21), (22), (27) and (28), the reading operator for the Ciliate Nuclear Code is

RCN C = 4

3c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

3 c1 CH + 4
+h(−4c1 + 14c2) PAG − 4c1 PU Ai(cid:16) 1
+h12c2 PAU + (6c1 + 6c2) PU Gi(cid:16) 1

V,3(cid:17)
2 − J (3)
V,3(cid:17)(cid:16) 1

2 − J (3)

H,3(cid:17)
2 − J (3)

(40)

3.2.10 The Blepharisma Nuclear Code (BNC)

The Blepharisma Nuclear Code is used in the nuclei of the blepharisma (ciliata) (note that

this code is very close to the CNC which is used for the ciliata). The diﬀerences between the
Blepharisma Nuclear Code and the prototype code are the following:

prototype code BNC
Trp
Gln
Met
Arg

Trp
Ter
Met
X

UGG
UAG
AUG
AGG

prototype code BNC
Ter
Ter
Ile
Arg

Trp
Ter
Met
X

UGA
UAA
AUA
AGA

Hence from (19), (21), (22), (27) and (29), the reading operator for the Blepharisma Nuclear

Code is

RBN C = 4

3 c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

3c1 CH + 4
+(−4c1 + 14c2) PAG (cid:16) 1
+h12c2 PAU + (6c1 + 6c2) PU Gi(cid:16) 1

2 − J (3)

V,3(cid:17) − 4c1 PU A (cid:16) 1
V,3(cid:17)(cid:16) 1

2 − J (3)

V,3(cid:17)(cid:16) 1
2 − J (3)
H,3(cid:17)
2 − J (3)

H,3(cid:17)
2 + J (3)

(41)

3.2.11 The Euplotid Nuclear Code (ENC)

The Euplotid Nuclear Code is used in the nuclei of the euplotidae (ciliata). The diﬀerences

between the Euplotid Nuclear Code and the prototype code are the following:

prototype code ENC
Trp
Met
Arg

Trp
Met
X

UGG
AUG
AGG

prototype code ENC
Cys
Ile
Arg

Trp
Met
X

UGA
AUA
AGA

Hence from (19), (21), (22) and (27), the reading operator for the Euplotid Nuclear Code is

REN C = 4

3c1 CH + 4
+(−4c1 + 14c2) PAG (cid:16) 1

3c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3
H,3(cid:17) (42)

V,3(cid:17) + 12c2 (PAU + PU G)(cid:16) 1

V,3(cid:17)(cid:16) 1

2 − J (3)

2 − J (3)

2 − J (3)

12

3.2.12 The alternative Yeast Nuclear Code (alt. YNC)

The alternative Yeast Nuclear Code is used in the nuclei of some yeast (essentially many

candidae). The diﬀerences between the alternative Yeast Nuclear Code and the prototype code
are the following:

prototype code

alt. YNC

prototype code

alt. YNC

CUG
UGG
AUG
AGG

Leu
Trp
Met
X

Ser
Trp
Met
Arg

CUA
UGA
AUA
AGA

Leu
Trp
Met
X

Leu
Ter
Ile
Arg

Hence from (19), (21), (22), (27) and (30), the reading operator for the alternative Yeast Nuclear

Code is

RaY N C = 4

3 c2 CV − 4c1 PH JH,3 − 4c2 PV JV,3 + (−8c1 PD + (8c1 + 12c2) PS) JV,3

3c1 CH + 4
+(−4c1 + 14c2) PAG (cid:16) 1
+h(6c1 + 6c2) PU G + 12c2 PAUi(cid:16) 1

2 − J (3)

V,3(cid:17) + 2c1 PCU (cid:16) 1
V,3(cid:17)(cid:16) 1

2 − J (3)

V,3(cid:17)(cid:16) 1
2 − J (3)
H,3(cid:17)
2 − J (3)

H,3(cid:17)
2 + J (3)

(43)

3.3 Reading values for the amino-acids

We have therefore constructed reading operators for the genetic codes speciﬁed above, starting

from a prototype code that emphasizes the quartet/doublet structure of the diﬀerent codes.
The diﬀerent reading operators are such that they give the same value for a given amino-acid,
whatever the code under consideration. Finally, we get the following eigenvalues of the reading
operators for the amino-acids (after a rescaling, setting c ≡ c1/c2):

a.a.

Ala

Arg

Asn

Asp

Cys

Gln

Glu

value of R

−c + 3
−c + 1

9c + 5

5c + 5

3c + 7

5c + 1

13c + 5

a.a.

Gly

His

Ile

Leu

Lys

Met

Phe

value of R

−c + 5
−3c + 1

5c + 9

c − 1

17c + 5

5c − 3

−7c − 1

a.a.

Pro

Ser

Thr

Trp

Tyr

Val

Ter

value of R

−c − 1
3c − 1

3c + 3

3c − 5

c + 1

c + 3

9c + 1

(44)

Remark that the reading operators R(c) can be used for any real value of c, except those
conferring the same eigenvalue to codons relative to two diﬀerent amino-acids. These forbidden
values are the following: −7, −5, −4, −3, − 5
7, − 2
3 ,
2, 2
4 , − 2
− 3
3, 1,
3, 3
4

7 , − 2
2 , − 3
2, 3, 4, 5.

3 , −2, − 5
6 , − 1
5 , − 1

3 , −1, − 5
7 , 1
9 , 0, 1

5 , − 1
2, 2, 5

6 , − 4
5, 1
6, 1

5 , − 3
3, 2
4, 1

4, − 5
5, 1

3 , − 3
7 , − 1

2 , − 4
8 , − 1

2 , − 7
9 , − 1

5 , − 3

8 , − 1

3 , − 3

10 , − 2

7 , − 1

At this point, let us emphasize the speciﬁc properties of our model. To each nucleotide are
assigned speciﬁc quantum numbers characterizing its purine/pyrimidine origin and involving

13

the complementary rule. Then ordered sequences of bases can be constructed and character-

ized in this framework. Ordered sequences of three bases have been just above examined and
the correspondence codon/amino-acid represented by the reading operator R. Finally let us
remark that the coeﬃcients ci, which above have been taken as constants, can more gener-
ally be considered as functions of some external variables (biological, physical and chemical

environment, time, etc.). In this way it is possible to explain the observed discrepancy in the
correspondence codons/amino-acid in biological species under stress conditions (in vitro). In
this scheme the evolution process of genetic code can also be discussed. However, we believe

that a better understanding of the reasons of the evolution, i.e. which kind of optimization
process takes place, has still to be acquired.

4 Physical properties of the dinucleotides

The model we have at hand, with nucleotides characterized by quantum numbers,

is well

adapted to elaborate formulae expressing biophysical properties. A particularly interesting
quantity is the free energy released by base pairing in double stranded RNA. The data are not
provided for a doublet of nucleotides, with one item in each strand, but for a pair of nucleotides,

for ex. CG, lying on one strand and coupled with another pair, i.e. GC on the second strand
; note also that the direction on a strand being perfectly deﬁned, the release of energy for the
doublet sequence CG on the ﬁrst strand running from 5′ to 3′ related to the doublet GC on the
complementary strand running from 3′ to 5′, will be diﬀerent to the one related to the doublet
GC, itself associated to CG. It appears clear that such quantities involve pairs of nucleotides,
and that naturally ordered crystal bases obtained from tensor product of two representations

are adapted for such a calculation.

We will also consider two other quantities involving again pairs of nucleotides, namely the

relative hydrophilicity Rf and hydrophobicity Rx of dinucleosides.

Before presenting our results, let us mention that ﬁts for the same biophysical properties
can be found in a recent preprint [5] where polynomials in 4 or 6 coordinates in the 64 codon

space are constructed. In their approach, the authors associate two coordinates (d, m) to each
nucleotide of any codon, as follows: A = (−1, 0), C = (0, −1), G = (0, 1), U = (1, 0), labelling
in this way each codon with 6 numbers. The above labelling of the nucleotides is related to our
labels Eq. (2) in the following way:

d

m

C JV,3 − JH,3 −(JV,3 + JH,3)
U JV,3 − JH,3 −(JV,3 + JH,3)
G JV,3 + JH,3
A JV,3 + JH,3

JV,3 − JH,3
JV,3 − JH,3

Therefore the labels (d, m) just correspond up to a sign for the pyrimidine (resp. purine) to
the antidiagonal and diagonal (resp. diagonal and antidiagonal) Uq→0(sl(2)).

In the following we compare our results with those of [5].

14

Free energy

In [1] we have ﬁtted the experimental data with a four-parameter operator. Here we ﬁt the

more recent data [6] with a two-parameter operator obtained from the one used in [1] by setting
two parameters to zero:

Using a least-squares ﬁt, one ﬁnds for the coeﬃcients αi:

∆G0

37 = α0 + α1(CH + CV )J d
3H

α0 = −2.14 , α1 = −0.295

(45)

(46)

The standard deviation of the two-parameter ﬁt (46) is found to be equal to 0.149, which is to be

compared to the standard deviation 0.16 of the four-parameter ﬁt of ref. [5]. The experimental
and ﬁtted values of the free energies ∆G0

37 of the dinucleotides are displayed in Table 1.

hCA −2.1
−2.14i
CU −2.1


−2.14

h CG −2.4
CC −3.3


GC −3.4

−1.55 i


−2.73 UG −2.1
−3.32 UC −2.4
−3.32 AC −2.2
−3.32 AG −2.1

−2.14 UA −1.3
−2.14 UU −0.9
−0.96
−2.14 AU −1.1
−0.96
−2.14 AA −0.9
−0.96



GG −3.3







GU −2.2
−2.14

GA −2.4
−2.14

Table 1: Dinucleotides free energies ∆G0

37.

The upper (resp. lower) values are the experimental (resp. ﬁtted) values.

Hydrophilicity

We ﬁt the values of the relative hydrophilicity Rf of the 16 dinucleoside monophosphates [7]
with the following four-parameter operator:

Rf = α0 + α1CV + α2J d

(J i

3H + J i

3V )(J i

3H + J i

3V − 1)

3V + α3 Xi=1,2

(47)

(the last term in α3 is equal to 4 for AA, to 2 for CA, GA, UA and zero for the other dinu-
cleotides).
Using a least-squares ﬁt, one ﬁnds for the coeﬃcients αi:

α0 = 0.135 , α1 = 0.036 , α2 = 0.147 , α3 = −0.016

(48)

The standard deviation of the four-parameter ﬁt (48) is found to be equal to 0.027, which
is to be compared to the standard deviation 0.033 of the six-parameter ﬁt of ref.
[5]. The
experimental and ﬁtted values of the hydrophilicity Rf of the dinucleosides are displayed in
Table 2.

15

hCA 0.083
0.103i
CU 0.359


0.354

GU 0.224
0.207

GA 0.035
0.028





h CG 0.146
CC 0.349


0.135 UG 0.160

0.103 i
0.135 UA 0.090
0.354 UU 0.389

0.354
0.175 AU 0.112
0.175
0.028 AA 0.023
-0.004

0.354 UC 0.378
0.207 AC 0.118
0.060 AG 0.048

GG 0.065

GC 0.193





Table 2: Dinucleosides relative hydrophilicities Rf .

The upper (resp. lower) values are the experimental (resp. ﬁtted) values.

Hydrophobicity

We ﬁt the values of the relative hydrophobicity Rx of the 16 dinucleoside monophosphates as
reported in [8] with the following four-parameter operator:

Rx = α0 + α1J d

3V + α2J d

3H + α3[(J 1

3H + J 1

3V )2 + (J 2

3H + J 2

3V )2]

(49)

(the last term in α3 is equal to 2 for AA, AC, CA and CC, to 2 for AU, AG, UA, UC, GC, GA,
CU and CG and zero for UU, UG, GU, GG).
Using a least-squares ﬁt, one ﬁnds for the coeﬃcients αi:

α0 = 0.294 , α1 = −0.240 , α2 = −0.105 , α3 = 0.136

(50)

Using a least-squares ﬁt without the dinucleoside AA, one ﬁnds new coeﬃcients αi, which lead
to better values of Rx for the remaining dinucleosides:

α0 = 0.309 , α1 = −0.203 , α2 = −0.068 , α3 = 0.099

(51)

The standard deviation of the four-parameter ﬁt (50) is equal to 0.049, which is the same of

hCA 0.494
0.507i
CU 0.218


0.205

GU 0.291
0.309

GA 0.660
0.611





h CG 0.326
CC 0.244


GC 0.326

0.340 UG 0.291

0.476 i
0.309 UA 0.441
0.205 UU 0.194

0.174
0.507 AU 0.441
0.476
0.611 AA 1
0.778

0.236 UC 0.218
0.340 AC 0.494
0.444 AG 0.660



GG 0.436



Table 3: Dinucleosides relative hydrophobicities Rx.

The upper (resp. lower) values are the experimental (resp. ﬁtted) values.

the four-parameter ﬁt of ref.

[5]. Using the ﬁt (51), the standard deviation becomes 0.074

16

(including the value for AA) or 0.024 (excluding the value for AA). For this last case, the

standard deviation of ref. [5] is still equal to 0.031. The experimental and ﬁtted values (second
ﬁt) of the relative hydrophobicity Rx of the dinucleosides are displayed in Table 3.

5 Universal behaviour of ratios of codon usage frequency

In the following the labels X, J, Z, K represent any of the 4 bases C, U, G, A. Let XJZ be
a codon in a given multiplet, say mi, encoding an a.a., say Ai. We deﬁne the probability of
usage of the codon XJZ as the ratio between the frequency of usage nZ of the codon XJZ
in the biosynthesis of Ai and the total number n of synthesized Ai, i.e. as the relative codon
frequency, in the limit of very large n.

It is natural to assume that the usage frequency of a codon in a multiplet is connected to

its probability of usage P (XJZ → Ai). We deﬁne [2] the branching ratio BZK as

BZK =

P (XJZ → Ai)
P (XJK → Ai)

(52)

where XJK is another codon belonging to the same multiplet mi. It is reasonable to argue
that in the limit of very large number of codons, for a ﬁxed biological species and amino-acid,
the branching ratio depends essentially on the properties of the codon. In our model this means
that in this limit BZK is a function, depending on the type of the multiplet, on the quantum
numbers of the codons XJZ and XJK, i.e. on the labels Jα, Jα,3, where α = H or V , and on
an other set of quantum labels leaving out the degeneracy on Jα; in Table 4 diﬀerent irreducible
representations with the same values of Jα are distinguished by an upper label.

We have put in evidence a correlation in the codon usage frequency for the quartets and
the quartet subpart of the sextets, i.e. the codons in a sextet diﬀering only for the third codon,

for the vertebrates in [2] and for biological species belonging to the vertebrates, invertebrates,
plants and fungi in [9], and we have shown that these correlations ﬁt well in our model with the
assumed dependence on BZK. Here we remark that for thirteen biological species belonging to
the vertebrate class, with a statistics of codons larger than 95,000 (see Table 5), the ratio of

BAG
BU C

=

BAU
BGC

=

P (XJA → Ai)
P (XJG → Ai)

P (XJC → Ai)
P (XJU → Ai)

(53)

for quartets and the quartet subpart of the sextets has a behaviour independent of the speciﬁc

biological species. Moreover, for the same amino-acids for which we have remarked correlations,
the values of the ratio BAG/BU C are almost the same (see Table 8). We show that these
behaviour and correlations ﬁnd a nice explanation in our model. In Tables 6 and 7, we report
respectively the values of the branching ratios BAG and BU C as computed from the database
[10] (release of February 2000) and in Table 8 the ratio of these quantities. The average
values hBAG/BU Ci, the standard deviations σ and the ratios σ/hBAG/BU Ci are displayed in

17

the following table:

hBAG/BU Ci
σ
σ/hBAG/BU Ci

Pro Ala Thr
Ser Gly Val Leu Arg
2.50 2.84 3.30 2.67 2.21 0.33 0.26 1.32
0.46 0.53 0.56 0.35 0.30 0.04 0.03 0.14
0.19 0.19 0.17 0.13 0.14 0.13 0.10 0.11

The above behaviour can be easily understood considering a dependence on BZK not only on
the irreducible representations to which the codons XJZ and XJK appearing in the numerator
and the denominator belong, but also on the speciﬁc states denoting these codons, and reﬁning

the factorized form of [2] as

BZK = FZK(IR(XJZ); IR(XJK))

GH(b.s.; JH,3(XJZ)) GV (b.s.; JV,3(XJZ))
GH(b.s.; JH,3(XJK)) GV (b.s.; JH,3(XJK))

(54)

where we have denoted by b.s. the biological species, by IR(XJZ) and Jα,3(XJZ) the irre-
ducible representation to which the codon XJZ belong (see Table 4), and the value of the third

component of the α-spin of the state XJZ. Note that we have still neglected the dependence
on the type of the biosynthetized amino-acid. The ratio BAG/BU C using Eq. (54), is no more
depending on the biological species but only on the value of the irreducible representations of the

codons. Moreover, for Pro, Ala, Thr, Ser, (resp. Val and Leu), the irreducible representations
appearing in the F functions are the same as can be seen from Table 9, so we expect the same
value for the ratio, which is indeed the case (see above Table), the value of BAG/BU C for the
ﬁrst four amino-acids (resp. for the last two amino-acids) lying in the range 2.90 ± 15% (resp.
0.30 ± 15%). These values should be compared with the value 1.32 for Arg and 2.21 for Gly.

Let us end this section by the following remark. From the above table, one might be tempted
to consider the value of the ratio BAG/BU C for Gly of the same order of magnitude as the ones
for Pro, Ala, Thr, Ser. Then one distinguishes, following this ratio, three groups of codons
quartets: the one associated to the ﬁve just mentioned amino-acids, another one relative to Val

and Leu, and a last one with Arg. Now, let us look at the dinucleotide pairs constituting the
ﬁrst two nucleotides in a codon in the light of our results of sect. 2: the pairs CC, GC, AC, UC

and GG relative to Pro, Ala, Thr, Ser, and Gly respectively belong to the representation (1,1)
of Uq→0(sl(2) ⊕ sl(2)); the states GU and CU relative to Val and Leu respectively belong to
the representation (0,1); ﬁnally CG relative to Arg also lies in a diﬀerent representation (1,0).

6 Mutations in the genetic code

In this section, we present a mathematical framework to describe the single-base deletions in
the genetic code. In [11] starting from the observation that the single-base deletions in DNA,

which occur far more frequently that single base additions, take place in the opposite site to a
purine R, (R = G, A) i.e. a pyrimidine Y (Y = C, U/T) is deleted, arguments have been

presented to explain why the Stop codons have the structure they have, see Table 4. We refer
to the paper for more details and for references to the biological literature on the subject and

18

we recall here just the main ideas and conclusions of [11]. The starting point is the observed

fact that deletions occur more frequently in the following sequences: YR, TTR, YTG and
[11] all these sequences have been reﬁned as YTRV, (V = C, A, G). Starting
TR. In ref.

from the structure of this dangerous sequence and using the complementarity property, an
analysis shows that four codons – TAA, TAG, TTA, CTA – are both potential deletion site

codons and reverse-complementary potential site codons. As a mutation at the end of a protein
chain just implies the addition of further peptides, the authors conclude that the assignment of
codons TAA and TAG as Stop codons minimizes the possible deleterious eﬀects of deletion.

Indeed the codon usage frequency of the dangerous codon CTA, as it can be seen from ﬁg. (5)
of [2] and from ﬁg. (2) of [9], is very low. An analysis of the codon usage frequency exhibits

an analogous behaviour for the codon TTA.

The mechanism by which the above speciﬁed sequences are preferred in the deletion process

is unclear. In the following we will present a mathematical scheme in which these properties can
be settled. Let us recall that the Wigner-Eckart theorem, has been extended to the quantum
algebra Uq(sl(n)), and recently in [12] to the case of Uq→0(sl(2)).

In [12] (q → 0)-tensor operators have been introduced, called crystal tensor operators, which

transform as

J3(τ j

m) ≡ mτ j

m J± (τ j

m) ≡ τ j

m±1

(55)

Clearly, if |m| > j then τ j
The (q → 0)-Wigner-Eckart theorem can be written (j1 ≥ j)

m has to be considered vanishing.

τ j
m |j1m1i = (−1)2j

2j

Xα=0

hj1 + j − αkτ jkj1i |j1 + j − α, m1 + mi

(δm1,j1−α + δ−m,j−α − δm1,j1−α δ−m,j−α)

(56)

The (q → 0)-Wigner-Eckart theorem has the peculiar feature that the selection rules do
not depend only on the rank of the tensor operator and on the initial state, but in a crucial
way from the speciﬁc component of the tensor in consideration. The tensor product of two

irreducible representations in the crystal basis is not commutative (see sect. 2), therefore one
has to specify which is the ﬁrst representation. In the following, as in [12], the crystal tensor

operator has to be considered as the ﬁrst one.

Let us also remark the following peculiar property of crystal basis which will be used in the

following. We specify it only for the case we are interested in, but it is a completely general
property.

An ordered sequence, or chain, of n nucleotides is a state belonging to an irreducible repre-
sentation of Uq→0((sl(2) ⊕ sl(2)) appearing in the n-fold product of the fundamental irreducible
representation (1/2, 1/2). Moreover the same property holds for any subsequence of m (m < n)

nucleotides. We can mimick the deletion of a N nucleotide in a generic position of a coding
sequence by a local annihilation operator of the N nucleotide. In order to take into account

the observed fact that the deletion of the nucleotide depends on the nature of the neighboring

19

nucleotides, we require the annihilation operator to behave as a deﬁned crystal tensor opera-
tor under Uq→0(sl(2))V or Uq→0(sl(2))H or both. In our mathematical description we have to
specify the action of the annihilation operator on a chain of nucleotides. If we assume that the
annihilation of the N nucleotide behaves e.g. as a spinor crystal operator for the Uq→0(sl(2))V ,
we have to require that the deletion of the N nucleotide from the initial chain of K nucleotides,
described by the state |Ji, Mi; Ωii, leading to the ﬁnal chain of K − 1 nucleotides, described
by the state |Jf , Mf ; Ωf i, is compatible with the (q → 0)-Wigner-Eckart theorem prescription
for the action of the deﬁnite crystal spinor operator between the initial state |Ji, Mi; Ωii and
the ﬁnal state |Jf , Mf ; Ωf i, where we have denoted by Ω the set of all the labels necessary
to identify completely the state. As we shall see, this is far from being trivial and will put

constraints on the type of nucleotides surrounding the nucleotide N. We have to specify which
chain has to be considered in order to study the action of the crystal tensor operator. It seems

reasonable to take into account chains formed by K = 2 and 3 nucleotides starting from N in
the sense of the reading of the codon sequence. So we are deﬁning on the chain the action of a

“matrioska” crystal tensor operator. We assume:
Assumption : The biological mechanism responsible for the deletion of a pyrimidine C (resp.
U ) in a sequence can be schematized by a local crystal tensor operator τ 1/2
−1/2 for Uq→0(sl(2)V )
and τ 1/2
1/2 ) for Uq→0(sl(2)H), which transforms the state YX (resp. YXZ) into the
state X (resp. XZ), X, Z being any nucleotide.

−1/2 (resp. τ 1/2

By “local crystal tensor operator” we mean an operator which, in the sequence of RNA, acts
on the K-chain (K = 2, 3) starting with Y, deleting the pyrimidine, according to the selection

rules imposed by the assumed type of the crystal tensor.

Let us point out that, diﬀerently to ref.

[11], where the DNA sequence was analyzed, we

consider the transcripted RNA sequence and the deletion in the trascription of a Y.

There are 8 possible cases (we denote the initial and ﬁnal states with the notation of sect.
2 and by A (resp. F) the allowed (resp. forbidden) transition). We analyze the deletion of a C

(on the left) and of an U (on the right).

Action of τ 1/2

−1/2,H ⊕ τ 1/2

−1/2,V

(1, 1) → ( 1

2, 1
2)
C
CC
2, 1
(0, 1) → ( 1
2)
U
CU
(1, 0) → ( 1
2, 1
2)
G
CG
2, 1
(0, 0) → ( 1
2)
A

CA

F–F

A–F

F–A

A–A

Action of τ 1/2

1/2,H ⊕ τ 1/2

−1/2,V

(1, 1) → ( 1

2 , 1
2 )
UC
C
U
UU
(1, 0) → ( 1
2 , 1
2 )
G
A

UG
UA

A–F
A–F

A–A
A–A

So for the transition for the state of dinucleotide to one nucleotide state, from the assumed
nature of the crystal tensor operator, it follows that a pyrimidine can be deleted if followed by

20

a purine. Now let us consider what happens if we consider the transition from a trinucleotide

to a dinucletide state. Using the previous result we consider only the state in which a purine
is in second position so we have to consider 16 cases:

Action of τ 1/2

−1/2,H ⊕ τ 1/2

−1/2,V

Action of τ 1/2

1/2,H ⊕ τ 1/2

−1/2,V

2, 1
( 1
2)4 → (1, 1)
CAC AC
CAU AU
CAA AA
CAG AG
2, 1
( 3
2)2 → (1, 1)
CGC GC
CGG GG
2, 1
( 1
2)2 → (0, 1)
CGU GU
CGA GA

A–A
A–A
A–A
A–A

F–A
F–A

F–A
F–A

2 , 1
( 3
2)2 → (1, 1)
UAC AC
UAU AU
UAA AA
UAG AG
2 , 1
( 3
2)2 → (1, 1)
UGC GC
UGG GG
2 , 1
( 1
2)2 → (0, 1)
UGU GU
UGA GA

A–A
A–A
A–A
A–A

A–A
A–A

A–A
A–A

So, from the assumed nature of the crystal tensor operator, the transition from a trinucleotide

to a dinucleotide state is horizontally forbidden for the deletion of a C if the second nucleotide
is a G.

Let us note that we have made the simpliﬁed assuption that the transitions depend only on

the values of Jα, Jα,3 of the initial and ﬁnal state.

Moreover, both to take into account the data of [11] and to check that the results are not
very sensible to the choice of the initial state, we consider the deletion of a purine in second
position in a four-nucleotide state and impose that the process may take place only if the initial
and ﬁnal state can be connected by a spinor crystal operator τ 1/2
−1/2,V for the deletion
of C or τ 1/2

−1/2,H ⊕ τ 1/2

−1/2,V for the deletion of U.

1/2,H ⊕ τ 1/2

As the two pyrimidines diﬀer by their value of JH,3, the constraints imposed by the tensor

operator τ 1/2

±1/2,H are weaker than those imposed by the tensor operator τ 1/2

−1/2,V .

In Appendix (in sect. 2) we have reported all the irreducible representations arising by the
4-fold (3-fold) tensor product of the fundamental representation. A detailed analysis shows
that only the following deletions may happen (we report all the transitions that are allowed at

21

least once):

Action of τ 1/2

−1/2,H ⊕ τ 1/2

−1/2,V

Action of τ 1/2

−1/2,H ⊕ τ 1/2

−1/2,V

2, 1

2, 3

2, 1

(2, 1)3 → ( 3

2, 3
2)
GCGC GGC
ACGC AGC
GCGG GGG
ACGG AGG
(2, 0)2 → ( 3
2)2
CCGG CGG
UCGG UGG
(1, 1)7 → ( 1
2)1
GCGU GGU
ACGU AGU
GCGA GGA
ACGA AGA
(1, 0)4 → ( 1
2)2
CCGA CGA
UCGA UGA
(1, 1)9 → ( 1
2)2
GCAC GAC
GCAG GAG
(1, 0)6 → ( 1
2)4
CCAG CAG
(1, 1)9 → ( 3

2, 3
2)
ACAC AAC
ACAU AAU
ACAG AAG
ACAA AAA
(1, 0)6 → ( 3
2)2
UCAG UAG
UCAA UAA

2, 1

2, 1

2, 3

F–A
F–A
F–A
F–A

F–A
F–A

F–A
F–A
F–A
F–A

F–A
F–A

F–A
F–A

F–A

A–A
A–A
A–A
A–A

A–A
A–A

2, 1

2, 3

(1, 2)3 → ( 3

2, 3
2)
UCUC UUC
UCUU UUU
ACUC AUC
ACUU AUU
(0, 2)2 → ( 1
2 )2
CCUU CUU
GCUU GUU
(1, 1)8 → ( 3
2 )1
UCUG UUG
UCUA UUA
ACUG AUG
ACUA AUA
(0, 1)5 → ( 1
2 )3
CCUA CUA
GCUA GUA
(1, 1)9 → ( 3
2 )2
UCAC UAC
UCAU UAU
(0, 1)6 → ( 1
2 )4
CCAU CAU
(0, 0)4 → ( 1
2 )4
CCAA CAA
(0, 1)6 → ( 1
2 )2
GCAU GAU
GCAA GAA

2, 1

2, 1

2, 3

2, 1

2, 1

A–F
A–F
A–F
A–F

A–F
A–F

A–F
A–F
A–F
A–F

A–F
A–F

A–F
A–F

A–F

A–A

A–A
A–A

So we remark:

• The deletion of C, allowed or horizontally forbidden, may happen only if it is followed
by a purine. In the allowed cases, it must be followed by the nucleotide A, in agreement

with the observed data.

• A nucleotide A before the deleted nucleotide C appears only in the transition (1, 1)9 →
( 3
2, 3
2). This feature is present in the observed data with a very low occurrence, which
in our language would mean that the matrix element of τ between these two irreducible
representations is small.

22

Now we consider the case of deletion of U. A detailed analysis shows that only the following

deletions may happen:

Action of τ 1/2

1/2,H ⊕ τ 1/2

−1/2,V

Action of τ 1/2

1/2,H ⊕ τ 1/2

−1/2,V

(1, 1)2 → ( 1

2, 1

2)3

CUUG CUG A–F
GUUG GUG A–F
CUUA CUA A–F
GUUA GUA A–F
(1, 1)2 → ( 3

2, 1

2)1

CUCG CCG A–F
GUCG GCG A–F
(1, 2)2 → ( 1

2, 3

2)1

UUCU UCU A–F
AUCU ACU A–F
(0, 2)1 → ( 1

2, 3

2)1

CUCU CCU A–F
GUCU GCU A–F
(2, 2) → ( 3

2, 3
2)

UUCC UCC A–F
UUUC UUC A–F
UUUU UUU A–F
AUCC ACC
A–F
AUUC AUC A–F
AUUU AUU A–F
(0, 1)3 → ( 1

2, 1

2)1

CUCA CCA A–F
GUCA GCA A–F
(1, 1)3 → ( 3

2, 1

2)2

CUGC CGC A–F

(1, 2)1 → ( 1

2, 3

2)2

CUUC CUC A–F
CUUU CUU A–F
GUUC GUC A–F
GUUU GUU A–F
(1, 2)2 → ( 3

2, 3
2 )
CUCC CCC
A–F
GUCC GCC A–F
(1, 1)3 → ( 1

2, 1

2)4
CUAC CAC
A–F
CUAU CAU A–F
(1, 1)6 → ( 1

2, 1

2)3

UUCA UCA A–F
AUCA ACA A–F
(2, 1)2 → ( 3

2, 1

2)1

UUCG UCG A–F
UUUG UUG A–F
UUUA UUA A–F
AUCG ACG A–F
AUUG AUG A–F
AUUA AUA A–F
(2, 1)3 → ( 3

2, 1

2)2

UUGC UGC A–F
UUAC UAC A–F
UUAU UAU A–F
(1, 1)7 → ( 1

2, 1

2)3

UUGU UGU A–F
(0, 1)4 → ( 1

2, 1

2)2

CUGU CGU A–F

23

Action of τ 1/2

1/2,H ⊕ τ 1/2

−1/2,V

Action of τ 1/2

1/2,H ⊕ τ 1/2

−1/2,V

(1, 1)7 → ( 1

2, 3

2)1

(1, 1)3 → ( 3

2, 3
2)

AUGU AGU A–A
AUGA AGA A–A
(0, 1)4 → ( 1

2, 3

2)1

GUGC GGC A–A
GUGG GGG A–A
(1, 0)2 → ( 1

2, 1

2)4

GUGU GGU A–A
GUGA GGA A–A
(1, 1)3 → ( 1

2, 3

2)2

CUAG CAG A–A
CUAA CAA A–A
(2, 1)3 → ( 3

2, 3
2)

GUAC GAC A–A
GUAU GAU A–A
GUAG GAG A–A
GUAA GAA A–A
(2, 0)2 → ( 3

2, 1

2)2

UUGG UGG A–A
UUAG UAG A–A
UUAA UAA A–A
(1, 0)2 → ( 3

2, 1

2)2

AUGC AGC A–A
AUAC AAC A–A
AUAU AAU A–A
AUGG AGG A–A
AUAG AAG A–A
AUAA AAA A–A
(0, 0)2 → ( 1

2, 1

2)2

CUGA CGA A–A

CUGG CGG A–A

So we remark:

• The deletion of U may happen only if it is followed by A or by G. In the observed
data only A is considered; however in [11] the reported deletion of U are about 1/4

with respect to the reported deletion of C. So our modelisation just foresees a diﬀerent
environment for the deletion of U and C.

• The last nucleotide in the four-nucleotide sequence in which the deletion occurs may be
any nucleotide, but the case in which it is a purine seems more frequent than the case in
which it is a pyrimidine.

• There are no transition which are only horizontally forbidden.

In conclusion, both from considering the transitions on the K-chains (K = 2, 3) to the
(K − 1)-chains or the transition from the four-nucleotide states to the three-nucleotide states
under the action of the crystal tensor operators, we deduce that the deletion of a pyrimidine

may happen if it is followed by a purine. In particular, for the deletion of C the preferred purine
is the adenine A, whilst for the deletion of U also the guanine G may appear. This makes a
diﬀerence between the two cases and it would be extremely interesting to see if more accurate

data may conﬁrm this asymmetry. Moreover the next following nucleotide may be of any type
but there is indication that a purine is preferred. So our mathematical scheme explains the

main features of the observed data [11]. A more quantitative analysis should require higher
statistics in the experimental data.

24

7 Recent theoretical approaches: a comparison

The use of continuous symmetries in the genetic code has been considered by diﬀerent teams
these recent years2. It appears of some importance to summarize each of these approaches, and
to make clear how the model we propose diﬀer from them.

In 1993, an underlying symmetry based on a continuous group has been proposed [13]. More
precisely, considering the eukaryotic code, the authors tried to answer the following question:
is it possible to determine a Lie algebra G carrying a 64-dimensional irreducible representation
R and admitting a subalgebra H such that the decomposition of R into irreducible multiplets
under H gives exactly the 21 diﬀerent multiplets, the diﬀerent codons in each of the ﬁrst
20 multiplets being associated to the same amino-acid, the last multiplet containing the stop
codons ? They proposed as starting symmetry the symplectic algebra sp(6), which indeed

admits an irreducible representation of dimension 64, equal to the number of diﬀerent codons,
with the successive breakings:

sp(6) ⊃ sp(4)⊕su(2) ⊃ su(2)⊕su(2)⊕su(2) ⊃ su(2)⊕U(1)⊕su(2) ⊃ su(2)⊕U(1)⊕U(1) (57)

Such a chain of symmetry breaking could be considered as reﬂecting the evolution of the genetic

code, the six amino-acids relative to the codons in the irreducible representations obtained after
the ﬁrst breaking (in which 64 = 16 + 4 + 20 + 10 + 12 + 2) appearing as primordial amino-

acids in their approach. However, the authors were obliged, in order to reproduce the actual
multiplet pattern, to assume in the ﬁnal breaking, a partial breaking or a “freezing” in the

sense that the breaking of the last su(2) into U(1) does not occur for all the multiplets. As
an example, such a freezing has to be imposed to the sextets corresponding to Leu and Ser,

which otherwise would decompose into three doublets. In the same way, freezing will forbid
the doublets related to Lys and Cys to split into singlets.

In a second further paper, dated 1997 [14], a reﬁnement of this approach has been considered,

with the use of Lie groups instead of Lie algebras: then, global properties, for example non
connexity of O(2) = U(1) × Z2, can be exploited. In this context, the authors proposed another
chain of breaking starting with the exceptional group G2, which also allows a 64 dimensional
irreducible representation. But here again, the freezing pathology cannot be avoided.

One can also mention the work of [15] where the unifying algebra before breaking is so(14).
Meantime (1997), interpreting the double origin of the nucleotides, each arising either from
purine or from pyrimidine, as a Z2-grading a supersymmetric model was proposed [16], involving
superalgebras for such a program. The Z2-grading speciﬁc of a simple superalgebra is there
used to separate purine and pyrimidine:
indeed, by putting the four nucleotids in the the 4

dimensional representation of su(2/1) one can confer to the A and G purines (R) an even
grading, and to the C and U pyrimidines (Y) an odd grading; note that the R states are then in

the su(2) doublet and the Y ones su(2) singlets. The notion of polarity spin is also introduced,

2See section “Symmetry techniques in Biological Systems” in Proc. XXII Int. Coll. on Group Theoretical

Methods in Physics, pp. 142-165.

25

allowing to distinguish the C and G nucleotides with two locally polarized sites, from the A

and U ones with three polarized sites: the C and G (resp. A and U) will be assigned in a
doublet (resp.
in singlets) of another su(2). Then the authors consider the sum of algebras:
su(2) ⊕ su(2) ⊕ su(2|1) with the ﬁrst (second) su(2) acting as polarity spin on the ﬁrst (second)
nucleotid of a codon, and the su(2|1) acting on the third nucleotid only. Moreover the two
su(2) would act in an alternating way on the ﬁrst and second position, that is as 1/2, −1/2 and
−1/2, 1/2. This sum of algebras can be embedded in the superalgebra su(6|1), which admits a
64 dimensional irreducible representation, and could be also used for a superalgebraic approach

to the genetic code evolution, with the chain of symmetry breaking:

su(6|1) ⊃ su(2) ⊕ su(3|1) ⊃ su(2) ⊕ su(2) ⊕ su(2|1) ⊃ U(1) ⊕ U(1) ⊕ su(2|1)

⊃ U(1) ⊕ U(1) ⊕ gl(1|1) (58)

Again the problem of freezing, that is the last breaking applies to some but not all the multiplets,

is present with this choice of (super)algebras.

It seems necessary to remark that in this proposal which implies (super)algebras acting in

the same time on nucleotides and on codons – one must say in a rather complicated way –
the nucleotides cannot appear as building blocks from which one algebraically constructs the

codons, by performing tensorial products of representations, as is the case of our model. In fact,
the problem of ordering the nucleotides inside a codon forbids this natural way of proceeding as
long as only usual (super)algebras are involved. Note that it is the limit of quantum algebras

that we use in our approach: then, we have at hand the so-called crystal bases, which exactly
solve the ordering problem.

In a last month preprint, two authors of the same team [5] proposed to ﬁt biophysical
properties of nucleic acids by constructing polynomials in 6 coordinates in the 64 dimensional

codon space. As already mentioned in sect. 4, the two coordinates they associate to each
nucleotide is direcetly related to the nucleotide eigenvalues of our model. The authors present

their computations as independent of a particular choice of algebra or superalgebra as long
as the underlying algebra is of rank 6 – which is in particular the dimension of the Cartan
subalgebra of su(6|1) – and admits a 64 dimensional irreducible representation. We note that
our model does allow to calculate the biophysical quantities considered in ref. [5] without the
constraint on representations, but more importantly, with only a two rank algebra.

A detailed and systematic study of superalgebras and superalgebra breaking chains has been
performed by the authors of [17]: it is the orthosymplectic osp(5|2) superalgebra which emerges
from their algebraic analysis.

Finally, it is amazing to remark that, just a few years after the the concept of genetic code
was formulated, an attempt to give a mathematical description of its properties was started

by the russian physicist Yu. B. Rumer [18]. Indeed he remarked that the 16 roots, i.e. the
combinations of the ﬁrst two codons, divide in a strong octet which form quartets ou sub-part

of sextets and a weak octet which form doublets, triplets and singlets, attempting to give a

26

systematic description of the genetic code. A few years after, with B.G. Konopel’chenko [19]

they formulated the strong assumption that with respect to any property of the codons the 16
roots can be gathered into two octets with opposite “charge”, whose positive (negative) value

respectively characterizes the strong and weak roots. This description comes out naturally in
our model, such a charge Q being deﬁned in Eq. (5) of sect. 2.

8 Conclusion

Our model is based on the algebra Uq→0(sl(2) ⊕ sl(2)) that we have chosen for two main
characteristics. First it encodes the stereochemical property of a base, and also reﬂects the

complementarity rule, by conferring quantum numbers to each nucleotide. Secondly, it admits
representation spaces or crystal bases in which an ordered sequence of nucleotides or codon
can be suitably characterized. Let us emphasize that Uq→0(sl(2) ⊕ sl(2)) is really neither a Lie
algebra nor an enveloping deformed algebra. We still use in a loose sense the word algebra, just
to emphasize the fact that we use largely the mathematical tools of representation space, tensor

operators etc. which are typical of the algebraic structures. Let us add that it is a remarkable
property of a quantum algebra in the limit q → 0 to admit representations, obtained from the
tensorial product of basic ones, in which each state appears as a unique sequence of ordered
basic elements.

In this framework, the correspondence codon/amino-acid is realized by the operator Rc,
constructed out of the symmetry algebra, and acting on codons: the eigenvalues provided by
Rc on two codons will be equal or diﬀerent depending on whether the two codons are associated
to the same or to two diﬀerent amino-acids. It is remarkable that this correspondence can be
obtained for all the genetic codes and that the reading operators have a bulk common to the

various genetic codes (the prototype reading operator) and diﬀer only for a few additive terms,
analogous to perturbative terms present in most Hamiltonians describing complex physical

systems. Moreover they depend on parameters, presently assumed as constants, which in
principle can be considered as functions of suitable variables. These feature may be of some
interest in the study of the evolution of the genetic code, problem which has not yet been

tackled in our model.

Then, restricting to the case of states made of two nucleotides, the experimental values

of the free energy, released by base pairing in the formation of double stranded nucleic acids,
of the hydrophibicity and of the hydrophilicity have been ﬁtted with expressions depending
respectively on 2, 4 and 4 parameters and constructed out of the generators of Uq→0(sl(2) ⊕
sl(2)).

The model does not necessarily assign the codons in a multiplet (in particular the quartets,

sextets and triplet) to the same irreducible representation. Let us remark that the assignments
of the codons to the diﬀerent irreducible representations is a straightforward consequence of

the tensor product, once assigned the nucleotides to the fundamental irreducible representation.
This feature is relevant, since it can explain the correlation between the branching ratios of the

27

codon usage of diﬀerent codons coding the same amino-acid as discussed in [2] and [9]. Here we
have shown that the universal pattern (inside the class of vertebrates) of BAG/BU C can simply
be reproduced in our model.

Moreover our mathematical description of the genetic code allows a modelisation of some
biological process. A ﬁrst step in this direction has been presented in sect. 6, where we have

shown that the observed data related to the a pyrimidine deletion can be simulated by introduc-
ing the concept of q → 0 – or crystal – tensor operator. Finally let us mention some directions
for future development of our model. Going further in the analysis of the branching ratios, we

want to reﬁne our analysis and make a more detailed study taking into account the dependence
on the family of biological species. Indeed preliminary analysis on plants, invertebrates and

bacteriae shows that, even if the pattern of the correlation is still approximatively present,
large deviations appear which presumably exhibit evidence that the dependence on subclass or

family of biological species cannot any more be neglected, diﬀerently to the case of vertebrates.
A further investigation of the possibility of mathematically modelising or simulating biological

processes, in particular mutations, by crystal tensor operators, is in progress. Other questions
are still to be investigated: in particular how could the genetic code evolution be reproduced
in our model ?

References

[1] L. Frappat, A. Sciarrino, P. Sorba, A crystal base for the genetic code, Phys. Lett. A 250

(1998) 214 and physics/9801027.

[2] L. Frappat, A. Sciarrino, P. Sorba, Symmetry and codon usage correlations in the genetic

code, Phys. Lett. A 259 (1999) 339 and physics/9812041.

[3] M. Singer, P. Berg, Genes and Genomes, Editions Vigot, Paris (1992).

[4] M. Kashiwara, Crystallizing the q-analogue of universal enveloping algebras, Commun.

Math. Phys. 133 (1990) 249.

[5] J.D. Bashford, P.D. Jarvis, The genetic code as a periodic table: algebraic aspects,

physics/0001066.

[6] D.H. Mathews, J. Sabina, M. Zucker, D.H. Turner, J. Mol. Biol. 288 (1999) 911.

[7] A.L. Weber, J.C. Lacey, Genetic code correlations: amino-acids and their anticodon nu-

cleotides, J. Mol. Evol. 11 (1978) 199.

[8] J.R. Jemcyck, The genetic code as a periodic table, J. Mol. Evol. 11 (1978) 211.

[9] M.L. Chiusano, L. Frappat, A. Sciarrino, P. Sorba, Codon usage correlations and Crystal

Basis model of the genetic code, preprint LAPTH-736/99, DSF-Th-17/99.

28

[10] Y. Nakamura, T. Gojobori, and T. Ikemura, Nucleic Acids Research 26 (1998) 334.

[11] J.L. Jestin, A. Kempf, Chain termination codons and polymerase-induced frameshift mu-

tations, FEBS Letters 419 (1997) 153.

[12] V. Marotta, A. Sciarrino, Tensor operator and Wigner-Eckart theorem for Uq→0(sl(2)),

preprint DSF-T-43/98, math.QA/9811143, submitted to J. Math. Phys.

[13] J.E. Hornos, Y. Hornos, Algebraic model for the evolution of the genetic code, Phys. Rev.

Lett. 71 (1993) 4401.

[14] M. Forger, Y. Hornos, J.E. Hornos, Global aspects in the algebraic approach in the genetic

code, Phys. Rev. E 56 (1997) 7078.

[15] R.D. Kent, M. Schlesinger, B.G. Wybourne, On algebraic approach to the genetic code,

Proc. XXII Int. Coll. on Group Theoretical Methods in Physics, Eds. B.P. Corney, R.
Delbourgo and P.D. Jarvis, International Press (Boston, 1999), pp. 152.

[16] J.D. Bashford, I. Tsohantjis, P.D. Jarvis, Codon and nucleotide assignments in a super-
symmetric model of the genetic code, Phys. Lett. A 233 (1997) 481 and A supersymmetric

model for the evolution of the genetic code, Proc. Nat. Acad. Sci. USA 95 (1998) 987.

[17] M. Forger and S. Sachse, Lie Superalgebras and the Multiplet Structure of the Ge-

netic Code I: Codons Representations, II: Branching Schemes, math-ph/9808001 and
math-ph/9905017.

[18] Yu.B. Rumer, Systematization of the Codons of Genetic Code, Translated from Doklady

Akademi Nauk SSSR 167, N.6, (1966) 1393-1394 and Systematization of the Codons of
Genetic Code, Translated from Doklady Akademi Nauk SSSR 187, N.4, (1969) 937-938.

[19] B.G. Konopel’chenko, Yu.B. Rumer, Classiﬁcation of Codons in the Genetic Code, Trans-

lated from Doklady Akademi Nauk SSSR 223, N.2, (1975) 471-474.

29

Figure 1: Classiﬁcation of the codons in the diﬀerent crystal bases.

CCC
t
Q

UCC
t
Q

UUC
t
Q

Phe

UUU
t
Q

Q

Q

Q

Q

Q

Q

Q

Q

Q

Q

GCC
Q
t
Q

Q

ACC
Q
t
Q

Q

AUC
Q
t
Q

Q

Q
Ile

Q

Q

AUU
Q
t
Q

Q

Q

Q

Q

Q

Q

Q

Q

Q

Q

GGC
Q
t
Q
Q
Q

Q

AGC
Q
t
Q

Q

AAC
Q
t
Q

Q

Q
Asn

Q

Q

AAU
Q
t
Q

Q
Q
Q

Q
Q
Q

Q
Q
Q

Q

Q

Q

Q

Q

Q

(3/2, 3/2)

Q

Q
Lys

Q

Q
Q
Q

GGG
Q
Q
Q

t

Q

AGG
Q

t

Q

AAG
Q

t

Q

AAA
Q

t

CCU
t
Q

UCU
t
Q

Q

Q

Q

Q

Q

Q

Q

GCU
Q
t
Q

Q

ACU
Q
t
Q

Ser2

Gly

Arg2

Pro

Ser4

Q

Q

Q

Q

Q

Q

Q

GGU
Q
t
Q
Q
Q

Q

AGU
Q
t
Q

Q
Q
Q

Q
Q
Q

Q
Q
Q

Q

Q

Q

Q
Q
Q

GGA
Q
Q
Q

t

Q

AGA
Q

t

Ala

Thr

CCG
t
Q

UCG
t
Q

UUG
t
Q

Leu2

UUA
t
Q

Q

Q

Q

Q

Q

Q

Q

Q

Q

Q

Q

Q

Q

GCG
Q

t

Q

ACG
Q

t

Q

AUG
Q

t

Q

AUA
Q

t

CCA
t
Q

UCA
t
Q

Q

Q

Q

Q

Q

Q

Q

GCA
Q

t

Q

ACA
Q

t

30

(1/2, 3/2)1

(3/2, 1/2)1

(1/2, 1/2)1

Figure 1 (continued)

CUC
t
Q

CUU
t
Q

Q

Q

Q

Q

Q

Q

Q

GUC
Q
t
Q

Q

GUU
Q
t
Q

Q

Q

Q

Q

Q
Asp

Q

Q

GAC
Q
t
Q

Q

GAU
Q
t
Q

Q

Q

Q

Q

Q
Glu

Q

Q

GAG
Q

t

Q

GAA
Q

t

Leu4

Val

CUG
t
Q

CUA
t
Q

Q

Q

Q

Q

Q

Q

Q

GUG
Q

t

Q

GUA
Q

t

CGC
t
Q
Q
Q

Q
Q
Q

Q
Q
Q

Q
Q
Q

UGC
t
Q

Q

Q

Q
Q
Q

CGG
Q
Q
Q

t

UAC
t
Q

Tyr

UAU
t
Q

Q

Q

Q

Q

Q
Ter

Q

Q

UAG
Q

t

Q

UAA
Q

t

Q

Q

UGG
Q
Trp

t

Arg4

Cys

CGU
t
Q
Q

Q
Q

Q
Q

Q
Q

UGU
tQ

Q

Q

Q

Q
Q

CGA
Q
Q

t

Q

UGA
Q

t

CAC
t
Q

His

CAU
t
Q

Q

Q

Q

Q

Q
Gln

Q

Q

CAG
Q

t

Q

CAA
Q

t

31

(1/2, 3/2)2

(1/2, 1/2)3

(3/2, 1/2)2

(1/2, 1/2)2

(1/2, 1/2)4

Table 4: The eukariotic code. The upper label denotes diﬀerent irreducible representations.

codon
a.a.
CCC
Pro
CCU Pro
CCG Pro
CCA Pro
CUC Leu
CUU Leu
CUG Leu
CUA Leu
CGC Arg
CGU Arg
CGG Arg
CGA Arg
CAC
His
CAU
His
CAG Gln
CAA Gln
GCC Ala
GCU Ala
GCG Ala
GCA Ala
GUC Val
GUU Val
GUG Val
GUA Val
GGC Gly
GGU Gly
GGG Gly
GGA Gly
GAC Asp
GAU Asp
GAG Glu
GAA Glu

JH
3/2
(1/2
(3/2
(1/2
(1/2
(1/2
(1/2
(1/2
(3/2
(1/2
(3/2
(1/2
(1/2
(1/2
(1/2
(1/2
3/2
(1/2
(3/2
(1/2
(1/2
(1/2
(1/2
(1/2
3/2
(1/2
3/2
(1/2
(1/2
(1/2
(1/2
(1/2

a.a.
codon
JV
Ser
3/2
UCC
3/2)1 UCU
Ser
1/2)1 UCG Ser
1/2)1 UCA
Ser
3/2)2 UUC Phe
3/2)2 UUU Phe
1/2)3 UUG Leu
1/2)3 UUA Leu
1/2)2 UGC Cys
1/2)2 UGU Cys
1/2)2 UGG Trp
1/2)2 UGA Ter
1/2)4 UAC
Tyr
1/2)4 UAU Tyr
1/2)4 UAG Ter
1/2)4 UAA
Ter
3/2
ACC
Thr
3/2)1 ACU Thr
1/2)1 ACG Thr
1/2)1 ACA Thr
3/2)2 AUC
Ile
3/2)2 AUU
Ile
1/2)3 AUG Met
1/2)3 AUA
Ile
3/2
AGC
Ser
3/2)1 AGU
Ser
3/2
AGG Arg
3/2)1 AGA Arg
3/2)2 AAC Asn
3/2)2 AAU Asn
3/2)2 AAG Lys
3/2)2 AAA Lys

JH
3/2
(1/2
(3/2
(1/2
3/2
3/2
(3/2
(3/2
(3/2
(1/2
(3/2
(1/2
(3/2
(3/2
(3/2
(3/2
3/2
(1/2
(3/2
(1/2
3/2
3/2
(3/2
(3/2
3/2
(1/2
3/2
(1/2
3/2
3/2
3/2
3/2

JV
3/2
3/2)1
1/2)1
1/2)1
3/2
3/2
1/2)1
1/2)1
1/2)2
1/2)2
1/2)2
1/2)2
1/2)2
1/2)2
1/2)2
1/2)2
3/2
3/2)1
1/2)1
1/2)1
3/2
3/2
1/2)1
1/2)1
3/2
3/2)1
3/2
3/2)1
3/2
3/2
3/2
3/2

32

Table 5: Biological species sample used in analysis of sect. 5

Species

1 Homo sapiens
2 Rattus norvegicus
3 Gallus gallus
4 Xenopus laevis
5 Bos taurus
6 Oryctolagus cuniculus
7 Sus scrofa
8 Danio rerio
9 Rattus rattus
10 Canis familiaris
11 Rattus sp.
12 Ovis aries
13 Fugu rubripes

Number
of sequences
17625
4907
1592
1433
1382
713
658
500
342
317
299
327
157

Number
of codons
8707603
2469130
763008
646214
614602
358447
275045
213258
153049
142944
112039
101591
95979

Table 6: BAG ratios for the quartets

Pro Ala Thr
2.34
2.29
2.33
2.40
1.96
1.77
4.08
4.10
2.02
1.94
1.30
1.45
1.52
1.60
1.39
1.71
2.19
2.28
1.81
2.09
2.27
2.22
2.15
1.76
1.28
1.60

2.03
2.17
1.90
4.23
1.80
1.45
1.60
1.47
1.97
1.72
2.15
1.60
1.40

1
2
3
4
5
6
7
8
9
10
11
12
13

Ser Val Leu Arg Gly
2.51
0.99
1.03
2.35
1.02
1.93
1.67
3.45
2.32
1.01
0.88
1.45
0.89
1.69
1.68
1.94
1.03
2.26
1.01
1.90
1.07
2.24
1.99
1.08
1.23
1.42

0.23
0.22
0.25
0.48
0.21
0.15
0.16
0.22
0.21
0.21
0.21
0.15
0.17

0.17
0.17
0.14
0.32
0.14
0.10
0.12
0.18
0.17
0.15
0.16
0.13
0.12

0.53
0.61
0.52
1.00
0.56
0.44
0.46
0.89
0.66
0.49
0.62
0.60
0.73

33

Table 7: BU C ratios for the quartets

Pro Ala Thr
0.64
0.85
0.91
0.61
0.69
0.75
1.05
1.27
0.57
0.78
0.62
0.46
0.49
0.68
0.69
1.02
0.88
0.59
0.57
0.76
0.58
0.94
0.45
0.70
0.77
0.55

0.64
0.69
0.80
1.15
0.61
0.47
0.54
0.88
0.71
0.61
0.69
0.53
0.68

Ser Val Leu Arg Gly
0.47
0.82
0.78
0.49
0.51
0.77
0.87
1.17
0.47
0.79
0.54
0.34
0.38
0.65
0.68
0.83
0.76
0.51
0.53
0.76
0.49
0.83
0.43
0.73
0.71
0.64

0.72
0.59
0.84
1.26
0.65
0.51
0.50
0.82
0.59
0.56
0.55
0.50
0.60

0.64
0.57
0.64
1.24
0.57
0.43
0.47
0.64
0.57
0.55
0.55
0.46
0.49

0.43
0.48
0.45
0.98
0.41
0.29
0.33
0.60
0.50
0.37
0.47
0.41
0.57

Table 8: BAG/BU C ratios for the quartets

Pro Ala Thr
3.57
2.75
2.63
3.81
2.83
2.38
3.89
3.22
2.60
3.40
2.80
2.33
3.11
2.34
1.36
2.48
3.68
2.58
3.17
2.74
3.93
2.36
3.08
3.92
2.31
2.09

3.15
3.15
2.38
3.69
2.96
3.08
2.97
1.68
2.78
2.82
3.14
3.03
2.06

Ser Val Leu Arg Gly
2.11
3.05
3.02
2.10
2.00
2.50
1.92
2.96
2.92
2.17
2.60
2.67
2.36
2.60
2.03
2.87
2.00
2.98
1.91
2.51
2.18
2.71
2.72
2.52
1.92
2.01

0.32
0.38
0.30
0.38
0.32
0.29
0.32
0.27
0.36
0.38
0.38
0.30
0.27

0.26
0.30
0.21
0.25
0.25
0.24
0.25
0.27
0.31
0.28
0.29
0.28
0.24

1.25
1.28
1.14
1.02
1.36
1.55
1.38
1.48
1.32
1.32
1.34
1.45
1.28

1
2
3
4
5
6
7
8
9
10
11
12
13

1
2
3
4
5
6
7
8
9
10
11
12
13

Table 9: F functions appearing in the BAG/BU C ratios

Pro
FAG(cid:16)( 1
2 )1; ( 3
2, 1
FU C(cid:16)( 1
2)1; ( 3
2, 3
Val
FAG(cid:16)( 1
2 )3; ( 1
2, 1
FU C(cid:16)( 1
2, 3
2 )2; ( 1

2)1(cid:17)
2, 1
2 )(cid:17)
2, 3
2)3(cid:17)
2, 1
2)2(cid:17)
2, 3

Ala
FAG(cid:16)( 1
2)1; ( 3
2, 1
FU C(cid:16)( 1
2)1; ( 3
2, 3
Leu
FAG(cid:16)( 1
2)3; ( 1
2, 1
FU C(cid:16)( 1
2, 3
2)2; ( 1

2)1(cid:17)
2, 1
2)(cid:17)
2, 3
2)3(cid:17)
2, 1
2)2(cid:17)
2, 3

Thr
FAG(cid:16)( 1
2)1; ( 3
2, 1
FU C(cid:16)( 1
2 )1; ( 3
2, 3
Arg
2)2; ( 3
2, 1
FAG(( 1
FU C(cid:16)( 1
2, 1
2)2; ( 3

2)1(cid:17)
2, 1
2 )(cid:17)
2, 3
2)2(cid:17)
2, 1
2)2(cid:17)
2, 1

Ser
FAG(cid:16)( 1
2 )1; ( 3
2 , 1
FU C(cid:16)( 1
2)1; ( 3
2, 3
Gly
FAG(cid:16)( 1
2)1; ( 3
2, 3
FU C(cid:16)( 1
2, 3
2)2; ( 3

2 )1(cid:17)
2, 1
2)(cid:17)
2, 3
2)(cid:17)
2, 3
2)(cid:17)
2, 3

34

Table 10: Amino-acid content of the ⊗3( 1

2, 1

2) representations

2, 3
( 3

2) ≡

P − Pro
A − Ala
G − Gly
G − Gly




S − Ser
T − Thr
S − Ser
R − Arg

F − Phe
I − Ile
N − Asn
K − Lys

2)1 ≡ (cid:18) P − Pro
2 , 1
( 3

A − Ala

S − Ser
L − Leu
T − Thr M − Met

F − Phe
I − Ile
N − Asn
K − Lys



I − Ile (cid:19)

L − Leu

2)2 ≡ (cid:18) R − Arg
2, 1
( 3

C − Cys
R − Arg W − Trp

Y − Tyr

Ter

Y − Tyr

Ter (cid:19)

( 1
2, 3

2)1 ≡

( 1
2, 3

2 )2 ≡

P − Pro
A − Ala
G − Gly
G − Gly

L − Leu
V − Val
D − Asp
E − Glu






2 )1 ≡ (cid:18) P − Pro
2, 1
( 1

A − Ala

S − Ser
T − Thr
S − Ser
R − Arg





T − Thr (cid:19)

L − Leu
V − Val
D − Asp
E − Glu

S − Ser

2)2 ≡ (cid:18) R − Arg
( 1
2, 1

R − Arg

C − Cys

Ter (cid:19)

2 )3 ≡ (cid:18) L − Leu
2, 1
( 1

V − Val

L − Leu

V − Val (cid:19)

2 )4 ≡ (cid:18) H − His
2, 1
( 1

Q − Gln

H − His

Q − Gln (cid:19)

35

Table 11: Four-fold tensor product of the ( 1

2 , 1

2) representation of Uq→0(sl(2) ⊕ sl(2))

( 1
2, 1

2) ⊗ ( 1

2, 1

2) ⊗ ( 1

2, 1

2) ⊗ ( 1

2, 1

2) = ( 1

2 ) ⊕ 2 ( 3

2, 1

2 ) ⊕ 2 ( 1

2, 3

2) ⊕ 4 ( 1

= (2, 2) ⊕ 3 (2, 1) ⊕ 3 (1, 2) ⊕ 9 (1, 1) ⊕ 2 (2, 0)

2 ) ⊗h( 3
2 , 3
2, 1

2)i
2, 1

One has (The upper label denotes diﬀerent irreducible representations):

⊕ 2 (0, 2) ⊕ 6 (1, 0) ⊕ 6 (0, 1) ⊕ 4 (0, 0)

2, 1
( 1

2) ⊗ ( 3

2, 3

2) = (2, 2) ⊕ (2, 1)1 ⊕ (1, 2)1 ⊕ (1, 1)1

where

(2, 2) =

CCCC UCCC UUCC UUUC UUUU
GCCC ACCC AUCC AUUC AUUU
GGCC AGCC AACC AAUC AAUU
GGGC AGGC AAGC AAAC AAAU
GGGG AGGG AAGG AAAG AAAA

(2, 1)1 =

CGCC UGCC UACC UAUC UAUU
CGGC UGGC UAGC UAAC UAAU
CGGG UGGG UAGG UAAG UAAA















(1, 2)1 =

CUCC CUUC CUUU
GUCC GUUC GUUU
GACC GAUC GAUU
GAGC GAAC GAAU
GAGG GAAG GAAA

(1, 1)1 =

CACC CAUC CAUU
CAGC CAAC CAAU
CAGG CAAG CAAA








( 1
2 , 1

2) ⊗ ( 3

2, 1

2)1 = (2, 1)2 ⊕ (2, 0)1 ⊕ (1, 1)2 ⊕ (1, 0)1

where




(2, 1)2 =

CCCG UCCG UUCG UUUG UUUA
GCCG ACCG AUCG AUUG AUUA
GGCG AGCG AACG AAUG AAUA

(1, 1)2 =

CUCG CUUG CUUA
GUCG GUUG GUUA
GACG GAUG GAUA

















(2, 0)1 =

(1, 0)1 =

(cid:0) CGCG UGCG UACG UAUG UAUA (cid:1)

(cid:0) CACG CAUG CAUA (cid:1)

2 , 1
( 1

2) ⊗ ( 3

2, 1

2)2 = (2, 1)3 ⊕ (2, 0)2 ⊕ (1, 1)3 ⊕ (1, 0)2

where

(2, 1)3 =

CCGC UCGC UUGC UUAC UUAU
GCGC ACGC AUGC AUAC AUAU
GCGG ACGG AUGG AUAG AUAA










(1, 1)3 =

CUGC CUAC CUAU
GUGC GUAC GUAU
GUGG GUAG GUAA




(2, 0)2 =

(1, 0)2 =

(cid:0) CCGG UCGG UUGG UUAG UUAA (cid:1)

(cid:0) CUGG CUAG CUAA (cid:1)

36

where

where

where

where

2 , 1
( 1

2) ⊗ ( 1

2, 3

2)1 = (1, 2)2 ⊕ (0, 2)1 ⊕ (1, 1)4 ⊕ (0, 1)1

(1, 2)2 =

CCCU UCCU UUCU
GCCU ACCU AUCU
GGCU AGCU AACU
GGGU AGGU AAGU
GGGA AGGA AAGA





(1, 1)4 = 


CGCU UGCU UACU
CGGU UGGU UAGU
CGGA UGGA UAGA





(0, 2)1 =




 (0, 1)1 = 


CUCU
GUCU
GACU
GAGU
GAGA

CACU
CAGU
CAGA

2 , 1
( 1

2) ⊗ ( 1

2, 3

2)2 = (1, 2)3 ⊕ (0, 2)2 ⊕ (1, 1)5 ⊕ (0, 1)2

(1, 2)3 =

CCUC UCUC UCUU
GCUC ACUC ACUU
GGUC AGUC AGUU
GGAC AGAC AGAU
GGAG AGAG AGAA





(1, 1)5 = 


CGUC UGUC UGUU
CGAC UGAC UGAU
CGAG UGAG UGAA





(0, 2)2 =




 (0, 1)2 = 


CCUU
GCUU
GGUU
GGAU
GGAA

CGUU
CGAU
CGAA

2 , 1
( 1

2) ⊗ ( 1

2, 1

2)1 = (1, 1)6 ⊕ (1, 0)3 ⊕ (0, 1)3 ⊕ (0, 0)1















(1, 1)6 = 


CCCA UCCA UUCA
GCCA ACCA AUCA
GGCA AGCA AACA

(1, 0)3 = (cid:0) CGCA UGCA UACA (cid:1)


 (0, 1)3 = 


CUCA
GUCA
GACA



(0, 0)1 = (cid:0) CACA (cid:1)

( 1
2 , 1

2) ⊗ ( 1

2, 1

2)2 = (1, 1)7 ⊕ (1, 0)4 ⊕ (0, 1)4 ⊕ (0, 0)2

(1, 1)7 = 


CCGU UCGU UUGU
GCGU ACGU AUGU
GCGA ACGA AUGA

(1, 0)4 = (cid:0) CCGA UCGA UUGA (cid:1)

37


 (0, 1)4 = 


CUGU
GUGU
GUGA



(0, 0)2 = (cid:0) CUGA (cid:1)

where

where

2 , 1
( 1

2) ⊗ ( 1

2, 1

2)3 = (1, 1)8 ⊕ (1, 0)5 ⊕ (0, 1)5 ⊕ (0, 0)3

(1, 1)8 = 


CCUG UCUG UCUA
GCUG ACUG ACUA
GGUG AGUG AGUA

(1, 0)5 = (cid:0) CGUG UGUG UGUA (cid:1)


 (0, 1)5 = 


CCUA
GCUA
GGUA



(0, 0)3 = (cid:0) CGUA (cid:1)

2 , 1
( 1

2) ⊗ ( 1

2, 1

2)4 = (1, 1)9 ⊕ (1, 0)6 ⊕ (0, 1)6 ⊕ (0, 0)4


 (0, 1)6 = 


CCAU
GCAU
GCAA



(0, 0)4 = (cid:0) CCAA (cid:1)

(1, 1)9 = 


CCAC UCAC UCAU
GCAC ACAC ACAU
GCAG ACAG ACAA

(1, 0)6 = (cid:0) CCAG UCAG UCAA (cid:1)

38

