2
0
0
2
 
y
a
M
 
7
2
 
 
]
h
p
-
n
e
g
.
s
c
i
s
y
h
p
[
 
 
1
v
3
7
0
5
0
2
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

An Ultimate Hyperﬁnite Ultralogic Uniﬁcation
for all Physical Theories

Robert A. Herrmann

Mathematics Department
U. S. Naval Academy
572C Holloway Rd.
Annapolis, MD 21402-5002

Abstract: Let {S′
| i ∈ IN} represent a set consequence operators
Ni
deﬁned on the language Λ, where each member of {S′
Ni | i ∈ IN} corre-
sponds to a science-community physical theory. It is shown that there
exists a hyperﬁnite ultralogic U ∈ ∗Cf deﬁned on all internal subsets of
∗Λ such that U 6= ∗U, and, for each i ∈ IN, ∗S′
Ni( ∗Ni) = U( ∗ Ni).
Ni(Y ) | i ∈ IN} ⊂ U(Y ) ⊂ ∗Λ.
For each internal Y ⊂ ∗Λ, S{ ∗S′
Further, if ﬁnite X ⊂ Λ, then S{ ∗S′
Ni(X) | i ∈ IN} ⊂ U(X), and
Ni | i ∈ IN} is a practical consequence operator,
if each member of {SV
then S{S′
Ni(Ni) =
U(Ni).

Ni(X) | i ∈ IN} ⊂ U(X), and, for each i ∈ IN, S′

1. Introduction.

In Herrmann (2001a, b), a restricted hyperﬁnite ultralogic uniﬁcation is con-
structed. The restrictions place upon this construction were necessary in order to
relate the constructed ultralogic directly to the types of ultralogics used to model
probability models (Herrmann 2001c, d). In particular, the standard collections of
consequence operators are restricted to a very special set of operators HX, where
X is itself restricted to the set of all signiﬁcant members of a language Λ. In this
paper all such restrictions are removed. For reader convince, some of the intro-
ductory remarks that appear in Herrmann (2001a, b) are repeated. Over seventy
years ago, Tarski (1956, pp. 60-109) introduced consequence operators as models
for various aspects of human thought. There are two such mathematical theories
investigated, the general and the ﬁnitary consequence operators (Herrmann, 1987).
Let L be a nonempty language, P be the power set operator and F the ﬁnite power
set operator.

Deﬁnition 1.1. A mapping C: P(L) → P(L) is a general consequence operator

(or closure operator) if for each X, Y ∈ P(L)

(1) X ⊂ C(X) = C(C(X)) ⊂ L; and if

(2) X ⊂ Y, then C(X) ⊂ C(Y).

(3) C(X) = S{C(A) | A ∈ F (X)}.

1

A consequence operator C deﬁned on L is said to be ﬁnitary (ﬁnite) if it satisﬁes

Remark 1.2. The above axioms (1), (2), (3) are not independent. Indeed, (1)
and (3) imply (2). Hence, the set of all ﬁnitary consequence operators deﬁned on a
speciﬁc language is a subset of the set of all general operators. The phrase “deﬁned
on L” means formally deﬁned on P(L).

All known scientiﬁc logic-systems use ﬁnitely many rules of inference and
ﬁnitely many steps in the construction of a deduction from these rules. Hence,
as shown in Herrmann (2001a, b), the consequence operator that models such the-
ory generating thought processes is a ﬁnitary consequence operator. Although many
of the results in this paper hold for the general consequence operator, we are only
interested in the a special collection of ﬁnitary consequence operators. The ﬁrst
standard theorem 2.7 established in section 2 is known. However, this result was
obtained neither formally [Dziobid, 1981, p. 180] nor in the most elementary man-
ner. This standard result is obtained by using only basic set-theoretic notions and
Tarski’s basic results.

2. The Lattice of Finitary Operators.

Deﬁnition 2.1. In all that follows, any set of consequence operators will be
nonempty and each is deﬁned on a nonempty language. Deﬁne the relation ≤ on
the set C of all general consequence operators deﬁned on L by stipulating that for
any C1, C2 ∈ C, C1 ≤ C2 if for every X ∈ P(L), C1(X) ⊂ C2(X).

Obviously, ≤ is a partial order contained in P(L) × P(L). Our standard result will
show that for the entire set of ﬁnitary consequence operators Cf ⊂ C deﬁned on L,
the structure hCf , ≤i is a lattice.

Deﬁnition 2.2. Deﬁne I: P(L) → P(L) and U: P(L) → P(L) as follows: for

each X ⊂ L, let I(X) = X, and let U(X) = L.

Notice that I is the lower unit (the least element) and U the upper unit (the greatest
element) for hCf , ≤i.

Deﬁnition 2.3. Let C ∈ C. A set X ⊂ L is a C-system or simply a system
if C(X) ⊂ X and, hence, if C(X) = X. For each C ∈ C, let S(C) = {X | (X ⊂
L) ∧ (C(X) = X)}.

Since C(L) = L for each C ∈ C, then each S(C) 6= ∅.

Lemma 2.4 For each C1, C2 ∈ C, C1 ≤ C2 if and only if S(C2) ⊂ S(C1).
Proof. Let any C1, C2 ∈ C and C1 ≤ C2. Consider any Y ∈ S(C2). Then

C1(Y) ⊂ C2(Y) = Y. Thus, C1 ∈ S(C1) implies that S(C2) ⊂ S(C1).

Conversely, suppose that S(C2) ⊂ S(C1). Let (any) X ⊂ L. Then since, by
axiom 1, C2(X) ∈ S(C2), it follows, from the requirement that C2(X) ∈ S(C1), that
C1(C2(X)) = C2(X). But X ⊂ C2(X) implies that C1(X) ⊂ C1(C2(X)) = C2(X),
from axiom 2. Hence, C1 ≤ C2 and the proof is complete.

Deﬁnition 2.5. For each C1, C2 ∈ C, deﬁne the following binary relations in
P(L) × P(L). For each X ⊂ L, let (C1 ∧ C2)(X) = C1(X) ∩ C2(X) and (C1 ∨w C2) =

2

∩{Y | (X ⊂ Y = C1(Y) = C2(Y)) ∧ (Y ⊂ L)}. Since for ﬁnitely many (≥ 2) distinct
members of C the operators ∧, ∨w are obviously commutative and associative,
than these two relations are extended to arbitrary nonempty A ⊂ C by deﬁning
(V A)(X) = V A(X) = T{C(X) | C ∈ A} and (Ww A)(X) = Ww A(X) = T{Y |
(X ⊂ Y) ∧ ∀C(C ∈ A → Y = C(Y))}.

It is known that, in general, V A ∈ C and is the greatest lower bound for A with
respect to ≤ and Ww A ∈ C is the least upper bound (W´ojcicki, 1970). However,
in general, this is not the cases for inﬁnite A ⊂ Cf (W´ojcicki, 1973). Notice that
Ww A(X) = T{Y | (X ⊂ Y) ∧ (Y ∈ T{S(C) | C ∈ A})}.

Lemma 2.6. Let nonempty A ⊂ C [resp. Cf ] and S′ = {X | (X ⊂ L) ∧ (X =

Ww A(X))}. Then S′ = T{S(C) | C ∈ A}.

Proof. By Tarski’s Theorem 11 (b) (1956, p. 71), which for ﬁnitary and
general consequence operators, for each X ⊂ L, X ⊂ Ww A(X)) = Y′ ∈ S(C) for
each C ∈ A. Hence, if Y′ ∈ S′, then Ww A(Y′)) = Y′ ∈ S(C) for each C ∈ A.
Thus S′ ⊂ T{S(C) | C ∈ A}. Conversely, let Y ∈ T{S(C) ∧ (C ∈ A)}. From the
deﬁnition of Ww, Ww A(Y)) = Y and, hence, Y ∈ S′ and this completes the proof.
Theorem 2.7 With respect to the partial order ≤ relation deﬁned on L, the

structure hCf , ∨w, ∧, I, Ui is a lattice with upper and lower units.

Proof. It is only necessary to consider two distinct C1, C2 ∈ Cf . As mentioned,
the commutative and associative laws hold for ∧ and ∨w and by deﬁnition each
maps P(L) into P(L). First, we show by direct means that Cf is closed under ∧
and yields the greatest lower bound for any two members of Cf . By deﬁnition, for
i = 1, 2 im-
each X ⊂ L, (C1 ∧ C2)(X) = C1(X) ∩ C2(X). Hence, X ⊂ Ci(X),
plies that X ⊂ (C1 ∧ C2)(X). Further, (C1 ∧ C2)(X) ⊂ (C1 ∧ C1)((C1 ∧ C2)(X)) =
(C1 ∧C2)(C1(X)∩C2(X)) = C1(C1(X)∩C2(X))∩C2(C1(X)∩C2(X)) ⊂ C1(C1(X))∩
C1(C2(X)) ∩ C2(C1(X)) ∩ C2(C2(X)) = C1(X) ∩ C1(C2(X)) ∩ C2(C1(X)) ∩ C2(X).
Obviously, C1(X) ⊂ C2(C1(X)), C2(X) ⊂ C1(C2(X)) imply that C1(X) =
C2(C1(X)) ∩ C1(X), C2(X) = C1(C2(X)) ∩ C2(X) imply that C1(X) ∩ C2(X) ⊂
(C1 ∧ C1)((C1 ∧ C2)(X)) ⊂ C1(X) ∩ C2(X). Thus, axiom 1 holds. Next we have
that (C1 ∧ C2)(X) = (∪{C1(Y) | Y ∈ F (X)}) T(∪{C2(Y) | Y ∈ F (X)}) =
S{C1(Y) ∩ C2(Y) | Y ∈ F (X)} = S{(C1 ∧ C2)(Y) | Y ∈ F (X)} and axiom 3
holds. Since the partial order ≤ is deﬁned relative to the range values for each
C ∈ Cf and the set-theoretic partial order ⊂, it follows that C1 ∧ C2 is the greatest
lower bound for the set {C1, C2}. Therefore, hCf , ∨w, ∧, I, Ui is, at the least, a meet
semi-lattice.

Next, we show by direct means that C1 ∨w C2 ∈ Cf and that this consequence
operator is least upper bound. Let (the cardinality of L) |L| = ∆. For each C1, C2 ∈
Cf and for each Xi ⊂ L, (i ∈ ∆), let A′(Xi) = {Y | (Xi ⊂ Y = C1(Y) = C2(Y)) ∧
(Y ⊂ L)}. Let T{Y | Y ∈ A′(Xi)} = Yi. By Tarski’s Theorem 11 (1956,p. 71),
Xi ⊂ Yi ∈ S1 ∩ S2, Yi = (C1 ∨w C2)(Xi). Hence, Yi ∈ A′(Xi) and is the least
(⊂) element. Let C′ = C1 ∨w C2. For Xi ⊂ L, C′(C′(Xi)) = C′(Yi) = Yi since
Yi = C1(Yi) = C2(Yi) and Yi is the least element. Hence, axiom 1 holds. For

3

Xi ⊂ L, let A′′(Xi) = {Y | (C1(Xi) ⊂ Y = C1(Y) = C2(Y)) ∧ (Y ⊂ L)}. Since if
Xi ⊂ C1(Y) = Y, then Xi ⊂ C1(Xi) ⊂ C1(C1(Y)) = C1(Y) = Y, it follows that
for any Xi ⊂ L, A′′(Xi) = A′(Xi). For Xi ⊂ L, let Xj ∈ F (Xi), j = 1, . . . , n. Let
Yj be deﬁned as above and, hence, Yj is the least element in A′(Xj) = A′′(Xj).
Consider, X′ = S{Xj | j = 1, . . . , n} and Y′ = T{A′(X′)}. Now X′ ⊂ Y1 ∪ · · · ∪ Yn.
If Y ∈ A′(X′), then Y ∈ A′(Xj),
j = 1, . . . , n
implies that Y1 ∪ · · · ∪ Yn ⊂ Y′. Tarski’s Theorem 12 (1956, p. 71) implies that
Y∗ = S{Yj | Xj ∈ F (Xi)} ∈ S1 ∩ S2 and, since Yj ∈ A′′(Xj) then C1(Xj) ⊂ Yj.
The fact that C1 is ﬁnitary yields C1(Xi) ⊂ Y∗. Suppose there is a Y∗∗ ∈ A′′(Xi)
such that ∪{C1(Xj) | Xj ∈ F (X1)} = C1(Xi) ⊂ Y∗∗ ⊂ Y∗. Using the fact that
Yj ∈ A′′(Xj), for each Xj, it follows that C1(Xj) ⊂ Yj and Yj is a least element for
each Xj ∈ F (Xi). Thus Yj ⊂ Y∗∗ for each Xj ∈ F (Xi) implies that Y∗ ⊂ Y∗∗ ⊂ Y∗.
Hence, Y∗ = Yi. Re-stating this last result, ∪{C′(Xj) | Xj ∈ F (Xi)} = C′(Xi) and,
therefore, axiom (3) holds for the binary relation ∨w. Now by Lemmas 2.4 and 2.6,
C1 ∨w C2 is the least upper bound for {C1, C2} and this completes the proof.

j = 1, . . . , n. Hence, Yj ⊂ Y′,

3. System Consistent Logic-systems

Let Σ be a non-empty set of science-community logic-systems and let |·| denote
cardinality. In practice, |Σ| ≤ ℵ0. Each logic-system Si ∈ Σ, i ∈ |Σ|, is deﬁned on
a language Li and each Si determines a speciﬁc ﬁnitary consequence operator Ci
deﬁned on a language Li. At the least, by application of the insertion of hypotheses
rule, for cardinal Λ ≤ |Σ|, each member of {Ci | i ∈ Λ} is deﬁned on the language
S{Li | i ∈ Λ}. In all that follows, a speciﬁc set of logic-system generated consequence
operators {Ci | i ∈ Λ} deﬁned on a speciﬁc set of languages {Li | i ∈ Λ} will always
be considered as trivially extended and, hence, deﬁned by the insertion of hypotheses
rule on the set S{Li | i ∈ Λ}. In general, such a speciﬁc set of consequence operators
is contained in the lattice of all ﬁnitary operators deﬁned on S{Li | i ∈ Λ}. A logic-
system S′ and its corresponding consequence operator is a trivially extension of a
logic-systems S deﬁned on L if for a language L′ ⊃ L and S′ is the same as S except
that the insertion rule now applies to L′. The system S′ and its corresponding
consequence operator C′ is a non-trivial extension if it is a trivial extension, and
some other n-ray relations that contain members L′ − L are adjoined to those in S
or various original n-ray relations in S are extended by adding n-tuples that contain
members from L′ − L. For both the trivial and non-trivial cases and with respect
to the language L′, it follows that C ≤ C′. In the trivial case, if X ⊂ L′, then
C(X) = C′(X) = C(X ∩ L) ∪ (X − L).

In practice, a practical logic-system is a logic-system deﬁned for the subsets of
a ﬁnite language Lf . When a speciﬁc deduction is made from a set of hypotheses X,
the set X is ﬁnite. If the logic-system also includes 1-ray sets, such as the logical
or physical axioms, the actual set of axioms that might be used for a deduction
is also ﬁnite. Indeed, the actual set of all deductions obtained at any moment in
human history and used by a science-community form a ﬁnite set of statements that
are contained in a ﬁnite language Lf .
(Finite languages associated consequence
operators and the like will usually be denoted by a f superscript.) The ﬁnitely

4

many n-ray relations that model the rules of inference for a practical logic-system
are ﬁnite sets. Practical logic-systems generate practical consequence operators
and practical consequence operators generate eﬀectively practical logic-systems, in
many ways. For example, the method found in  Lo´s, J. and R. Suszko (1958),
when applied to a Cf will generate eﬀectively a ﬁnite set of rules of inference.
The practical logic-system obtained from such rules generates the original practical
consequence operator. Hence, a ﬁnitary consequence operator Cf deﬁned on Lf is
considered a practical consequence operator although it may not correspond to a
previously deﬁned scientiﬁc practical logic-system; nevertheless, it does correspond
to a practical logic-system.

I point out that my deﬁnition of a physical theory is a reﬁnement of the usual
deﬁnition. Given a set of general physical hypotheses, a general scientiﬁc theory
may be developed. If accepted by a science-community, this theory becomes natural
law. This natural law then becomes part of a science-community logic-system. In
Herrmann 2001a, b, a consequence operator generated by such a logic-system is
denoted by SN. From collections of such logic-systems, the SN they generate are
then applied to speciﬁc natural-system descriptions X. For scientiﬁc practical logic-
systems, the language and rules of inference need not be completely determinate in
that, in practice, the language and rules of inference are extended.

The complete Tarski deﬁnition for a consequence operate, includes ﬁnite lan-
guages (1956, p. 63) and all of his results apply to such ﬁnite languages. Theorem
2.7 holds for any language ﬁnite or not. In the lattice of ﬁnitary consequence op-
erators deﬁned on Lf , ∨w determines the least upper bound for a ﬁnite set of such
operators. However, it is certainly possible that this least upper bound is the upper
unit U.

Deﬁnition 3.1 Let C be a general consequence operator deﬁned in L. Let

X ⊂ L.

(i) The set X is C-consistent if C(X) 6= L.

(ii) The set X is C-complete if for each x ∈ L, either x ∈ X or C(X ∪ {x}) = L.

(iii) A set X ⊂ L is maximally C-consistent if X is C-consistent and whenever

a set Y 6= X and X ⊂ Y ⊂ L, then C(Y) = L.

Notice that if X ⊂ L is C-consistent, then C(X) is a C-consistent extension of X
which is also a C-system. Further, C-consistent W is C-consistent with respect to
any trivial extension of C to a language L′ ⊃ L.

Theorem 3.2 Let general consequence operator C be deﬁned on L.

(i) The set X ⊂ L is C-complete and C-consistent if and only if X is a maximally

C-consistent.

(ii) If X is maximally C-consistent, then X is a C-system.

Proof. (i) Let X be maximally C-consistent. Then X is C-consistent and, hence,
C(X) 6= L. Hence, let x ∈ L and x /∈ X. Then X ⊂ X∪{x} implies that X∪{x} is not
C-consistent. Thus C(X ∪ {x}) = L. Hence, X is C-complete. Conversely, assume

5

that X is C-consistent and C-complete. Then X 6= L. Let X ⊂ Y ⊂ L and X 6= Y.
Hence, there is some y ∈ Y − X and from C-completeness L = C(X ∪ {y}) ⊂ C(Y).
Thus, Y is not C-consistent. Hence, X is maximally C-consistent and the result
follows.

(ii) From C-consistency, C(X) 6= L.

If x ∈ C(X) − X, then maximally C-
consistency implies that L = C(X ∪ {x}) ⊂ C(C(X)) = C(X). This contradiction
yields that X is a C-system.

The following easily obtained result holds for many types of languages (Tarski,
1956, p. 98. Mendelson, 1979, p. 66) but these “Lindenbaum” constructions,
for inﬁnite languages, are not considered as eﬀective. For ﬁnite languages, such
constructions are obviously eﬀective.

Theorem 3.3. Let practical consequence operator Cf be deﬁned on arbitrary
Lf . If X ⊂ Lf is Cf -consistent, then there exists an eﬀectively constructed Y ⊂ Lf
such that Cf (X) ⊂ Y, Y is Cf -consistent and Cf -complete.

Proof. This is rather trivial for a practical consequence operator and all of
the construction processes are eﬀective. Consider an enumeration for Lf such that
Lf = {x1, x2, . . . xk}. Let X ⊂ Lf be Cf -consistent and deﬁne X = X0. We now
simply construct in a completely eﬀective manner a partial sequence of subsets of
Lf . Simply consider X0 ∪ {x1}. Since X0 is Cf -consistent, we have two possibilities.
Eﬀectively determine whether Cf (X0 ∪ {x1}) = Lf . If so, let X1 = X0. On the other
hand, if Cf (X0 ∪ {x1}) 6= Lf , then deﬁne X1 = X0 ∪ {x1}. Repeat this construction
ﬁnitely many times. (Usually, if the language is denumerable, this is expressed in
an induction format.) Let Y = Xk. By deﬁnition Y is Cf -consistent. Suppose that
x ∈ Lf . Then there is some Xi such that either (a) x ∈ Xi or (b) Cf (Xi ∪ {x}) = Lf .
For (a), since Xi ⊂ Y, x ∈ Y. For (b), Xi ⊂ Y, implies that L = Cf (Xi ∪ {x}) ⊂
Cf (Y ∪ {x}) = Lf . Hence, Y is Cf -complete and Xi ⊂ Y, for each i = 1, . . . , k. By
Theorem 3.2, Y is a Cf -system. Thus X0 ⊂ Y implies that Cf (X0) ⊂ Cf (Y) = Y,
and this completes the proof.

Corollary 3.3.1. Let practical consequence operator Cf be deﬁned on Lf and
X ⊂ Lf be Cf -consistent. Then there exists an eﬀectively constructed Y ⊂ Lf that is
an extension of Cf (X) and, hence, also an extension of X, where Y is a maximally
Cf -consistent Cf -system.

Let the set Σp ⊂ Σ consist of all of science-community practical logic-systems
deﬁned on languages Lf
i . Each member of Σp corresponds to i ∈ |Σp| and to a
practical consequence operator Cp
i deﬁned on Lf
i . In general, the members of a set
of science-community logic-systems are related by a consistency notion relative to
an extended language.

Deﬁnition 3.4. Let set of consequence operators C deﬁned on L is system

consistent if there exists a Y ⊂ L, Y 6= L and Y is a C-system for each C ∈ C.

Example 3.5. Let C be a set of axiomless consequence operators where
each C ∈ C is deﬁne on L. In Herrmann (2001a, b), the set of science-community

6

consequence operators is redeﬁned by relativization to produce a set of axiomless
consequence operators, the SV
N, each deﬁned on the same language. Any such col-
lection C is system complete since for each C ∈ C, C(∅) = ∅ 6= L.

0, and L = S{Lf

Example 3.6. One of the major goals of certain science-communities is to ﬁnd
what is called a “grand uniﬁcation theory.” This is actually a theory that will unify
only the four fundamental interactions (forces). It is then claimed that this will lead,
some how or other, to a uniﬁcation of all physical theories. Undoubtedly, if this
type of grand uniﬁcation is achieved, all other physical science theories would require
some type of re-structuring. The simplest way this can be done is to use informally
the logic-system expansion technique. This will lead to associated consequence
operators deﬁned on “larger” language sets. Let a practical logic-system S0, be
i | i ∈ IN}, IN the set of natural numbers. Let L0 ⊂
deﬁned on Lf
i | i ∈ IN} need not be distinct.]
L1, L0 6= L1. [Note: the remaining members of {Lf
Expand S0 to S1 6= S0 deﬁned on L by adjoining to the logic-system S0 ﬁnitely
many practical logic-system n-ary relations or ﬁnitely many additional n-tuples
to the original S0, but where all of these additions only contain members from
nonempty L − Lf
0. Although S1 need only be considered as non-trivially deﬁned on
Lf
1, if L 6= L1, then the S1 so obtained corresponds to C1, a consequence operator
trivially extended to L. This process might be continued to produce, at the least,
ﬁnitely many distinct logic-systems Si, i > 1, and a set C1 of distinct corresponding
consequence operators Ci. Since these are science-community logic-systems, there
is an X0 ⊂ Lf
0-consistent. By Corollary 3.3.1, there is an eﬀectively
deﬁned set Y ⊂ Lf
0-consistent with
respect to the language Lf
0. Further, Cf
0
is consider trivially extended to L. Let Y′ = Y ∪ (L − Lf
0). It follows that for each
0) ⊂ L − Lf
Ci, L − Lf
0 6= L. By construction, for each Ci, Ci(Y) = Y;
0)). So, let X = Y′. Then
and for each X ⊂ L, Ci(X) = C0(X ∩ Lf
0) = Y′ 6= L. Hence, the set of
for each Ci, Ci(Y′) = C0(Y) ∪ (L − Lf
all Ci is system consistent.

0 such that X0 ⊂ Y and Y is maximally Cf

0) ∪ Ci(X ∩ (L − Lf

0) = Y ∪ (L − Lf

0(Y) = Y ⊂ Lf

0 ⊂ Ci(L − Lf

0. Hence, Cf

0 that is Cf

0(Y) 6= Lf

0 and Cf

Example 3.7. Consider a denumerable language L and example 3.2 in Her-
[Note: There is a typographical error in this 1987 example. The
rmann (1987).
expression x /∈ U should read x /∈ U.] Let U be a free-ultraﬁlter on L and let x ∈ L.
Then there exists some U ∈ U such that x /∈ U since T U = ∅ and ∅ /∈ U. Let
B = {x} and C = {P(U, B) | U ∈ U}, where P(U, B) is the ﬁnitary consequence
operator deﬁned by P(U, B)(X) = U ∪ X, if x ∈ X; and P(U, B)(X) = X, if x /∈ X.
[Note: this is the same operator P that appears in the proof of Theorem 6.4 in
Herrmann (2001a, b).] There, at the least, exists a sequence S = {Ui | i ∈ IN} such
that U0 = U and Ui+1 ⊂ Ui, Ui+1 6= Ui. It follows immediately from the deﬁni-
tion that P(Ui+1, B) ≤ P(Ui, B) and P(Ui+1, B)(B) = Ui+1 ∪ B ⊂ Ui ∪ B, for each
i ∈ IN. Hence, in general, P(Ui+1, B) < P(Ui, B) for each i ∈ IN. Let Y = L − {x}.
i ∈ IN. Thus, the collection
Then P(Ui, B)(Y) = Ui ∪ (L − {x}) = L − {x} = Y,
{P(Ui, B) | i ∈ IN} is system consistent.

7

Theorem 3.8. Consider a set C = {Ci | i = 0, . . . n} of ﬁnitary consequence
operators each deﬁned in L. If C is system consistent, then for hCf , ∨w, ∧, I, Ui, the
lattice of all ﬁnitary consequence operators deﬁned on L, there exists some Y ⊂ L
such that for the consequence operator C = Ww{Ci | i = 0, . . . , n} ∈ Cf , Y = C(Y) =
Ci(Y) 6= L for each i = 0, . . . , n and C 6= U. Further, if X ⊂ L, X 6= L is a C-system
for each C ∈ C, then X = C(X) = Ci(X) 6= L for each i = 0, . . . , n.

Proof. From the deﬁnition of system consistent, there exists some Y ⊂ L such
that Ci(Y) = Y 6= L for each i = 0, . . . , n. From Theorem 2.7, C = Ww{Ci | i =
0, . . . , n} ∈ Cf . From Lemma 2.6, for each i = 0, . . . , n, C(Y) = Ci(Y) 6= L. Hence,
C 6= U. The last part of this theorem follows from Lemma 2.6 and the fact that X
is also a C-system. This completes the proof.

Remark 3.9.

If X ⊂ L, X 6= L is a C-system for each ﬁnite subset of an
inﬁnite set C of consequence operators deﬁned on L, then, trivially, X is a C-system
for all members of C. This is not the case for system consistency restricted to the
ﬁnite subsets of C where the set that yields this property for a ﬁnite subset need
not be the same set that yields this property for a diﬀerent ﬁnite subset of C.

4. An Ultralogic Uniﬁcation

In Herrmann (2001a, b), it is argued that |Σ| = ℵ0. Let C denote the set of
distinct (logic-system) corresponding ﬁnitary consequence operators each considered
as deﬁned on the language L. There exists a bijection f: IN → C such that f(i) is one
of the members of C and conversely. For each i ∈ IN, denote f(i) = Ci, a consequence
operator deﬁned on L.

Theorem 4.1. Let L and C be deﬁned as above. Suppose that every (non-

empty) ﬁnite subset of C is system consistent.

(i) Then there exists a hyperﬁnite ultralogic U ∈ ∗ Cf deﬁned on the set of
all internal subsets of ∗L such that U 6= ∗ U, and an internal W ⊂ ∗ L such that,
for each i ∈ IN, ∗ Ci(W ) = U(W ) = W 6= ∗ L, where U(W ) ⊂ ∗ L.

(ii) For each internal Y ⊂ ∗ L, S{ ∗ Ci(Y ) | i ∈ IN} ⊂ U(Y ) ⊂ ∗ L.
(iii) If ﬁnite X ⊂ L, then S{ ∗ Ci(X) | i ∈ IN} ⊂ U(X), and if each member

of C is a practical consequence operator, then S{Ci(X) | i ∈ IN} ⊂ U(X).

(iv) Let X ⊂ L and X 6= L be a C-system for each C ∈ C. Then ∗X =
∗ Ci( ∗ X) = U( ∗ X) 6= ∗ L, for each i ∈ IN. If X is ﬁnite X = ∗ Ci(X) = U(X), for
each i ∈ IN. If for j ∈ IN, Cj is a practical consequence operator, then X = Cj(X) =
U(X) = U(X).

Proof. Let hCf , ∨w, ∧, I, Ui be the lattice of all ﬁnitary consequence opera-
tors deﬁned on L. Consider this lattice, all of our intuitive consequence operators,
our L and all other deﬁned objects as embedded into the Grundlagen Structure
Y (Herrmann, 1993). Hence, they are embedded, in the usual manner, into the
superstructure model, M = hN , ∈, =i, for all bounded formal expressions and this
is further embedded into the superstructure Y that contains a nonstandard ele-
mentary extension ∗M = h ∗ N , ∈, =i of the embedded M. Notice that from our

8

identiﬁcations, any standard X ⊂ L has the property that σX = X, and if X is
ﬁnite, then ∗ X = X. Let g: IN → C be a bijection in N that corresponds to f. Now
consider bijection ∗g: ∗IN → ∗ C. Let constant a ∈ IN. Under our special Grundlagen
embedding procedures, σ(g(a)) = ∗ (g(a)) = ∗g( ∗a) = ∗ g(a) = ∗ Ci. Since, ∗g is
a bijection every such a ∈ IN corresponds to a unique member of C and conversely.
Thus, ∗g restricted to members of σIN = IN yields the entire set σC.

Let K ⊂ P(L) be the set of all X 6= L that are C-systems for each C ∈ C. By
Theorem 3.8, the deﬁnitions and the properties of the lattice structure on Cf , for
clarity, the unsimpliﬁed and redundantly expressed bounded sentences

∀x((x 6= ∅) ∧ (x ∈ F (IN)) → ∃y∃w1((y ∈ Cf ) ∧ (y 6= U) ∧ (w1 ⊂ L)∧

(∀z1∀v1∀v2((v1 ∈ x) ∧ (v2 ∈ K) ∧ (v1 ∈ IN) ∧ (z1 ∈ x) ∧ (z1 ∈ IN) → (g(z1)(v2) =
y(v2) ⊂ L) ∧ (y(v2) 6= L))) ∧ (∀v((v ∈ x) ∧ (v ∈ IN) →
v(w1) = y(w1) = w1 6= L)) ∧ ∀z((z ∈ x) ∧ (z ∈ IN) → ((g(z) ≤ y)∧
∀w((w ∈ Cf ) ∧ ∀z1((z1 ∈ x) ∧ (z1 ∈ IN) ∧ (g(z1) ≤ w)) → (y ≤ w)))))),

(4.1.1)

∀x∀y((x ∈ Cf ) ∧ (y ∈ Cf ) → ((y ≤ x) ↔

∀w((w ∈ P(L)) → (y(w) ⊂ x(w)))),
(4.1.2)
hold in M. Hence, they hold under *-transfer in ∗M for objects in ∗N . [Note:
It is usually assumed that formal statements such as 4.1.1 and 4.1.2 can be made
within a formal ﬁrst-order language rather than expressing them explicitly.]

∗ Cf

Each member of

is a hyperﬁnite consequence operators deﬁned on the
interval subsets of ∗ L. Let inﬁnite λ ∈ ∗IN − IN. Then ∗ g[[0, λ]] is a hyperﬁnite
∗ C ⊂ ∗ Cf . Hence, from *-transformed sentences (4.1.1) and (4.1.2),
subset of
there exists some hyperﬁnite U ∈ ∗ Cf deﬁned on the set of all internal Y ⊂ ∗ L
with the properties that ∗ g(i)(Y ) ⊂ U(Y ), for each i ∈ [0, λ], and, in particular
for i ∈ IN. Hence, S{ ∗ Ci(Y ) | i ∈ IN} ⊂ U(Y ). Further, there exists an internal
W ⊂ ∗ L such that, for each i ∈ [0, λ], ∗g(i)(W ) = U(W ) = W 6= ∗L. In particular,
∗g(i) = ∗ Ci(W ) = U(W ), for each i ∈ IN. Since U(W ) 6= ∗ L, then U 6= ∗U. Let
ﬁnite X ⊂ L. Then due to our embedding procedures, ∗ (Ci(X)) = ∗ Ci( ∗ X) =
∗ Ci(X) ⊂ U(X) 6= ∗L. Hence, S{ ∗ Ci(X) | i ∈ IN} ⊂ U(X). [Note: in proofs such
as this and to avoided confusion, I often, at ﬁrst, use the notation ∗ (Ci(X)) to
indicate the value (or name) of the result of applying ∗ to an object in ∗ N which
is a set such as Ci(X) that contains additional operator notation. From a technical
viewpoint, ∗ (Ci(X)) = ∗ {Ci(X)} = { ∗Ci(X)} and ∗ Ci(X) is the “name” for
the set under the mapping *. But using this procedure, there is confusion as to
whether ∗ (Ci(X)) denotes the entire set or denotes the operator ∗ Ci applied to
X. In these proofs, ∗Ci always denotes the operator ∗ Ci applied to internal subsets
of ∗ L.] If Ci is a practical consequence operator, then Ci(X) is a ﬁnite set. Hence
∗ Ci(X) = Ci(X). (iv) follows by *-transfer and this completes the proof.

9

In Herrmann (2001a, b), the set {SV

Nj | j ∈ IN} is the reﬁned set of all relativized
axiomless science-community consequence operators deﬁned on the language Λ and
they are used to unify, in a restricted manner, physical theory behavior. Moreover,
|{SV

Nj | j ∈ IN}| = ℵ0, at the least.
Corollary 4.1.1

(i) There exists a hyperﬁnite ultralogic U ∈ ∗ {SV

deﬁned on all internal Y ⊂ ∗Λ such that U 6= ∗ U, and, for each i ∈ IN, ∗ SV
U(∅) = ∅.

Ni(X) | i ∈ IN} that is
Ni(∅) =

(ii) For each internal Y ⊂ ∗Λ, S{ ∗ SV
(iii) If ﬁnite X ⊂ Λ, then S{ ∗ SV

Ni | i ∈ IN} is a practical consequence operator, then S{SV

Ni(Y ) | i ∈ IN} ⊂ U(Y ) ⊂ ∗Λ.
Ni(X) | i ∈ IN} ⊂ U(X), and if each
Ni(X) | i ∈

member of {SV
IN} ⊂ U(X).

Then ∗ X = ∗ SV
∗ SV
operator, then SV

(iv) Let X ⊂ Λ, X 6= Λ be a C-system for each C ∈ {SV

Ni(X) | i ∈ IN}.
Ni( ∗ X) = U( ∗ X) 6= ∗ Λ, for such each i ∈ IN. If X is ﬁnite, then
Nj is a practical consequence

Ni(X) = X = U(X), for each i ∈ IN. If for j ∈ IN, SV

Nj(X) = X = U(X).

Remark 4.2.

If the C in the hypotheses of Theorem 4.1 is restricted to a
set of practical consequence operators, each deﬁned on a ﬁnite language Lf , then
it follows that the hyperﬁnite U corresponds to a hyperﬁnite logic-system S that
If the eﬀective notion is not required, then, in gen-
is *-eﬀectively *-generated.
eral, the ultralogic U corresponds to a *-logic-system. Although Theorem 4.1 and
Corollary 4.1.1 are mainly concerned with the original set of consequence opera-
Ni(X) | i ∈ IN}, it is also signiﬁcant for applications that U uniﬁes
tors C and {SV
each “ultranatural relativized theory” ∗g(j), j ∈ [0, λ] − IN. It follows that for each
∗g(j)(Y ) ⊂ U(W ).
j ∈ [0, λ] − IN,
This also applies for the unrelativized case with the modiﬁcations that ∅ is replaced
with W and each relativized consequence operator SV
Ni is replaced with the physical
theory consequence operator SNi. Also note that SNi and SV
Ni are usually considered
practical consequence operators.

∗g(j)(∅) = U(∅) = ∅ and for internal Y ⊂ ∗ Λ,

Remark 4.3. Depending upon the set C of consequence operators employed,
there are usually many X ⊂ L, X 6= L such that X is a C-system for each C ∈ C.
For example, we assumed in Herrmann (2001a, b) that there are two 1-ary relations
for the science-community logic-systems. One of these is the logical axioms and
the other is a set of physical axioms, that is a natural law. Let {S′
Ni | i ∈ IN} be
the set of science-community corresponding consequence operators relativized so as
to remove the set of logical theorems. A properly stated natural law Nj, used to
generate the consequence operators {S′
Ni | i ∈ IN} should be a C-system for each
member of {S′
Ni | i ∈ IN}. As mentioned, the physical theories being considered
here are not theories that produce new “natural laws.” The argument that the
Einstein-Hilbert equations characterize gravitation ﬁelds, in general, leads to the
acceptance by many science-communities of these equations as a “natural law” that
is then applied to actual physical objects. Newton’s Second Law of motion is a

10

statement about the notion of inertia within our universe. It can now be derived
from basic laboratory observation and has been shown to hold for other physical
models distinct from its standard usage (Herrmann, 1998). The logic-systems that
generate the members of {S′
Ni | i ∈ IN} have as a 1-ary relation a natural law. Then
one takes a set of speciﬁc physical hypotheses X that describes the behavior of a
natural-system and applies the logic-system to X. This gives a statement as to how
this natural law aﬀects, if at all, the behavior being described by X.
It is this
approach that implies that each properly described Nj 6= L is a C-system for each
C ∈ {SNi | i ∈ IN}. Applying Theorem 4.1 to C = {S′
Ni | i ∈ IN}, where each member
of {Ni | i ∈ IN} can be used for the W, leads to a result exactly like Corollary 4.1.1
where results (i), (iii) and (iv), applied to members of {Ni | i ∈ IN}, are particularly
signiﬁcant. This result is stated as the Abstract for this paper.

Remark 4.4. For General Intelligent Design Theory, the ultralogic U can
replace the SW and Π discussed in Herrmann (2001a, b) and can, obviously, be
interpreted as a “higher” intelligence that designs and controls the combined be-
havior exhibited by members of C = {S′
| i ∈ IN} as they are simultaneously
Ni
applied to a natural-system. It is also signiﬁcant, for this case, that the ultralogics
{ ∗ g(i) | i ∈ [0, λ] − IN} represent ultranatural theories relative to ultranatural laws
contained in ∗ {Ni | i ∈ IN} and these ultralogics are uniﬁed by U as in (ii) of Theo-
rem 4.1. These ultranatural laws would lead to various ultranatural events as being
required constituents associated with event sequences. Further, from the deﬁnition
of reﬁned theories as discussed in Herrmann (2001a, b), ∗ {Ni | i ∈ IN} contains
descriptions for the ultrasubparticles. This is a second prediction that these various
“ultra” objects can be assumed to rationally exist, where they were ﬁrst discovered
by other methods that appear in Herrmann (1993).

Remark 4.5. I mentioned that the results obtained in this section are estab-
lished by means of the most trivial methods used in Robinson-styled nonstandard
analysis.

References

Dziobiak, W. (1981), “The lattice of strengthenings of a strongly ﬁnite conse-

quence operation,” Studia Logica 40(2):177-193.

Herrmann, R. A. (2001a). “Hyperﬁnite and Standard Uniﬁcations for Physical

Theories,” Intern. J. of Math. Math. Sci., 28(2):93-102.

Herrmann, R. A. (2001b). “Standard and Hyperﬁnite Uniﬁcations for Physical

Theories,” http://www.arXiv.org/abs/physics/0105012

Herrmann, Robert A. (2001c), “Ultralogics and probability models,” Intern. J.

of Math. Math. Sci., 27(5):321-325.

Herrmann, R. A. (2001d), “Probability Models and Ultralogics,”

http://www.arXiv.org/abs/quant-ph/0112037

Herrmann, Robert A. (1998), “Newton’s second law of motion holds in normed

linear spaces,” Far East J. of Appl. Math. 2(3):183-190.

11

Herrmann, Robert A. (1993), The Theory of Ultralogics.

http://www.arXiv.org/abs/math.GM/9903081 and/9903082

Herrmann, Robert A. (1987), “Nonstandard consequence operators”. Kobe Jour-
nal of Mathematics 4:1-14. http://www.arXiv.org/abs/math.LO/9911204

 Lo´s, J. and R. Suszko, (1958), “Remarks on sentential logics,” Indagationes

Mathematicae 20:177-183.

Tarski, Alfred. (1956), Logic, Semantics, Metamathematics; papers from 1923 -

1938, Translated by J. H. Woodger. Oxford: Clarendon Press.

W´ojcicki, R. (1973), “On matrix representations of consequence operators on
 Lukasiewicz’s Sentential Calculi,” Zeitschi. f. math. Logik und Grundla-
gen d. Math., 19:239-247.

W´ojcicki, R. (1970), “Some remarks on the consequence operation in sentential

logics,” Fundamenta Mathematicae, 68:269-279.

12

