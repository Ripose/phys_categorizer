6
0
0
2
 
c
e
D
 
2
2
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
3
2
2
2
1
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Hawks and Doves on Small-World Networks

Marco Tomassini,∗ Leslie Luthi,† and Mario Giacobini‡
Information Systems Institute, HEC, University of Lausanne, Switzerland

We explore the Hawk-Dove game on networks with topologies ranging from regular lattices to
random graphs with small-world networks in between. This is done by means of computer simu-
lations using several update rules for the population evolutionary dynamics. We ﬁnd the overall
result that cooperation is sometimes inhibited and sometimes enhanced in those network structures,
with respect to the mixing population case. The diﬀerences are due to diﬀerent update rules and
depend on the gain-to-cost ratio. We analyse and qualitatively explain this behavior by using local
topological arguments.

Hawks and Doves, also known as Chicken, or the Snowdrift game, is a two-person, symmetric game with the

following payoﬀ bi-matrix:

I.

INTRODUCTION

H
, G−C
2

H ( G−C

2

D

(0, G)

D

) (G, 0)
2 , G
( G
2 )

In this matrix, H stands for “hawk”, and D stands for “dove”. Metaphorically, a hawkish behavior means a strategy
of ﬁghting, while a dove, when facing a confrontation, will always yield. As in the Prisoner’s Dilemma [1], this game,
for all its simplicity, appears to capture some important features of social interactions. In this sense, it applies in many
situations in which “parading”, “retreating”, and “escalading” are common. One striking example of a situation that
has been thought to lead to a Hawk-Dove dilemma is the Cuban missile crisis in 1962 [2]. In the payoﬀ matrix above,
G > 0 is the gain that a hawk obtains when it meets a dove; the dove retreats and looses nothing. If a dove meets
another dove, one of them, or both, will retreat and they will gain half of the price each (G/2) in the average. Finally,
when a hawk meets another hawk, they both ﬁght and each obtains an average payoﬀ of (G − C)/2, where C is the
cost of any injury that might occur in the ﬁght. It is assumed that C > G, i.e. the cost of injury always exceeds the
prize of the ﬁght. The game has the same structure as the Prisoner’s Dilemma in that if both players cooperate (i.e.
they play dove), they both gain something, although there is a strong motivation to act aggressively (i.e. to play the
hawk strategy). However, in this game one makes the assumption that one player is willing to cooperate, even if the
other does not, and that mutual defection, i.e. result (H,H), is detrimental to both players.

In contrast to the Prisoner’s Dilemma which has a unique Nash equilibrium that corresponds to both players
defecting, the Hawk-Dove game has two Nash equilibria in pure strategies (H,D) and (D,H), and a third equilibrium
in mixed strategies where strategy H is played with probability G/C, and strategy D with probability 1 − G/C. Note
that we only consider one-shot games in this work; repeated games are not taken into account.

Considering now not just two players but rather a large, mixing population of identical players, evolutionary game
theory [3] prescribes that the only evolutionarily stable strategy (ESS) of the population is the mixed strategy, giving
rise, at equilibrium, to a frequency of hawks in the population equal to G/C. In the case of the Prisoner’s Dilemma, one
ﬁnds a unique ESS with all the individuals defecting. However, in 1992, Nowak and May [4] showed that cooperation
in the population is sustainable in the Prisoner’s Dilemma under certain conditions, provided that the network of the
interactions between players has a lattice spatial structure. Killingback and Doebeli [5] extended the spatial approach
to the Hawk-Dove game and found that a planar lattice structure with only nearest-neighbor interactions may favor
cooperation, i.e. the fraction of doves in the population is often higher than what is predicted by evolutionary game
theory. In addition, complex dynamics resembling phase transitions were observed, which is not the case in the mixing
population. In a more recent work however, Hauert and Doebeli [6] were led to a diﬀerent conclusion, namely that

∗Electronic address: marco.tomassini@unil.ch
†Electronic address: leslie.luthi@unil.ch
‡Electronic address: mario.giacobini@unil.ch

2

spatial structure does not seem to favor cooperation in the Hawk-Dove game. Additional results on the Hawk-Dove
game on a two-dimensional lattice have been recently obtained by Sysi-Aho et al.
[7] using a simple local decision
rule for the players that does not reduce to the customary replicator or imitation dynamics [3]. They concluded that,
with their player’s decision rule, cooperation persists, giving results diﬀerent from those obtained with the replicator
dynamics. These apparently contradictory results aroused our curiosity, and motivated us to study the situation in a
more general setting, in which the mixing population and the lattice are special cases.

Following pioneering work by sociologists in the sixties such as that of Milgram [8], in the last few years it has
become apparent that the topological structures of social interactions networks have particular, and partly unexpected,
properties that are a consequence of their small-world characteristics. Roughly speaking, small-world networks are
graphs that have a short average path length, i.e. any node is relatively close to any other node, like random graphs
and unlike regular lattices. However, in contrast with random graphs, they also have a certain amount of local
structure, as measured, for instance, by a quantity called the clustering coeﬃcient (an excellent review of the subject
is [9]). In the same vein, many real conﬂicting situations in economy and sociology are not well described neither
by a ﬁxed geographical position of the players in a regular lattice, nor by a mixing population or a random graph.
Starting from the two limiting cases of a random-graph and the two-dimensional lattice, our objective here is to study
the Hawk-Dove game on small-world networks in order to cover the “middle ground” between them. Although the
Watts–Strogatz networks [10] used here are not faithful representations of the structure of real social networks, they
are a useful ﬁrst step toward a better understanding of evolutionary games on networks. While we study here the
Hawk-Dove game, this class of networks has been previously used for the Prisoner’s Dilemma in [11, 12, 13]. The
work of [11] is especially relevant for our present study, while the two others deal either with special features such as
“inﬂuential individuals”[12], or refer to iterated versions of the game [13].

Recently, Santos and Pacheco [14] have investigated both the Prisoner’s Dilemma and Hawk-Dove games on ﬁxed
scale-free networks. The main observation from their simulations is that, at least on preferential attachment networks,
the amount of cooperative behavior is much higher than in either mixing or lattice-structured populations. In the
abstract, and in some particular social situation in which some individuals have an unusually high number of contacts
than the rest, this is an interesting result. However, scale-free graphs, which characterize the web and Internet among
others, are not a realistic model of most observed social networks for various reasons (see [15, 16]), which is why we
do not comment further on the issue.

In this section we present our network models and their dynamical properties.

II. THE MODEL

A. Population Topologies

We consider a population P of N players where each individual i in P is represented as a vertex vi of a graph
G(V, E), with vi ∈ V, ∀i ∈ P . An interaction between two players i and j is represented by the undirected edge
eij ∈ E, eij ≡ eij . The number of neighbors of player i is the degree ki of vertex vi. The average degree of the
network will be called ¯k.

We shall use three main graph population structures: regular lattices, random graphs, and small-worlds. In fact,
our goal is to explore signiﬁcant population network structures that somehow fall between the regular lattice and
random graph limits, including the bounding cases.

Our regular lattices are two-dimensional with ki = 8, ∀vi ∈ V and periodic boundary conditions. This neighborhood
is usually called the Moore neighborhood and comprises nine individuals, including the central node. We would like to
stress that we believe regular lattice structures are not realistic representations of most actual population structures,
especially human, except when mobility and dispersal ability of the individuals are limited as, for example, in plant
ecology and territorial animals. The main reasons why lattices have been so heavily used is that they are more amenable
to mathematical analysis and are easier to simulate. We include them here for two reasons: as an interesting bounding
case, and to allow comparison with previous work.

The small-world networks used here are similar to the graphs proposed by Watts and Strogatz [10]. However,
there are two main diﬀerences (see [17]). First, we start from a two-dimensional regular lattice substrate, instead of
a one-dimensional lattice. This does not modify the main features of the resulting graphs, as observed in [13], and
as measured by us. The reason for starting from a two-dimensional lattice is to keep with the customary ordered
population topology that is used in structured evolutionary games. Although they have been used as a starting point
for the Prisoner’s Dilemma by Abramson and Kuperman [11], one-dimensional lattices do not make much sense in a
social or biological setting, although after some rewiring the eﬀect of the substrate becomes almost negligible.

3

The second diﬀerence is in the rewiring process. The algorithm used here comes from [17] and works as follows:
starting from a regular two-dimensional lattice with periodic boundary conditions, visit each edge and, with probability
p, replace it by an edge between two randomly selected vertices, with the constraint that two vertices are not allowed
to be connected by more than one edge. As in the original Watts–Strogatz model, the average vertex degree ¯k does
not change, and the process may produce disconnected graphs, which have been avoided in our simulations. The
advantage of this construction is that, for p → 1, the graph approaches a classical Erd¨os–R´enyi random graph, while
this is not the case for the original Watts–Strogatz construction, since in the latter, the degree of any vertex is always
larger than or equal to k/2, k being the degree of a vertex in the original lattice.

We would like to point out that it is known that Watts–Strogatz small worlds are not adequate representations
of social networks. Although they share some common statistical properties with the latter, i.e. high clustering
and short average path length, they lack other features that characterize real social networks such as clusters, and
dynamical self-organization [15]. In spite of these shortcomings, they are a convenient ﬁrst approximation for studying
the behavior of agents in situations where the interaction network is neither regular, nor random. Note also that once
ﬁxed, the interaction network does not change during the system evolution in our study, only the strategies may
evolve. Evolutionary games on dynamic networks have been studied, for instance in [18, 19, 20].

B. Population Dynamics

1. Local Dynamics

Gi(t) =

si(t) M sT

j (t)

1
ki Xj∈N (i)

The local dynamics of a player i only depends on its own strategy si ∈ {H, D}, and on the strategies of the ki

players in its neighborhood N (i). Let us call M the payoﬀ matrix of the game (see section I). The quantity

is the average payoﬀ collected by player i at time step t. Note that in our study, i /∈ N (i) meaning that self-interaction
is not considered when calculating the average payoﬀ of an individual. Self-interaction has traditionally been taken
into account in some previous work on the Prisoner’s Dilemma game on grids [4, 21] on the grounds that, in biological
applications, several entities may occupy a single patch in the network. Nowak et al. ﬁnd that self-interaction does not
qualitatively change the results in the Prisoner’s Dilemma game. In the Hawk-Dove game self-interaction is usually
not considered; moreover, in this work we wish to compare results with those of [5, 6], where self-interaction is not
included.

We use three types of rules to update a player’s strategy. The rules are among those employed by Hauert et al.
[6] to allow for comparison of the results in regular lattices and in small-world networks. Decision rules based on the
player’s satisfaction degree, such as those used in [7, 18, 19, 20] are not examined here. The rules are the following:

1. replicator dynamics;

2. proportional updating;

3. best-takes-over.

The replicator dynamics rule aims at maximal consistency with the original evolutionary game theory equations.
Player i is updated by drawing another player j at random from the neighborhood N (i) and replacing si by sj with
probability pj = φ(Gj − Gi) [3].

The proportional updating rule is also a stochastic rule. All the players in the neighborhood N (i), plus the player

i itself compete for the strategy i will take at the next time step, each with a probability pj given by

Negative payoﬀs cannot be used with this rule, since the probabilities of replication must be pj ≥ 0. In order to avoid
negative, or zero, values, the payoﬀs have been shifted by an amount equal to the cost C which, of course, leaves the
game’s Nash equilibria invariant.

In best-takes-over, the strategy si(t) of individual i at time step t will be

pj =

,

l, j ∈ {N (i) ∪ i}.

Gj
l Gl

P

si(t) = sj(t − 1),

where

j ∈ {N (i) ∪ i} s.t. Gj = max{Gk(t − 1)}, ∀k ∈ {N (i) ∪ i}.

That is, individual i will adopt the strategy of the player with the highest payoﬀ among its neighbors. If there is a tie,
the winner individual is chosen uniformly at random between the best, and its strategy replaces the current strategy
of player i, otherwise the rule is deterministic. It should be noted that this rule does not ﬁt to the usual continuous
evolutionary game theory which leads to replicator dynamics, since the update decision is a step function.

4

Calling C(t) = (s1(t), s2(t), . . . , sN (t)) a conﬁguration of the population strategies at time step t, the global syn-

chronous system dynamics is implicitly given by:

2. Global Dynamics

C(t) = F (C(t − 1)), t = 1, 2, . . .

where F is the evolution operator.

Synchronous update, with its idealization of a global clock, is customary in spatial evolutionary games, and most
results have been obtained using this model [4, 5]. However, perfect synchronicity is only an abstraction. Indeed, in
some biological and, particularly, sociological environments, agents normally act at diﬀerent and possibly uncorrelated
times, which seems to preclude a faithful globally synchronous simulation in most cases of interest [22]. In spite of
this, it has been shown that the update mode does not fundamentally alter the results, as far as evolutionary games
are concerned [6, 21]. In this paper we present results for both synchronous and asynchronous dynamics.

Asynchronous dynamics must nevertheless be further qualiﬁed, since there are many ways for serially updating the
strategies of the agents. Here we use the discrete update dynamics that makes the least assumption about the update
sequence: the next cell to be updated is chosen at random with uniform probability and with replacement. This
corresponds to a binomial distribution of the updating probability and is a good approximation of a continuous-time
Poisson process. This asynchronous update is analogous to the one used by Hauert et al. [6], which will allow us to
make meaningful comparisons.

III. SIMULATION RESULTS

In order to analyze the inﬂuence of the structure of the network on the proportion of cooperation (i.e. dove behavior),
2500 players were organized into 5 diﬀerent networks: a 50 by 50 toroidal lattice where every cell is connected to
its 8 nearest neighbors, three diﬀerent small-world networks, and the random graph. The three categories of small
worlds are obtained by rewiring each edge with a certain probability p using the technique described under II A. The
values used are p ∈ {0.01, 0.05, 0.1}. The random graph is generated by ﬁrst creating the lattice and then rewiring
each link, in the same manner used to construct small worlds, but with probability p = 1. Although our population
size is smaller than that used in [6], which is 10000, results turn out to be qualitatively similar and comparable. For
each of the 5 networks mentioned above and for all update policies, 50 runs of 5000 time steps each were executed.
In the following ﬁgures, the curves indicating the proportion of doves in the population were obtained by averaging
over the last 10 time steps of each run, well after all transients have decayed. At the beginning of each run, we
generate a new network of the type being studied and randomly initialize it with 50% doves and 50% hawks. For
completeness, we mention that experiments with 10% and 90% initial cooperators respectively, give results that are
qualitatively indistinguishable from the 50% case in the long run. Therefore, we do not include the corresponding
graphs for reasons of space.

In the following ﬁgures, the dashed diagonal line going from a fraction of cooperators of 1 for r = 0, to a fraction of
0 for r = 1, represents the equation 1 − G/C = 1 − r, which is the equilibrium fraction of cooperators as a function of r
given by the standard replicator-dynamics equations [3], and it is reported here for the sake of comparison. It should
be noted, however, that the simulations are not expected to ﬁt this line. The reason is that the analytic solution is
obtained under two main hypotheses: the population size is very large, and individuals are matched pairwise randomly.
These conditions are not satisﬁed by the ﬁnite-size, discrete systems used for the simulations, and thus one should not
expect strict adherence to the mean-ﬁeld equations. On the other hand, the type of mesoscopic system simulated here
is probably closer to reality, where ﬁniteness and discreteness are the rule. Another reason why we do not expect the
results of the simulations to closely ﬁt the theoretical solution is that two of the local update rules (best-takes-over
and proportional updating) do not reduce to the standard replicator dynamics.

This section is subdivided into three separate parts, one per decision rule previously mentioned under II B.

To determine the probability pj for replacing an individual i, having a gain Gi, by one of its randomly chosen

neighbors j, whose gain is Gj , we use the the previously introduced function φ(Gj − Gi) as follows:

A. Replicator Dynamics

pj = φ(Gj − Gx) = 


Gj−Gi
dmax

if Gj − Gi > 0

0



otherwise

where dmax = G+C

2

is the largest diﬀerence in gain there can be between two players.

With this deﬁnition of φ, individual i imitates neighbor j’s strategy with a certain probability proportional to the
diﬀerence of their average payoﬀs and only if j has a higher gain than i. Notice that if i and j have the same average
payoﬀs, i’s strategy is left untouched, while if Gj − Gi = dmax, i necessarily adopts j’s strategy.

Now taking a look at ﬁgures 1 and 2, we clearly observe that for both synchronous and asynchronous dynamics,
cooperation is globally inhibited by spatial structure, conﬁrming the results of [6]. Even the case of the random graph
generates higher rates of hawks. Further details as to why this may occur can be found in section IV.

5

(1)

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

%
 
e
v
o
d

std repl!dyn
lattice
SW p=0.05
random graph

%
 
e
v
o
d

1

0.8

0.6

0.4

0.2

0

0

0

0

1
.
0

2
.
0

3
.
0

4
.
0

5
.
0

r = G/C

6
.
0

7
.
0

8
.
0

9
.
0

p

p

 

 

=

=

 

p

 

p

 

=

 

0

1p

 

=

 

0

0

.

=

 

 

1

0

.

.

0

0

1

1

5

(a)

0.1

0.2

0.3

0.4

0.6

0.7

0.8

0.9

1

0.5
r=G/C

(b)

FIG. 1: (Color online) asynchronous replicator dynamics updating; (a) frequency of doves as a function of the gain-to-cost
ratio r for diﬀerents topologies:
lattice (p = 0), small worlds (p = 0.01, p = 0.05, p = 0.1), random graph (p = 1); (b) small
world with p = 0.05 compared to the grid (p = 0) and random graph (p = 1) cases. Bars indicate standard deviations and the
diagonal dashed line is 1 − r (see text).

We note in passing that the experimental curve corresponding to the random graph limit appears to be close to the
curve corresponding to the pair approximation calculation in Hauert and Doebeli’s work [6]. This is not surprising,
given that pair approximation works better in random graphs than in regular lattices, unless higher-order eﬀects are
taken into account [23]. Since the curves for the random graphs in ﬁgures 1 and 2 are averages over many graph
realizations, each pair has some probability to contribute in the simulation, which explains the resemblance between
our experimental curves and the calculations of [6].

B. Proportional Updating

Figures 3 and 4 show that, when using the proportional updating rule, spatial structure neither favors nor inhibits
dove-like behavior contrary to what [5] and [6] seem to suggest. Indeed, for low values of r, the more the network
is structured, the higher the proportion of doves. However as r increases, the tendency is reversed, thus giving a
lower percentage of doves in the lattice and small-world networks than present in the random graph topology. This
phenomenon is even more marked when using the asynchronous update.

Thus when using the proportional updating rule, if spatial structure should favor one strategy over the other for a
given value of r, it would be the one that is already present in greater numbers when the topology is a random graph.
Another interesting aspect observed is the higher percentage of doves when updating asynchronously compared to

the synchronous equivalent. This will be discussed in more detail in section IV.

 

%
e
v
o
d

1

0.8

0.6

0.4

0.2

0

0

%
 
e
v
o
d

1

0.8

0.6

0.4

0.2

0

0

0

0

1
.
0

2
.
0

3
.
0

4
.
0

5
.
0

r = G/C

6
.
0

7
.
0

8
.
0

9
.
0

p

p

 

 

=

=

 

p

 

p

 

=

 

0

1p

 

=

 

0

0

.

=

 

 

1

0

.

.

0

0

1

1

5

(a)

0.1

0.2

0.3

0.4

0.6

0.7

0.8

0.9

1

0.5
r=G/C

(b)

FIG. 2: (Color online) synchronous replicator dynamics updating; (a) frequency of doves as a function of the gain-to-cost ratio
r for diﬀerents topologies: lattice (p = 0), small worlds (p = 0.01, p = 0.05, p = 0.1), random graph (p = 1); (b) small world
with p = 0.05 compared to the grid (p = 0) and random graph (p = 1) cases. Bars indicate standard deviations and the
diagonal dashed line is 1 − r (see text).

6

std repl!dyn
lattice
SW p=0.05
random graph

std repl!dyn
lattice
SW p=0.05
random graph

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

%
 
e
v
o
d

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

%
 
e
v
o
d

0

0

1
.
0

2
.
0

3
.
0

4
.
0

5
.
0

r = G/C

6
.
0

7
.
0

8
.
0

9
.
0

p

p

 

 

=

=

 

p

 

p

 

=

 

0

1p

 

=

 

0

0

.

=

 

 

1

0

.

.

0

0

1

1

5

(a)

0.1

0.2

0.3

0.4

0.6

0.7

0.8

0.9

1

0.5
r=G/C

(b)

FIG. 3: (Color online) asynchronous proportional udpating; (a) frequency of doves as a function of the gain-to-cost ratio r for
diﬀerents topologies: lattice (p = 0), small worlds (p = 0.01, p = 0.05, p = 0.1), random graph (p = 1); (b) small world with
p = 0.05 compared to the grid (p = 0) and random graph (p = 1) cases. Bars indicate standard deviations and the diagonal
dashed line is 1 − r (see text).

As pointed out by Hauert and Doebeli [6], the best-takes-over rule lacks stochasticity, which in ﬁgures 5 and 6,

translates into discontinuous jumps.

Note that when updating synchronously, best-takes-over is the only rule, out of the three studied here, where spatial
structure actually favors cooperation, as remarked in [5], where this was the local update rule used. In fact, the same
qualitative results were found in [6]; however, they appear in the ”supplementary material” section, not in the main
text.

C. Best-takes-over

D. Time Evolution

While the ﬁgures in the previous subsections summarize the results at system stability, here we describe the
dynamical behavior of populations through the ﬁrst 100 time steps, where ﬂuctuations might inﬂuence the system

%
 
e
v
o
d

1

0.8

0.6

0.4

0.2

0

0

 

%
e
v
o
d

1

0.8

0.6

0.4

0.2

0

0

0

0

1
.
0

2
.
0

3
.
0

4
.
0

5
.
0

r = G/C

6
.
0

7
.
0

8
.
0

9
.
0

p

p

 

 

=

=

 

p

 

p

 

=

 

0

1p

 

=

 

0

0

.

=

 

 

1

0

.

.

0

0

1

1

5

(a)

0.1

0.2

0.3

0.4

0.6

0.7

0.8

0.9

1

0.5
r=G/C

(b)

FIG. 4: (Color online) synchronous proportional updating; (a) frequency of doves as a function of the gain-to-cost ratio r for
diﬀerents topologies: lattice (p = 0), small worlds (p = 0.01, p = 0.05, p = 0.1), random graph (p = 1); (b) small world with
p = 0.05 compared to the grid (p = 0) and random graph (p = 1) cases. Bars indicate standard deviations and the diagonal
dashed line is 1 − r (see text).

7

std repl!dyn
lattice
SW p=0.05
random graph

std repl!dyn
lattice
SW p=0.05
random graph

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

%
 
e
v
o
d

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

%
 
e
v
o
d

0

0

1
.
0

2
.
0

3
.
0

4
.
0

5
.
0

6
.
0

r = G/C

7
.
0

8
.
0

9
.
0

p

p

 

p

p

 

 

=

=

 

0

1p

 

 

=

 

=

 

0

0

.

=

 

 

1

0

.

.

0

0

1

1

5

(a)

0.1

0.2

0.3

0.4

0.6

0.7

0.8

0.9

1

0.5
r=G/C

(b)

FIG. 5: (Color online) asynchronous best-takes-over updating; (a) frequency of doves as a function of the gain-to-cost ratio r
for diﬀerents topologies: lattice (p = 0), small worlds (p = 0.01, p = 0.05, p = 0.1), random graph (p = 1); (b) small world with
p = 0.05 compared to the grid (p = 0) and random graph (p = 1) cases. Bars indicate standard deviations and the diagonal
dashed line is 1 − r (see text).

dynamics.

We have studied both asynchronous and synchronous dynamics for the three update rules in three topologies each:
lattice, random graph, and a small world with p = 0.05. This was done for r = 0.7, where defection predominates.
The results are relatively uninteresting for the replicator and proportional updates in all topologies. One observes in
the average a monotone decrease of cooperation starting with 50% at time 0 until the curve ﬂattens out at the values
reported in ﬁgures 1 to 4. The only diﬀerence is that the variance is more pronounced in the proportional case, as
one would expect looking at standard deviations in ﬁgures 1 to 4.

The situation is diﬀerent, and more interesting, in the case of best-takes-over update whose determinism causes
stronger variations. The most striking feature is a sudden drop of cooperation at the beginning of the simulation,
followed by an increase and by ﬂuctuations whose amplitude diminishes over time. The eﬀect is much more pronounced
with synchronous dynamics, shown in Fig. 7, than with the asynchronous one. The behavior appears in all three
topologies but the drop is stronger in lattices and small worlds with respect to the random graph at earlier times. As
time goes by, ﬂuctuations remain larger in the random graph case. Nevertheless, no experiment led to total extinction
of cooperators at r = 0.7.

8

std repl!dyn
lattice
SW p=0.05
random graph

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

%
 
e
v
o
d

%
 
e
v
o
d

1

0.8

0.6

0.4

0.2

0

0

0

0

1
.
0

2
.
0

3
.
0

4
.
0

5
.
0

6
.
0

r = G/C

7
.
0

8
.
0

9
.
0

p

p

 

p

p

 

 

=

=

 

0

1p

 

 

=

 

=

 

0

0

.

=

 

 

1

0

.

.

0

0

1

1

5

(a)

0.1

0.2

0.3

0.4

0.6

0.7

0.8

0.9

1

0.5
r=G/C

(b)

FIG. 6: (Color online) synchronous best-takes-over updating; (a) frequency of doves as a function of the gain-to-cost ratio r for
diﬀerents topologies: lattice (p = 0), small worlds (p = 0.01, p = 0.05, p = 0.1), random graph (p = 1); (b) small world with
p = 0.05 compared to the grid (p = 0) and random graph (p = 1) cases. Bars indicate standard deviations and the diagonal
dashed line is 1 − r (see text).

1

0.8

0.6

0.4

0.2

%
 
e
v
o
d

1

0.8

0.6

0.4

0.2

%
 
e
v
o
d

1

0.8

%
 
e
v
o
d

0.6

0.4

0.2

0
0

0
0

20

40

60

time step

80

100

0
0

20

40

60

time step

80

100

20

40

60

time step

80

100

(a)

(b)

(c)

FIG. 7: time evolution (ﬁrst 100 steps) of the proportion of doves for best-takes-over update; synchronous evolution with
r = 0.7. (a) lattice structure; (b) small world with p = 0.05; (c) random graph. Ten randomly chosen evolutions are shown in
each case.

IV. ANALYSIS AND DISCUSSION

If we take a closer look when comparing Fig. 3 and Fig. 4, we notice that, for proportional dynamics, asynchronous
updating allows for better cooperation than its synchronous counterpart. The reason for this diﬀerence can be
intuitively understood in the following manner: when updating asynchronously, let us suppose a player y has just
imitated the strategy of one of its neighbors x. Another way of viewing this change, is to say that player x has
“infected” individual y with its strategy. If x is a dove player, making y a dove as well, not only does the percentage
of doves increase in the population, but the next time either x or y is evaluated for an update, it will be able to take
advantage of the other one’s presence to help increase its payoﬀ. Hence, the two players mutually reinforce each other.
Meanwhile, if y is infected by x and turns into a hawk, on the one hand x has successfully propagated his strategy
thus increasing the overall amount of hawks in the population, but on the other hand this propagation will cause him
to have a lower payoﬀ than he previously had. Not only is x’s payoﬀ negatively aﬀected, but x’s prescence also harms
y’s payoﬀ.

The same reasoning cannot be held when updating synchronously. Indeed, a player x may change strategies at the
same time it infects its neighbor y. So if x’s initial strategy was D, it might switch to H as it infects its neighbor y,

9

in which case x will no longer have a positive eﬀect on y’s payoﬀ contrary to what happens in asychronous updating.
When applying the replicators dynamics rule, the small drop of the percentage of doves seen on the very left of
ﬁgures 1 and 2 is due to the fact that for r = 0 the game is somewhat degenerated. Indeed, any cluster of more than
one hawk will either reduce to a single hawk or totally disappear, since a dove, no matter what its neighborhood
comprises, will always have a gain of zero while a hawk that interacts with at least one other hawk will have a negative
payoﬀ. The remaining lone hawks will however survive but will not be able to propagate (having a gain exactly equal
to that of their neighboring doves). The system is thus found locked in a conﬁguration of a very high proportion of
doves with a signiﬁcant number of isolated hawks.

If r > 0, lone hawks always have a higher payoﬀ than the doves in their surroundings and will thus infect one of
its neighbors with its strategy. However for 0 < r ≤ 0.1, once the pair of hawks is established, their payoﬀ is lower
than the one of any of the doves connected to either one them. Even a dove that interacts with both hawks has an
average payoﬀ still greater than what a hawk composing the pair receives. Consequently, when 0 < r ≤ 0.1, clusters
of hawks ﬁrst start by either disappearing or reducing to single hawks like previously explained for the r = 0 case, but
then these lone hawks will become pairs of hawks. If the updates are done synchronously, a pair of hawks will either
vanish or reduce back to a single hawk. One can clearly see that in the long run, hawks will become extinct. Now
if the updates are done asynchronously, a pair cannot totally disappear since only one player is updated at a time.
However, this mechanism of a pair reducing to a single hawk and turning back to a pair again will cause the small
groups of two hawks to move across the network and “collide” with each other forming larger groups that reduce back
to a single-pair hawk formation. Therefore, after a large number of time steps, only a very few hawks will survive.

If we take another look at ﬁgures 1 and 2, we notice that when the population of players is constrained to a
lattice-like structure, the proportion of doves is reduced to zero for values of the gain-to-cost ratio greater or equal
to approximately 0.8, while this not the case when the topology is a random graph. Let us try to give a qualitative
explanation of the two diﬀerent behaviors: the ﬁrst thing to be pointed out is that in the case of the replicators
dynamics, if a dove is surrounded by 8 hawk-neighbors, it is condemned to die for values of r greater than 7
9 whatever
the topology may be. However, this does not explain why for these same values, doves no longer exist on square lattices
or small worlds but are able to survive on random graphs. If the population were mixing, r = 0.8 would induce a
proportion of doves equal to 20%. Therefore, let us suppose that at a certain time step, there is approximately 20% of
doves in our population. Furthermore, as pointed out by Hauert and Doebeli [6], in the Hawk-Dove game on lattices,
the doves are usually spread out and form many small-isolated patches. Thus, we will also suppose 20% of doves in
the population implies that in a set of players comprising an individual and its immediate eight neighbors, there are
about two doves. Hence, a D-player has on average one dove and seven hawks in its neighborhood. In the lattice
network, this pair of doves can be linked in two diﬀerent manners (see Fig. 8), having either two or four common
neighbors, thus an average of three.

H

H

H

H

D

H

H

D

H

H

H

H

H

H

H

H

H

D

H

H

D

H

H

H

H

H

(a)

(b)

FIG. 8: (Color online) lattice: two possible conﬁgurations.

More generally, if we denote Γ the clustering coeﬃcient of the graph and k the average degree, a pair of doves will
have on average Γ(k − 1) common neighbors. Let us denote x one of the two doves composing the pair, Hx a hawk
linked to x but not to the other dove of the pair and Hx,y one that is connected to both doves. If 2
8 and
assuming that the hawks surrounding the pair of doves are not interacting with any other doves (this gives the pair
of doves a maximum chance of survival), we have

3 < r < 7

where Gα is the average payoﬀ of player α

Consequently, according to Eq. (1), x can infect Hx, and Hx,y can infect x.
Let us now calculate for what values of r the probability that x invades the site of at least one Hx is less than an
Hx,y infecting x. To do so, let us distinguish the case of the asynchronous udating policy from the synchronous one.

GHx < Gx < GHx,y ,

10

(2)

(3)

(4)

(5)

The probability that an Hx neighbor is chosen to be updated and adopts strategy D is given by

(∗∗)
|{z}
where N is the size of the population, (∗) the probability an Hx hawk is chosen to be updated (among the N players),
(∗∗) the probability the chosen Hx hawk compares its payoﬀ with player x, and ﬁnally φ is the function deﬁned in
Eq. (1).

}

|

(∗)
{z

The probability that x is chosen to be updated and is infected by one of the Hx,y hawks is given by

where (∗) is the probability x is chosen to be updated, (∗∗) the probability it measures itself against an Hx,y neighbor,
and φ the function deﬁned by Eq. (1).

For a square lattice with a Moore neighborhood (Γ = 3

59 ≈ 0.78,
whereas for a random graph, Γ = k
2499 ≃ 0.003 ≈ 0 implies that a pair of doves does not have any common
hawk neighbors enabling them to survive if r < 7
8 . As for the small-world cases, the clustering coeﬃcient is very close
to that of the lattice, generating a behavior pratically identical to the latter. This gives a qualitative explanation for
the diﬀerence observed in Fig. 1.

7 and k = 8), expressions 2 and 3 give us r > 46

N −1 = 8

The probability that at least one Hx adopts strategy D is given by

Asynchronous Dynamics

(1 − Γ)(k − 1)
N

1
k

φ(Gx − GHx),

φ(GHx,y − Gx),

1
N

Γ(k − 1)
k

(∗)
|{z}

|

(∗∗)
{z

}

Synchronous Dynamics

1 −

[1 −
z

φ(Gx − GHx )
}|

](1−Γ)(k−1),
{

(∗∗)

(∗)
{z

}

1
k

|

φ(GHx,y − Gx),

Γ(k − 1)
k

(∗)
{z

}

|

where (∗) is the probability a speciﬁc Hx turns into a dove and (∗∗) the probability none of the Hx adopt strategy D.

The probability that x adopts the hawk strategy is given by

where (∗) is the probability player x compares its payoﬀ with one of its Hx,y neighbors.

For a square lattice with a Moore neighborhood (Γ = 3

7 and k = 8), expressions 4 and 5 yield

and given that G

C = r, we obtain

1 −

1 −

(cid:20)

1
8 (cid:18)

−8G + 7C

G + C (cid:19)(cid:21)

4

<

3
8 (cid:18)

9G − 6C
G + C (cid:19)

,

1 −

1 −

(cid:20)

1
8 (cid:18)

−8r + 7

r + 1 (cid:19)(cid:21)

4

<

3
8 (cid:18)

9r − 6
r + 1 (cid:19)

,

which is true for about r > 0.775. This also holds for the small-world cases, since, once again, they have a Γ close to
the one of the lattice.

For a random graph of N = 2500 nodes and k = 8, we have Γ ≈ 0. Therefore, a pair of doves has a negligible
8 . This

probability of having a hawk neighbor in common and thus cannot be infected by the H strategy if r < 7

11

enables a small percentage of doves to survive on the random graph topology contrary to the lattice and small-world
networks (see Fig. 2).

In a few words, whether the update policy is asynchronous or synchronous, as soon as r > 7

9 , isolated doves, as well
as pairs of doves surrounded by hawks, will end up disappearing in the lattice and small-world cases due to the high
clustering coeﬃcient. However, in the random graph scenario, although isolated doves are also bound to die if r > 7
9 ,
pairs of doves have a more than even chance of surviving (at least as long as r < 7

8 ).

V. CONCLUSIONS

In this work we clarify previous partially contradictory results on cooperation in populations playing the Hawk-Dove
game on regular grids. Furthermore, we notably extend the study to Watts–Strogatz small-world graphs, as these
population structures lie between the two extreme cases of regular lattices and random graphs, and are a ﬁrst simple
step towards real social interaction networks. This allows us to unravel the role of network clustering on cooperation
in the Hawk-Dove game. We ﬁnd that, in general, spatial structure on the network of interactions in the game either
favors or inhibits cooperation with respect to the perfectly mixed case. The inﬂuence it has depends not only on the
rule that determines a player’s future strategy, but also on the value of the gain-to-cost ratio G/C and to a lesser
degree, on the synchronous and asynchronous timing of events.

In the case of the best-takes-over rule, dove-like behavior is advantaged if synchronous update is used but the rule
is noisy due to its discrete nature. In the case of the proportional update rule, giving the network a regular structure
tends to increase the percentage of the strategy that would already be in majority on a random graph conﬁguration
of the population. The more important the structure, in terms of clustering coeﬃcient, the higher the percentage
of the dominant strategy. In fact, cooperation predominates for low to medium r values, while for higher r values
cooperation falls below the large population, mixing case. Finally, the replicators dynamics rule tends to favor hawks
over doves on spatially structured topologies such as small worlds and square lattices, thus conﬁrming previous results
for regular lattices and extending them to small-world networks. In the end, although small-world topologies show
behaviors that are somewhat in between those of the random graph and the two-dimensional lattice, they usually
tend more towards the latter, at least in terms of cooperation level.

In this work, we have used static network structures, which is a useful step but it is not realistic enough as the
interactions themselves help shape the network. In future work we shall extend the study using more faithful social
network structures, including their dynamical aspects.

[1] R. Axelrod, The Evolution of Cooperation (Basic Books, Inc., New-York, 1984).
[2] W. Poundstone, The Prisoner’s Dilemma (Doubleday, New York, 1992).
[3] J. Hofbauer and K. Sigmund, Evolutionary Games and Population Dynamics (Cambridge University Press, Cambridge,

UK, 1998).

[4] M. A. Nowak and R. M. May, Nature 359, 826 (1992).
[5] T. Killingback and M. Doebeli, Proceedings of the Royal Society of London B 263, 1135 (1996).
[6] C. Hauert and M. Doebeli, Nature 428, 643 (2004).
[7] M. Sysi-Aho, J. Saram¨aki, J. Kert´esz, and K. Kaski, Eur. Phys. Jour. B 44, 129 (2005).
[8] S. Milgram, Psychology Today 2, 60 (1967).
[9] M. E. J. Newman, SIAM Review 45, 167 (2003).
[10] D. J. Watts and S. H. Strogatz, Nature 393, 440 (1998).
[11] G. Abramson and M. Kuperman, Phys. Rev. E 63, 030901 (2001).
[12] B. J. Kim, A. Trusina, P. Holme, P. Minnhagen, J. S. Chung, and M. Y. Choi, Phys. Rev. E 66, 021907 (2002).
[13] D. J. Watts, Small worlds: The Dynamics of Networks between Order and Randomness (Princeton University Press,

Princeton NJ, 1999).

[14] F. C. Santos and J. M. Pacheco, Phys. Rev. Lett. 95, 098104 (2005).
[15] H. Ebel, J. Davidsen, and S. Bornholdt, Complexity 8, 24 (2003).
[16] E. M. Jin, M. Girvan, and M. E. J. Newman, Phys. Rev. E 64, 046132 (2001).
[17] N. Boccara, Modeling Complex Systems (Springer, New York, Berlin, Heidelberg, 2004).
[18] L. Luthi, M. Giacobini, and M. Tomassini, in Advances in Artiﬁcial Life, Eighth European Conference, ECAL 2005, edited
by M. C. et al. (Springer, Berlin, Heidelberg, New York, 2005), vol. 3630 of Lecture Notes in Artiﬁcial Intelligence, pp.
665–674.

[19] L. Luthi, M. Giacobini, and M. Tomassini, in Proceedings of the IEEE Symposium on Computational Intelligence and

Games, edited by G. Kendall and S. Lucas (IEEE Press, Piscataway, NJ, 2005), pp. 225–232.

[20] M. G. Zimmermann, V. M. Egu´ıluz, and M. S. Miguel, Phys. Rev. E 69, 065102(R) (2004).

[21] M. A. Nowak, S. Bonhoeﬀer, and R. M. May, Proceedings of the National Academy of Sciences USA 91, 4877 (1994).
[22] B. A. Huberman and N. S. Glance, Proceedings of the National Academy of Sciences USA 90, 7716 (1993).
[23] M. V. Baalen, in The Geometry of Ecological Interactions: Simplifying Spatial Complexity, edited by U. Dieckmann,

R. Law, and J. A. J. Metz (Cambridge University Press, Cambridge, UK, 2000), pp. 359–387.

12

%
 
e
v
o
d

1

0.8

0.6

0.4

0.2

0

0

std repl!dyn
lattice
SW p=0.05
random graph

0.1

0.2

0.3

0.4

0.6

0.7

0.8

0.9

1

0.5
r=G/C

