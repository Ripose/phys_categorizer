Diﬀusive capture processes for information search

Sungmin Lee, Soon-Hyung Yook,∗ and Yup Kim†

Department of Physics and Research Institute for Basic Sciences,

Kyung Hee University, Seoul 130-701, Korea

(Dated: February 2, 2008)

Abstract

We show how eﬀectively the diﬀusive capture processes (DCP) on complex networks can be

applied to information search in the networks. Numerical simulations show that our method gen-

erates only 2% of traﬃc compared with the most popular ﬂooding-based query-packet-forwarding

(FB) algorithm. We ﬁnd that the average searching time, hT i, of the our model is more scalable

than another well known n-random walker model and comparable to the FB algorithm both on real

Gnutella network and scale-free networks with γ = 2.4. We also discuss the possible relationship

between hT i and

, the second moment of the degree distribution of the networks.

k2
(cid:10)

(cid:11)

PACS numbers: 89.20.Ff,89.20.Hh,89.75.Hc,05.40.Fb,89.75.Fb,05.90.+m

Keywords: Complex networks, internet, random walks

7
0
0
2
 
r
a

M
 
5
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
0
4
0
3
0
7
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

∗Electronic address: syook@khu.ac.kr
†Electronic address: ykim@khu.ac.kr

1

The study on the complex networks has been attracted many researchers in diverse ﬁelds

[1, 2]. Due to the inherent complexity in their structures, the dynamical properties of many

physical systems on the networks have shown rich behaviors which depend on the structure

of the underlying networks and are far from the mean-ﬁeld expectations [3]. The diﬀusive

capture process (DCP) on complex network is one such example [4, 5]. The DCP or the

moving trap model has been studied in many physics literatures [6] on chemical kinetics,

wetting, melting, etc. This process can be mapped into coupled random walks (RWs), in

which n predator random walkers (lions or moving trap) stalk a prey random walker (a lamb

or a moving particle). On a d-dimensional regular lattice, the survival probability S(t) of

the lamb is given by [7, 8, 9]

t−β

f or d < 2

S(t) ∼

(ln t)−n f or d = 2

ﬁnite

f or d > 2,





(1)

where the exponent β varies as n and the ratio of diﬀusion constant of walks. Like many

physical systems on complex networks, we have found that the S(t) of the DCP on complex

networks also deviates from the mean-ﬁeld expectation depending on the degree distribution

of the underlying networks. This anomalous behavior has been found to come from the

existence of dominant hubs in complex networks [4, 5] and can be applied to information

search in complex networks.

The searching information in complex networks, such as Peer-to-Peer (P2P) networks and

the world-wide-web (www), using random walkers [10, 11] is an interesting and important

application in diverse areas including physics, computer science, and neuroscience [11, 12,

13]. The eﬃciency of the information search can be deﬁned by two factors, 1) amount of

traﬃc at time t deﬁned by the total number of packets existing on the network at t and 2)

searching time which corresponds to the average life time of a lamb in the DCP. In general,

these two factors are competing to each other, i.e., reducing the traﬃc congestion causes

long waiting time to ﬁnd a given information. Therefore, it is very important and diﬃcult to

design a less traﬃc congesting model with short searching time. In this paper, we consider

the pure P2P networks as an example of information search by taking notice of the fact

that the most of traﬃc generated by P2P applications consists of the query packets to ﬁnd

out the node which has the requested ﬁle out of the P2P jungle [1]. A pure P2P network

does not have the notion of clients or servers, but only equal peer nodes that simultaneously

2

function as both clients and servers to the other nodes on the network. Thus, there is no

central server managing the network and no central router. By applying the anomalous

behavior of the DCP on complex networks, we drastically reduce the traﬃc congestion. We

will also show that our model can provide implementable searching time. We expect that

our results can be easily generalized to apply many other information search problems and

communication networks, such as neural networks.

The performance of searching algorithm is crucially aﬀected by the underlying topology

[14]. Many studies on the large-scale topology of P2P networks have uncovered that the

probability distribution of a node with degree k follows the power law,

P (k) ∼ k−γ,

(2)

with γ < 3 [1, 11, 14, 15], or highly skewed fat-tailed distributions [16]. The network

satisfying Eq. (2) is called a scale-free (SF) network [2]. In these networks with γ < 3,

several nodes have most of degrees or connections. These nodes are called hubs and many

important properties of complex networks are dominated by them [1, 2]. However, most of

the popular algorithms used in many P2P networks do not take advantage of the underlying

structure. In those algorithms a query packet is generated by a node and forwarded to the

nearest neighbors until it ﬁnds the requested information during a query event. For example,

the ﬂooding-based query-packet-forwarding (FB) algorithm [14], which is used in BitTorrent

[17, 18], spreads the query packets to all nodes within a pre-assigned diameter. Thus, this

algorithm causes signiﬁcant traﬃc congestion. The n-random walker (n-RW) model, which

is used in LMS (Edutella) [17, 19], is another well studied model for searching information

[11, 14]. n-RW model can cause long waiting time because of the dynamical properties of

RWs on complex networks [20]. Gnutella and Kazaa use both algorithms [21, 22]. Other P2P

applications are structured and use global information such as distributed hash table (DHT)

[17, 23]. Thus, the traﬃc generated by those P2P applications using global information

can be ignorably small compared with the pure P2P applications. However, pure P2P

protocols mentioned above and their clones are still used very widely and listed in the most

popular P2P protocols (for example see the Ref. [24].) Therefore, we focus on the searching

algorithm of pure P2P networks without global information in this paper. Inspired by our

recent discoveries in the DCP [4, 5], we introduce a new model for information search in

which not only the query packets but also the information packets take random walks on

3

the network. We will show that our new model has two main beneﬁts compared to the other

algorithms: 1) the amount of traﬃc is always constant and much less than FB algorithm.

2) Much less searching time than that for n-RW model. Using these two beneﬁts, we expect

that our algorithm can provide more optimized algorithm compared to FB or n-RW for pure

P2P networks.

We now explain our model based on the anomalous behavior of DCP on the complex

networks in detail. In the model, each node sends out an information packet whose main

part, for example, consists of names of ﬁles stored in it, without regard to the existence

of query events. Each of these packets takes random walks along the network connections.

Thus, if there are N nodes in the network then N information packets take random walks.

Independently, a randomly chosen node sends out one query packet to ﬁnd a speciﬁc ﬁle.

The query packet also takes random walks. The special feature in our model is thus in the

fact that not only the querying packet moves but the information of all ﬁles moves on the

network. If the query packet meets an information packet which has the requested ﬁle name

in its list, then the random walk of the query packet is terminated but the information packet

continues random walks for the next query. Thus, our model for information search can be

mapped into the DCP, i.e., the query packet and the N information packets correspond to

the one random walking lamb and N random walking lions, respectively. Therefore, we will

call our model the N lions and one lamb (NLL) model.

We assume nf available ﬁles on the given network. For the distribution of ﬁles and

frequency of queries, we use two kinds of ﬁle distribution and frequency of queries. In the

ﬁrst kind, we assume that each node of the network has one randomly chosen ﬁle among nf ,

and sends out an information packet with the name of the ﬁle stored in it, its IP address,

etc. And a randomly chosen node sends out a query packet to ﬁnd one randomly chosen

item among nf ﬁles. Thus the popularity of ﬁles and frequency of queries are uniform.

In the second kind which is invoked by more realistic P2P network [25], the popularity of

ﬁles or the probability to ﬁnd the r-th most popular ﬁle in the network is assumed to be

proportional to 1/r (Zipf’s law) [26, 27, 28]. The frequency of queries to ﬁnd the r-th most

popular ﬁle is also assumed to be proportional to 1/r which is consistent with some empirical

observations [26, 27, 28]. We call the ﬁrst kind uniform distribution and the second kind

Zipf-distribution from now on. The empirically obtained Zipf-distribution also implies that

it is more probable to increase the number of more popular ﬁles rather than new or rare ﬁles

4

when a new user joins the P2P network. Thus, we assume that nf is ﬁxed for each given

network for simplicity.

In the simulation we use two kinds of networks. One is the theoretical SF network with

γ = 2.4 to mimic the virtual P2P networks. The SF networks are generated by the method

suggested by Goh et al.

[29]. To compare the scalability of each model or algorithm, we

control the number N of nodes in the networks as N = 103 ∼ 106. The other kind is

the snapshot of a real Gnutella topology obtained from Refs.

[16], which has 1, 074, 843

(≈ 106) nodes. For comparison with the results on the theoretical SF networks, we extract

the sub-networks of Gnutella from the huge snapshot without changing the topological

properties. Constructing sub-network with N < 106 from the given snapshot of the Gnutella

network without changing the topological properties is not trivial one [30, 31, 32]. To extract

Gnutella sub-networks having N = 103 ∼ 105 nodes from the snapshot, we use a RW; place

a particle at a randomly chosen node and let the particle take random walks until it visits

N diﬀerent nodes. Then construct sub-networks with these N visited nodes and the links

which connect any pair of nodes among the N visited nodes in the original network. We

have veriﬁed that the resulting sub-networks and original Gnutella network have almost the

same degree distribution, degree-degree correlations and hierarchical structures [32]. All

quantities measured in the simulations are averaged over 10 network realizations and 100

diﬀerent histories for each network realization.

In Fig. 1(a), we compare the traﬃc f (t) generated by FB algorithms to that by NLL

model on the SF networks with N = 103 nodes. At each time t, all packets whose pre-

assigned time-to-live (TTL) counter is larger than 0 are forwarded to the nearest neighbors.

The TTL of each packet decreases by one when the packet is forwarded to its nearest

neighbors, and if T T L = 0 then the query event is forced to end [1]. The uniform distribution

for ﬁles and frequency of queries is used. We assign nf = 5 and TTL= 6 for FB algorithm.

The diﬀerent values of the nf and T T L give us the similar results.

In order to prevent

the overﬂow caused by a large number of packets in FB algorithm, we assume that a new

query event can occur when one of the query packets succeed to ﬁnd the requested ﬁle. In

this case, the other query packets, which fail to ﬁnd the requested ﬁle, are forwarded until

their TTLs become 0. If all the query packets fail to ﬁnd the requested ﬁle, then a new

query event can occur only when the TTLs of the previous packets are expired. The traﬃc

5

)
t
i
n
U

 
.
b
r
A

(
 
)
t
(
f

 

)
t
i
n
U

 
.
b
r
A

(
 
)
t
(
f

1

105

104

 

103

2x106

1x106

0
0

 
 

t (Arb. Unit)
100

 

1000

10

N
 
 
200 400 600 800 1000

0

 FB
 NLL

(b)

 

 

 

(d)

40000

(a)

 FB
 NLL

(c)

 

 

 

 

50000

40000

30000

10000

0

)
t
i
n
U

 
.
b
r
A

(
 
 

>

)
t
;

N

(
f

<

 

20000

t

)
t
i
n
U

 
.
b
r
A

(
 
)
i
(
f

30000

20000

 

10000

0

20000

40000

0

 

t (Arb. Unit)

200 400 600 800 1000
i

   
   

FIG. 1: (a) Plot of traﬃc f (t) against t. The average traﬃc of NLL model is calculated from

simple theoretical arguments. (b) Time averaged traﬃc hf (N ; t)it generated by FB and by NLL

for various network sizes N = 102 ∼ 103. (c) The time evolution of f (t) obtained from a single run

of simulation of FB algorithm. One of the local maxima of traﬃc generated by FB algorithm is

marked by the arrow. (d) The traﬃc of FB algorithm measured at each node f (i) when f (t) has

the local maximum.

generated by FB algorithm during each query event is known to increase exponentially as

f (t = T T L) ≈ hki

hk2i − hki
hki

(cid:19)

(cid:18)

T T L−1

,

(3)

where hki and hk2i are the ﬁrst and second moments of network degree distribution, respec-

tively [1]. However, the traﬃc of NLL model is always N + 1(= 1001) for successive query

events. The simulation result shows that FB algorithm generates around 50 times more

traﬃc than NLL model on the average. If there are q simultaneous query events, then the

average traﬃc for FB algorithm increases simply by q times of the average traﬃc shown in

Fig. 1(a), but it becomes simply q + N for NLL model. The successive single query events

of n-RW model produce the smallest traﬃc among the algorithms considered in this paper.

Since the traﬃc of n-RW model is qn for q simultaneous query events, if q = N, i.e., every

node in the network sends out a query packet simultaneously, then the traﬃc generated

by n-RW model can exceed the traﬃc of NLL model depending on the value of n. We also

consider the dependence of f (t) on the network size N, f (N; t). Fig. 1(b) shows the time av-

eraged traﬃc generated by FB algorithms, hfF B(N; t)it, and by NLL model, hfN LL(N; t)it,

6

on the SF networks with N = 102 ∼ 103. As N increases, hfF B(N; t)it − hfN LL(N; t)it
considerably increases. Fig. 1(c) displays the time evolution of the traﬃc obtained from a

single run of simulation for FB algorithm. It implies a practical importance. Due to the

large ﬂuctuations, for example, around at t ≈ 3.0 × 104 (marked by the arrow) the traﬃc on

the network can have local maxima exceeding 2 × 106, which is 2, 000 times larger than the

traﬃc generated by NLL model. At the moment of occurring such large amount of traﬃc,

FB algorithm can causes severe traﬃc congestion over the network. However, NLL model

always guarantees a constant level of traﬃc, which is much less than that of FB algorithm

and comparable to that of n-RW model.

Since the probability that a RW visits a node of degree k is given by pv(k) =

k
N
i=1 ki
[7, 20], the average traﬃc of NLL model at the node having k links can be estimated by

P

hf (k)i = N k

P

N
i=1 ki

. Therefore, the hub can have considerable amount of lion-traﬃc in the

NLL model. In order to ﬁnd the bottleneck in FB algorithm, we measure the traﬃc of each

node f (i) when f (t) has the local maximum for FB algorithm (Fig. 1(d)). By deﬁnition of

the static model [29], the smaller node index i has the larger k. From the data, we ﬁnd that

the traﬃc of the largest hub (i = 1) reaches around 4 × 104 which is much larger than the

average traﬃc of NLL model at the largest hub hf (kmax)i or the possible maximum traﬃc

of NLL model (fmax = 1001 for N = 1000). The maximum traﬃc of a link at time t can

be estimated by mean-ﬁeld type arguments as f (kmax; t) + hf (t)i for FB algorithm which is
much larger than that for n-RW and NLL model, f (kmax;t)

hki . Here, f (kmax; t) represents

kmax + hf (t)i

the traﬃc on the largest hub at t.

In Fig. 2 we show the average searching time, hT i, for each algorithm. The searching time

T is deﬁned by the time taken to ﬁnd the requested information, and thus, it corresponds to

the life time of a lamb in DCP. In the simulations we use inﬁnite TTLs. Since the searching

time of n-RW model depends on the value of n, we need a criterion for n. Here we use the

condition fn−RW (t) = fN LL(t) when q = N, so we ﬁx n = 2 in the following simulations. In

Fig. 2, we display the average searching time when nf = 500. From the data we can not

ﬁnd any signiﬁcant diﬀerence between uniform distribution and Zipf distribution of ﬁles and

queries. The average searching time of NLL model on SF networks is, at least, 10 times faster

than n-RW model on SF networks. For example, hT i2−RW / hT iN LL = 365.417/12.84 ≈ 28
on SF networks for N = 106. However, hT iN LL / hT iF B = 12.84/2.9 ≈ 4.4 on the same size

7

>
T
<

 

104

103

102

101

100

(a) SFN (g =2.4)

(b) Gnutella

 2-RW (uniform)
 NLL (uniform)
 FB (uniform)
 2-RW (Zipf)
 NLL (Zipf)
 FB (Zipf)

 2-RW (uniform)
 NLL (uniform)
 FB (uniform)
 2-RW (Zipf)
 NLL (Zipf)
 FB (Zipf)

 

 

 

103

104

105

106

103

104

105

106

 

N

N 

FIG. 2: Log-log plot of the average time hT i taken to ﬁnd the requested information with a ﬁxed

value of nf (= 500) on SF networks with γ = 2.4 (a) and real Gnutella networks (b). hT i decreases

as increasing N both for 2-RW and NLL models, while hT i for FB algorithm remains almost

constant on SF networks (a) and decreases on real Gnutella networks. Open symbols: both the

frequency of queries and popularity of ﬁles follow the uniform distribution. Crossed symbols: both

the frequency of queries and popularity of ﬁles follow the Zipf-distribution.

of SF networks (see Fig. 2(a)). Therefore, the average searching times satisfy the inequality,

 
 

hT iF B < hT iN LL < hT i2−RW

(4)

for all N ≤ 106.

Note that hT i of NLL model decreases much faster than that of n-RW model as increasing

N and approaches to hT iF B, i.e., the diﬀerence between NLL and 2-RW models, hT i2−RW −
hT iN LL, increases while hT iN LL − hT iF B decreases as increasing N (see Fig. 2(a)). We
ﬁnd the same behavior of hT i’s on the real Gnutella (sub-) networks (see Fig. 2(b)). This

can be understood from the dynamical properties of RWs on complex networks. Since the

probability that a RW visits a node with the degree k is proportional to k [7, 20], the

probability that a query packet ﬁnds a requested ﬁle at a node with degree k is proportional

to k in n-RW model. But in NLL model, due to the random walking information packets,

the probability is proportional to k2[5]. As a result, the hubs in the network can collect more

packets in our NLL model than n-RW model, and thus become eﬀective attractors. This

eﬀect becomes enhanced if the second moment of degree distribution hk2i diverges, or for SF

8

networks with γ < 3. In SF networks the degree of the hub increases with N [1]. Therefore,

both hT iN LL and hT i2−RW decrease but hT i2−RW − hT iN LL increases as increasing N. These
provides an indirect evidence that the hk2i grows more rapidly than hki as increasing N in

the Gnutella network.

In this paper we introduce a new model for information search, which can be easily ap-

plied to many information search problems such as P2P ﬁle sharing networks. By numerical

simulations, we verify two important beneﬁts of our model: 1) ﬁrst of all, our model can

drastically decreases the traﬃc congestion compared to FB algorithm and 2) it can provide

more implementable scalability in average searching time than n-RW model. Because of

these two beneﬁts, NLL algorithm suggested in this paper can be utilized to optimize in-

formation search on pure P2P networks. The dynamical properties of NLL model can be

easily understood from the DCP and the dynamical properties of RWs on complex networks.

Since the probability that a RW visits a node with degree k is proportional to k [7, 20], P (k)

becomes relevant. If hk2i diverges then most of the information would be gathered at several

hubs without the knowledge of the global information on the distribution of ﬁles. Therefore,

the hubs spontaneously play a very similar role of the directory servers in structured P2P

networks [14] which provide better scalability than n-RW model.

Though P2P network is virtual network, nodes with large number of connections in real

network can have large number of degree in P2P network. In certain real P2P networks such

as Gnutella, the nodes which satisfy some requirements such as suﬃcient network resources,

CPU speed, etc. are prepared to be the hubs with a large number of degree [21]. For

simplicity, we assume the degree of virtual P2P network is approximately proportional to

the degree of real network and each node and link can treat an unlimited amount of packets

at each time step. However, the detailed studies with more realistic restrictions such as ﬁnite

buﬀers, diﬀerent data transfer rate and ad hoc properties of network topology are necessary

for further studies to apply NLL model to the real P2P applications.

Finally, some information transfer networks, such as neural networks, satisfy Eq. (2) with

γ < 3 [12] or have huge hub like the Gnutella network [16]. In these networks, we expect

that the networks have self organized their structure to improve the eﬃciency for ﬁnding

information such as reducing the traﬃc or the searching time. By combining our results, we

expect that the non-mean-ﬁeld type behavior of DCP can give a clue to the emergence of SF

structure or formation of hubs in information transfer networks observed in nature [12, 33].

9

We thank to Dr. Kwon and Dr. Yoon for useful discussions. This work is supported by

Korea Research Foundation Grant No. KRF-2004-015-C00185.

[1] R. Pastor-Satorras and A. Vespignani, Evolution and Structure of the Internet: A Statistical

Physics Approach. Cambridge University Press, (2004).

[2] R. Albert, and A.-L. Barab´abasi, Rev. Mod. Phys. 74, 47 (2002).

[3] A. V. Goltsev, S. N. Dorogovtsev, and J. F. F. Mendes, Phys. Rev. E 67, 026123 (2003);

M. Leone, A. V´azques, A. Vespignani, and R. Zecchina, Eur. Phys. J. B 28, 191 (2002); R.

Cohen, K. Erez, D. ben-Avraham, and S. Havlin, Phys. Rev. Lett. 85, 4626 (2000); R. Cohen,

D. ben-Avraham, and S. Havlin, Phys. Rev. E 66, 036113 (2002).

[4] S. Kwon, S. Lee, and Y. Kim, Phys. Rev. E 73, 056102 (2006).

[5] S. Lee, S. H. Yook, and Y. Kim, Phys. Rev. E 74, 046118 (2006).

[6] P. L. Krapivsky and S. Redner, J. Phys. A:Math. Gen. 29, 5347 (1996); S. Redner and P. L.

Krapivsky, American J. Phys. 67, 1277 (1999); S. Havlin, R. Kopelman, R. Schoonover, and

G. H. Weiss, Phys. Rev. A 43, 5228 (1991); D. ben-Avraham, J. Chem. Phys. 88, 941 (1988);

M. E. Fisher, J. Stat. Phys. 34, 667 (1984); D. A. Huse and M. E. Fisher, Phys. Rev. B 29,

239 (1984).

[7] W. Feller, An Introduction to Probability Theory and Its Applications, Wiley, New York (1968).

[8] S. Redner, A Guide to First-Passage Processes, Cambridge University Press (2001).

[9] G. H. Weiss, Aspects and Applications of the Random Walk, North Holland, Amsterdam

(1994).

[10] J. M. Kleinberg, Nature 406, 845 (2000).

[11] L. A. Adamic, R. M. Lukose, A. R. Puniyani, and B. A. Huberman, Phys. Rev. E 64, 46135

(2001); C. P. Herrero, Phys. Rev. E 71, 016103 (2005); S.-J. Yang Phys. Rev. E 71, 016107

(2005); H. P. Thadakamalla, R. Albert, and S. R. T. Kumara, Phys. Rev. E 72, 066128 (2005).

[12] V. M. Egu´ıluz, D. R. Chialvo, G. A. Cecchi, M. Baliki, and A. V. Apkarian, Phys. Rev. Lett.

94 018102 (2005).

[13] V. Braitenberg and A. Sch¨uz, Anatomy of the Cortex, Springer, Berlin, 1991.

[14] Q. Lv, P. Cao, E. Cohen, K. Li, and S. Shenker, Proc. 16th Annual ACM Int. Conf. on

Supercomputing, New York City, U.S.A., June (2002).

10

[15] M. Ripeanu, I. Foster, and A. Iamnitchi, IEEE Internet Computing Journal 6, 50 (2002).

[16] D. Stutzbach, and R. Rejaie, Tech. Rep. CIS-TR-2005-01, University of Oregon, Eugene, OR,

Feb. (2005)

[17] J. Buford and K. Ross, P2P Overlay Design Overview, IETF P2P-SIP ad hoc November 2005.

[18] BitTorrent Protocol Speciﬁcation; http://www .bittorrent.org/protocol.html.

[19] W Nejdl et al., EDUTELLA: A P2P Networking Infrastructure Based on RDF, ACM Press,

NY, USA (2005).

[20] J. D. Noh, and H. Rieger, Phys. Rev. Lett. 92, 118701 (2004).

[21] Gnutella Protocol Speciﬁcation v0.4, v0.6.

[22] http://www.kazaa.com.

[23] M. Naor and U. Wieder, Novel architectures for P2P applications:

the continuous-discrete

approach, ACM Press, NY, USA (2003).

[24] S. Shin, J. Jung, H. Balakrishnan, Proc. 6th ACM SIGCOMM on Internet mea-

surement, 333 (2006); http://www.aranetwork.com/eng/docs/ARA-PPMTwhitepaper.pdf;

http://www.google.com/Top/Co mputers/Software/Internet/Clients/File Sharing/.

[25] G. K. Zipf, Human Behavior and the principle of least eﬀort, Cambridge, MA: Addison-Wesley

[26] V. Almeida, A. Bestavros, M. Crovella, and A. de Oliveira, Characterizing reference local-

ity in the www. In Proceedings of 1996 International Conference on parallel and Distributed

Press (1949).

Information Systems (1996).

[27] K. Sripanidkulchai, The popularity of gnutella queries and its implications on scalability. In

O’Reilly’s www.openp2p.com, February 2001.

[28] Q. Lv et al., Search and replication in unstructured peer-to-peer networks. In Proceedings of

International Conference on Supercomputing (2002).

[29] K.-I. Goh, B. Kahng, and D. Kim, Phys. Rev. Lett. 87, 278701 (2001).

[30] S. H. Lee, P.-J. Kim, and H. Jeong, Phys. Rev. E 73, 016102 (2006).

[31] M. P. H. Stumpt and C. Wiuf, Phys. Rev. E 72, 036118 (2005).

[32] S. Yoon, S. Lee, S. H. Yook, and Y. Kim, arXiv:physics/0612037.

[33] R. Guimer`a et al., Phys. Rev. Lett. 89, 248701 (2002).

11

