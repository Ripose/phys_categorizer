7 Directed network modules
0
0
2
 
r
a

Gergely Palla1, Ill´es J. Farkas1,2, P´eter Pollner1, Imre Der´enyi2
and Tam´as Vicsek1,2
1 Statistical and Biological Physics Research Group of HAS and
2 Dept. of Biological Physics, E¨otv¨os Univ., 1117 Budapest, P´azm´any P. stny. 1A

Abstract. A search technique locating network modules, i.e. , internally densely
connected groups of nodes in directed networks is introduced by extending the Clique
Percolation Method originally proposed for undirected networks. After giving a
suitable deﬁnition for directed modules we investigate their percolation transition
in the Erd˝os-R´enyi graph both analytically and numerically. We also analyse four
real-world directed networks, including Google’s own webpages, an email network,
a word association graph and the transcriptional regulatory network of the yeast
Saccharomyces cerevisiae. The obtained directed modules are validated by additional
information available for the nodes. We ﬁnd that directed modules of real-world graphs
inherently overlap and the investigated networks can be classiﬁed into two major groups
in terms of the overlaps between the modules. Accordingly, in the word-association
network and among Google’s web pages the overlaps are likely to contain in-hubs,
whereas the modules in the email and transcriptional regulatory networks tend to
overlap via out-hubs.

PACS numbers: 02.70.Rr, 05.10.-a, 87.16.Yc, 89.20.-a, 89.75.Hc

M
 
8
2
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
8
4
2
3
0
7
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Directed network modules

1. Introduction

2

A widespread approach to the analysis of complex natural, social and technological
phenomena is to assemble the participating molecules, individuals or electronic devices
and their interactions into a network (nodes and links) and to infer functional
characteristics of the entire system from this static web of connections [1, 2]. This
approach is rooted in, among others, statistical physics, where often the thermodynamic
limit (N → ∞, where N is the number of nodes) is considered, and the overall
(large-scale) structure of connections is studied rather than the details at the level
of nodes and links. Accordingly, over the past few years, several broadly studied large-
scale properties of real-world webs have been uncovered, e.g. , a low average distance
combined with a high average clustering coeﬃcient [3], the broad (scale-free) distribution
of node degree (number of connections of a node) [4, 5, 6, 7] and various signatures
of hierarchical/modular organisation [8, 9]. In addition, detailed analyses of the small-
scale behaviour of the same complex webs have revealed overrepresented local structures:
graph motifs [10, 11], i.e. , small groups of nodes (typically of size 3−5) with speciﬁcally
arranged connections among them. The identiﬁed small- and large-scale properties are
both closely related to the dynamical behaviour of the corresponding complex system.
Nodes with many connections (hubs) often have a central role in traﬃc [12], while motifs
act as building blocks performing distinct basic information processing tasks [13].

The inter mediate-scale substructures in networks (units larger than motifs),
made up of vertices more densely connected to each other than to the rest of the
network, are often referred to as communities, modules, clusters or cohesive groups
[14, 15, 16, 17, 29, 18, 31, 19] with no widely accepted, unique deﬁnition. In the various
types of networks these groups can represent, e.g. , communities of people [14, 20, 21],
functional units in biology [8, 22] and set of tightly coupled stocks or industrial sectors
in economy [23]. A reliable method to pinpoint network modules has many potential
industrial application, e.g. , it can help service providers (phone, banking, web, etc. )
identify meaningful groups of customers (users), or support biomedical researchers in
their search for individual target molecules and novel protein complex targets [24, 25]. In
addition, modules, and also some small subgraphs, are appropriate for “coarse-graining”
complex networks: each module/subgraph can be represented as a node and two such
node can be linked, if the corresponding modules/subgraphs are connected (or overlap)
[19, 26, 27].

The key requirements towards network module search techniques [19, 28, 30] are
that they should be local, based on link density, and error-tolerant (the removal or
insertion of a link may alter only nearby modules). Furthermore, as dense groups in
real-world graphs often overlap with each other, the module ﬁnding methods should
allow overlaps between the groups. For example, in a social web each person belongs
to several groups (family, colleagues and friends),
in a protein interaction network
each protein participates in multiple complexes [32] and a large portion of web-
pages is classiﬁed under multiple categories [33]. Prohibiting overlaps during module

Directed network modules

3

rolling the k−clique

A

E

D

C

E

F

D

C

A

B

D

C

Figure 1. Illustration of the Clique Percolation Method (CPM) [19, 34] with k-clique
template rolling in a small undirected graph for k = 4. Initially the template is placed
on A-B-C-D (left panel) and it is “rolled” onto the subgraph A-C-D-E (middle panel).
The position of the k-clique template is marked with thick black lines and black nodes,
whereas the already visited links are represented by thick gray lines and dark gray
nodes. Observe that in each step only one of the nodes is moved and the two 4-cliques
(before and after rolling) share k − 1 = 3 nodes. At the ﬁnal step (right panel) the
template reaches the subgraph C-D-E-F, and the set of nodes visited during the process
(A-B-C-D-E-F) are considered as a module identiﬁed by the CPM at k = 4.

identiﬁcation strongly increases the percentage of false negative co-classiﬁed pairs. As
an example, in a social web a group of colleagues might end up in diﬀerent modules, each
corresponding to their families, and, in this case, the network module corresponding to
their work unit is bound to become lost.

A recent link-density based approach to module ﬁnding,

fulﬁlling the above
requirements, is provided by the Clique Percolation Method (CPM) [19, 34]. In this
approach, the deﬁnition of the modules is based on k-cliques (complete subgraphs of
size k in which each node is connected to every other node). A k-clique is a sub-graph
with maximal possible link density, therefore it is a good starting point for deﬁning
modules. However, a method accepting only complete sub-graphs as modules would
be too restrictive. Therefore, k-cliques are “loosen up” in the following way. Two k-
cliques are said to be adjacent if they share k − 1 nodes (or in other words, if they diﬀer
only in a single node), and a module is deﬁned as the union of k-cliques that can be
reached from each other through a series of adjacent k-cliques. Such modules can be
best visualised with the help of a k-clique template (an object isomorphic to a complete
graph of k vertices). Such a template can be placed onto any k-clique in the graph,
and rolled to an adjacent k-clique by relocating one of its vertices and keeping its other
k − 1 vertices ﬁxed. Thus, the k-clique modules (k-clique communities) of a graph are
all those subgraphs that can be fully explored by rolling a k-clique template in them,
but cannot be left by this template, as illustrated in Fig.1. The algorithm used for the
implementation of this technique is very eﬃcient for most real networks, and provides
the full list of overlapping modules in a short amount of time [19, 35].

A common shortcoming of current module ﬁnding methods is that they ignore the
possible directionality of the links during the analysis of a network. The direction of a
single link in most real network signals either the direction of some kind of ﬂow (e.g. , the
ﬂow of information, energy), or the asymmetry of the relation between the nodes (e.g. ,

Directed network modules

4

a superior-inferior relation). Consequently, nodes possessing mostly incoming links are
expected to play a very diﬀerent role in the network (or within the modules they belong
to) from those possessing mostly outgoing links or from those having a similar amount
of both kinds of links. Therefore, as a ﬁrst attempt to take into consideration the
directionality of links, we propose a simple measure for the nodes within the modules
to characterise their roles in terms of the numbers of their incoming and outgoing links.
At the same time the consideration of directionality in modules raises the question
of whether a module searching algorithm that inherently takes into account the
directionality of links is more suitable for directed networks than the original undirected
algorithms. Along this idea, we deﬁne the notion of directed k-cliques (in which the
conﬁguration of the directed links has to meet certain criteria), and propose a restricted
version of CPM (denoted as CPMd), in which only directed k-cliques can be used for the
identiﬁcation of modules. We apply this method to several networks: ﬁrst, we examine
the percolation transition of the directed k-cliques in the Erd˝os-R´enyi (ER) random
graph [36], then move on to study the directed modular structure of four real-world
networks, including a word-association network, Google’s web-pages, an email network,
and the transcriptional regulatory graph of yeast. The identiﬁed directed modules are
veriﬁed with the help of additional information (protein functional annotations, web-
page names, and word usage frequencies) about the nodes.

2. Deﬁnitions

In undirected graphs a pair of nodes is either connected or not, whereas in a directed
graph the same pair, (A,B), can be connected in three ways: either by a “single link” as
(i) A→B and (ii) A←B or by a “double link” as (iii) A⇋B. Multiple links (i.e. , more
than one link between A and B in the same direction) and self-links (such as A→A)
are not allowed. In the following we ﬁrst deﬁne a simple measure for comparing nodes
within a module based on the directionality of their links, then introduce the concept
of directed k-cliques, the fundamental objects of our directed module ﬁnding approach.

2.1. Comparing the nodes according to their relative out-degree

A natural and simple approach to relate nodes in a module to each other by comparing
the number of their incoming and outgoing links connected to other members in the
module. For example, a node having only out-neighbours amongst the members of the
module can be viewed a “source” or a “top-node”, whereas a node with only incoming
links from these members is a “drain” or a “bottom-node”. Most nodes, however, fall
somewhere between these two extremes. To quantify this property, we introduce the
relative in-degree and relative out-degree of node i in module α as

Dα
i,in

≡

dα
i,in
i,in + dα
dα

i,out

,

(1a)

Directed network modules

Dα

i,out

≡

dα
i,out
i,in + dα
dα

i,out

,

i,in and dα

where dα
i,out denote the number of in-neighbours and out-neighbours amongst
i,out and Dα
the other nodes in the module, respectively. Obviously the values of both Dα
i,in
are in the range between 0 and 1, and the relation Dα
i,out = 1 holds. For weighted
networks, (1a,1b) can be replaced by the relative in-strength and relative out-strength
deﬁned as

i,in + Dα

5

(1b)

(2a)

(2b)

W α
i,in

≡

W α

i,out

≡

wα
i,in
i,in + wα
wα
i,out
i,in + wα

wα

wα

i,out

i,out

,

,

where wα
connections with other members in the module α.

i,out and wα

i,out denote the aggregated weight of out-going and incoming

2.2. Directed k-cliques and the directed Clique Percolation Method (CPMd)

In a complete sub-graph of size k the k(k − 1)/2 links can be directed in 3k(k−1)/2
ways. Since the undirected CPM treats these alternatives as identical, introducing link
directions allows a large variety of possible rules for deﬁning directed modules. A natural
concept, however, is to aim for “directed modules” preserving some kind of directedness
as a whole, rather than just being a collection of nodes connected by directed edges.

Therefore, we replace the k-cliques (the fundamental objects of the CPM) by
directed k-cliques, which are deﬁned as complete sub-graphs of size k in which an ordering
can be made such that between any pair of nodes there is a directed link pointing from
the node with the higher order towards the lower one. Since the presence of double links
usually leads to multiple possibilities to order the nodes in a way fulﬁlling the above
requirement, for simplicity we ﬁrst concentrate on directed k-cliques with no double
links. In this case, the higher the order of a node, the more out-neighbours it has in
the k-clique (see illustration in Fig.2a). Thus, the restricted out-degree of a node in the
k-clique (the number of its out-neighbours in the k-clique, ranging from 0 to k − 1) can
be assigned as its order. From this, it can be seen easily (for details see Appendix A)
that the condition for a k-clique with no double links to qualify as a directed k-clique
is equivalent to the following three conditions:

(i) Any directed link in the k-clique points from a node with a higher order (larger

restricted out-degree) to a node with a lower order.

(ii) The k-clique contains no directed loops (where a “directed loop” is a closed directed

path).

(iii) The restricted out-degree of each node in the k-clique is diﬀerent.

The overall directionality of such an object naturally follows the ordering of the nodes:
the node with highest order is the one which has only out-neighbours, and can be viewed

Directed network modules

6

b)

d)

?
s
k
n

l

i
l
 
e
b
u
o
d
 
s
n
a
t
n
o
c

i

O
N

S
E
Y

a)

2

1

c)

1 (or 2)

2 (or 1)

3

0

3

0

YES

NO

directed k−clique?

Figure 2. Groups of nodes forming a directed k-clique (a, c) and groups (b, d)
that do not. (a) A directed k-clique without double links. The index of each node
corresponds to its order (which is equivalent to number of its out-links) within the
directed k-clique. (b) A complete sub-graph without double links, but not accepted as
a directed k-clique, because it contains a directed loop. (c) A directed k-clique with a
double link. Note that the order of the nodes depends on which link is deleted from the
double link. (d) Double link in a complete sub-graph that is not a directed k clique.
It is not possible to remove a link from the double link in a way that all directed loops
disappear.

as the “source” or “top”-node of the k-clique, whereas the node with lowest order has
only incoming links from the others, and corresponds to a “drain” or “bottom” node.

None of the above three conditions holds in the presence of double links: directed
loops appear in the k-clique, the restricted out-degree of at least two nodes in the k-
clique becomes the same (see Appendix A), and we can ﬁnd directed links pointing in
the direction of increasing order. However, based on the ordering of the nodes, it is
always possible to eliminate the double links (by removing all links that point towards
higher order) from a directed k-clique in such a way that the remaining single links fulﬁl
all three conditions. See Fig.2c as an example.

The k-clique adjacency is deﬁned similarly to the undirected case: two directed
k-cliques are adjacent if they share k − 1 nodes. The directed k-clique modules (the
CPMd modules) arise as the union of directed k-cliques that can be reached from each
other through a series of k-clique adjacency. The k-clique template rolling picture can
be applied to illustrate the CPMd modules in the same fashion as in the undirected
case. The searching algorithm locating the CPMd modules is described in Appendix B.

Directed network modules

7

3. Percolation transition in the directed ER graph

The concept of (undirected) random graphs was introduced by Erd˝os and R´enyi [36] in
the 1950s in a simple model consisting of N nodes and connecting every pair of nodes
independently with the same probability p. Even though real networks diﬀer from this
simple model in many aspects, the ER graph remains still of great interest, since such a
graph can serve both as a test bed for checking all sorts of new ideas concerning complex
networks in general, and as a prototype of random graphs to which all other random
graphs can be compared.

Perhaps the most conspicuous early result on the ER graphs was related to the
percolation transition taking place at p = 1/N. The appearance of a giant component in
a network, which is also referred to as the percolating component, results in a dramatic
change in the overall topological features of the graph and has been in the centre of
interest for other networks as well. In a more general framework, one can also address
the question of k-clique percolation in the ER graph. Simple theoretical arguments as
well as numerical simulations [34] show that the critical linking probability of k-clique
= [(k − 1)N]−1/(k−1). In this section we carry out a similar analysis
percolation is pundir
concerning the percolation transition of directed k-cliques in the directed ER graph.

c

3.1. Derivation of the critical point

The directed equivalent of the ER graph consists of N nodes providing N(N − 1)
possible “places” for the directed links, and these are ﬁlled independently with uniform
probability p, producing on average M ≃ N(N − 1)p edges. (Note that in the original
undirected ER graph there are only N(N − 1)/2 possibilities to introduce an edge,
therefore, at linking probability p, there are only M ≃ N(N − 1)p/2 connections). The
critical linking probability pc is decreasing with increasing N, and converges to zero as
N → ∞. We restrict ourself to the large N limit, and evaluate pc to leading order only.
Let us suppose that we approach the critical point from below: the directed k-cliques do
not assemble yet into a giant module, we can ﬁnd only small, isolated modules, and the
system is dispersed. In terms of our k-clique template rolling picture this means that
when trying to explore the directed percolation clusters by rolling such a template on
them, we must stop the rolling after a few steps as we run out of unexplored adjacent
directed k-cliques.

One can estimate pc from the condition that at the critical point the average number
of yet unexplored directed k-cliques adjacent to the k-clique we have just reached
becomes equal to one. (This makes it possible to roll our template on and on for a
long time). Since we are going to evaluate pc to leading order only, we can neglect the
possibility to roll our k-clique template using double edges between the same nodes:
When reaching a directed k-clique, the minimal number of further edges that must be
present to enable the continuation of the template rolling is k − 1. The probability of
such a case is therefore proportional to pk−1. Even though it is not forbidden in the
ﬁrst place to continue using double edges as well, each double edge in the new directed

Directed network modules

8

k-clique we are going to roll onto multiplies the probability by p. In other words, the
probability to roll further to a k-clique containing one double edge is smaller by a factor
of p, the probability to roll further to a k-clique containing two double edges is smaller
by a factor of p2, etc.

During the branching process exploring a directed k-clique percolation cluster, at
the point when we are about to roll our template further on, we can choose the next
node for relocation in k −1 diﬀerent ways, which can then be relocated to approximately
N places. If there were no restrictions for the directioning of the links inside a directed
k-clique, then the k − 1 new links connecting the new node to this k − 1 shared nodes
could be directed in 2k−1 ways. However, the new directed k-clique has to fulﬁl the
three condition detailed in Section 2.2. as well, therefore the actual number of allowed
conﬁgurations is much smaller. The rank of the new node in the new directed k-clique
can be chosen in k ways: the k − 1 nodes shared with the previous k-clique are already
ordered, and we can “insert” the new node to any place in this hierarchy. By ﬁxing the
order of the new node we ﬁx the direction of the new links as well, therefore we can
allow only k diﬀerent conﬁguration for the directionality of these links. By combining
these factors together, the condition for reaching the critical point of the percolation
transition can be written as

pk−1
c N(k − 1)k = 1,

from which we gain

ptheor
c

= [Nk(k − 1)]

−1/(k−1) = pundir

/kk−1

c

(3)

(4)

for the theoretical prediction of the critical edge probability. Note that in the limiting
case of k = 2 (the directed edge percolation), the ptheor
/2 relation holds, which
is consistent with the 2:1 ratio for the number of links in the directed– and undirected
ER graph respectively.

= pundir
c

c

3.2. Numerical simulations

There are two plausible choices to measure the size of the largest directed k-clique
percolation cluster. The most natural one, which we denote by N ∗, is the number of
nodes belonging to this cluster. We can also deﬁne an order parameter associated with
this choice as the relative size of this cluster:

Φ = N ∗/N.

(5)
The other choice is the number N ∗ of directed k-cliques of the largest directed k-clique
percolation cluster. The associated order parameter is again the relative size of this
cluster:

Ψ = N ∗/N ,

(6)
where N denotes the total number of directed k-cliques in the graph. In Fig.3a-b we
display Φ and Ψ as functions of p/ptheor
, where the directed k-clique size is k = 4, and
the system size varies between N = 50 and N = 1600. The order parameter Φ converges

c

Directed network modules

to a step function for increasing system sizes, whereas Ψ converges to a limit function
(which is 0 for p/pc(k) < 1 and grows continuously to 1 above p/pc(k) = 1). We have
evaluated the transition point numerically as well, by computing the second moment of
the distribution of Ni values, excluding the largest one, N1 = N ∗:

9

(7)

χ = X
i>1

( Ni / N )2 .

Note that this quantity is analogous to the percolation susceptibility. Both below and
above the transition point the Ni (i > 1) values follow an exponential distribution, and
only at pc do they have a power-law distribution. Thus, χ is maximal at the numerical
transition point, pnum
. In Fig.3c we show χ calculated for the curves shown in Fig.3b,
as the function of p/ptheor
. In order to check the theoretical prediction for the critical
point obtained in (4) we have carried out a ﬁnite-size scaling analysis of the numerical
results. In Fig. 3d we show the ratio pnum
/ptheor
as a function of 1/N. Indeed, for large
c
systems, the above ratio converges to one roughly as 1 + cN −1/2.

c

c

c

4. Results for real-world graphs

In this section we study the directed modular structure of four real-world networks
ranging from a word association graph through Google’s web-pages to email and
transcription regulatory networks. When applied to real networks, the CPMd method
has two parameters: the k-clique size k, and (if the network is weighted) a weight
threshold w∗ (links weaker than w∗ are ignored). Changing the threshold is like changing
the resolution (as in a microscope) with which the modular structure is investigated:
by increasing w∗ the modules start to shrink and fall apart. A very similar eﬀect
increasing k makes the modules
can be observed by changing the value of k as well:
smaller and more isolated from each other, but at the same time, each module becomes
more cohesive. When we are interested in the modular structure around a particular
node, it is advisable to scan through some ranges of k and w∗, and monitor how the
obtained modules change. Meanwhile, when analysing the modular structure of the
entire network, the criterion used to ﬁx these parameters is based on ﬁnding a modular
structure as highly structured as possible [19]. This can be achieved by tuning the
parameters just below the critical point of the percolation transition. In this way we
ensure that we ﬁnd as many modules as possible, without the negative eﬀect of having
a giant module that would smear out the details of the modular structure by merging
(and making invisible) many smaller modules. The technical details of the extraction
of the directed k-clique modules are described in Appendix B.

4.1. Word association graph

We examined the directed network obtained from the South Florida Free Association
norms list (containing 10617 nodes and 63788 links), where the weight of a directed link
from one word to another indicates the frequency that the people in the survey associated

Directed network modules

10

k = 4

k = 4

(a)

N = 25
50
100
200
400
800
1600

(c)

N = 25
50
100
200
400
800
1600

)
 
p
 
(
 

Φ

 1

 0.8

 0.6

 0.4

 0.2

 0

 0.4

 0.3

 0.1

 0

)
 
p
 
(
 
χ

 0.2

k = 4

(b)

N = 50
100
200
400
800
1600

 1

 0.8

 0.6

 0.4

 0.2

 0

 1.8
 1.8

 1.7
 1.7

 1.6
 1.6

 1.5
 1.5

 1.4
 1.4

 1.3
 1.3

 1.2
 1.2

 1.1
 1.1

 1
 1

)
 
p
 
(
 

Ψ

r
r
o
o
e
e
h
h
t
t

m
m
u
u
n
n

C
C
p
p
 
 
/
/
 
 

C
C
p
p

num

pC

(d)
(d)

k = 3
4
5
6

1+cN-α

 fit:  α = 0.49(2)
0.49(1)
0.48(2)
0.45(2)

 0.6

 0.8

 1

 1.4

 1.6

 1.8

 0.6

 0.8

 1

 1.4

 1.6

 1.8

 1.2
theor

p / pC

 1.2
theor

p / pC

 0.6

 0.8

 1

 1.4

 1.6

 1.8

 1e-04
 1e-04

 0.01
 0.01

 0.001
 0.001
1 / N
1 / N

 1.2
theor

p / pC

Figure 3. Numerical results for directed k-clique percolation in ER-graphs. In each
sub-ﬁgure, points show an average over 4 to 100 simulations depending on system size.
a) The order parameter Φ (the number of nodes in the largest percolation cluster
divided by N ) as a function of p/ptheor
was obtained from Eq. (4). b)
The order parameter Ψ (the number of directed k-cliques in the largest percolation
cluster divided by the total number of directed k-cliques) as a function of p/ptheor
.
c
c) The numerically determined value for the critical linking probability, pnum
, deﬁned
as the average location of the maximum of χ(p), playing the role of the normalised
percolation susceptibility (see Eq. 7). d) Veriﬁcation of the theoretical prediction for
the critical point. The pnum

ratio converges to one for large N .

, where ptheor

/ptheor
c

c

c

c

c

the end point of the link with its start point [37]. For illustration in Fig.4. we show the
(colour coded) modules of the word “GOLD” obtained at k = 4 and w∗ = 0.023, with the
overlaps emphasised in red. According to its diﬀerent meanings, this word participates
in four, strongly internally connected modules. Beside the node labels we display the
relative out-strength of the nodes in the modules using (2b). Apparently, nodes with
a special/particular meaning (e.g. “SAPHIRE”) tend to get high relative out-strength
whereas commonly used words with general meaning (e.g. “MONEY”) have low relative
out-strength. Thus, it seems that the overall directionality of the modules is from special
words towards more general words. To make this observation more quantitative, we
measured the number of hits obtained for the diﬀerent words appearing in the network

Directed network modules

11

PRESTIGE (1.0)

SUCCESS (0.46)

SUCCEED (1.0)

BRONZE
(0.95)

, (1.0)

MEDAL (0.54)

FAME
(0.89)

OLYMPICS (0.79)

FORTUNE
(0.56)

BRASS
(0.87)

RICH (0.31)

PROSPER (0.84)

WEALTH (0.60)

POVERTY (1.0)

TARNISH
(0.93)

METAL (0.22.)

GOLD

,
(0.0)
,
(0.29)
, (0.15)
(0.73)

POOR (0.28)

LUXURY (0.91)

MANSION (1.0)

SILVER (0.39)

TREASURE (1.0)

MONEY
(0.0)

,(0.06)

LIMOUSINE (1.0)

COPPER
(0.63)

BRACELET

(0.80)

VALUABLE (0.80)

DIAMOND (0.25)

NECKLACE
(0.55)

JEWELRY
(0.43)

EARRING
(0.87)

PEARL
(0.81)

EXPENSIVE (0.14)

PRICELESS (0.93)

Ω

RING (0.13)

JEWEL (0.67)

STONE (0.0)

1

0.8
0.6

0.4
0.2
0

SAPPHIRE
(1.0)

GEM
(0.71)

RUBY (0.60)

EMERALD (0.86)

Figure 4. The directed modules of the word “GOLD” at k = 4, w∗ = 0.023 in the
word association network [37]. The modules are colour coded and the overlaps between
the modules are displayed in red. The size of each node is proportional to the number of
modules it participates in (some of them are not shown in this ﬁgure). Beside the name
of the nodes we display their W α
i,out/(wα
i,out) values as well. Nodes with
high W (e.g. “SAPPHIRE”) usually correspond to special, rarely used words, whereas
nodes with low relative out-degree (e.g. “MONEY”) are very common.

i,out = wα

i,in + wα

using the search engines of Google. In Fig.5. we show the scatter plot of the number of
hits as a function of the relative out-strength of the members of the modules obtained
at the optimal k = 4, w∗ = 0.016 parameters. The decreasing tendency of the number
of hits with increasing W α
i,out signals that words with higher relative out-strength (i.e. ,
having mainly out-neighbours) are usually less frequently used than words with lower
relative out-strength (i.e. , having mainly in-neighbours).

4.2. Google’s web-pages

In addition to being a prominent means of information retrieval, Google provides its
own documents as well: usage notes, feature and product descriptions, etc. . The map
of hyper-links among Google’s own web-pages oﬀers a unique insight into how one of the
major search portals arranges online content and thereby helps and guides our browsing.
Excluding dynamic content and catalogues, we downloaded with our robot [38] 15, 763
web-pages (nodes) and 171, 206 directed links among them. For the current analysis,
we excluded international pages and nodes farther than 3 steps from the start node,
http://www.google.com, and obtained a graph with 946 nodes and 1, 817 links. Fig. 6.
shows three of the many overlapping directed modules identiﬁed by the CPMd in this
network at k = 6. Apparently each of the identiﬁed overlapping modules in Fig. 6 is a
group of internally densely connected nodes organised around a well-deﬁned topic (jobs,
accounts and enterprise solutions).

An interesting feature of Google’s directed modules is that they share their in-hubs,

Directed network modules

12

 1e+10

 1e+09

s
t
i
h

 
f
o

 
r
e
b
m
u
n

 1e+08

 1e+07

 1e+06

 1e+05

 0

 0.2

 0.4

 0.6

 0.8

 1

α
out
i,

W

Figure 5. The number of hits obtained from Google for module members as a function
of their relative out-strength in the word association network. The number of hits is
decreasing with increasing W α
i,out, therefore, frequently used words are likely to obtain
a low relative out-strength.

enterprise

enterprise/whygoogle.html (0.50)

enterprise/maps (0.83)

enterprise/government (1.0)

addurl (0.83)

enterprise/news_events.html (0.43)

enterprise/support.html (0.43)

enterprise/apps (0.91)

enterprise (0.52)

psearch (0.17)

privacy.html (0.17)

enterprise/customers.html (0.43)

enterprise/gsa (0.43)

enterprise/gsa/onebox.html (0.64)

enterprise/gep (0.43)

services/websearch.html (1.0)

enterprise/mini (0.39)

about.html

,
(0.33) (0.06)

sitemap.html 

,
(1.0) (0.83)

accounts/Login (0.83)

terms_of_service.html (0.18)

jobs

+

jobs (0.50)

accounts/NewAccount (0.67)

newsalerts (0.56)

jobs/working.html (0.50)

jobs/international.html (0.67)

help/faq_accounts.html (0.54)

(https) accounts (0.60)

alerts (0.80)

accounts

accounts (0.89)

accounts/ForgotPasswd (0.67)

accounts/ServiceLogin (0.83.)

www.google.com (0.0),

,
(0.08)
(0.0)

+

Figure 6. Three of the overlapping directed modules identiﬁed by CPMd in the
directed net of Google’s static pages at k = 6. These modules overlap with several
further ones not shown in the ﬁgure; the size of each node is proportional to the number
of its modules. The nodes and links of the three modules are coloured brown, green
and blue, while their overlaps, i.e. , nodes contained by more than one of these three
modules, are red. The node marked with a + sign at centre is the starting page,
http://www.google.com, and the names of the other nodes are their URLs without
this preﬁx. The D values of the module members are marked beside the node labels.
Observe that each module contains a number of nodes with many incoming links (a
“core”), some of which are in the overlaps. See text for further details and Fig. 9 for a
detailed analysis of hubs and overlaps.

Directed network modules

13

Figure 7. All directed modules in a network of student emails at the University of
Kiel during a period of 112 days (data from Ref. [39]). On the left (a) only the graph
of internal emails (between students of the university) is analysed, while on the right
(b) internal and external messages are both included. Circles and boxes show internal
and external email addresses, respectively, and the size of a node is proportional to the
number of its modules. The largest nodes, i.e. , those with the highest membership
number, have signiﬁcantly more outgoing than incoming links, meaning that in this
email network modules share their out-hubs. See also Fig.9. The optimal k-clique size
parameter values are k = 3 (a) and k = 4 (b).

but not their out-hubs. (By “in-hub” we mean nodes with outstanding in-degree, whereas
“out-hub” stands for nodes with outstanding out-degree). This structure enhances
browsing eﬃciency. Having visited a particular, “outlying” page of a module, one can
quickly return to a node in the core of the same module. Then, due to the strong
overlaps among the cores, one can quickly jump over to a new topic, i.e. , the web-pages
of another module.
In summary, our ability to browse eﬃciently and hierarchically
Google’s web-pages is enhanced by the facts that modules overlap via their in-hubs.

4.3. Email network

A very common type of directed social networks is the one deﬁned by messages and
information ﬂow (directed links) among individuals (nodes). To “measure” such a social
network, Ebel and Bornholdt [39] processed the directed network deﬁned by the emails
of students at the University of Kiel during a period of 112 days. We analysed both
the entire data set and its subset containing only emails between internal addresses
(students). The full network contains 57, 158 nodes and 103, 701 links, while the 1, 267
internal addresses (nodes) are connected by 1, 659 links. Fig. 7 shows the directed
modules in these two networks. Observe that even among the relatively small number of
internal emails modules, overlaps do appear, e.g. , node 5886 at the centre. In the full e-
mail data set, external addresses have both the highest degrees (number of connections)

Directed network modules

14

and the largest numbers of modules they participate in. In contrast to e.g. the Google’s
web-pages, nodes with the largest out-degrees participate in a high number of modules.

4.4. The transcriptional regulatory network in yeast

In a cell the transcription of a gene is inﬂuenced (regulated) by one or more proteins
called transcription factors. This regulatory relationship is most often represented as
a directed link pointing from the regulating protein (source node) to the protein of
the regulated gene (target node). Recent experimental and computational techniques
[40, 41] have enabled the genome-wide mapping of transcription regulatory relationships
in the yeast, S. cerevisiae.

In Fig.8. we display the obtained directed modules for k = 3. As an example,
for some of the modules the most signiﬁcant common functions of their participating
proteins have been identiﬁed from the Gene Ontology protein function annotation
database [42] with the search tool GO TermFinder [43]. The list of regulatory
interactions was obtained from Ref. [41]. Most protein modules in Fig.8 are arranged
around a small number of large out-hubs, the major transcription factors (TFs), each
of which regulates a large portion of all target genes in the module. Overlaps between
the modules occur either through the TFs, e.g. , via the nodes Met4 and Gcn4 in the
bottom left part of the ﬁgure, or via large groups of regulated (target) genes, see, e.g. ,
the red nodes at the “interface” between the yellow and brown modules in the upper
part of the ﬁgure. Hence, from the point of view of directed modules, the transcription
regulation network is organised in a similar way to the e-mail network, and an opposite
way to Google’s web-pages (and the word association network).

4.5. Comparison between CPMd and CPM

For each studied network, by ignoring the directionality of the links, we located the
In case of the word association network, where links are
CPM communities as well.
weighted as well, the weight of the undirected counterpart of a double link was deﬁned
as the sum of the corresponding two weights. Due to this diﬀerence in the weights as
well as in the deﬁnition of modules, the optimal weight threshold was slightly diﬀerent
in the CPM approach.

Surprisingly, in spite of the restrictions of the CPMd compared to CPM, (and in
case of the word association network, the diﬀerence in link weights), about 70% of the
modules were the same in the two approaches for the word association network and
Google’s web pages, whereas this ratio turned out to be even higher (around 90%)
for the email network and the transcription regulatory graph. Furthermore, for the
rest of the directed modules one could ﬁnd a relatively similar undirected module in
most of the cases. This shows that the original CPM approach to the identiﬁcation of
modules is quite robust, our restrictions introduced in the CPMd leave the majority of
the undirected modules intact.

Directed network modules

15

Ynl024c−a

Nca2
Ypr171w

Prm6
Prm3
Prm1
Prm4
Ycl056c
Ybl060w
Act1

Prm2

Srl3

Bud14

Sum1

Bud8

Cst13 Cts1

Fus1

Fus2
Fus3

Cst6
Yju2

Kar4

Pep1

Tfb1

Ssf2

Ti{aau}p2

Erg24 Fig1

Hym1

Hal1

Ade1

Bar1
Gfa1

Inp52

Gyp8

Rdi1

Sec2 Sch9

Afr1

Gas5

Bud4

Yol031c

Ics2

Hsp150

Swi5

Ste12

Fkh2

Dig1

Tec1
Mid2

Svs1

Fkh1
Gic2

Rnr1

Yjl160c

Gln1

Hdr1

Idi1
Spc24 Gas3

Jsn1

Spb1

Rsp5

Ynl176c

Mnt2

Ymr184w
Dse1 Ybr139w

Hos3
Adh4
Scw11

Vti1

Cik1

Dbf2
Sso2
Cup9 Bdf1
Ste2
Kip2
Msg5

Yhp1

Tk{uuu}p
Ppn1

Ybr077c

Din7

Gzf3 Gat1

Sst2
Prp39
Gpa1

Skt5 Chs1 Msb2

Pcl2

Dcr1

Tos2 Crh1

Cla4

Orc2

Mnn5

Fks3

Ubc4

Yel001c

Yhr149c

Ume6

Gin4
Mpt5

Spt21 Cln1
Tos3
Yjr054w Ypl267w
Yer010c

Gas1
Rps0b

Hsf1

Bud9

Btn2

Ybr071w

Nud1
Yox1

Atp1

Lap4

Ylr047c

Ybr070c

Msh3

Ndi1

Rpn4

Htb1

Utr2

Scw10

Sim1

Clb2

Cwp1
Yhr150w Rax2 Gat2
Gic1

Tk{uuu}d

Srl1

Psa1

Swe1

Kin3
Ygr251w

Rps3

Rho5

Pcl1

Mcm1
Ygr250c

Ecm33
Abf1

Snr3

Ho

Hta1

Lsm4

Uth1 Kti12

Mga1 Gac1

Swi6

Mbp1

Swi4

Cwp2
Hsl1 Rho3

Ndd1

Rpi1

Sut1

Cin5

Pet9
Age1
Ybl029c−a
Ydr524w−a
Spo20

Phd1
Sok2
Skn7

Ykl063c

Zms1
Kel2 Dfg16

Ypr063c

Msn2

Ypl230w

Hap4

Ykl096c−b

Hor7

Isu2

Msn4

Stb1

Och1

Clb6

Hcm1

Rox1

Nce103
Pho2

Idh1

Ypr013c

Ylr023c

Hrr25

Ecm17

Ynr014w

Cdc39
Rpn2

Ost1 Pup1

Pet123

Pre3

Fyv11

Iml1

Ypl206c

Hst4

Reb1

Cbf1

Sfl1

Cys3

Gal4

Mnn1
Cap1

Lac1

Pdr16

Ybl029w
Ymr279c Sna2
Nrg2

Nrg1
Met6

Met4

Pdr1

Rtg3

Str3

Idp1

Ydr524c−b
Yol114c

Skm1

Cox9

Cor1

Tir1

Yap7
Ybl044w

Ygr052w

Yor246c

Yor227w
Hap1

Hem13

Mrs4

Arg1

Yap1

Spt23

Aft2

Met2

Ylr356w

Ilv5

Ilv3

Bap2

Rcs1

Ent2

Arg3
Gcn4
Gln3

Yhr029c

Mch4

Uga3

His4
Rri2

Arg4

Erg26

Yml100w−a

Hmx1

Fth1

Lsm5

Ftr1

Atx1
Ypl137c

Ypr151c
Ccc2

Mmt1

Ccp1

Gpt2
Mdh1

Ctt1

Cue4

Tsl1

Pdc6

Rpt1
Bmh1
Epl1

Pho91

Rvb1

Leu4

Leu3

Glt1

Asn1

amino acid
metabolism and
N compound biosynthesis

N compound
metabolism

Isu1 Prb1 Lyp1

transport/homeostasis of
iron and other metal ions

Gal80

Gal1

Yml119w

Gal10

galactose
metabolism

Yor138c
Ies5 Ynl277w−a
sulfur
amino acid
metabolism

Figure 8. The directed modules of the web of transcription regulatory interactions in
baker’s yeast (k = 3). Each node shows one gene (and its protein) and a directed link
stands for a transcription regulatory interaction between a protein and the target gene.
Modules (communities) are coloured and overlaps are red. The overlapping nodes are
mostly out-hubs. Group functions have been identiﬁed by GO TermFinder [43].

4.6. Classiﬁcation of real-world networks: modules are connected by in-hubs or
out-hubs

An important aspect of network motifs (overrepresented small sub-graphs with a given
structure) is that complex networks can be classiﬁed based on their motif signiﬁcance
proﬁle (a pattern of motif usage) [11]. In a somewhat similar approach, here we classify
the four investigated real-world webs into two major groups based on the overlaps of
their directed modules.

Interestingly, the way that the out-hubs and in-hubs of the network are arranged
within its directed modules is diﬀerent among the various types of networks. To directly
compare the studied networks from this aspect, in Fig.9. we show the average number of
modules of the nodes as a function of their relative out-degree Di,out ≡ di,out/(di,in+di,out)
ratio. Apparently, the modules in the word association network and Google’s web-pages
are connected by in-hubs: nodes contained by a large number of modules have a small
Di,out. In contrast, in the email network and the transcription regulatory graph of yeast
the overlaps are more likely to contain out-hubs than in-hubs.

The plausible reason for the observed diﬀerence between the investigated networks
is that overlaps contain hubs with increased likelihood in the ﬁrst place, and the two

Directed network modules

16

e
d
o
n
 
a
 
f
o
 
s
e
l
u
d
o
m

 
f
o
 
#
 
.
g
v
a

 9

 8

 7

 6

 5

 4

 3

 2

 1

Google’s own pages
word associations
email network
yeast transc. reg.

 3

 2

 1

 0

 0.5

 1

 0

 0.2

 0.8

 1

 0.6
 0.4
dout / ( din + dout )

Figure 9. The average membership of a node vs.
its dout/(din + dout) ratio. This
function is a growing (decreasing) one, if the modules are more likely to overlap via
in-hubs (out-hubs).

kinds of hubs occur in the networks with diﬀerent probabilities. In the word-association
network and Google’s web pages in-hubs are more frequent: the number of words we
associate to a cue word and the number of hyper-links that appear on a web page is
more or less constant, however a word with a general meaning or an important (general)
web page can appear as the target for many links. In contrast, we are more likely to ﬁnd
out-hubs than in-hubs in the email network and the transcription regulatory graph. The
time spent on sending an email does not depend on the number of recipients, whereas
reading a large number of incoming emails can take a lot of time, therefore being an
in-hub in the email network is disadvantageous and in-hubs are rare. Similarly, in
case of the transcription regulatory graph the number of transcription factors that can
regulate a given protein is more or less constant, whereas a single transcription factor
can regulate many other proteins in parallel, therefore, out-hubs are much more frequent
than in-hubs.

5. Summary and conclusions

We examined the directionality of network modules. To compare and order the nodes
in a module, we introduced the relative out-degree, measuring the relative weight of
the out-links of a member to other nodes in the module. We developed a speciﬁc
module ﬁnding algorithm for directed networks as well, based on the k-clique percolation
approach. Even though the CPM can be extended to any kind of directed k-cliques
(containing an arbitrary set of directed links), here we concentrated on the most plausible
choice which allows a straightforward theoretical and numerical analysis. Following
a simple branching procedure, we have derived the critical point of the directed k-

Directed network modules

17

clique percolation in the ER graph in the large N limit. The theoretical prediction was
justiﬁed by numerical simulations. We have also studied the directed modular structure
of real-world networks including a word association graph, Google’s web pages, an e-
mail network and the transcription regulatory network of yeast. The obtained modules
were validated by additional information (annotations) for the members. The nodes
contained in the overlaps between the modules enabled us to classify the examined
networks in two major groups: the modules in the word association graph and Google’s
web pages are likely to be connected by in-hubs, whereas the overlaps in the e-mail
network and the transcription regulatory network are more likely to contain out-hubs.

The authors thank the partial support of the Hungarian National Science Fund (OTKA
T034995, F047203, PD048422, K60456) and the National Research and Technological
Oﬃce (NKTH, CellCom RET).

Acknowledgments

Appendix A

In this appendix we show that for k-cliques with no double links, the following three
statements are equivalent:

(i) Any directed link in the k-clique points from a node with a higher order (larger

restricted out-degree) to a node with a lower order.

(ii) The k-clique contains no directed loops.

(iii) The restricted out-degree of each node in the k-clique is diﬀerent.

(The restricted out-degree of a node is equal to the number of its out-neighbours in the
k-clique).

(ii)→(iii) : If loops are absent, then all the members have diﬀerent restricted out-degrees.
If there are no loops, then there must be a node in the k-clique having all in-neighbours
amongst the other members, since otherwise we could hop from node to node following
a directed link inside the k-clique forever, (which would mean that it does contain at
least one loop). If we reversed the direction of all links inside the k-clique we would
not induce any loops, and therefore, this ”reversed” conﬁguration would have a member
with only incoming links from the others as well. From this it follows that there must
be also a node in the k-clique with only out links towards the other nodes. By removing
this node we obtain a (k − 1)-clique in which directed loops are absent. Similarly to the
previous case, this (k − 1)-clique must have a node with only out-neighbours amongst
the other members of the (k − 1)-clique. By removing this node as well, we arrive at a
(k − 2)-clique containing no loops. And so on, by subsequently removing the node with
only out-neighbours at each step we iterate over all nodes, and obviously the restricted
out-degree of the removed node is decreased by one at each step, hence all nodes have

Directed network modules

18

diﬀerent number of out-links inside the k-clique.

(ii)→(i) : If loops are absent, then the links point from higher restricted out-degrees
values towards lower ones.
The above process showing (ii)→(iii) also reveals that the links inside a k-clique with
no loops are always pointing from a node with a higher restricted out-degree towards a
node with less out-links inside the k-clique.

(iii)→(ii) : If all nodes have diﬀerent number of out-neighbours inside the k-clique, then
directed loops are absent.
The possible number of out-neighbours a node can have inside a k-clique falls in a range
between 0 and k − 1, therefore, if all nodes have diﬀerent number of out-neighbours,
then all of these possible values must actually appear in the k-clique. Since double links
are absent, the node with k − 1 out-links cannot have any incoming links from the other
members, therefore, it is surely not part of any directed loops inside the k-clique. The
node with k − 2 out links has only a single incoming link, starting at the node with only
out-links. Therefore, this node cannot be part of any directed loops either. Similarly,
the node with k − 3 out links has two incoming links, both starting at nodes that have
been already shown to be excluded from any directed loops (the nodes with k − 1 and
k − 2 out-neighbours, respectively). Thus, the node with k − 3 out neighbours amongst
the other members ”inherits” this property (to be excluded from directed loops inside
the k-clique) as well. And so on, by subsequently scanning the nodes in decreasing or-
der of their restricted out-degrees, at each step all the incoming links to the node under
investigation come from previously examined members that were shown to be excluded
from loops, therefore, the investigated node cannot be part of any loops either.

(i)→(iii) : If each directed link points from a node with a higher restricted out-degree to
a node with a lower one, then the restricted out-degree of each node in the k-clique is
diﬀerent.
This statement is almost trivial, since if any pair of nodes had the same restricted out-
degree, then the link connecting them would point in the direction of constant restricted
out-degree.

For k-cliques with double links none of the three statement can hold. The
presence of loops is trivial: a double link is already equivalent of a closed directed
path. Furthermore, both constituents of a double link cannot point in the direction of
decreasing order simultaneously. Therefore, we only have to prove that (iii) cannot be
true either, i.e. for k-cliques with double links their members cannot have all diﬀerent
numbers of out-neighbours amongst the other nodes in the k-clique. The total number

Directed network modules

of links, m, inside a k-clique can be written as

m =

qnq,

k−1

X
q=0

19

(8)

where q runs over the possible number of out-neighbours, and nq is the number of mem-
bers with the given restricted out-degree. When all the members have diﬀerent number
of out-links, nq = 1 for all possible q values, and thus, m = k(k − 1)/2, which is exactly
the number of links in a k-clique with no double links. However, in presence of dou-
ble links m > k(k − 1)/2, therefore, at least one of the nq values in (8) must be larger
than one, meaning that there are nodes in the k-clique with equal restricted out-degrees.

Appendix B

In this section we brieﬂy describe our algorithm for extracting the CPMd modules in
networks. Since any subgraph of a directed k-clique is a directed k-clique as well, (with
a smaller k value), an eﬃcient way to extract the directed k-clique modules of a network
is to ﬁrst ﬁnd all directed cliques ﬁrst: A directed clique is a maximal directed k-clique,
i.e. it is not part of an even larger directed k-clique. A CPMd module of a given k is
equivalent of the union of directed cliques of size larger or equal to k, which can be
reached from each other through overlaps of size larger or equal to k − 1.
We extracted the directed cliques using the following iteration

(i) ﬁnd all directed cliques of a given node,

(ii) remove the node and its links from the network.

To ﬁnd the directed cliques of a given node, A, we use a back-tracing algorithm based
on the hierarchical properties of the directed cliques. At the initial step we construct
two containers, one for the in-neighbours and one for the out-neighbours of A. The
hierarchy of the system at this point is illustrated in Fig.10b: the in-neighbours are
at the top, the out-neighbours are at the bottom, and the node A itself is in-between
them. Next we take a node from the in-neighbours (or the out-neighbours), this node
and A form a directed 2-clique. We place the node above (or below) A, and ﬁlter the
remaining nodes in the containers so that for both nodes in the newly formed 2-clique
it is true that

• the members in the containers above the node in the hierarchy are all in-neighbours

• the members in the containers below the node in the hierarchy are all out-neighbours

of node A,

of node A.

If necessary, we may introduce a new container as well, e.g. , in Fig.10c, by picking
node B from the top container, the node E which is an out-neighbour of B and an
in-neighbour of A is placed in a container in-between B and A in the hierarchy. This

Directed network modules

20

way when picking the next node from any of the containers, its rank in the hierarchy
inside the forming directed clique coincides with the rank of its container with respect to
the already selected nodes. For example, when picking node C in the example shown in
Fig.10, it is placed above node B. By recursively picking new nodes from the containers,
ﬁltering the containers and introducing new containers we build up a directed clique.
(The extraction of the clique ends when all containers become empty).

a)

C

D

B

E

A

C

B

F

b)

A

H

G

c)

B

A

D

E

F

C

d)

C

B

A

E

E

H

G

H

G

G

Figure 10. Illustration of the directed clique search. a) The neighbourhood of node A
in a hypothetical directed network. b) The initial state of the directed clique extraction
algorithm: the in-neighbours of A are above A, whereas its out-neighbours are below
it. c) Node B is picked from the in-neighbours and is placed above A. Nodes D and F
are not neighbours of B, therefore they are removed from the containers. Furthermore,
a new container is introduced holding node E, which is in-between B and A in the
hierarchy. d) Node C is picked from the top container and is placed above B, node H
is removed from the bottom container as it is not linked to C.

References

[1] Barab´asi A-L and Albert R 2002 Rev. Mod. Phys. 74, 47
[2] Dorogovtsev S N and Mendes J F F, Evolution of Networks: From Biological Nets to the Internet

and WWW (Oxford University Press, 2003).
[3] Watts D J and Strogatz S H 1998 Nature 393 440
[4] Faloutsos M, Faloutsos P and Faloutsos C 1999 Comput. Commun. Rev. 29 251
[5] Barab´asi A-L and Albert R 1999 Science 286 509
[6] Boccaletti Set al 2006 Physics Reports 424 175
[7] Jeong H, Tombor B, Albert R, Oltvai Z N and Barab´asi A-L 2000 Nature 407 651
[8] Ravasz E, Somera A L, Mongru D A, Oltvai Z N and Barab´asi A-L 2002 Science 297 1551
[9] Han J Jet al 2004 Nature 430 88
[10] Milo R et al 2002 Science 298 824
[11] Milo R et al 2004 Science 303 1538
[12] Guimer´a R, Mossa S, Turtschi A and Amaral L A N 2005 Proc. Natl. Acad. Sci. USA 102, 7794
[13] Mangan S and Alon U 2003 Proc. Natl. Acad. Sci. USA 100, 11980
[14] Scott J Social Network Analysis: A Handbook, 2nd ed. (Sage Publications, London, 2000).

Directed network modules

21

[15] Shiﬀrin R M and B¨orner K 2004 Proc. Natl. Acad. Sci. USA 101 5183 Suppl. 1
[16] Everitt B S Cluster Analysis, 3th ed. (Edward Arnold, London, 1993).
[17] Knudsen S A Guide to Analysis of DNA Microarray Data, 2nd ed. (Wiley-Liss, 2004).
[18] Newman M E J 2004 Eur. Phys. J. B, 38, 321
[19] Palla G, Der´enyi I, Farkas I and Vicsek T 2005 Nature 435 814
[20] Watts D J, Dodds P S and Newman M E J 2002 Science 296, 1302
[21] Palla G, Barab´asi A-L and Vicsek T 2007 To appear in Nature
[22] Spirin V and Mirny L A 2003 Proc. Natl. Acad. Sci. U S A 100 12123
[23] Onnela J-P, Chakraborti A, Kaski K, Kert´esz J and Kanto A 2003 Phys. Rev. E 68, 056110
[24] Krogan N J et al 2006 Nature 440, 637
[25] Antonov A V and Mewes H W 2006 J Mol Biol. 363(1), 289
[26] Song C, Havlin S and Makse H A 2005 Nature 433 392
[27] Pollner P, Palla G, and Vicsek T 2006 Europhys. Lett. 73, 478
[28] Kosub S Local density. Network Analysis, LNCS 3418 (Eds Brandes, U. & Erlebach, T.) pp.

112–142 (Springer-Verlag, Berlin Heidelberg, 2005).

[29] Girvan M and Newman M E J 2002 Proc. Natl. Acad. Sci. USA 99, 7821
[30] Newman M E J 2006 Proc. Natl. Acad. Sci. USA 103 8577
[31] Rives A W and Galitski T 2003 Proc. Natl. Acad. Sci. U S A 100 1128
[32] Guldener U et al 2005 Nucleic Acids Res. 33 D364
[33] Open Directory Project, http://www.dmoz.org
[34] Der´enyi I, Palla G and Vicsek T 2005 Phys. Rev. Lett. 94 160202
[35] Adamcsek B, Palla G, Farkas I J, Der´enyi I, and Vicsek T 2006 Bioinformatics 22 1021
[36] Erd˝os P and R´enyi A 1960 Publ. of the Math. Inst. of the Hung. Acad. of Sci. 5 17
[37] Nelson D L, McEvoy C L and Schreiber T A The University of South Florida word association,

rhyme, and word fragment norms. http://www.usf.edu/FreeAssociation/.

[38] The robot together with the directed graph of Google’s web-pages can be downloaded from

http://www.CFinder.org.

[39] Ebel H, Mielsch L-I and Bornholdt S 2002 Phys. Rev. E 66 035103
[40] Harbison C T et al 2004 Nature 431 99
[41] Blais A and Dynlacht B D 2005 Genes Dev 19, 1499
[42] The Gene Ontology Consortium 2000 Nature Genetics 25 25
[43] Boyle E I et al 2004 Bioinformatics 20 3710

