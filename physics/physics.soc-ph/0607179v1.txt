6
0
0
2
 
l
u
J
 
0
2
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
9
7
1
7
0
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Dynamical clustering methods to ﬁnd community structures

S. Boccaletti,1 M. Ivanchenko,2 V. Latora,3 A. Pluchino,3 and A. Rapisarda3
1CNR- Istituto dei Sistemi Complessi, Via Madonna del Piano, 10, 50019 Sesto Fiorentino (FI), Italy
2Department of Radiophysics, Nizhny Novgorod University, 23, Gagarin Avenue, 603600 Nizhny Novgorod, Russia
3Dipartimento di Fisica e Astronomia, Universit`a di Catania, and
INFN Sezione di Catania, Via S. Soﬁa, 64, 95123 Catania, Italy
(Dated: February 20, 2014)

We introduce an eﬃcient method for the detection and identiﬁcation of community structures
in complex networks, based on the cluster de-synchronization properties of phase oscillators. The
performance of the algorithm is tested on computer generated and real-world networks whose com-
munity structure is already known or has been studied by means of other methods. The algorithm
attains a high level of precision, especially when the communities are very mixed and hardly de-
tectable by the other methods, with a computational eﬀort O(KN ) on a generic graph with N nodes
and K links.

PACS numbers: 89.75.-k, 05.45.Xt, 87.18.Sn

Finding community structures in a complex network
is a crucial issue in the analysis and understanding of
real-world networked systems [1]. Community structures
(modules or clusters) are tightly connected subgraphs of
a network, i.e. subsets of nodes within which the network
connections are dense, and between which connections are
sparser. Nodes, indeed, belonging to such tight-knit com-
munities, constitute units that separately contribute to
the collective functioning of the network. For instance,
subgroups in social networks often have their own norms,
orientations and subcultures, sometimes running counter
to the oﬃcial culture, and are the most important source
of a person’s identity. Analogously, the presence of sub-
groups in biological and technological networks may hin-
der important information on the functioning of the sys-
tem, and can be relevant to understand the growth mech-
anisms and the processes running on top such networks.

The detection of community structures is formally equiv-
alent to the classical graph partitioning problem in com-
puter science, that ﬁnds many practical applications such
as load balancing in parallel computation, circuit parti-
tioning and telephone network design, and is known to be
a NP-complete problem [2]. Therefore, although commu-
nity detection in large graphs is potentially very relevant
and useful, so far this trial has been seriously hampered
by the large associated computational demand. To over-
come this limitation, a series of eﬃcient heuristic meth-
ods has been proposed over the years. Examples include
methods based on spectral analysis [3], or the hierarchi-
cal clustering methods developed in the context of social
networks analysis [4]. More recently, Girvan and New-
man (GN) have proposed an algorithm which works quite
well for general cases [5]. The GN is an iterative divi-
sive method based in ﬁnding and removing progressively
the edges with the largest betweenness, until the network
breaks up into components. The betweenness bij of an
edge connecting nodes i and j is deﬁned as the number of
shortest paths between pairs of nodes that run through

that edge [5]. As the few edges lying between communi-
ties are expected to be those with the highest between-
ness, by removing them recursively a separation of the
network into its communities can be found. Therefore,
the GN algorithm produces a hierarchy of subdivisions
of a network of N nodes, from a single component to N
isolated nodes. In order to know which of the divisions is
the best one, Girvan and Newman have proposed to look
at the maximum of the modularity Q, a quantity mea-
suring the degree of correlation between the probability
of having an edge joining two sites and the fact that the
sites belong to the same community (see Ref. [5] for the
mathematical deﬁnition of Q). The GN algorithm runs
in O(K 2N ) time on an arbitrary graph with K edges
and N vertices, or O(N 3) time on a sparse graph.
In
fact, calculating the betweenness for all edges requires a
time of the order of KN [6], since it corresponds to the
evaluation of all-shortest-paths (ASP) problem. And the
betweenness for all edges need to be recalculated every
time after an edge has been removed (the betweenness
recalculation is a fundamental aspect of the GN algo-
rithm) [5]. This restricts the applications to networks of
at most a few thousands of vertices with current hard-
ware facilities. Successively, a series of faster methods
directly based on the optimization of Q have been pro-
posed [7], which allow up to a O(N log2 N ) running time
for ﬁnding community structures in sparse graphs.

All the above mentioned methods are based on the
structure of a network, meaning that they use solely the
information contained in the adjacency matrix A = {aij}
(or any equivalent representation of the topology) of the
graph. As complementary to such approaches, the au-
thors of Ref. [8] have proposed a method to ﬁnd com-
munity structures based on the statistical properties of a
system of spins (namely q-state Potts spins) associated
to the nodes of the graphs. In this Letter we propose a
dynamical clustering (DC) method based on the proper-
ties of a dynamical system associated to the graph. DC

techniques were initiated by the relevant observation that
topological hierarchies can be associated to dynamical
time scales in the transient of a synchronization process
of coupled oscillators [9]. Although being fast, so far DC
methods do not provide in general the same accuracy in
the identiﬁcation of the communities.

Here, we show how to combine topological and dynam-
ical information in order to devise a DC algorithm that
is able to identify community structures with a precision
competitive with the best techniques based solely on the
topology. The method we present is based upon the well-
known phenomenon of synchronization clusters of non
identical phase oscillators [10], each one associated to a
node, and interacting through the edges of the graph.
Clusters of synchronized oscillators represent an inter-
mediate regime between global phase locking and full
absence of synchronization, thus implying a division of
the whole graphs into groups of elements which oscillate
at the same (average) frequency. The key idea is that,
starting from a fully synchronized state of the network, a
dynamical change in the weights of the interactions, that
retain information on the original betweenness distribu-
tion, yields a progressive hierarchical clustering that fully
detects community structures.

For the sake of

illustration and without lack of
generality, we specify our technique with reference to
the so called Opinion Changing Rate (OCR) model, a
continuous-time system of coupled phase oscillators in-
troduced for the modeling of opinion consensus in so-
cial networks [11], and representing a variation of the
Kuramoto model [12]. Other continuos-time (Kuramoto
and R¨ossler dynamics), and also discrete-time (coupled
circle maps) dynamical systems have been investigated
and will be reported elsewhere [13]. Given a undi-
rected, unweighted graph with N nodes and K edges,
described by the adjacency matrix A = {aij}, we asso-
ciate to each node i (i = 1, . . . , N ) a dynamical variable
xi(t) ∈] − ∞, +∞[. The dynamics of each node is gov-
erned by:

˙xi(t) = ωi+

σ
Pj∈Ni bα(t)

ij

X
j∈Ni

bα(t)
ij

sin(xj −xi)βe−β|xj −xi|

(1)
where ωi is the natural frequency of node i (in the nu-
merical simulations the ωi’s are randomly sorted from a
uniform distribution between ωmin = 0 and ωmax = 1),
σ is the coupling strength, and Ni is the set of nodes
adjacent to i, i.e. all nodes j for which aij = aji = 1.
The constant parameter β, tuning the exponential factor
in the coupling term of Eqs. (1), switches oﬀ the inter-
action when the phase distance between two oscillators
exceeds a certain threshold (as usual [11] we ﬁx β = 3).
Notice that the interaction between two adjacent nodes
i and j is weighted by the term bα(t)
, where
bij is the betweenness of the edge i, j, and α(t) is a time
dependent exponent, such that α(0) = 0. In Ref.[14] it

ij / Pj∈Ni bα(t)

ij

2

has been shown that the ability of a dynamical network,
as the one in Eqs.
(1), to maintain a synchronization
state crucially depends on the value of the parameter α.
For such a reason, in the DC algorithm to ﬁnd community
structures, we ﬁx the coupling strength σ equal to an ar-
bitrary value such that the unweighted (α = 0) network
is fully synchronized, and we solve Eqs. (1) with a pro-
gressively (stepwise) decreasing value of α(t). Namely,
while keeping ﬁxed σ, we consider α(tl+1) = α(tl) − δα
for tl+1 > t > tl, where tl+1 − tl = T ∀l (in the follow-
ing T = 2), and δα is a parameter that will be speci-
ﬁed below. As the edges connecting nodes belonging to
the same community (to two diﬀerent communities) have
in general small (large) betweenness, when α decreases
from zero, the corresponding interaction strengths on
those edges become increasingly enhanced (weakened).
Since the network is prepared to be fully synchronized,
it has to be expected that, as α decreases, the original
synchronization state hierarchically splits into clusters of
synchronized elements, accordingly to the hierarchy of
modules present in the graph. The individuation of syn-
chronization clusters is made in terms of groups of nodes
with the same instantaneous frequency ˙x(t). The pro-
cedure consists then in monitoring the emerging set of
synchronization clusters at each value of α(t). The best
division in communities of the graph (the best α value) is
individuated by looking at the maximum (as a function
of α) of the modularity Q [5].

In order to comparatively evaluate the performance of
the algorithm, we have considered, as in Ref. [5], a set of
computer generated random graphs constructed in such
a way to have a well deﬁned community structure. All
graphs are generated with N = 128 nodes and K = 1024
edges. The nodes are divided into four communities, con-
taining 32 nodes each. Pairs of nodes belonging to the
same community (to diﬀerent communities) are linked
with probability pin (pout). pout is taken so that the av-
erage number zout of edges a node forms with members
of other communities can be controlled. While zout can
be then varied, pin is chosen so as to maintain a constant
total average node degree < k >= 16. As zout increases,
the community structure of the network becomes there-
fore weaker and harder to identify. As the real commu-
nity structure is here directly imposed by the generation
process, the accuracy of the identiﬁcation method can be
assessed by monitoring the fraction p of correctly classi-
ﬁed nodes vs. zout. In Fig. 1 we report the value of p
(averaged over twenty diﬀerent realizations of the com-
puter generated graphs and of the initial conditions) as a
function of zout, for the DC algorithm based on the OCR
model of Eqs. (1), with σ = 5.0 and δα = 0.1. The re-
sulting performance (open circles) is comparable to that
of the best methods based solely on the topology, such as
the GN (black squares) and the Newman Q-optimization
fast algorithm (stars).

The performance of the DC algorithm considered can

p

1

1

0,9

0,8

0,7

0,6

0,5

0,4

0,3

0,2

0,1

0

GN 
Q-opt
OCR
OCR-HK

y = 0.016 * N

1.76

)
.
c
e
s
(
 
e
m

i
t
 

U
P
C

6

10

5

10

4

10

3

10

2

10

1

10

2

10

4

10

3

10
N

4

5

7

8

6

zout

FIG. 1: Fraction p of correctly identiﬁed nodes as a function
of zout (average number of inter-community edges per node)
for computer generated graphs with N = 128 nodes, four
communities and an average degree < k >= 16. The results of
DC methods based respectively on the OCR (open circles) and
the OCR-HK (black circles) model, are compared with two
of the standard methods based solely on the topology, such
as the GN algorithm (black squares) [5], and the Newman
Q-optimization fast algorithm (stars) [7]. The improvement
in the performance of the OCR-HK method is evident for
zout > 5. In the inset, the scaling of the CPU time (seconds)
is reported as a function of the number of nodes N .

be made better by adding a simple modiﬁcation to the
OCR model which further stabilizes the system. Such
modiﬁcation consists in changing in time the natural fre-
quencies ω’s according to the idea of conﬁdence bound
introduced for the ﬁrst time by Hegselmann and Krause
(HK), in the context of models for opinion formation [18].
Therefore, we will refer to the improved method as the
OCR − HK dynamical clustering. The conﬁdence bound
is a parameter ǫ which ﬁxes the range of compatibility of
the nodes. At each time, the generic node i, having a
dynamical variable xi(t) and a natural frequency ωi(t),
checks how many of its neighbors j are compatible, i.e.
have a value of the variable xj (t) falling inside the conﬁ-
dence range [xi − ǫ, xi + ǫ]. Then, at the following step
in the numerical integration, we set ωi(t + ∆t), i.e. the
node takes the average value of the ω’s of its compatible
neighbors at time t. In the OCR − HK, the changes of
the ω(t)’s is superimposed to the main dynamical evo-
lution of Eq.(1) and noticeably contributes to stabilize
the frequencies of the oscillators according to the cor-
rect community structure of the network, also reducing
the dependence of the algorithm on the initial conditions.
The results obtained on the computer generated graphs,
again for δα = 0.1, are reported in Fig. 1 as black cir-
cles, and indicate that the performance of this method is
better than the other available on the market. Moreover
we checked that it further improves using smaller values

3

of the decrement δα.

In comparison with most of the methods based solely
on the topology, the advantage of our DC methods stands
also on its reduced computational demand [19]. For in-
stance due to the fact that one here needs to calculate
the betweenness distribution only for the initial graph,
whereas the high performance of iterative GN methods
[5, 7] needs to take into account the information on path-
ways redistribution all the times a given edge is removed,
implying an iterative recalculation of the betweenness
distribution. In our case, instead, the cluster desynchro-
nization process itself provides a progressive weakening
of the edges with highest betweenness. The scaling of
the CPU time with N is reported in the inset of Fig.1.
We have analyzed sparse graphs of size up to N=16384
and we found a scaling law of O(N 1.76) for the dynamical
evolution of the OCR-HK system. Since the initial calcu-
lation of betweenness takes O(N 2) operations, we expect
that the improvement of our method be more and more
evident as N increases, making our strategy particularly
suitable for the analysis of large size networks.

Finally, we tested how the method works on two typical
real-world networks: the Zachary Karate Club network
(N = 34, K = 78) [15] and the food web of marine or-
ganisms living in the Chesapeake Bay (N = 33, K = 71)
[16, 17]. In both cases we have some a-priori knowledge
of the existing community structures. In fact, the karate
club network, is known to split into two smaller com-
munities, whose detailed composition was reported by
Zachary [15]. Analogously, the food web organisms con-
tain a main separation in two large communities, accord-
ing to the distinction between pelagic organisms (living
near the surface or at middle depths) and benthic or-
ganisms (living near the bottom). As in the previous
simulations, we ﬁrst calculate the set of edge between-
ness {bij} and then we integrate numerallically Eqs.(1)
with the HK modiﬁcation on the ω’s, with δα = 0.1 and
σ = 5.0 (the latter ensures again an initial fully synchro-
nized state at α = 0).

In Fig. 2 the N istantaneous frequencies ˙xi, and the
modularity Q, are plotted as a function of α (i.e. as
a function of time) for both the karate club, panel (a),
and the food web network, panel (b). In panel (a) the
best conﬁguration, with Q ∼ 0.40, is reached around
−1.0 & α & −2.5 and yields a partition of the karate club
network into three stable communities which very well
describe the real situation. The largest one, made by 18
nodes (labelled with n.1 in the ﬁgure), fully corresponds
to one of the two communities reported by Zachary, while
the sum of the remaining two communities (labelled as
n.2 and n.3) corresponds to the second Zachary’s com-
munity of 16 elements. Notice that cluster n.3 represents
a very well connected subset (nodes 5, 6, 7, 11, 17) that is
frequently recognized as a separated community also by
other methods [5]. Moreover, the value of the best mod-
ularity found is larger than that of the Zachary partition

Center for Complexity Science.

4

[1] R. Albert and A.-L. Barab´asi, Rev. Mod. Phys. 74, 47
(2002); M.E.J. Newman, SIAM Review 45, 167 (2003); S.
Boccaletti, V. Latora, Y. Moreno, M. Chavez and D.-U.
Hwang, Phys. Rep. 424, 175 (2006).

[2] M. R. Garey and D. S. Johnson, Computers and In-
tractability: A Guide to the Theory of NP-Completeness
(W. H. Freeman & Company, 1979).

[3] A. Pothen, H. Simon, and K.-P. Liou, SIAM J. Matrix

Anal. Appl. 11, 430 (1990).

[4] S. Wasserman and K. Faust, Social Networks Analysis,

(Cambridge University Press, Cambridge, 1994)

[5] M. Girvan and M. E. J. Newman, Proc. Natl. Acad. Sci.
USA 99, 7821 (2002); M. E. J. Newman and M. Girvan,
Phys. Rev. E69, 026113 (2004).

[6] M. E. J. Newman, Phys. Rev. E64, 016132 (2001);
U. Brandes, Journ. of Mathematical Sociology 25, 163
(2001).

[7] M. E. J. Newman, Phys. Rev. E69, 066133 (2004); A.
Clauset, M. E. J. Newman, and C. Moore, Preprint
cond-mat/0408187 (2004); R. Guimer´a, and L. A. N.
Amaral, Nature 433, 895 (2005).

[8] J. Reichardt and S. Bornholdt, Phys. Rev. Lett. 93,

218701 (2004).

[9] A. Arenas, A. D´iaz-Guilera and C. J. P´erez-Vicente,

Phys. Rev. Lett. 96, 114102 (2006).

[10] S. Boccaletti, J. Kurths, D.L. Valladares, G. Osipov and

C.S. Zhou, Phys. Rep. 366, 1 (2002).

[11] A.Pluchino, V.Latora and A.Rapisarda , Int. J. Mod.

Phys. C, 16, 515 (2005).

[12] Y. Kuramoto, Chemical Oscillations, Waves, and Turbu-
lence (Springer, Berlin, 1984); S. H Strogatz, Physica D
143 1 (2000).

[13] S. Boccaletti, M. Ivanchenko, V. Latora, A. Pluchino, A.

Rapisarda, in preparation.

[14] M.Chavez, D.Hwang, A.Amann, H.G.E. Hentschel and
S.Boccaletti, Phys. Rev. Lett. 94, 218701 (2005).
[15] W. W. Zachary, J. of Anthropological Res. 33, 452

[16] D. Baird and R. E. Ulanowicz, Ecological Monographs

(1977).

59, 329 (1989).

70, 056104 (2004).

per 2 (2002).

[17] S. Fortunato, V. Latora and M. Marchiori, Phys. Rev. E

[18] R. Hegselmann and U. Krause, J.A.S.S.S. 5, issue 3, pa-

[19] L. Danon, A. Diaz-Guilera, J. Duch and A. Arenas, J.

Stat. Mech. P09008 (2005).

FIG. 2:
(Color online). The distribution of instantaneous
frequencies and the correspondent modularity Q are reported
as a function of α for the OCR-HK model. The application
to the Karate Club network and to the Chesapeake Bay food
web are shown in panel (a) and in panel (b) respectively. In
both the simulations σ = 5.0, δα = 0.1 and ǫ = 0.0005.

into two communities (Q ∼ 0.37). Analogously good
performance is obtained for the food web. In panel (b)
the highest value of Q, namely Q ∼ 0.42, is reached for
−2.8 & α & −3.8, yielding a division of the food web into
ﬁve communities in which, with respect to Refs.[5, 17],
the distinction between pelagic and benthic organisms is
not only preserved but also improved.

In conclusion, we have introduced a very eﬃcient al-
gorithm for the detection and identiﬁcation of commu-
nity structures based on the cluster de-synchronization
properties of phase oscillators. The algorithm attains a
better level of precision than all standard methods, with
a small computational eﬀort globally scaling as O(N 2).
Our method, therefore, could be of use for a reliable
community detection in sizable networks (e.g. biologi-
cal, neural networks), in all cases in which identiﬁcation
of modularity has been so far hampered by the large as-
sociated computational demand.

The Authors are indebted with A. Amann, F.T. Arec-
chi, M. Chavez, R. L´opez-Ruiz and Y. Moreno for the
many helpful discussions on the subject. S.B. acknowl-
edges the Yeshaya Horowitz Association through the

