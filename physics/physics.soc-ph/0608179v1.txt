6
0
0
2
 
g
u
A
 
7
1
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
9
7
1
8
0
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Optimization of hierarchical structures of information ﬂow

D. Stauﬀer1 and P.M.C. de Oliveira2
Laboratoire PMMH, ´Ecole Sup´erieure de Physique et de Chimie Industrielles,
10 rue Vauquelin, F-75231 Paris, France

1 Visiting from:
Inst. for Theoretical Physics, Cologne University, D-50923 K¨oln, Euroland
2 Visiting from:
Instituto de F´ısica, Universidade Federal Fluminense; Av. Litorˆanea s/n,
Boa Viagem, Niter´oi 24210-340, RJ, Brazil

Keywords: Monte Carlo simulation, scale-free networks, hospitals.

Abstract
The eﬃciency of a large hierarchical organisation is simulated on Barab´asi-
Albert networks, when each needed link leads to a loss of information. The op-
timum is found at a ﬁnite network size, corresponding to about ﬁve hierarchical
layers, provided a cost for building the network is included in our optimization.

1 Introduction

In a hospital, the information on how to treat a patient has to travel from
the experts to the nurses, and errors may occur in this process. They can
be avoided if only the leading expert deals with the patients, but then only
few patients can be treated.
In the opposite extreme one builds in many
layers of hierarchy where the information has to be given from each layer to
the larger layer below it until the nurses get the information. For a large
number of layers, growing in size from top to bottom, one then treats badly
a huge number of patients. What is the optimum number of layers, or more
generally, the optimum organisational structure, for the hospital?

Analogous problems occur elsewhere in society [1]. Leaders (government,
university president, company CEO) think that they know best, but we minor
subjects not always fully appreciate their wisdom since something got lost in
translation from one level to the lower level.

We assume the loss of information from one layer to the next to be a ﬁxed
fraction x either of the initial information (linear decay) or of the current

1

information (exponential decay). If the top layer has index L = 0, then at
layer L of the original information only the fraction exp(−xL) or 1 − xL
arrives, for exponential or linear decay, respectively.

In a directed square lattice such information ﬂow was already treated in
an old Citation Classic [2]. In the next section, we deal with it on a Cayley
tree analytically, while in section 3 we simulate it on directed Barab´asi-Albert
networks [3].

Sum over 300 BA networks, 50 million each

 10 G

 100 M

 1 M

 10000

 100

 1

s
e
d
o
n
 
f
o
 
k
_
n
 
r
e
b
m
u
n

 0.01

 1

 10

 100

 1000

 10000

degree k

Figure 1: Number nk of nodes having k neighbours each, summed over 300
Barab´asi-Albert networks with m = 3 and 50 million nodes each.

2 Cayley tree

Imagine there is one omniscient expert on top in layer 0, who talks to b
subordinates in layer 1, each of which again talks to b diﬀerent subordinates
in layer 2, etc. With L layers below the top we have in total

N = (bL+1 − 1)/(b − 1)

(1)

2

100 runs m=3, linear

 0

 0.2

 0.4

 0.6

 0.8

 1

loss factor x

100 runs m = 3, exponential

 1e+09

 1e+08

 1e+07

 1e+06

 100000

 10000

 1000

 100

 1e+09

 1e+08

 1e+07

 1e+06

 100000

 10000

 1000

l

p
e
h

l

p
e
h

 100

 0

 0.5

 1
loss factor x

 1.5

 2

Help summed over 100 scale-free networks of N =
Figure 2:
102, 103, 104, 105, 106, 107 nodes each, with m = 3, versus loss fraction x
and linear (top) or exponential (bottom) information decay.

people, and the bottom layer has a distance of L from the top (as measured
by the number of connecting links.) This Cayley tree or Bethe lattice is well
known to be analytically solvable in many applications. We measure the help
H (or proﬁt, or utility function) by the total amount of information arriving
in the bottom layer. This help is

H = (1 − xL)bL

linear, for L < 1/x

or

H = e−xLbL

exponential

(2a)

(2b)

3

x = 0.3, 0.4, ... 0.9 right to left, linear, m=3

 100

 1000

 100000

 1e+06

 10000

size N

x = 0.8, 1.0, ... 2.0 right to left, exp., m=2

 

H
p
e
h

l

H
 
p
e
h

l

 100000

 10000

 1000

 100

 1 M

 100000

 10000

 1000

 100

 100

 1000

 10000

 100000

 1 M

size N

Figure 3: Help minus size/100, summed over 100 samples, for linear and
exponential decay.

in our two choices. For the linear decay, the help is maximal for L near
x−1 − 1/ ln b; for the exponential decay one has either H → ∞ (percolation)
or H → 0 (no percolation) depending on whether x is smaller or larger than
ln b.

One may also look for a maximum of H under the condition that the
total number N of people, eq.(1), is constant. Then it is best to take L =
1, b = N − 1, since then everybody is close to the truth,

We doubt that these simple models and results are suitable ways to or-

ganise hospitals or other social organisations.

4

Average distance = number of links from 100 samples

 10

 9

 8

 7

 6

 5

 4

 3

e
c
n
a
t
s
d

i

 2
 100

 1000

 10000  100000

 1 M

 10 M  100 M

size

Figure 4: Number of layers, deﬁned as the average distance ℓ from the core,
versus number N of nodes in 100 Barab´asi-Albert networks with m = 2.

3 Scale-free networks

Some but not all social relations may be better approximated by scale-free
networks [3, 4, 5]. We use the Barab´asi-Albert version, where the number
nk of network nodes having k neighbours decays as 1/k3, Fig. 1. We start
with m fully connected nodes, and then each node which is newly added to
the network selects m existing nodes as “bosses”, with a probability propor-
tional to the number of neighbours the boss has at that time: preferential
attachment.

While our information ﬂow is directed, we do not need to take this direc-
tion into account since no neighbour relations need to be stored. Instead, for
each newly added node we determine the shortest distance L from the initial
core of m nodes; this core has L = 0. Since now we have no longer a clear
separation into layers, we assume that everybody except the core members
helps the patients, with the fraction fi = exp(−xLi) (exponential decay) or

5

fi = 1 − xLi (linear decay). Then

N

H =

fi

X
i=m+1

(3)

is the total help.

Fig.2 shows how the resulting help decreases with increasing loss fraction
x. It conﬁrms, not surprisingly, that the help decreases with increasing in-
formation loss x and increases with increasing network size N. (For ﬁxed
N = 105 and 2 ≤ m ≤ 7 the help increases slightly with increasing m.) It is
more realistic to include a cost associated with the network; thus we look at
the modiﬁed help

H ′ = H − λN,

λ = 0.01 .

(4)

Fig.3 shows that this function has a maximum in the size range of interest,
except for small x which would require even bigger networks. The logarithmic
horizontal axis of Fig.3 corresponds to a linear axis in the layer number < ℓ >,
since the latter varies as log N, Fig.4. Also in the Cayley tree one can ﬁnd
such a maximum help if one subtracts 0.01N from H, eqs.(1,2b)

4 Conclusion

For scale-free Barab´asi-Albert networks and Cayley trees, we found a max-
imum in the desired help function at network sizes, which correspond to
numbers of layers larger than two and smaller than ten, a reasonable result.
We thank the Brazilian grants CNPq and FAPERJ for ﬁnancial support

and M. Izzo and F. Bagnoli for discussions.

References

[1] D. Braha, Phys. Rev. E 69, 016113 (2004).

[2] P.M.C. de Oliveira, J. Phys. A 20 (1987) L 521.

[3] A.L. Barab´asi and R. Albert, Science 286 (1999) 509.

[4] H.A. Simon, Biometrika 42 (1955) 425.

[5] M. Schnegg, Int. J. Mod. Phys. C 17 (2006) 1067.

6

