5
0
0
2
 
p
e
S
 
2
1
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
2
8
0
9
0
5
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Cellular Automata Models of Road Trafﬁc

Accepted for publication in Physics Reports

A high-quality version of this paper can be found at
http://phdsven.dyns.cx

Sven Maerivoet, Bart De Moor

Department of Electrical Engineering ESAT-SCD (SISTA)
Katholieke Universiteit Leuven
Kasteelpark Arenberg 10, 3001 Leuven, Belgium
Phone: +32 (0) 16 32 17 09 Fax: +32 (0) 16 32 19 70

Background and physical setup for road trafﬁc

Single-cell models

Mathematical notation

Contents
1
1.1 Historic origins of cellular automata
1.2
Ingredients of a cellular automaton
1.3 Road layout and the physical environment
1.4 Vehicle movements and the rule set
2
2.1 Classic notation based on automata theory
2.2 Basic variables and conventions
2.3 Performing macroscopic measurements
2.4 Conversion to real-world units
3
3.1 Deterministic models
3.2 Stochastic models
3.3 Slow-to-start models
4
4.1 Artifacts of a multi-cell setup
4.2 Advanced multi-cell models
5
5.1 Multi-lane trafﬁc
5.2 City trafﬁc and intersection modelling
5.3 Analytical results
Summary and outlook
6
TCA+ JavaTM software
A
A.1 Overview and features
A.2 Running the software
A.3 Technical implementation details
B
B.1 Acronyms and abbreviations
B.2 List of symbols
References

Multi-cell models

Glossary of terms

Multi-lane trafﬁc, city trafﬁc, and analytical results

3
4
5
7
8
9
9
12
14
17
21
23
29
42
53
54
55
66
66
69
73
75
76
76
80
80
83
83
87
90

Preprintsubmitted toPhysicsReports

2February 2008

Abstract

In this paper, we give an elaborate and understandable review of trafﬁc cellular automata
(TCA) models, which are a class of computationally efﬁcient microscopic trafﬁc ﬂow mod-
els. TCA models arise from the physics discipline of statistical mechanics, having the goal
of reproducing the correct macroscopic behaviour based on a minimal description of mi-
croscopic interactions. After giving an overview of cellular automata (CA) models, their
background and physical setup, we introduce the mathematical notations, show how to per-
form measurements on a TCA model’s lattice of cells, as well as how to convert these
quantities into real-world units and vice versa. The majority of this paper then relays an
extensive account of the behavioural aspects of several TCA models encountered in lit-
erature. Already, several reviews of TCA models exist, but none of them consider all the
models exclusively from the behavioural point of view. In this respect, our overview ﬁlls
this void, as it focusses on the behaviour of the TCA models, by means of time-space and
phase-space diagrams, and histograms showing the distributions of vehicles’ speeds, space,
and time gaps. In the report, we subsequently give a concise overview of TCA models that
are employed in a multi-lane setting, and some of the TCA models used to describe city
trafﬁc as a two-dimensional grid of cells, or as a road network with explicitly modelled
intersections. The ﬁnal part of the paper illustrates some of the more common analytical
approximations to single-cell TCA models.

Key words: cellular automata, trafﬁc ﬂow modelling, tempo-spatial behaviour,
phase-space diagrams
PACS: 02.50.-r,45.70.Vn,89.40.-a

In the ﬁeld of trafﬁc ﬂow modelling, microscopic trafﬁc simulation has always
been regarded as a time consuming, complex process involving detailed models
that describe the behaviour of individual vehicles. Approximately a decade ago,
however, new microscopic models were being developed, based on the cellular au-
tomata programming paradigm from statistical physics. The main advantage was
an efﬁcient and fast performance when used in computer simulations, due to their
rather low accuracy on a microscopic scale. These so-called trafﬁc cellular au-
tomata (TCA) are dynamical systems that are discrete in nature, in the sense that
time advances with discrete steps and space is coarse-grained (e.g., the road is
discretised into cells of 7.5 metres wide, each cell being empty or containing a
vehicle). This coarse-graininess is fundamentally different from the usual micro-
scopic models, which adopt a semi-continuous space, formed by the usage of IEEE
ﬂoating-point numbers [1]. True to the spirit of statistical mechanics, all the TCA
models discussed in this report do not have a realistic microscopic description of
trafﬁc ﬂows as their primary intent, but are rather aimed at obtaining a correct
macroscopic behaviour through their crude microscopic description. Such an ap-

Email address: {sven.maerivoet,bart.demoor}@esat.kuleuven.be

(Sven Maerivoet, Bart De Moor).

URL: http://www.esat.kuleuven.be/scd (Sven Maerivoet, Bart De Moor).

2

proach would involve more human-oriented aspects such as those found in socio-
economic, behavioural, and psychological sciences. Due to large lack of knowledge
about the manner in which human beings operate in a trafﬁc system, trafﬁc engi-
neers currently stick with this higher-level scientiﬁc approach. As such, they are
able to positively capture the ﬁrst- and second-order macroscopic effects of traf-
ﬁc streams. TCA models are very ﬂexible and powerful, in that they are also able
to capture all previously mentioned basic phenomena that occur in trafﬁc ﬂows
[2,3]. In a larger setting, these models describe self-driven, many-particle systems,
operating far from equilibrium. And in contrast to strictly gaseous analogies, the
particles in these systems are intelligent and able to learn from past experience,
thereby opening the door to the incorporation of behavioural and psychological
aspects [4,5,6].

The cellular automata approach proved to be quite useful, not only in the ﬁeld of ve-
hicular trafﬁc ﬂow modelling, but also in other ﬁelds such as pedestrian behaviour,
escape and panic dynamics, the spreading of forest ﬁres, population growth and
migrations, cloud formation, material properties (corrosion, cracks, creases, peel-
ing et cetera), ant colonies and pheromone trails, . . . [7,8,9,10,11]. It is now fea-
sible to simulate large systems containing many ‘intelligent particles’, such that
is it possible to observe their interactions, collective behaviour, self-organisation,
. . . [12,13,7,6,14,15,16,17]

In this report, we provide a detailed description of the methodology of cellular
automata applied to trafﬁc ﬂows. We ﬁrst discuss their background and physical
setup, followed by an account of the mathematical notations we adopt. The remain-
ing majority of this report extensively discusses the behavioural aspects of several
state-of-the-art TCA models encountered in literature (our overview distinguishes
between single-cell and multi-cell models). The report concludes with a concise
overview of TCA models in a multi-lane setting, and TCA models used to describe
two-dimensional trafﬁc (e.g., a grid for city trafﬁc). We end with a description of
several common analytical approximations to single-cell TCA models.

Note that aside from our phenomenological discussion of different TCA
models, we refer the reader to the work of Chowdhury et al. [3], Santen [18],
and Knospe et al. [19] for more theoretically- and quantitatively-oriented
overviews.

1 Background and physical setup for road trafﬁc

In this section, we give a brief overview of the historic origins of cellular automata,
as they were conceived around 1950. We subsequently describe which main ingre-
dients constitute a cellular automaton: the physical environment, the cells’ states,
their neighbourhoods, and ﬁnally a local transition rule. We then move on to a
general description on how cellular automata are applied to vehicular road trafﬁc,

3

discussing their physical environment and the accompanying rule set that describes
the vehicles’ physical propagation.

1.1 Historic origins of cellular automata

The mathematical concepts of cellular automata (CA) models can be traced back
as far as 1948, when Johann Louis von Neumann introduced them to study (living)
biological systems [20]. Central to von Neumann’s work, was the notion of self-
reproduction and theoretical machines (called kinematons) that could accomplish
this. As his work progressed, von Neumann started to cooperate with Stanislaw
Marcin Ulam, who introduced him to the concept of cellular spaces. These de-
scribed the physical structure of a cellular automaton, i.e., a grid of cells which
can be either ‘on’ or ‘off’ [21,22]. Interestingly, Alan Mathison Turing proposed
in 1952 a model that illustrated reaction-diffusion in the context of morphogene-
sis (e.g., to explain the patterns of spots on giraffes, of stripes on zebras, . . . ). His
model can be seen as a type of continuous CA, in which the cells have a direct
analogy with a simpliﬁed biological organism [23].

In the seventies, CA models found their way to one of the most popular applications
called ‘simulation games’, of which John Horton Conway’s “Game of Life” [24]
is probably the most famous. The game found its widespread fame due to Martin
Gardner who, at that time, devoted a Scientiﬁc American column, called “Math-
ematical Games”, to it. Life, as it is called for short, is traditionally ‘played’ on
an inﬁnitely large grid of cells. Each cell can either be ‘alive’ or ‘dead’. The game
evolves by considering a cell’s all surrounding neighbours, deciding whether or not
the cell should live or die, leading to phenomenon called ‘birth’, ‘survival’, and
‘overcrowding’ (or ‘loneliness’). An example of a Life game board can be seen in
Fig. 1. Typical of Life, is the spawning of a whole plethora of patterns or shapes,
having illustrious names such as gliders, guns, space ships, puffers, beehives, oscil-
lators, . . . The Game of Life is now all about how these shapes evolve, and whether
or not they die out or live indeﬁnitely (either by remaining stationary or moving
around).

The widespread popularisation of CA models was achieved in the eighties through
the work of Stephen Wolfram. Based on empirical experiments using computers,
he gave an extensive classiﬁcation of CA models as mathematical models for self-
organising statistical systems [21,26]. Wolfram’s work culminated in his mammoth
monograph, called A New Kind of Science [26]. In this book, Wolfram related cel-
lular automata to all disciplines of science (e.g., sociology, biology, physics, math-
ematics, . . . ). Despite the broad range of science areas touched upon, Wolfram’s
book has received its share of criticism. As an example of this, we mention the
comments of Gray, who points out that Wolfram’s results suffer from a rigourous
mathematical test. As a consequence, the physical examples in his book are deemed
either uncheckable or unconvincing. Gray’s ﬁnal critique is that “. . . he [Wolfram]
has helped to popularise a relatively little-known mathematical area (CA theory),

4

Fig. 1. An example of the Game of Life, with a rectangular grid of cells. Live cells are
coloured black, whereas dead cells remain white. The image shows a snapshot during the
game’s course, illustrating many different shapes to either die out, or live indeﬁnitely by
remaining stationary or moving around (image adapted from [25]).

and he has unwittingly provided several highly instructive examples of the pitfalls
of trying to dispense with mathematical rigour” [27]. However, with respect to their
computational power, CA models can emulate universal Turing machines within the
theories of computation and complexity. Recently, Chua took Wolfram’s empirical
observations one step further, proving that some of the CA models are capable of
Turing universal computations. He furthermore introduced the paradigm of cellu-
lar neural networks (CNN), which provide a very efﬁcient method for performing
massive parallel computations, and are a generalisation of cellular automata [28].

Finally, an important step in this direction, is Bill Gosper’s proof that the Game
of Life is computationally universal, i.e., it can mimic arbitrary algorithms [29].
Notably, one of the most profound testimonies related to this concept, is the work
of Konrad Zuse and Edward Fredkin at the end of the sixties. Their Zuse-Fredkin
thesis states that “The Universe is a cellular automaton”, and is based on the as-
sumption that the Universe’s physical laws are discrete in nature [30,31,32]. This
latter statement was also conveyed by Wolfram in his famous CA compendium
[26].

1.2 Ingredients of a cellular automaton

From a theoretical point of view, four main ingredients play an important role in
cellular automata models [33,22,34]:

(1) The physical environment
This deﬁnes the universe on which the CA is computed. This underlying structure
consists of a discrete lattice of cells with a rectangular, hexagonal, or other topol-
ogy (see Fig. 2 for some examples). Typically, these cells are all equal in size; the
lattice itself can be ﬁnite or inﬁnite in size, and its dimensionality can be 1 (a linear
string of cells called an elementary cellular automaton or ECA), 2 (a grid), or even
higher dimensional. In most cases, a common — but often neglected — assump-
tion, is that the CA’s lattice is embedded in a Euclidean space.

5

Fig. 2. Some examples of different Euclidean lattice topologies for a cellular automaton in
two dimensions. Left: rectangular. Middle: triangular/isometric. Right: hexagonal.

(2) The cells’ states
Each cell can be in a certain state, where typically an integer represents the number
of distinct states a cell can be in, e.g., a binary state. Note that a cell’s state is not re-
stricted to such an integer domain (e.g., Z2), as a continuous range of values is also
possible (e.g., R+), in which case we are dealing with coupled map lattices (CML)
[35,36]. We call the states of all cells collectively a CA’s global conﬁguration. This
convention asserts that states are local and refer to cells, while a conﬁguration is
global and refers to the whole lattice.

(3) The cells’ neighbourhoods
For each cell, we deﬁne a neighbourhood that locally determines the evolution of
the cell. The size of neighbourhood is the same for each cell in the lattice. In the
simplest case, i.e., a 1D lattice, the neighbourhood consists of the cell itself plus its
adjacent cells. In a 2D rectangular lattice, there are several possibilities, e.g., with
a radius of 1 there are, besides the cell itself, the four north, east, south, and west
adjacent cells (von Neumann neighbourhood), or the previous ﬁve cells as well as
the four north-east, south-east, south-west, and north-west diagonal cells (Moore
neighbourhood); see Fig. 3 for an example of both types of neighbourhoods. Note
that as the dimensionality of the lattice increases, the number of direct neighbours
of a cell increases exponentially.

(4) A local transition rule
This rule (also called function) acts upon a cell and its direct neighbourhood, such
that the cell’s state changes from one discrete time step to another (i.e., the system’s
iterations). The CA evolves in time and space as the rule is subsequently applied
to all the cells in parallel. Typically, the same rule is used for all the cells (if the
converse is true, then the term hybrid CA is used). When there are no stochastic
components present in this rule, we call the model a deterministic CA, as opposed
to a stochastic (also called probabilistic) CA.

As the local transition rule is applied to all the cells in the CA’s lattice, the global
conﬁguration of the CA changes. This is also called the CA’s global map, which
transforms one global conﬁguration into another. This corresponds to the notion of

6

replacements

W

E

N

C

S

NW

W

SW

N

C

S

NE

E

SE

Fig. 3. Two commonly used two dimensional CA neighbourhoods with a radius of 1: the
von Neumann neighbourhood (left) consisting of the central cell itself plus 4 adjacent cells,
and the Moore neighbourhood (right) where there are 8 adjacent cells. Note that for one
dimensional CAs, both types of neighbourhoods are the same.

computing a function in automata theory, see also section 2.1. Sometimes, the CA’s
evolution can be reversed by computing past states out of future states. By evolving
the CA backwards in time in this manner, the CA’s inverse global map is computed.
If this is possible, the CA is called reversible, but if there are states for which no
precursive state exists, these states are called Garden of Eden (GoE) states and the
CA is said to be irreversible.

Finally, when the local transition rule is applied to all cells, its global map is com-
puted. In the context of the theory of dynamical systems, this phenomenon of lo-
cal simple interactions that lead to a global complex behaviour (i.e., the sponta-
neous development of order in a system due to internal interactions), is termed
self-organisation or emergence.

Whereas the previous paragraphs discussed the classic approach to CA models, the
following sections will exclusively focus on vehicular trafﬁc ﬂows, leading to trafﬁc
cellular automata (TCA) models: section 1.3 discusses the physical environment on
which these TCA models are based, and section 1.4 deals with their accompanying
rule set that determines the vehicular motion.

1.3 Road layout and the physical environment

When applying the cellular automaton analogy to vehicular road trafﬁc ﬂows, the
physical environment of the system represents the road on which the vehicles are
driving. In a classic single-lane setup for trafﬁc cellular automata, this layout con-
sists of a one-dimensional lattice that is composed of individual cells (our descrip-
tion here thus focuses on unidirectional, single-lane trafﬁc). Each cell can either be
empty, or is occupied by exactly one vehicle; we use the term single-cell models to
describe these systems. Another possibility is to allow a vehicle to span several con-
secutive cells, resulting in what we call multi-cell models. Because vehicles move
from one cell to another, TCA models are also called particle-hopping models [37].

7

An example of the tempo-spatial dynamics of such a system is depicted in Fig. 4,
where two consecutive vehicles i and j are driving on a 1D lattice. A typical dis-
cretisation scheme assumes ∆T = 1 s and ∆X = 7.5 m, corresponding to speed
increments of ∆V = ∆X/∆T = 27 km/h. The spatial discretisation corresponds
to the average length a conventional vehicle occupies in a closely packed jam (and
as such, its width is neglected), whereas the temporal discretisation is based on a
typical driver’s reaction time and we implicitly assume that a driver does not react
to events between two consecutive time steps [38].

t

t + 1

i

∆X

j

∆T

j

i

Fig. 4. Schematic diagram of the operation of a single-lane trafﬁc cellular automaton
(TCA); here, the time axis is oriented downwards, the space axis extends to the right. The
TCA’s conﬁguration is shown for two consecutive time steps t and t + 1, during which two
vehicles i and j propagate through the lattice.

With respect to the layout of the system, we can distinguish two main cases: closed
versus open systems. They correspond to periodic (or cyclic) versus open boundary
conditions. The former is usually implemented as a closed ring of cells, sometimes
called the Indianapolis scenario, while the latter considers an open road. This last
type of system, is also called the bottleneck scenario. The name is derived from
the fact that this situation can be seen as the outﬂow from a jam, where vehicles
are placed at the left boundary whenever there is a vacant spot. Note that, in closed
systems, the number of vehicles is always conserved, leading to the description of
number conserving cellular automata (NCCA) [39].

1.4 Vehicle movements and the rule set

The propagation of the individual vehicles in a trafﬁc stream, is described by means
of a rule set that reﬂects the car-following and lane-changing behaviour of a traf-
ﬁc cellular automaton evolving in time and space. The TCA’s local transition rule
actually comprises this set of rules. They are consecutively applied to all vehicles
in parallel (called a parallel update). So in a classic setup, the system’s state is
changed through synchronous position updates of all the vehicles: for each vehi-
cle, the new speed is computed, after which its position is updated according to
this speed and a possible lane-change manoeuvre. Note that there are other ways to
perform this update procedure, e.g., a random sequential update (see section 3.2.4).
Because time is discretised in units of ∆T seconds, an implicit reaction time is
assumed in TCA models. It is furthermore assumed that a driver does not react to
events between consecutive time steps.

8

For single-lane trafﬁc, we assume that vehicles act as anisotropic particles, i.e.,
they only respond to frontal stimuli. So typically, the car-following part of a rule
set only considers the direct frontal neighbourhood of the vehicle to which the rules
are applied. The radius of this neighbourhood should be taken large enough such
that vehicles are able to drive collision-free. Typically, this radius is equal to the
maximum speed a vehicle can achieve, expressed in cells per time step.

From a microscopic point of view, the process of a vehicle following its prede-
cessor is typically expressed using a stimulus-response relation [1]. Typically, this
response is the speed or the acceleration of a vehicle; in TCA models, a vehicle’s
stimulus is mainly composed of its speed and the distance to its leader, with the
response directly being a new (adjusted) speed of the vehicle. In a strict sense, this
only leads to the avoidance of accidents. Some models however, incorporate more
detailed stimuli, such as anticipation terms. These forms of ‘anticipation’ only take
leaders’ reactions into account, without predicting them. When these effects are
taken into account together with a safety distance, strong accelerations and abrupt
braking can be avoided. Hence, as the speed variance is decreased, this results in a
more stable trafﬁc stream [40,41,42].

To conclude this section, we note that a TCA model can also be derived from a
so-called Gipps car-following model. All speeds in this Gipps model are directly
computed from one discrete time step to another [1]. If now the spatial dimension
is also discretised (a procedure called coarse graining), then this will result in a
TCA model.

2 Mathematical notation

In this section, we give an overview of the mathematical notation adopted through-
out this report. The focus will be on the variables in TCA models, the measurements
that can be done on a TCA model’s lattice, and their conversion to real-world units.
We ﬁrst take a look at the notation that is commonly used in automata theory, from
which cellular automata sprung.

2.1 Classic notation based on automata theory

Let us ﬁrst brieﬂy present the notation for cellular automata models, adopted in
spirit of automata theory. As mentioned in section 1, a CA model represents a
discrete dynamic system, consisting of four ingredients:

CA = (L, Σ, N , δ),

(1)

where the physical environment is represented by the discrete lattice L and the set
of possible states denoted by Σ. Each ith cell of the lattice, has at time step t a state
σi(t) ∈ Σ. Furthermore, the associated neighbourhood with this cell is represented

9

by Ni(t), i.e., a (partially) ordered set of cells. Finally, the local transition rule is
represented as:

δ : Σ|N | −→ Σ :

σj(t) 7−→ σi(t + 1).

(2)

[j∈Ni(t)

Equation (2) shows that the state of the ith cell at the next time step t + 1 is com-
puted by δ based on the states of all the cells in its neighbourhood at the current
time step t. In the previous equation, |N | represents the number of cells in this
neighbourhood, which is taken to be invariant with respect to time and space. Note
that the local transition rule is commonly given by a rule table, where the output
state is listed for each possible input conﬁguration of the neighbourhood. Given the
sizes of Σ and N , the total number of possible rules equals:

where each of the |ΣN | possible conﬁgurations of a cell’s neighbourhood is mapped
to the number of possible states a cell can be in.

Considering the ordered set of all the states of all cells collectively at time step t, a
CA’s global conﬁguration is obtained as:

with C(t) ∈ ΣL where the latter refers to the set of all possible global conﬁgurations
a CA can be in (also called its phase space). Sometimes, such a global conﬁguration
C(t) is also represented by its characteristic polynomial (i.e., generating function)
[43]:

|ΣΣN

|,

C(t) =

σj(t),

[j∈L

C(t) =

σj(t) xj.

|L|

Xj=0

If we now apply the local transition rule to all the cells in the CA’s lattice, the next
conﬁguration of the CA can be computed by its induced global map:

G : ΣL −→ ΣL : C(t) 7−→ C(t + 1).

Note that if the CA is reversible, the inverse global map G-1 can be computed. As
the CA evolves in time and space, the global map is iterated from a certain initial
conﬁguration C(0) at t = 0, leading to the following sequence of conﬁgurations:

C(0) → G(C(0)) → G2(C(0)) → G3(C(0)) → · · ·

(7)

10

(3)

(4)

(5)

(6)

The above sequence is called the trajectory of the initial conﬁguration C(0) under
the global map G, and we denote it by:

TC(0)|G = {Gn(C(0)) | n ∈ N}.
When this trajectory is periodic or chaotic, we use the terminology forward orbit
and denote it by O+
C(0)|G. Similarly, the backward orbit (i.e., the reverse trajectory)
is denoted by O−
C(t)|G-1, where we specify a certain global conﬁguration C(t) at time
step t under the inverse global map G-1.

(8)

2.1.1 Classiﬁcation of CA rules

Computing the global map G is rather difﬁcult, as it may require many or even
an inﬁnite amount of iterations in order to obtain the trajectories. In practice, the
system’s lattice size should be taken inﬁnitely large, but even only considering 1000
cells of a binary elementary cellular automaton (ECA) would increase the size of
the search space of global conﬁgurations to 21000 ≈ 10300.
A more intuitive methodology, is to observe a CA’s tempo-spatial behaviour, i.e., its
evolution on the lattice in the course of time. To this end, Stephen Wolfram empir-
ically studied many conﬁgurations of binary ECA rules, with a neighbourhood of
three cells. According to equation (3), this amounts to 223
= 256 different rules. In
1984, based on this research, Wolfram conjectured four distinct universality classes
[44]:

Class I

Class II

Class III

Class IV

These CA evolve after a ﬁnite number of iterations to a unique homogeneous
state, i.e., a limit point.

These CA generate regular, periodic patterns, i.e., entering a limit cycle.

CAs in this class evolve to aperiodic patterns, independent of the initial conﬁg-
uration; their trajectories in the conﬁguration space lie on a chaotic attractor.

This class encompasses all the CAs that seem to behave in a complex way,
with features such as propagating structures, long transients; they are thought
to have the capability of universal computation.

Although Wolfram’s classiﬁcation scheme is widely adopted, it still remains a ten-
tative result as he himself states [26]. Note that the type of classiﬁcation he provides
is phenotypic, in the sense that it is based on observed behaviour, whereas a geno-
typic classiﬁcation would be based on the intrinsic structure of the rules in each
class.

Despite these observations, classiﬁcation still remains a difﬁcult task as is evi-
denced by the ongoing research in dynamical systems. Other attempts at classi-
ﬁcation of ECA rules include the following. Firstly, ˇCulik and Yu gave a formali-
sation of Wolfram’s classes [45]. Secondly, Li and Packard studied the structure of

11

the ECA rule space according to a certain distance metric, resulting in ﬁve classes
[46]. Then, Braga et al. identiﬁed three classes based on the growth of patterns
observed in CA models [47]. Next, Wuensche used a whole arsenal of local mea-
sures to automatically create complex rules, thereby classifying the rule space for
the CAs’ dynamics [48]. Furthermore, Dubacq et al. classiﬁed CA models based
on their algorithmic complexity by measuring the information content of the local
transition rule [49]. And ﬁnally, Fat`es who used a macroscopic parameter, i.e., the
density of 1’s, to separate chaotic ECA rules from non-chaotic ones [50].

2.1.2 An example of a CA

To end this section, let us give some deﬁnitions of a one dimensional, inﬁnitely
large, binary state CA with a neighbourhood of radius 1:

(with d = 1),

L = Zd
Σ = Z2 = {0, 1},
Ni = {i − 1, i, i + 1},
2 −→ Z2

δ(i, t) : Z3

G(C(t)) : ZZ

2 −→ ZZ

2

: C(t) 7−→ C(t + 1).

: {σi−1(t), σi(t), σi+1(t)} 7−→ σi(t + 1),

(9)
(10)
(11)

(12)

(13)

Note that in equation (11), we assume that the ith cell’s neighbourhood is repre-
sented by integer indices (i.e., the cells form a totally ordered set). This alleviates
the need for an explicit representation of the cells themselves, as it is now sufﬁcient
to work with the cells’ indices and states. The transition rule δ in equation (12)
takes as its arguments a cell’s index i and current time step t, but operates on the
states of this cell’s neighbourhood. The global map in equation (13) operates on the
global conﬁguration of the CA at time step t.

2.2 Basic variables and conventions

Conforming to the setup and notation discussed in the previous sections, we denote
a TCA’s discrete lattice by L (for the remainder of this section, we assume a rect-
angular lattice). This lattice physically represents the road on which vehicles will
drive in a TCA model. It consists of LL lanes, each of which has KL cells, so in
total there are LL × KL cells in the lattice (LL, KL ∈ N0). Each cell can either be
empty, or occupied with a single vehicle that spans one or more consecutive cells.
An example of a lattice containing several vehicles, can be seen in Fig. 5.

Based on the microscopic vehicle characteristics of a vehicle’s space headway,
space gap, length, time headway, time gap, and occupancy time, we propose to
use the following set of deﬁnitions for multi-lane vehicular road trafﬁc ﬂows that
are heterogeneous (in the sense of having different vehicle lengths) [51]:

12

gl,b
si

gl,f
si

hsi

gsi

i

li

gr,b
si

gr,f
si

Fig. 5. A portion of the lattice L at a certain time step; it has LL = 3 lanes, containing six
vehicles. The central vehicle i has a space headway hsi = 6 cells, consisting of a space gap
gsi = 4 cells and its length li = 2 cells. There are four other space gaps to be considered
when the neighbouring lanes are taken into account: gl,f
si (left-back), gr,f
si
si
(right-front), and gr,b
si = xl,f
gl,f
si = xr,f
gr,f
si = xi − xl,b
gl,b
si = xi − xr,b
gr,b

i − xi − li,
i − xi − li,
i − ll,b
i ,
i − lr,b
,

si (right-back), equalling 6, 4, 2 and 2 cells, respectively.

(left-front), gl,b

(17)

(14)

(16)

(15)

i

for which we assume that a vehicle’s position is denoted by the cell that contains
its rear bumper. For the example in Fig. 5, the left and right frontal and backward
space gaps of the central vehicle i are 6, 4, 2 and 2 cells, respectively (all these space
gaps thus represent effective distances, corresponding to the number of empty cells
between vehicles). Similar deﬁnitions hold for the space headways hl,f
si , hl,b
si ,
and hr,b
si , i.e., the vehicle lengths in the right-hand sides of equations (14) – (17) are
ti , gr,f
dropped. Derivations for the time gaps gl,f
ti , and time headways
ti
ti , hr,f
hl,f
Discriminating between frontal an backward neighbours in the adjacent lanes to the
ith vehicle, is done based on their positions, i.e.:

ti are analogous.

ti , and gr,b

ti , and hr,b

ti , hl,b

si , hr,f

, gl,b

{xl,b

i , xr,b

i } < xi ≤ {xl,f

i

, xr,f

i }.

(18)

According to equation (18), a vehicle that is driving alongside in an adjacent lane
to the ith vehicle, will be considered as a backward neighbour as long as its rear
bumper is located strictly behind the rear bumper of the ith vehicle (even if this
neighbour has a large length that ‘sticks out’ in front of the ith vehicle).

Under the above set of assumptions, we can now write the conditions for a success-
ful lane change (i.e., a possible gap acceptance) as the following constraints:

gl,f
si ≥ 0 ∧ gl,b
si ≥ 0 ∧ gr,b
gr,f

si ≥ 0 (left lane change),
si ≥ 0 (right lane change).

(19)

(20)

13

With respect to the domains of all variables, we note that all vehicle lengths, space
gaps, and space headways are expressed as integers, or more speciﬁcally:

In contrast to this, the occupancy times, time headways, and time gaps are not
restricted to the domain of integers, i.e.:

li, hsi, hl,b
gsi, hl,f
si , gl,f

si , hr,b
si , hr,f
si , gr,f

si ∈ N0,
si ∈ N,
si ∈ Z.

gl,b
si , gr,b

ρi, hti, hl,b
gti, hl,f
ti , gl,f

ti , hr,b
ti , hr,f
ti , gr,f

ti ∈ R+
0 ,
ti ∈ R+,
ti ∈ R.

ti , gr,b
gl,b

For example, the occupancy time ρi as deﬁned by ρi = li/vi [51], corresponds to
the time a vehicle ‘spends’ in its own cells.
To conclude, each vehicle i in the lattice has an associated speed vi ∈ N (expressed
in cells per time step ∆T ), which is bounded by a maximum speed vmax ∈ N0.
For example, if we set ∆T = 1.2 s, ∆X = 7.5 m, and vmax = 5 cells/time step,
then vi ∈ {0, . . . , 5} which corresponds to a maximum of 5 × ∆X/∆T = 5 ×
7.5 m/s ÷ 1.2 s = 31.25 m/s = 112.5 km/h. As can be seen in this derivation, we
only consider positive speeds in our models, i.e., vehicles always move forward.

2.3 Performing macroscopic measurements

The previously discussed quantities are all microscopic trafﬁc stream characteris-
tics. In this section, we reconsider the macroscopic quantities densities, ﬂows, and
mean speeds [51]. As we now have to measure these quantities on a TCA’s lattice
L, we present three possibilities for obtaining the data points:

• by performing local measurements with an artiﬁcial loop detector of ﬁnite length

(open and closed systems),

• by performing global measurements on the entire lattice (closed system),
• and by performing local measurements with an artiﬁcial loop detector of unit

length (open and closed systems).

In the following three sections, we give detailed derivations of each of these mea-
surement techniques. Locally measured quantities are indicated by a ‘l’ subscript,
whereas globally measured ones are indicated by an ‘g’ subscript. A temporal and
spatial discretisation of respectively ∆T (in seconds) and ∆X (in metres) is im-
plicitly assumed.

14

For all following techniques, we assume an integer measurement period of
Tmp time steps. Thus, aggregating data into intervals of 60 seconds with
∆T = 1.2 s, requires a measurement period of:

Tmp =

= 50 time steps.

(21)

60
1.2 (cid:21)

(cid:20)

Furthermore, densities are expressed in vehicles per cell, ﬂows in vehicles
per time step, and space-mean speeds in cells per time step.

2.3.1 Local measurements with a detector of ﬁnite length

In this section, we deal with an artiﬁcial loop detector of ﬁnite length Kld ∈ N0,
located in a single lane. Note that typically, Kld ≥ vmax, so as to ensure that no
vehicles can ‘skip’ the detector between consecutive time steps. The ﬁrst step in
our approach for performing these measurements, is based on obtaining local mea-
surements of the density and ﬂow for such a spatial measurement region at a certain
time step t [51]. Once these are known, the space-mean speed can be derived using
the fundamental relation of trafﬁc ﬂow theory q = k vs [51]:

kl(t) =

,

N(t)
Kld
1
Kld

N (t)

Xi=1

⇓

ql(t) =

vi(t),

vsl(t) =

ql(t)
kl(t)

=

1
N(t)

N (t)

Xi=1

vi(t),

(22)

(23)

(24)

where we assumed N(t) vehicles are present at time t in the loop detector’s seg-
ment. The density and ﬂow measurements of consecutive time steps are now tem-
porally averaged over subsequent spatial measurement regions. In similar fashion
as before, the space-mean speed is derived using the previously mentioned funda-
mental relation:

15

kl =

kl(t) =

1
Tmp

1
Tmp

Tmp

Xt=1
Tmp

Xt=1

ql =

⇓

ql(t) =

1
Tmp Kld

1
Tmp Kld

Tmp

N(t),

Xt=1
Tmp

N (t)

vi(t),

Xt=1

Xi=1

Tmp

N (t)

Tmp

vsl =

=

vi(t)

N(t) ,

ql
kl
Tmp

Xt=1
Tmp

Xt=1

Xt=1

Xi=1
1
N(t)

=

N(t)

=

N(t) vsl(t)

,

Xt=1

N (t)

Xi=1

vi(t)

Tmp

,

Xt=1

,

Xt=1

N(t) .

Tmp

N(t) ,

Our derivations for kl and ql as outlined above, also correspond to the generalised
deﬁnitions of density and ﬂow, deﬁned as the total time spent, respectively the total
distance travelled, divided by the area of the measurement region (which corre-
sponds to Tmp × Kld). Furthermore, note that the last equation (28) essentially is a
weighted mean of the local space-mean speeds vsl(t) at each time step t, with the
number of vehicles N(t) as weights.

2.3.2 Global measurements on the entire lattice

For the global measurements, we consider N vehicles that are driving in a closed
single-lane system, i.e., with a length of KL cells (the extension to multi-lane traf-
ﬁc is straightforward). As a consequence, the global density kg remains constant
during the entire measurement period. The derivations of the equations for kg, qg,
and vsg, are completely equivalent to those of the previous section 2.3.1, but now
with Kld = KL:

,

N
KL
1
Tmp KL

kg =

qg =

⇓

vsg =

=

qg
kg

=

=

1
Tmp N
Tmp

1
Tmp

Xt=1

Tmp

N

Xt=1

Xi=1

vi(t),

Tmp

N

1
Tmp N
Tmp

Xi=1
N

Xt=1
1
N

N

Xt=1

Xi=1

vi(t),

vi(t),

vsg(t).

16

(25)

(26)

(27)

(28)

(29)

(30)

(31)

(32)

Note that, for single-cell TCA models, the global density computed with equa-
tion (29) actually corresponds to the macroscopic characteristic called occupancy
ρ [51]. For multi-cell models, the number of vehicles is in general less than the
number of occupied cells.

2.3.3 Local measurements with a detector of unit length

The third technique for measuring macroscopic trafﬁc ﬂow characteristics on a
TCA’s lattice, bears perhaps the closest resemblance to reality: it is based on an
artiﬁcial loop detector with unit length, i.e., Kld = 1 cell. The loop detector now
explicitly counts all the vehicles that pass it at each time step ∆T during the mea-
surement period Tmp.

This type of measurement corresponds to a point measurement in a temporal mea-
surement region. Because of this, the appropriate method for computation is dif-
ferent from the one used in the previous two sections: we now ﬁrst compute the
local ﬂow, and the local space-mean speed, both for single-lane trafﬁc. The local
density is then derived according to the previously mentioned fundamental relation,
resulting in the following set of equations:

ql =

N
Tmp

,

vsl =

⇓

kl =

ql
vsl

,

1
N

 

N

Xi=1

−1

,

1
vi !

(33)

(34)

(35)

in which N now denotes the number of vehicles that have passed the detector during
the measurement period Tmp. Because the detector physically occupies one cell and
because a vehicle has to ‘drive by’ in order to get counted, this means that stopped
vehicles are ignored: only moving vehicles are counted. Note that, as opposed to
the previous two techniques, the above measurements no longer denote temporal
averages. And because we are working with a temporal measurement region, we
have to take the harmonic average of the vehicles’ speeds vi in order to obtain the
local space-mean speed vsl [51].

2.4 Conversion to real-world units

Converting between TCA and real-world units seems straightforward, as we only
need to suitably multiply with or divide by the temporal and spatial discretisations
∆T and ∆X, respectively. However, problems arise due to the discrete nature of a
TCA model, involving some intricacies with respect to coordinate systems and their
associated units. For example, as deﬁned in section 2.2, a vehicle i’s space headway

17

hsi is always an integer, expressing the number of cells. The same holds true for
its space gap gsi and length li. The difﬁculty now lies in the fact that fractions of
cells are not representable in our deﬁnition of a TCA model. Keeping in mind that
hsi = gsi + li [51], and noting that hsi ∈ N0, it follows that gsi + li > 0, which
means that either gsi 6= 0 and/or li 6= 0.

As a solution, we therefore adopt throughout this report the convention that, without
loss of generality, a vehicle’s length li ≥ 1 cell (which agrees perfectly with our
earlier deﬁnitions in section 2.2). Consequently, when a vehicle i is residing in a
compact jam (i.e., ‘bumper-to-bumper’ trafﬁc), its space headway hsi = l cells
and its space gap gsi = 0 cells. Our convention thus gives a rigourous justiﬁcation
to formulate the TCA’s update rules more intuitively using space gaps, because as
already stated in section 1.4, the rules in a TCA rule set are typically not expressed
in terms of space headways, but rather in terms of speeds and space gaps (i.e., the
distance to the leading vehicle).

In a similar fashion, time headways, time gaps, and occupancy times represent mul-
tiples of the temporal discretisation ∆T . But note that, as explained before in sec-
tion 2.2, these are however no longer constrained to integer values.

In the following two sections, we explain how to convert between coordinate sys-
tems of TCA models and the real world. All common variables (e.g., hsi) are ex-
pressed in TCA units, except for their ‘primed’ counterparts (e.g., h′
si), which are
expressed in real-world units. The conversions will be done with respect to the
following conventions:

• TCA model

of a time step,

· hsi, gsi, and li are dimensionless integers, denoting a number of cells,
· hti, gti, and ρi are dimensionless real numbers, denoting a fractional multiple

· kl and kg are real numbers, expressed in vehicles/cell,
· ql and qg are real numbers, expressed in vehicles/time step,
· and vi, vsl, and vsg are real numbers, expressed in cells/time step.

• Real world
· ∆X, h′
· ∆T , h′
· k′
· q′
· and v′

l and k′
l and q′
i, v′

si, and l′
ti, and ρ′

si, g′
i are real numbers, expressed in metres,
ti, g′
i are real numbers, expressed in seconds,
g are real numbers, expressed in vehicles/kilometre,
g are real numbers, expressed in vehicles/hour,
sl, and v′

sg are real numbers, expressed in kilometres/hour.

2.4.1 From a TCA model to the real world

Under the previously mentioned convention that li ∈ N0, we can write the conver-
sions of the microscopic characteristics related to the space and time headways and

18

gaps, and the vehicle lengths and occupancy times, in a straightforward manner:

h′
si = hsi · ∆X,

g′
si = gsi · ∆X,

l′
i = li · ∆X,

(36)

h′
ti = hti · ∆T,

g′
ti = gti · ∆T,

ρ′
i = ρi · ∆T.






Related to equations (36), there is a small but important detail that is easily over-
looked: we can not just convert between gsi, g′
i without making some
assumptions. Because we adopted the convention that li ≥ 1 cell, it follows that
l′
i ≥ ∆X. So it is not possible to take the real length of a vehicle smaller than the
spatial discretisation, because we assumed that the spatial units of a TCA model
are all integer values.

si, li, and l′

The conversions for the macroscopic trafﬁc stream characteristics densities, ﬂows,
and space-mean speeds, as well as the microscopic vehicle speed, are as follows:

(37)

k′ = k ·

q′ = q ·

1000
∆X

,

3600
∆T

,

v′
s = vs · 3.6 ·

∆X
∆T

.






19

To keep the previous equations clear, we have dropped the subscripts denoting
global and local measurements.

It is interesting to see what happens at the jam density, i.e., the maximum
density when all cells in the lattice are occupied. As all vehicles are standing
still bumper-to-bumper, the associated space gap at this density, equals zero.
Computing the space headway, results in hsi = 0 + li. By virtue of the fact
that density is inversely proportional to the average space headway [51],
we can cast this space headway into a density, e.g., for a single-cell TCA
model: kj = hsj
i = 1. Applying the conversion by means of
equations (37) and assuming a spatial discretisation ∆X = 7.5 m, results
in a real-world jam density k′
j = 1000 ÷ 7.5 m ≈ 133 vehicles/kilometre.
Conversely, if we know k′
j, then we can derive kj (see section 2.4.2) and
hence we have a method to pick a ∆X.

= l−1

= l

−1

−1

If we were to consider multi-cell trafﬁc, e.g., vehicles with different lengths,
then the jam density would be inversely proportional to the average vehicle
length. A solution here is to assume a common unit for all vehicle lengths,
e.g., passenger car units (PCU) [51]. Even though the jam density can be
deﬁned for each vehicle class separately, it would be more correct to speak of
an average jam density at this point due to the temporal and spatial variations
in trafﬁc ﬂows.

2.4.2 From the real world to a TCA model

Based on equations (36), we can write the reverse conversion of the microscopic
characteristics in the following manner:

hsi =

gsi =

g′
si
∆X

,

li =

l′
i
∆X

,

hti =

gti =

g′
ti
∆T

,

ρi =

ρ′
i
∆T

.

h′
si
∆X

,

h′
ti
∆T

,






In order to agree with our previously stated convention, i.e., all spatial microscopic
characteristics in a TCA model are integers, equations (38) implicitly assume that
the real-world spatial variables are multiples of the spatial discretisation (e.g., h′
si =
m · ∆X with m ∈ N0).
Another possible approach to the spatial conversion to TCA model units, is to ap-
proximate the real-world values as best as possible, whilst keeping our adopted
convention. As li ≥ 1 cell, this leads to the following scheme where we use up-
ward rounding (i.e., ceiling):

(38)

(39)

hsi =

h′
si
∆X '

,

&

li =

l′
i
∆X '

,

&






=⇒ gsi = hsi − li.

20

For example, if ∆X = 7.5 m, l′
si = 4.5+5 = 9.5 m,
and from equation (39) it follows that hsi = 2 cells, li = 1 cell, and gsi = 2 −1 = 1
cell. Because equation (39) is only an approximation, it more than often occurs that
the computed space headway ‘exceeds’ the real-world space headway.

si = 5 m, then h′

i = 4.5 m, and g′

In similar spirit, the conversion for the macroscopic characteristics can be easily
derived from equations (37). However, as opposed to equations (38) and (39), there
is no need for an approximation by means of rounding, because these quantities are
real numbers, as mentioned in the introduction of section 2.4.

3 Single-cell models

Having discussed the mathematical and physical aspects of cellular automata and
TCA models in particular, we now focus on single-cell models. As explained be-
fore in section 1.3, each cell can either be empty, or is occupied by exactly one
vehicle; all vehicles have the same length li = 1 cell. Trafﬁc is also considered to
be homogeneous, so all vehicles’ characteristics are assumed to be the same. In the
subsequent sections, we take a look at the following TCA models (accompanied by
their suggested abbreviations):

• Deterministic models

· Wolfram’s rule 184 (CA-184)
· Deterministic Fukui-Ishibashi TCA (DFI-TCA)

• Stochastic models

· Nagel-Schreckenberg TCA (STCA)
· STCA with cruise control (STCA-CC)
· Stochastic Fukui-Ishibashi TCA (SFI-TCA)
· Totally asymmetric simple exclusion process (TASEP)
· Emmerich-Rank TCA (ER-TCA)

• Slow-to-start models

· Takayasu-Takayasu TCA (T2-TCA)
· Benjamin, Johnson, and Hui TCA (BJH-TCA)
· Velocity-dependent randomisation TCA (VDR-TCA)
· Time-oriented TCA (TOCA)
· TCA models incorporating anticipation
· Ultra discretisation, slow-to-accelerate, and driver’s perspective

For other excellent overviews of TCA models, we refer the reader to the works of
Chowdhury et al. [3], Knospe et al. [19], Nagel [37], Nagel et al. [52], Schadschnei-
der [53,54], and Schreckenberg et al. [55].

All following TCA models will be empirically studied using simulations that are
performed on a unidirectional, single-lane lattice with periodic boundary condi-
tions, i.e., a closed loop with LL = 1. The length of this lattice equals KL = 103
cells, which is taken large enough in order to reduce most unwanted ﬁnite-size

21

effects. Our own experiments indicate that larger lattice sizes do not render any sig-
niﬁcant advantage, aside from the burden of a larger computation time.

The importance of studying closed-loop, single-lane trafﬁc

There is often a criticism expressed as to why it is important to study the
behaviour of trafﬁc ﬂows in such a simpliﬁed system. After all, can such a
basic system capture all the dynamics of real-life trafﬁc ﬂows, or be even
representative of them ? The answer to this question is that, in our opinion,
the dynamics of these constrained systems play an important, non-negligible
role. For example, when considering trafﬁc ﬂows on most unidirectional
two-lane European motorways, drivers are by law obliged to drive on the
right shoulder lane, unless when performing overtaking manoeuvres. A fre-
quently observed phenomenon is then that under light trafﬁc conditions (e.g.,
10 vehicles/km/lane), a slower moving vehicle (e.g., a truck) is located on the
right lane, and is acting as a moving bottleneck. As a result, all faster vehi-
cles will line up on the left lane (overtaking on the right lane is prohibited
by law), thereby causing a density or lane inversion [56,57,5,58]. It is under
these circumstances that the stability of the car-following behaviour plays an
important role. Similarly, in densely congested trafﬁc, e.g., the synchronised-
ﬂow regime, the same stability may govern the fact whether or not a trafﬁc
breakdown is likely to be induced (see our work in [1] for a discussion on the
nature of this breakdown). Even for multi-lane trafﬁc, we believe its dynam-
ics are essentially those of parallel single lanes when considering densely
congested trafﬁc ﬂows. Another argument for the necessity of studying these
simpliﬁed systems, is the one given by Nagel and Nelson. They state that this
is the easiest way to determine whether or not internal effects of a trafﬁc ﬂow
model play a role in e.g., the spontaneous breakdown of trafﬁc, as all exter-
nal effects (i.e., the boundary conditions) are eliminated [59]. Nevertheless,
when applying these models to real-life trafﬁc networks, closed-loop trafﬁc
is not very representative, as the behaviour near bottlenecks plays a far more
important role [6].

All measurements on the TCA models’ lattices are based on two possible initial
conditions: depending on the nature of the study, we will either use homogeneous
initial conditions (the default), or a compact superjam to start with. In the former
case, all vehicles are uniformly distributed over the lattice, implying equal space
headways. In the latter case, all vehicles are ‘bunched up’ behind each other, with
zero space gaps. When going from one global density to another, an equivalent
method would be to adiabatically add (or remove) vehicles to an already homo-
geneous or jammed state. In our experiments however, we always reset the initial
conditions, corresponding to the ﬁrst method. The simulations ran each time for 104
time steps, after an initial period of 103 time steps was discarded in order to let tran-
sients from the initial conditions in the system die out. Global densities, ﬂows, and
space-mean speeds are computed by means of equations (29) – (32), whereas we

22

use a point detector, i.e., equations (33) – (35), to compute their local variants. In
this latter case, the data points were collected with a measurement period Tmp = 60
time steps. Based on these results, we can construct (kg,vsg), (kg,qg), (kl,vsl), and
(kl,ql) diagrams. To keep a clear formulation, we will however from now on drop
the subscripts denoting global and local measurements. All simulations were per-
formed by means of our Trafﬁc Cellular Automata + software (developed for the
JavaTM Virtual Machine); more information can be found in appendix A.

For a deeper insight into the behaviour of the space-mean speed vs, the average
space gap gs, and the median time gap gt, detailed histograms showing their distri-
butions are provided. Note that with respect to the time gaps and time headways, we
will work in the remainder of this report with the median instead of the arithmetic
mean. The median gives more robust results when hti, gti → +∞, which occurs
when a vehicle i stops. These histograms are interesting because in the existing
literature (e.g., [60,53,6]) these distributions are only considered at several distinct
global densities, whereas we show them for all densities. Each of our histograms is
constructed by varying the global density k between 0 and 1, computing the space-
mean speed, the average space gap and the median time gap for each simulation
run. A simulation run consists of 5 × 104 time steps (with a transient period of 500
time steps) on systems of 300 cells, varying the density in 150 steps. Note that a
larger size of the system’s lattice, has no signiﬁcant effects on the results, except
for an increase of the variance [61].

Before giving an elaborate discussion of some of the classic TCA models, it
is worthwhile to mention the ﬁrst historical and practical implementations of
trafﬁc cellular automata. Cremer and Ludwig conceived an implementation
of trafﬁc ﬂows based on lattice gas automata (LGA), which are a special
case of cellular automata typically employed when simulating viscous ﬂu-
ids [62]. Their seminal work, using individual bits to represent vehicles, was
extended by Sch¨utt, who provided a simulation package for heterogeneous
trafﬁc, multi-lane motorways, and network and city trafﬁc [63]. Unfortu-
nately, the developed models were quite inefﬁcient when they were used in
setting that called for large scale Monte Carlo simulations [64].

3.1 Deterministic models

In this section, we discuss Wolfram’s original rule 184, and its generalisation to
higher speeds as proposed by Fukui and Ishibashi’s deterministic model. We ab-
breviate these two TCA models as CA-184 and DFI-TCA, respectively.

3.1.1 Wolfram’s rule 184 (CA-184)

The ﬁrst deterministic model we consider, is a one-dimensional TCA model with
binary states. As LL = 1, this model is called an elementary cellular automaton
(ECA), according to the terminology introduced in section 1.2. If we furthermore

23

assume a local neighbourhood of three cells wide (i.e., a radius of 1), then there are
223
= 256 different rules possible, according to equation (3). Around 1983, Stephen
Wolfram classiﬁed all these 256 binary ECAs [21]. One of these is called rule 184,
who’s name is derived from Wolfram’s naming scheme.

Wolfram’s scheme is based on the representation of how a cell’s state evolves in
time, depending on its local neighbourhood. In Fig. 6, we have provided a conve-
nient visualisation for the evolution of the states in a binary ECA. Here, we can see
the state σi(t) of a central cell i at time step t, together with the states σi−1(t) and
σi+1(t) of its two direct neighbours i − 1 and i + 1, respectively. All three of them
constitute the local neighbourhood Ni(t) of radius 1 (see also our example of a CA
in section 2.1.2). Because states are binary, we can indicate them with a colour,
i.e., a black square represents a state of 1 (e.g., state σi+1(t) in Fig. 6), whereas an
empty (white) square represents a state of 0. According to the local transition rule
δ(i, t), the local neighbourhood Ni(t) is then mapped from t to t+1 onto a new state
σi(t+ 1). The graphical representation in Fig. 6 thus provides us with an illustrative
method to indicate the evolution of {σi−1(t), σi(t), σi+1(t)} 7−→ σi(t + 1).

i − 1 i

i + 1

t

t + 1

Fig. 6. An illustrative method for representing the evolution of a cell’s state in time, based
on its local neighbourhood. We can see the state σi(t) of a central cell i at time step t,
together with the states σi−1(t) and σi+1(t) of its two direct neighbours i − 1 and i + 1,
respectively. This local neighbourhood is mapped onto a new state σi(t + 1). For binary
states, we use a black square to represent a state of 1 (e.g., state σi+1(t)), and an empty
(white) square for a state of 0. The depicted transition maps the triplet (001)2 onto the state
σi(t + 1) = 0.

Considering the transition depicted in Fig. 6, we can see that a complete neighbour-
hood contains three cells, each of which can be in a 0 (white) or 1 (black) state. So
in total, there are 23 = 8 possible conﬁgurations for such a local neighbourhood.
Wolfram’s naming scheme for the binary ECAs is now based on an integer coding
of this neighbourhood. Indeed, the local transition rule δ(i, t) is given by a table
lookup containing eight entries, one for each of the possible local neighbourhoods.
If we binary sort these eight conﬁgurations in the descending order (111), (110),
(101), (100), (011), . . . , then we obtain a graphic scheme such as the one in Fig. 7.
As can be seen, for each of the local conﬁgurations, a resulting 0 or 1 state is re-
turned for cell i at time step t + 1. Collecting all resulting states, and writing them
in base 2, results in the number (10111000)2. Converting this code to base 10, we
obtain the number 184. Wolfram now coded all 256 possible binary ECAs by a
unique number in the range from 0 to 255, resulting in 256 rules for these CAs.

Rule 184 (which we abbreviate as CA-184) is an asymmetrical rule because δ((110)2, t) =
0 6= δ((011)2, t) = 1. It is also called a quiescent rule because δ((000)2, t) = 0
(so all zero-initial conditions remain zero). As an example of the rule’s evolution,

24

1 1 1

1 1 0

1 0 1

1 0 0

0 1 1

0 1 0

0 0 1

0 0 0

1

0

1

1

1

0

0

0

Fig. 7. A graphical representation of Wolfram’s rule 184, which is written as (10111000)2
in base 2. All 8 possible conﬁgurations for the local neighbourhood are sorted in descending
order, expressing the local transition rule δ(i, t) as explained by Fig. 6. For example, the
local neighbourhood (100)2 gets mapped onto a state of 1. This has the physical meaning
that a particle (black square) moves to the right if its neighbouring cell is empty.

Fig. 7 shows that the local neighbourhood (100)2 gets mapped onto a state of 1.
If we consider these 1 states as particles (i.e., vehicles), and the 0 states as holes,
then rule 184 dictates that all particles move one cell to the right, on the condition
that this right neighbour cell is empty. Equivalently, all holes have the tendency to
move to the left for each particle that moves to the right, a phenomenon which is
termed the particle-hole symmetry.

For a TCA model, we can rewrite the previous actions as a set of rules that are
consecutively applied to all vehicles in the lattice, as explained in section 1.4. For
the CA-184, we have the following two rules:

R1: acceleration and braking

R2: vehicle movement

vi(t) ← min{gsi(t − 1), 1},

xi(t) ← xi(t − 1) + vi(t).

(40)

(41)

Rule R1, equation (40), sets the speed of the ith vehicle, for the current updated
conﬁguration of the system; it states that a vehicle always strives to drive at a speed
of 1 cell/time step, unless its impeded by its direct leader, in which case gsi(t−1) =
0 and the vehicle consequently stops in order to avoid a collision. The second rule
R2, equation (41), is not actually a ‘real’ rule; it just allows the vehicles to advance
in the system.

In Fig. 8, we have applied these rules to a lattice consisting of 300 cells (closed
loop), showing the evolution over a period of 580 time steps. The time and space
axes are oriented from left to right, and bottom to top, respectively. In the left part,
we show a free-ﬂow regime with a global density k = 0.2 vehicles/cell, in the
right part we have a congested regime with k = 0.75 vehicles/cell. Each vehicle
is represented as a single coloured dot; as time advances, vehicles move to the
upper right corner, whereas congestion waves move to the lower right corner, i.e.,
backwards in space. From both parts of Fig. 8, we can see that the CA-184 TCA
model constitutes a fully deterministic system that continuously repeats itself. A
characteristic of the encountered congestion waves is that they have an eternal life
time in the system.

25

Fig. 8. Typical time-space diagrams of the CA-184 TCA model. The shown closed-loop
lattices each contain 300 cells, with a visible period of 580 time steps (each vehicle is
represented as a single coloured dot). Left: vehicles driving a free-ﬂow regime with a global
density k = 0.2 vehicles/cell. Right: vehicles driving in a congested regime with k = 0.75
vehicles/cell. The congestion waves can be seen as propagating in the opposite direction of
trafﬁc; they have an eternal life time in the system. Both time-space diagrams show a fully
deterministic system that continuously repeats itself.

In Fig. 9, we have plotted both the (k,vs) and (k,q) diagrams. As can be seen from
the left part, the global space-mean speed remains constant at vs = 1 cell/time step,
until the critical density kc = 0.5 is reached, at which point vs will start to diminish
towards zero where the critical density kj = 1 is reached. Similarly, the global ﬂow
ﬁrst increases and then decreases linearly with the density, below and respectively
above, the critical density. Here, the capacity ﬂow qcap = 0.5 vehicles/time step is
reached. The transition from the free-ﬂowing to the congested regime is charac-
terised by a ﬁrst-order phase transition. As is evidenced by the isosceles triangular
shape of the CA-184’s resulting (k,q) fundamental diagram, there are only two
possible kinematic wave speeds, i.e., +1 and -1 cell/time step. Both speeds are also
clearly visible in the left, respectively right, time-space diagrams of Fig. 8. More
analytical details on these values will be provided in the following section 3.1.2.

1

]
p
e
t
s
 
e
m

i
t
/
s

l
l

e
c
[
 

d
e
e
p
s
 
n
a
e
m
−
e
c
a
p
s
 
l

a
b
o
G

l

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.5

0.4

0.3

0.2

0.1

]
p
e
t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o

l
f
 
l

a
b
o
G

l

26

0
0

0.1

0.2

0.4

0.3
0.7
0.5
Global density [vehicles/cell]

0.6

0.8

0.9

1

0.4

0.3
0.7
0.5
Global density [vehicles/cell]

0.6

0.8

0.9

1

0
0

0.1

0.2

Fig. 9. Left: the (k,vs) diagram for the CA-184, based on global measurements on the
lattice. The global space-mean speed remains constant at vs = 1 cell/time step, until the
critical density kc = 0.5 is reached, at which point vs will start to diminish towards zero.
Right: the CA-184’s (k,q) diagram, with its characteristic isosceles triangular shape. The
transition between the free-ﬂowing and the congested regime is of a ﬁrst-order nature.

3.1.2 Deterministic Fukui-Ishibashi TCA (DFI-TCA)

In 1996, Fukui and Ishibashi constructed a generalisation of the prototypical CA-
184 TCA model [65]. Although their model is essentially a stochastic one (see sec-
tion 3.2.3), we will ﬁrst discuss its deterministic version. Fukui and Ishibashi’s idea
was two-fold: on the one hand, the maximum speed was increased from 1 to vmax
cells/time step, and on the other hand, vehicles would accelerate instantaneously
to the highest possible speed. Corresponding to the deﬁnitions of the rule set of a
TCA model, the CA-184’s rule R1, equation (40), changes as follows:

R1: acceleration and braking

vi(t) ← min{gsi(t − 1), vmax}.

(42)

Just as before, a vehicle will now avoid a collision by taking into account the size of
its space gap. To this end, it will apply an instantaneous deceleration: for example,
a fast-moving vehicle might have to come to a complete stop when nearing the end
of a jam, thereby abruptly dropping its speed from vmax to 0 in one time step.

Due to the strictly deterministic behaviour of the system, the time-space diagrams
of the DFI-TCA do not differ much from those of the CA-184. The only difference
is the speed of the vehicles in the free-ﬂow regime, leading to steeper trajectories.
It is however interesting to study the (k,vs) and (k,q) diagrams in Fig. 10. Here
we can see that increasing the maximum speed vmax creates — as expected — a
steeper free-ﬂow branch in the (k,q) diagram. Interestingly, the slope of the con-
gested branch does not change, logically implying that the kinematic wave speed
for jams remains constant, i.e., -1 cell/time step. This can be conﬁrmed with an
analytical kinematic wave analysis, as explained by Nagel [52].

vMax = 5
vMax = 4
vMax = 3
vMax = 2
vMax = 1

5

4

3

2

1

]
p
e
t
s
 
e
m

i
t
/
s

l
l

e
c
[
 
d
e
e
p
s
 
n
a
e
m
−
e
c
a
p
s
 
l
a
b
o
G

l

0
0

0.1

0.2

0.4

0.3
0.7
0.5
Global density [vehicles/cell]

0.6

0.8

0.9

1

0
0

0.1

0.2

0.4

0.3
0.7
0.5
Global density [vehicles/cell]

0.6

0.8

0.9

1

Fig. 10. Left: several (k,vs) diagrams for the deterministic DFI-TCA, each for a different
vmax ∈ {1, . . . , 5}. Similarly to the CA-184, the global space-mean speed remains constant,
until the critical density is reached, at which point vs will start to diminish towards zero.
Right: several of the DFI-TCA’s (k,q) diagrams, each having a triangular shape (with the
slope of the congestion branch invariant for the different vmax).

Based on the behaviour of the vehicles near the critical density, we can analytically
compute the capacity ﬂow as follows: in the free-ﬂow regime, all vehicles move

vMax = 5
vMax = 4
vMax = 3
vMax = 2
vMax = 1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

]
p
e
t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o
l
f
 
l
a
b
o
G

l

27

with a constant speed of vmax cells/time step. When the critical density is reached,
all vehicles drive collision-free at this maximum speed, which implies that gsi =
vmax cells. The space headway hsi = vmax + 1 (because li = 1 for single-cell
models). Consequently, the value for the critical density as [51]:

The capacity ﬂow is now computed by means of the fundamental relation, i.e.,
qcap = kc vmax:

kc =

1
hsc

=

1
vmax + 1

.

qcap =

vmax
vmax + 1

.

(43)

(44)

Applying equations (43) and (44), for e.g., vmax = 5 cells/time step, results in
kc ≈ 0.167 vehicles/cell and qcap ≈ 0.83 vehicles/time step. If we furthermore
assume ∆X = 7.5 m and ∆T = 1 s, then both values correspond to 22 vehi-
cles/kilometre and 3000 vehicles/hour, respectively.

As opposed to the instantaneous acceleration in rule R1, equation (42), we can
also assume a gradual acceleration of one cell per time step (the braking remains
instantaneous):

R1: acceleration and braking

vi(t) ← min{vi(t − 1) + 1, gsi(t − 1), vmax}.

(45)

However, our experimental observations have indicated that there is no difference
in global system dynamics, with respect to either adopting gradual or instantaneous
vehicle accelerations.

There exists a strong relation between the previously discussed deterministic
TCA models, and the macroscopic ﬁrst-order LWR model with a triangular
qe(k) fundamental diagram [1]. Some of the ﬁner results in this case, are
the work of Nagel who extensively discusses some analytical results of both
deterministic and stochastic TCA models [37], and the work of Daganzo who
explicitly proves an equivalency between two TCA models and the kinematic
wave model with a triangular qe(k) fundamental diagram [66]. More details
with respect to such analytical relations, are given in sections 3.2.4 and 5.3.

To conclude our discussion of deterministic models, we take a look at what hap-
pens in the limiting case where vmax → +∞. As can be seen in Fig. 11, the con-
gested branches in both (k,vs) and (k,q) diagrams grow, at the cost of the free-
ﬂow branches which disappear. Interestingly, these diagrams correspond one-to-
one with a triangular qe(k) fundamental diagram that is now expressed in a moving
coordinate system, as explained by Newell [67]. In such a simpliﬁed system, the
critical density kc = 0, with a capacity ﬂow qcap = 1.

28

]
p
e
t
s
 
e
m

i
t
/
s

l
l

e
c
[
 
d
e
e
p
s
 
n
a
e
m
−
e
c
a
p
s
 
l
a
b
o
G

l

+INF

20

15

10

5

0
0

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

]
p
e
t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o
l
f
 
l
a
b
o
G

l

0.1

0.2

0.4

0.3
0.7
0.5
Global density [vehicles/cell]

0.6

0.8

0.9

1

0
0

0.1

0.2

0.4

0.3
0.7
0.5
Global density [vehicles/cell]

0.6

0.8

0.9

1

Fig. 11. Left: the (k,vs) diagram for the deterministic CA-184, with now vmax → +∞.
Right: the (k,q) diagram for the same TCA model, resulting in a critical density kc = 0,
with a capacity ﬂow qcap = 1. This type of diagram corresponds to a simpliﬁed triangular
qe(k) fundamental diagram that is expressed in a moving coordinate system.

3.2 Stochastic models

The encountered models in the previous section were all deterministic in nature, im-
plying that there can be no spontaneous formation of jam structures. All congested
conditions produced in those models, essentially stemmed from the assumed initial
conditions. In contrast to this, we now discuss stochastic TCA models (i.e., these
are probabilistic CAs) that allow for the spontaneous emergence of phantom jams.
As will be shown, all these models explicitly incorporate a stochastic term in their
equations, in order to accomplish this kind of real-life behaviour [68].

3.2.1 Nagel-Schreckenberg TCA (STCA)

In 1992, Nagel and Schreckenberg proposed a TCA model that was able to repro-
duce several characteristics of real-life trafﬁc ﬂows, e.g., the spontaneous emer-
gence of trafﬁc jams [38,64]. Their model is called the NaSch TCA, but is more
commonly known as the stochastic trafﬁc cellular automaton (STCA). It explic-
itly includes a stochastic noise term in one of its rules, which we present in the
same fashion as those of the previously discussed deterministic TCA models. The
STCA then comprises the following three rules (note that in Nagel and Schrecken-
berg’s original formulation, they decoupled acceleration and braking, resulting in
four rules):

R1: acceleration and braking

vi(t) ← min{vi(t − 1) + 1, gsi(t − 1), vmax},

ξ(t) < p =⇒ vi(t) ← max{0, vi(t) − 1},

R2: randomisation

R3: vehicle movement

(46)

(47)

29

xi(t) ← xi(t − 1) + vi(t).

(48)

Like in both CA-184 and DFI-TCA deterministic TCA models (see sections 3.1.1
and 3.1.2), the STCA contains a rule for increasing the speed of a vehicle and brak-
ing to avoid collisions, i.e., rule R1, equation (46), as well as rule R3, equation (48),
for the actual vehicle movement. However, the STCA also contains an additional
rule R2, equation (47), which introduces stochasticity in the system. At each time
step t, a random number ξ(t) ∈ [0, 1[ is drawn from a uniform distribution. This
number is then compared with a stochastic noise parameter p ∈ [0, 1] (called the
slowdown probability); as a result, there is a probability of p that a vehicle will
slow down to vi(t) − 1 cells/time step. The STCA model is called a minimal model,
in the sense that all these rules are a necessity for mimicking the basic features of
real-life trafﬁc ﬂows.

According to Nagel and Schreckenberg, the randomisation of rule R2
captures natural speed ﬂuctuations due to human behaviour or vary-
ing external conditions. The rule introduces overreactions of drivers when
braking, providing the key to the formation of spontaneously emerging jams.

Although the above rationale is widely agreed upon, much criticism was
however expressed due to this second rule. For example, Brilon and Wu be-
lieve that this rule has no theoretical background and is in fact introduced
quite heuristically [69].

To get an intuitive feeling for the STCA’s system dynamics, we have provided two
time-space diagrams in Fig. 12. Both diagrams show the evolution for a global den-
sity of k = 0.2 vehicles/cell, but with p set to 0.1 for the left diagram, and p = 0.5
for the right diagram. As can be seen in both diagrams, the randomisation in the
model gives rise to many unstable artiﬁcial phantom mini-jams. The downstream
fronts of these jams smear out, forming unstable interfaces [52]. This is a direct
result of the fact that the intrinsic noise (as embodied by p) in the STCA model
is too strong: a jam can always form at any density, meaning that breakdown can
(and will) occur, even in the free-ﬂow trafﬁc regime. For low enough densities how-
ever, these jams can vanish as they are absorbed by vehicles with sufﬁcient space
headways, or by new jams in the system [70]. It has been experimentally shown
that below the critical density, these jams have ﬁnite life times with a cut-off that
is about 5 × 105 time steps and independent of the lattice size. When the critical
density is crossed, these long-lived jams evolve into jams with an inﬁnite life time,
i.e., they will survive for an inﬁnitely long time [71,64,72].

In free-ﬂow trafﬁc, a vehicle’s speed will ﬂuctuate between vmax and vmax −1, due to
the randomisation rule R2. We can compute the space-mean speed in the free-ﬂow
regime by means of a weighted average. This average corresponds to the probability
1 − p for driving with the speed vmax and the probability p for slowing down to the
speed vmax − 1. As such, we get vsff =
wi = [(1 − p)vmax + p(vmax −

wivi/

P

P

30

Fig. 12. Typical time-space diagrams of the STCA model (similar setup as for the CA-184
TCA model in Fig. 8). Both diagrams have a global density of k = 0.2 vehicles/cell. Left:
the evolution of the system for p = 0.1. Right: the evolution of the system, but now for
p = 0.5. The effects of the randomisation rule R2 are clearly visible in both diagrams, as
there occur many unstable artiﬁcial phantom mini-jams. Furthermore, the speed w of the
backward propagating kinematic waves decreases with an increasing p.

1)]/[(1 − p) + p] = vmax − p. In agreement with the space-mean speed observed
in the left (k,vs) diagram of Fig. 13, we can state that a vehicle will drive with an
average free-ﬂow speed of vff = vmax − p.

p = 0.1
p = 0.5
p = 0.9

p = 0.1
p = 0.5
p = 0.9

4.5

5

4

3

2

1

3.5

2.5

1.5

]
p
e
t
s
 
e
m

i
t
/
s

l
l

e
c
[
 
d
e
e
p
s
 
n
a
e
m
−
e
c
a
p
s
 
l
a
b
o
G

l

0.5

0
0

0.2

0.4

0.6

0.8

1

0.2

0.4

0.6

0.8

1

Global density [vehicles/cell]

Global density [vehicles/cell]

Fig. 13. Left: several (k,vs) diagrams for the STCA, each for a different p ∈ {0.1, 0.5, 0.9}.
It is clear from the diagram, that a vehicle will drive with an average free-ﬂow speed of
vff = vmax − p. Right: several (k,q) diagrams for the same STCA models as before. The
slope of the congested branch tends toward zero for an increasing slowdown probability
p. Note that the seemingly small capacity drops at the critical density in the right part, are
actually ﬁnite-size effects [73,74].

As mentioned in section 3.1.2, the slope of the free-ﬂow branch in a (k,q) diagram
can be changed by adjusting vmax. Similarly, the slope of the congested branch can
be changed by tuning the slowdown probability p (note that this also affects the
average free-ﬂow speed). Looking at the (k,q) diagram in the right part of Fig. 13,
we note that an increase of p will on the one hand result in a smaller vff, and on the
other hand the congested branch will lie lower, with a smaller critical density kc.
In this latter case, the speed w of the backward propagating kinematic waves will
decrease, an effect that is also visible in the time-space diagrams of Fig. 12. Note
that the presence of noise in the STCA model causes both free-ﬂow and congested
branches of the (k,q) diagram to be slightly curved, as opposed to the perfectly
linear branches of the deterministic models.

0.7

0.6

0.5

0.4

0.3

0.2

0.1

]
p
e
t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o
l
f
 
l
a
b
o
G

l

0
0

31

If we set p = 0, then the STCA model becomes deterministic; additionally, setting
vmax will recover the CA-184 TCA model. In the other deterministic case, when
p = 1, the system behaves differently: in the congested state, all vehicles will come
to a full stop, thereby reducing the global ﬂow in the system to zero. As a result,
the congested branch in the (k,q) regime will coincide with the horizontal axis. This
implies that the behaviour of a system with vmax and p = 1 is totally different than
that of a system with vmax − 1 and p = 0.

Fig. 14. Three (k,q) diagrams based on local measurements in the STCA model with
vmax = 5 cells/time step. Left: p = 0. Middle: p = 1
3 . Points obtained in the
free-ﬂow regime (i.e., for vs ≈ vmax cells/time step) are marked with a ◦, points obtained
in the congested regime with a ·, and points that imply heavy congestion (i.e., for vs < 1
cell/time step) with a ⋆. Note that for these local diagrams, the slopes of the congested
branches (indicated by the points marked as ⋆) are the negative of its corresponding slope
in a global diagram.

3 . Right: p = 2

Considering local measurements of the density, ﬂow, and space-mean speed, the
(k,q) diagrams in Fig. 14 reveal that an increasing slowdown probability p, results
in (i) a lower value for the critical density, (ii) a lower capacity ﬂow, and (iii) a more
localised scatter of the data points.

In Fig. 15, we have plotted a histogram of the distributions of the STCA’s vehicles’
space gaps, for all global densities k ∈ [0, 1]. For very low densities, the distri-
butions have a distinct maximum, indicating that all vehicles travel with very large
space gaps. At higher densities, the maxima of the distributions shift toward smaller
space gaps, as more and more vehicles encounter jams, even leading to a reduction
of their space gap to zero. Around the critical density however, the distributions are
smeared out across consecutive densities, but for each of those densities they ex-
hibit a bimodal structure. Because the STCA contains many jams, the system now
contains both vehicles in free-ﬂow trafﬁc, as well as vehicles that are in a congested
state (i.e., driving closer to each other) [60,4,6,72].

In similarly spirit, Fig. 16 shows the distribution of the vehicles’ speeds and time
gaps. Corresponding with our observations of the (k,vs) diagrams in Fig. 13, the left
part of Fig. 16 shows a distinct cluster of probability mass at the histogram class
vmax − p for very low global densities. In this region, the standard deviation of the
space-mean speed is more or less constant and equal to p. At higher global densities,
the distributions become temporarily bimodal, after which they again tend to a
unique maximum of 0 cells/time step, corresponding to severely congested trafﬁc;
the standard deviation drastically encounters a maximum at the critical density,

32

0

0

2

4

6

8

10

Histogram class [space gap in cells]

(A)

(B)

0.5

0.45

0.4

0.35

0.3

0.25

0.2

0.15

0.1

0.05

y
t
i
l
i

b
a
b
o
r
p

l

 
s
s
a
c
 
m
a
r
g
o

t
s
H

i

0.5

0.45

0.4

0.35

0.3

0.25

0.2

0.15

0.1

0.05

y
t
i
l
i

b
a
b
o
r
p

l

 
s
s
a
c
 
m
a
r
g
o

t
s
H

i

0

0

2

4

6

8

10

Histogram class [space gap in cells]

Fig. 15. A histogram of the distributions of the vehicles’ space gaps gs, as a function of the
global density k in the STCA (with vmax = 5 cells/time step and p = 0.5). In the contour
plot to the left, the thick solid line denotes the average space gap, whereas the thin solid
line shows its standard deviation. The grey regions denote the probability densities. The
histograms (A) and (B) to the right, show two cross sections made in the left contour plot
at k = 0.1325 and k = 0.4000 respectively: for example, in (B), the distribution exhibits
a distinct unique maximum at the histogram class gs = 0 cells, corresponding to the dark
region in the lower right corner of the contour plot where high global densities occur.

after which it declines steadily. With respect to the distributions of the time gaps,
the right part of Fig. 16 shows an rapidly decreasing median time gap as the critical
density is approached. At this density, the time gaps settle around a local cluster
at the minimum of 1 time step. Going to higher global densities, the number of
stopped vehicles increases rapidly, frequently resulting in inﬁnite time gaps. From
the critical density on, all distributions exhibit a bimodal structure, corresponding
to vehicles that are caught inside a jam, and other vehicles that are able to move
freely (possibly at a lower speed) [60,75,72].

Fig. 16. Histograms of the distributions of the vehicles’ speeds v (left) and time gaps gt
(right), as a function of the global density k in the STCA (with vmax = 5 cells/time step
and p = 0.5). The thick solid lines denote the space-mean speed and median time gap,
whereas the thin solid line shows the former’s standard deviation. The grey regions denote
the probability densities.

33

3.2.2 STCA with cruise control (STCA-CC)

As mentioned in the previous section 3.2.1, a typical artifact of the STCA model is
that it gives rise to many unstable artiﬁcial jams. Due to the noise inherent in the
model, a jam can always form at any density, even inducing a local breakdown of
trafﬁc in the free-ﬂow trafﬁc regime. One way to remedy this, is by stabilising the
free-ﬂow branch of the (k,q) diagram. This can be done by inhibiting the randomi-
sation for high-speed vehicles. To this end, Nagel and Paczuski considered again
the rules R1 – R3 of the STCA, i.e., equations (46) – (48), but now complemented
with a rule R0 [73]:

R0: determine stochastic noise

vi(t − 1) = vmax =⇒ p′(t) ← 0,

vi(t − 1) < vmax =⇒ p′(t) ← p,




(49)



with now p replaced by p′(t) in the STCA’s randomisation rule R2, i.e., equation
(47). This new rule effectively turns off the randomisation for high-speed vehicles,
as only ‘jammed’ vehicles will now have stochastic behaviour. The resulting TCA
model, is called the STCA in the cruise-control limit, or STCA-CC for short. If we
set the maximum speed vmax = 1 cell/time step, then all jams initially present in
the system will coalesce with each other, giving rise to one superjam as depicted in
Fig. 17. This superjam has been found to follow a random walk in the time-space
diagram [73,37]. Note that vmax > 1 cell/time step does not alter the critical be-
haviour of the model, even though jam clusters are now branching, having regions
of free-ﬂow trafﬁc in between them [37].

Fig. 17. A time-space diagram of the STCA-CC model for vmax = 1 cell/time step and a
global density of k = 0.4 vehicles/cell. The shown lattice contains 300 cells, with a visible
period of 1000 time steps. We can see over ten initial jams evolving, coalescing over time
into one superjam. The system exhibits two distinct phases, i.e., a free-ﬂow and a congested
regime with vs = 1 and vs = 0 cells/time step respectively.

In Fig. 18, we show the (k,vs) and (k,q) diagram of the STCA-CC with vmax = 5
cells/time step and p = 0.2. As can be seen in the right part, the (k,q) diagram
has a typical inverted λ shape (see also our discussion in [1] about the hysteresis
and capacity drop phenomena). The STCA-CC is said to be bistable, in that both
the free-ﬂow as well as the congested branches of the (k,q) diagram are stable (the

34

former because it is noise-free). Vehicles going from the free-ﬂow to the congested
regime encounter at the critical density a phenomenon much like a capacity drop.
The reverse transition to the free-ﬂow branch proceeds via a lower density and,
correspondingly, a lower ﬂow (which is the outﬂow qout of a jam). Comparing the
right parts of Fig. 13 and Fig. 18, it is evident that a destabilisation of the free-ﬂow
branch forms the main reason for a lower capacity ﬂow, reached at a lower critical
density.

Homogeneous
Compact superjam

Homogeneous
Compact superjam

4.5

5

4

3

2

3.5

2.5

1.5

]
p
e
t
s
 
e
m

i
t
/
s

l
l

e
c
[
 
d
e
e
p
s
 
n
a
e
m
−
e
c
a
p
s
 
l
a
b
o
G

l

1
0.05

]
p
e
t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o
l
f
 
l
a
b
o
G

l

0.8

0.75

0.7

0.65

0.6

0.55

0.5

0.45

0.05

0.1

0.15

0.2

0.25

0.3

0.1

0.15

0.2

0.25

0.3

Global density [vehicles/cell]

Global density [vehicles/cell]

Fig. 18. Two (k,vs) (left) and (k,q) (right) diagrams for the STCA-CC model, with
vmax = 5 cells/time step and p = 0.2. The thick solid line denotes global measurements
that were obtained when starting from homogeneous initial conditions; the thin solid line
is based on a compact superjam as the initial condition (see section 3 for an explanation of
these conditions). The right part clearly shows a typical reversed λ shape, which indicates
a capacity drop. Note that the observed smaller drop in ﬂow for the compact superjam, is
actually a ﬁnite-size effect [73,74].

To conclude our discussion of the STCA-CC, we note that the use of cruise control
as an ADAS can have unintended consequences. The trafﬁc system can be per-
ceived as having an underlying critical point, at which the life times of jams switch
from ﬁnite to inﬁnite (see our discussion at the beginning of section 3.2.1). The
existence of this point is closely tied to the self-organised criticality (SOC) of the
STCA model: the outﬂow from an inﬁnite jam automatically self-organises to a
state of maximum attainable ﬂow [76,68,64,77]. Stabilising the free-ﬂow branch
with cruise-control measures, results on the one hand in trafﬁc higher achievable
ﬂows which is beneﬁcial, but on the other hand the system is driven closer to its
critical point which is more dangerous. At this stage, travel times will experience a
high degree of variability, thereby reducing its predictability [78,73,64].

3.2.3 Stochastic Fukui-Ishibashi TCA (SFI-TCA)

In section 3.1.2, we discussed the deterministic FI-TCA which is a generalisation
of the CA-184 TCA model. In their original formulation, Fukui and Ishibashi also
introduced stochasticity, but now only for vehicles driving at the highest possible
speed of vmax cells/time step [65]. We can express the rules of this model, by con-
sidering the rules R2 and R3 of the STCA, i.e., equations (47) and (48), but now

35

complemented with the DFI-TCA’s rule R1 for instantaneous accelerations, i.e.,
equation (42) of section 3.1.2, and, as in the STCA-CC model, an extra rule R0:

R0: determine stochastic noise

vi(t − 1) = vmax =⇒ p′(t) ← p,

vi(t − 1) < vmax =⇒ p′(t) ← 0,




(50)



with now p replaced by p′(t) in the randomisation rule R2. It can be seen that for
vmax = 1, the SFI-TCA and STCA models are the same. Furthermore, for p = 0
the SFI-TCA becomes fully deterministic, and in contrast to the STCA’s zero-ﬂow
behaviour (see section 3.2.1), the SFI-TCA’s p = 1 case corresponds to the STCA
with p = 0 and vmax − 1.

The rationale behind the speciﬁc randomisation in the SFI-TCA model, is that
drivers who are moving at a high speed, are not able to focus their attention in-
deﬁnitely. As a consequence, there will be ﬂuctuations at these high speeds. As
such, this corresponds to the opposite of a cruise-control limit, e.g., the STCA-CC
model. There will be no capacity drop, but the effect on the (k,vs) diagram is that its
free-ﬂow branch will become slightly downward curving, starting at vs = vmax − p
for k = 0.

To conclude, we mention the related work of Wang et al., who studied the SFI-TCA
both analytically and numerically, providing an exact result for p = 0, and a close
approximation for the model with p 6= 0 [79]. Based on the SFI-TCA, Wang et al.
developed a model that is subtly different. They assumed that drivers do not suffer
from concentration lapses at high speeds, but are instead only subjected to the ran-
dom deceleration when they are driving close enough to their direct frontal leaders
[80]. And ﬁnally, we mention the work of Lee et al., who incorporate anticipation
with respect to a vehicle’s changing space gap gs as its leader is driving away. This
results in a higher capacity ﬂow, as well as the appearance of a synchronised-trafﬁc
regime, in which vehicles have a lower speed, but are all moving [81].

3.2.4 Totally asymmetric simple exclusion process (TASEP)

The simple exclusion process is a simpliﬁed well-known particle transport model
from non-equilibrium statistical mechanics, deﬁned on a one-dimensional lattice.
In the case of open boundary conditions (i.e., the bottleneck scenario), particles
enter the system from the left side at an entry rate α, move through the lattice,
and leave it at an exit rate β. The term ‘simple exclusion’ refers to the fact that a
cell in the lattice can only be empty, or occupied by one particle. When moving
through the lattice, particles move one cell to the left with probability γ, and one
cell to the right with probability δ. When γ = δ, the process is called the symmetric
simple exclusion process (SSEP); if γ 6= δ, then it is called the asymmetric simple
exclusion process (ASEP) [82]. Finally, if we set γ = 0 and δ = 1, the system is
called the totally asymmetric simple exclusion process (TASEP). If we consider the

36

TASEP as a TCA model, then all vehicles move with vmax = 1 cell/time step to
their direct right-neighbouring cell, on the condition that this cell is empty.

Updating the conﬁguration of CA essentially amounts to updating the states of all
its cells. In general, there are two methods for the update procedure:

Sequential update
This updating procedure considers each cell in the lattice one at a time. If all cells
are considered consecutively, two updating directions are possible: left-to-right and
right-to-left. There is also a third possibility, called random sequential update. Un-
der this scheme and with N particles in the lattice, each time step is divided in N
smaller substeps. At each of these substeps, a random cell (or vehicle) is chosen
and the CA rules are applied to it. As a consequence of the updating procedure,
each particle is on average updated after N smaller substeps, which introduces a
certain amount of noise in the system. We have depicted several typical time-space
diagrams for the ASEP with γ = 1 − δ in Fig. 19. Furthermore note that a hidden
assumption here is that, after completing a substep, the local information is imme-
diately available to the whole system, which can violate causality (as information
is now transmitted through the lattice at an inﬁnite speed).

Parallel update
This is the classic update procedure that is used for all TCA models discussed in
this report. For a parallel update, all cells in the system are updated in one and the
same time step. Compared to a sequential updating procedure, this one is computa-
tionally more efﬁcient (note that it is equivalent to a left-to-right sequential update).
There is however one peculiarity associated with this updating scheme: because all
particles are considered simultaneously, certain lattice conﬁgurations can not exist,
i.e., the Garden of Eden (GoE) states mentioned in section 1.2. An example of such
a paradisiacal state, is two vehicles right behind each other, with the following hav-
ing a non-zero speed. This state would imply that in single-lane trafﬁc, the FIFO
property was violated and consequently a collision occurred. Such GoE states do
not exist when using a random sequential update.

In Fig. 20, we have depicted two time-space diagrams for the TASEP with a random
sequential updating procedure, operating on a closed loop. As can be seen, the
diagrams qualitatively look the same, and have some of the same characteristic
features of the time-space diagrams in Fig. 19. For the TASEP, there is no free-ﬂow
regime, there are no large jams in the system, and, because of the random sequential
update, all vehicles continuously have the tendency to collide with each other. As a
consequence, the system is littered with mini-jams in both the low and high density
regimes [64,37]. Note that the TASEP with open boundary conditions exhibits a
very rich behaviour, depending on the values for the entry and exit rates α and β,
respectively [83,18,54].

With respect to the relations between the TASEP with a random sequential update
and other models, we mention the following two analogies: on the one hand, the
LWR ﬁrst-order macroscopic trafﬁc ﬂow model [1] corresponds to the TASEP in

37

Fig. 19. Typical time-space diagrams of the asymmetric simple exclusion process (ASEP
model) with a random sequential update and γ = 1−δ. The shown lattices each contain 400
cells, with a visible period of 400 time steps (note that for clarity, the space and time axes
are located horizontally and vertically, respectively). The global densities in the systems
were set for each row to k ∈ {0.1, 0.3, 0.5, 0.7, 0.9} vehicles/cell. For each column, the
ASEP’s probability to move to the left was set to γ ∈ {0.1, 0.3, 0.5, 0.7, 0.9}.

Fig. 20. Typical time-space diagrams of the TASEP model with a random sequential up-
date. The shown lattices each contains 300 cells, with a visible period of 580 time steps.
The global density in the system was set to k = 0.3 vehicles/cell (left), and k = 0.7 vehi-
cles/cell (right). The evolution of the system dynamics qualitatively looks the same in both
diagrams: the system is littered with mini-jams in both the low and high density regimes.

38

the hydrodynamic limit to a noisy and diffusive conservation law, which can be
reduced to the LWR model [64,37]. On the other hand, the TASEP corresponds to
the STCA (see section 3.2.1), but now with vmax = 1 cell/time step [3,6].

To gain more insight into the macroscopic behaviour of the TASEP with random
sequential update, we provide its (k,vs) and (k,q) diagrams in Fig. 21. Looking
at the (k,vs) diagram on the left part, we notice that the TASEP with vmax = 1
cell/time step corresponds exactly to Greenshields’ original linear relation between
the density and the mean speed [84,51]. This in fact is a further testimony of the
close link between the TASEP and the LWR model with a triangular qe(k) funda-
mental diagram. Increasing the TASEP’s maximum speed, leads to a more curved
relation, intersection the vertical axis at the point (0,vmax). In any case, the (k,vs)
diagram also reveals the absence of a distinct free-ﬂow branch, corresponding to
the observations of the large amount of mini-jams for all global densities, as could
be seen in the time-space diagrams of Fig. 20.

Studying the (k,q) diagram in the right part of Fig. 21, we can see that the TASEP
corresponds with the STCA for vmax = 1 and an arbitrary slowdown probability
(e.g., p = 0.1). The diagram also shows how the CA-184 leads to a sharp transi-
tion between the free-ﬂow and the congested regime, as opposed to the rounded
peak of capacity ﬂow at k = 0.5 vehicles/cell for the STCA. However, whereas
the TASEP also has its capacity ﬂow at the same value, there does not occur such
a phase transition as in the other models. Finally, we can see that increasing the
maximum speed vmax for the TASEP introduces no signiﬁcant qualitative changes,
except for a skewing towards lower densities [64].

Note that with respect to the computational complexity of the implemented
TCA models, most measurements in this report took a few hours to obtain,
using an Intel P4 2.8 GHz with 512 MB RAM, running the JavaTM JDK 1.3.1
under Windows 2000. In sharp contrast to this, are the computations for the
TASEP model, which took nearly two weeks to complete.

3.2.5 Emmerich-Rank TCA (ER-TCA)

Whereas the classical STCA model provided a reasonable qualitative agreement
with real-world observations, Emmerich and Rank addressed the quantitative dis-
crepancies between the model and real-world data. To this end, they proposed a
variation on the STCA, extending the inﬂuence of the space gap on a vehicles up-
dated speed [85].

In their work, Emmerich and Rank fundamentally modiﬁed the STCA in two steps:
(i) they changed the parallel update procedure to a right-to-left sequential update
procedure (see section 3.2.4 for more details), and (ii) they changed the behaviour
of vehicles that are slowing down. In a nutshell, (i) leads to the important result that
vehicles are now able to drive directly behind each other (i.e., with a zero space gap)
at high speeds, because the gaps in a trafﬁc stream are used more efﬁciently. The
reason is that due to the speciﬁc sequential update, a downstream vehicle is moved

39

CA−184 (vMax = 1)
STCA (vMax = 1, p = 0.1)
TASEP (vMax = 5)
TASEP (vMax = 1)

CA−184 (vMax = 1)
STCA (vMax = 1, p = 0.1)
TASEP (vMax = 5)
TASEP (vMax = 1)

1

0.8

0.6

0.4

0.2

]
p
e
t
s
 
e
m

i
t
/
s

l
l

e
c
[
 
d
e
e
p
s
 
n
a
e
m
−
e
c
a
p
s
 
l
a
b
o
G

l

0
0

0.5

0.45

0.4

0.35

0.3

0.25

0.2

0.15

0.1

0.05

]

p
e

t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o

l
f
 
l

a
b
o
G

l

0
0

0.2

0.4

0.6

0.8

1

0.2

0.4

0.6

0.8

1

Global density [vehicles/cell]

Global density [vehicles/cell]

Fig. 21. A comparison of the (k,vs) (left) and (k,q) (right) diagrams for the CA-184 with
vmax = 1 (∆), the STCA with vmax = 1 and p = 0.1 (⋆), the TASEP with random sequential
update and vmax = 5 (◦), and the TASEP with random sequential update and vmax = 1
(thick solid line). Some distinct characteristics of the TASEP are the absence of a free-ﬂow
regime, and for vmax = 1 cells/time step, the exact correspondence with Greenshields linear
relation between the density and the mean speed.

ﬁrst (for a closed loop, the vehicle with the largest space gap is chosen ﬁrst), after
which the next vehicle upstream will see a larger space gap.

Just as the STCA can be seen as a special case of the optimal velocity model
(OVM), based on a linear optimal velocity function (for a description of the OVM,
we refer the reader to our overview in [1]), the ER-TCA model generalises this
function by making a vehicle’s speed dependent on a variable safe distance and its
current speed [3]. This affects (ii), i.e., vehicles that are slowing down: when deter-
mining the new speed of a vehicle, the ER-TCA model ﬁrst checks if the vehicle is
within 10 cells of its direct frontal leader. If this is the case, then the vehicle will
slow down according to a table lookup in a gap-speed matrix Mgsi ,vi. This matrix
is constructed in such a way that collisions are avoided (i.e., Mi,j ≤ min{i, j}):

M T =

(51)

The matrix in equation (51), conveys the idea that lower speeds require lower space
gaps, and that vehicles tend to keep larger space gaps when travelling at higher
speeds. This latter effect is also visible in the distribution of the vehicles’ space
gaps, as visualised in the histograms in the left part of Fig. 22, where, in contrast
to the STCA’s space gaps distribution of Fig. 15, large space gaps are observed for
densities near the critical density. Furthermore, because of this mechanism, vehicles

0 0 0 0 0 0 0 0 0 0 0

0 1 1 1 1 1 1 1 1 1 1

0 1 2 2 2 2 2 2 2 2 2

0 1 2 3 3 3 3 3 3 3 3

0 1 2 3 4 4 4 4 4 4 4

0 1 2 3 4 4 4 4 4 4 5







































40

will have smoother decelerations, instead of the abrupt slowing down in the STCA
model and some of its variations.

Fig. 22. Histograms of the distributions of the vehicles’ space gaps gs (left) and time gaps
gt (right), as a function of the global density k in the ER-STCA (with vmax = 5 cells/time
step and p = 0.35). The thick solid lines denote the mean space gap and median time gap,
whereas the thin solid line shows the former’s standard deviation. The grey regions denote
the probability densities.

To understand some of the system dynamics of the ER-TCA model, we have pro-
vided several (k,vs) and (k,q) diagrams in Fig. 23. For p = 0.35, we can see in the
(k,q) diagram in right part, that the free-ﬂow branch gets curved, implying that ve-
hicles travel at a slightly lower speed when they approach the capacity-ﬂow regime.
Because vehicles can travel at high speeds in dense platoons, the ER-TCA model
can achieve very high capacity ﬂows, even leading to q > 1 vehicle/time step. In
order to constrain these ﬂows to realistic values, the ER-TCA model needs a quite
high slowdown probability, e.g., p = 0.35.

These two effects, i.e., a curving of the free-ﬂow branch and an increased capacity
ﬂow, are basically what the ER-TCA model is all about, as there is no qualitative
change in the congested branch of the (k,q) diagram. There are however some se-
rious drawbacks to the ER-TCA model. First and foremost, the (k,q) diagram is no
longer non-monotonic for low densities when the sequential update is replaced by
a parallel one [3,19]. Secondly, the model exhibits too large time headways in the
free-ﬂow regime when compared with real-world data. This effect is also visible
in the distribution of the vehicles’ time gaps, as depicted in the histograms in the
right part of Fig. 22, where, in contrast to the STCA’s time gaps distribution of
Fig. 16, a large amount of ﬁnite time gaps extends well into the region of medium
densities. Third, due to the sequential update, the ER-TCA model’s downstream
jam dynamics are unstable, just as in the STCA model [19]. Fourth, as can be seen
from the (k,vs) diagram in the left part of Fig. 23, for small slowdown probabilities
p, the resulting space-mean speed in the system is very unrealistic, even including
plateaus of constant speed in the congested regime, e.g., the curve associated with
p = 0.1 (we consider p = 0 as a degenerate case).

41

4.5

3.5

2.5

1.5

5

4

3

2

1

]
p
e
t
s
 
e
m

i
t
/
s

l
l

e
c
[
 
d
e
e
p
s
 
n
a
e
m
−
e
c
a
p
s
 
l
a
b
o
G

l

0.5

0
0

p = 0.00
p = 0.10
p = 0.35
p = 0.50
p = 0.80

2

1.8

1.6

1.4

1.2

1

0.8

0.6

0.4

0.2

]
p
e
t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o
l
f
 
l
a
b
o
G

l

0
0

p = 0.00
p = 0.10
p = 0.35
p = 0.50
p = 0.80

0.2

0.4

0.6

0.8

1

0.2

0.4

0.6

0.8

1

Global density [vehicles/cell]

Global density [vehicles/cell]

Fig. 23. Left: several (k,vs) diagrams for the ER-TCA, each for a different slowdown
probability p. It is clear from the diagram, that for low values of p, the resulting diagrams
are unrealistic, including plateaus of constant space-mean speed in the congested regime.
Right: several (k,q) diagrams for the same ER-TCA models as before. Due to the system
dynamics in the ER-TCA, very high capacity ﬂows are possible. To constrain these ﬂows,
the slowdown probability p has to be quite large in order to obtain realistic results. In both
parts of the ﬁgure, the thick solid line denotes the original model of Emmerich and Rank,
who used a value p = 0.35 as their best ﬁt to experimental data.

3.3 Slow-to-start models

In order to obtain a correct behavioural picture of trafﬁc ﬂow breakdown and stable
jam, it is necessary that a vehicle’s minimum time headway or reaction time should
be smaller than its escape time from a jam, or equivalently, the outﬂow from a jam
(i.e., the queue discharge rate) must be lower than its inﬂow [86,70,87,88,89,52].
If this is not the case, as in e.g., the STCA model where both times are exactly
the same, then all jams will be unstable, as can be seen in the time-space diagram
of Fig. 12. Because of their unstable jamming behaviour, the previously discussed
stochastic models, experience neither a capacity drop nor a hysteresis loop, for
which stable jams are a necessary prerequisite. Although the STCA-CC seems to
be an exception to this rule, the downstream fronts of its jams are still too unstable,
in the sense that new jams can emerge all too easily, which is unrealistic behaviour
with respect to real-life trafﬁc ﬂows [5].

As just mentioned, one mechanism that deals with this, is by leaving free-ﬂow
trafﬁc undisturbed, and by signiﬁcantly reducing the outﬂow from a jam once a
breakdown occurs, thereby stabilising the downstream front of a jam. Instead of
just eliminating the noise in free-ﬂow trafﬁc in the STCA-CC, this reduced outﬂow
can also be accomplished more intuitively, by making the vehicles wait a short
while longer before accelerating again from stand still. As such, they are said to be
“slow to start”.

Note that there exists yet another mechanism that allows for the reproduction of the
capacity drop and hysteresis phenomena (we will only brieﬂy mention it here). The
approach followed by Werth, is based on the premise that drivers take into account
the speed difference with their direct frontal leader, instead of just the space gap

42

as was previously assumed. This leads to Galilei invariant vehicle-vehicle interac-
tions (i.e., the system dynamics remain the same if a new linear moving coordinate
system is substituted in the equations). Interestingly, the metastability in this model
is not due to cruise control or slow-to-start rules, but rather a result of the anticipa-
tion adopted. The model can exhibit stable dense platoons of fast vehicles, resulting
in a stabilisation of the free-ﬂow branch, and consequently leading to hysteretic be-
haviour [90,5,3].

With respect to real-world units, we give some typical values associated
with the capacity drop and hysteresis phenomena (based on [5]): an out-
ﬂow qout ≈ 1800 vehicles/hour/lane at an associated density of kout ≈ 20
vehicles/km/lane, with qcap, kcrit, and kjam equal to 2700 vehicles/hour/lane,
20 vehicles/km/lane, and 140 vehicles/km/lane, respectively.

3.3.1 Takayasu-Takayasu TCA (T2-TCA)

In 1993, Takayasu and Takayasu proposed a deterministic TCA model, based on the
CA-184 (see section 3.1.1), that incorporated a delay in acceleration for stopped
vehicles [91]. Their motivation stems from the fact that high-speed vehicles are in
general able to decelerate very quickly, but conversely, it takes them a lot longer to
attain this high speed when they start from a stopped condition. As such, Takayasu
and Takayasu introduced a delay, based on the rationale that a vehicle will only
start to move when it recognises movement of its direct frontal leader. Translating
this into a rule set, we can write the T2-TCA’s rules based on those of the CA-184,
but now with the following modiﬁcations (note that vmax = 1 cell/time step):

R1: braking

vi(t − 1) > gsi(t − 1) =⇒ vi(t) ← gsi(t − 1),

(52)

R2: delayed acceleration

vi(t − 1) = 0 ∧ gsi(t − 1) ≥ 2

=⇒ vi(t) ← 1,

R3: vehicle movement

xi(t) ← xi(t − 1) + vi(t).

From this rule set it follows that a vehicle will always drive at a speed of one
cell/time step, unless it has to brake and stop according to rule R1, equation 52.
Furthermore, the vehicle is only allowed to accelerate again to this speed of one
cell/time step, on the condition that it has a sufﬁciently large space gap in front,
as dictated by rule R2, equation 53. As a result, the introduced delay is spatial in
nature, and it only affects stopped vehicles.
In Fig. 24, we have depicted the resulting (k,vs) and (k,q) diagrams for the T2-TCA
model. The observed behaviour is similar to that of the STCA-CC model in section

(53)

(54)

43

3.2.2, in that the T2-TCA model also exhibits bistability. Starting from homoge-
neous initial conditions, the space-mean speed in the system undergoes a sharp
drop once a vehicle has to stop. The reverse process, i.e., going from the congested
to free-ﬂow regime, is accompanied by a smooth continuous transition. Takayasu
and Takayasu state that this corresponds to a second-order phase transition, be-
cause their order parameter (the sum of the jamming times) follows a power-law
distribution, with jam times tending to inﬁnity once the system goes beyond the
critical density. With respect to the T2-TCA’s tempo-spatial behaviour, we note that
the critical density for the former transition is located at kc = 0.5 vehicles/cell, at
which point all vehicles travel at a speed of one cell/time step with all space gaps
equal to one cell. The density at which the recovery associated with latter transition
occurs, is equal to k = 1
3 vehicles/cell, at which point all vehicles travel at a speed
of one cell/time step, but now with all space gaps equal to two cells. Fukui and
Ishibashi later modiﬁed the delaying process, resulting in a system that always re-
laxes to a state in which the space-mean speed oscillates between two values, both
smaller than one cell/time step [92].

Homogeneous
Compact superjam

Homogeneous
Compact superjam

1

]
p
e
t
s
 
e
m

i
t
/
s

l
l

e
c
[
 
d
e
e
p
s
 
n
a
e
m
−
e
c
a
p
s
 
l
a
b
o
G

l

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0
0

0.2

0.4

0.6

0.8

1

0.2

0.4

0.6

0.8

1

Global density [vehicles/cell]

Global density [vehicles/cell]

Fig. 24. Two (k,vs) (left) and (k,q) (right) diagrams for the T2-TCA model, with vmax = 1
cells/time step. The thick solid line denotes global measurements that were obtained when
starting from homogeneous initial conditions; the thin solid line is based on a compact
superjam as the initial condition (see section 3 for an explanation of these conditions). The
right part clearly shows a typical reversed λ shape, which indicates a capacity drop.

The original background for Takayasu and Takayasu’s work, was based on
the presence of so-called 1/f noise (also known as pink noise or ﬂicker
noise) in the Fourier transformed density ﬂuctuations of motorway trafﬁc.
The seemingly random stop-and-go motions of jammed vehicles, could indi-
cate a chaotic behaviour (as opposed to just statistical noise), closely coupled
with self-organised criticality (see also the end of section 3.2.2) [68]. In the
free-ﬂow regime of the T2-TCA model, jams have a ﬁnite life time leading
to a ﬂat spectrum, as opposed to the congested regime where jams have an
inﬁnite life time, leading to a 1/f spectrum [91].

Schadschneider and Schreckenberg later provided a generalisation of the T2-TCA
model: keeping vmax = 1 cell/time step, they now modiﬁed the braking and acceler-

0.5

0.45

0.4

0.35

0.3

0.25

0.2

0.15

0.1

0.05

]
p
e
t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o
l
f
 
l
a
b
o
G

l

0
0

44

ation behaviour of a vehicle. On the one hand, they kept Takayasu and Takayasu’s
original acceleration rule R2, equation (53), and on the other hand, they allowed
a vehicle with a space gap of just one cell to accelerate with a slow-to-start prob-
ability 1 − pt [93]. They furthermore also introduced a randomisation for moving
vehicles, similar to the STCA (see section 3.2.1), making vehicles stop with a slow-
down probability p. Several interesting phenomena occur for certain values of both
probabilities p and pt. The modiﬁed spatial slow-to-start rule can lead to the appear-
ance of an inﬂection point in the (k,q) diagram at very high densities. The effect gets
strongly exaggerated when pt → 1, at which point a completely blocked state of
zero ﬂow appears for all global densities k ≥ 0.5 vehicles/cell [93,18,3].

3.3.2 The model of Benjamin, Johnson, and Hui (BJH-TCA)

Around the same time that Takayasu and Takayasu proposed their T2-TCA model,
Benjamin, Johnson, and Hui (BJH) constructed another type of TCA model, using
a slow-to-start rule that is of a temporal nature [94]. Their BJH-TCA model is
based on the STCA (see section 3.2.1), but extended it with a rule that adds a
small delays to a stopped car that is pulling away from the downstream front of a
queue. Benjamin et al. attribute this rule to the fact that it mimics the behaviour
of a driver who momentarily looses attention, or when a vehicle’s engine is slow
to react. Their slow-to-start rule allows a stopped vehicle to move again with this
slow-to-start probability 1 − ps. If the vehicle did not move, then it tries to move
again but this time with probability ps. Due to this peculiar acceleration procedure,
all vehicles require a memory that, as mentioned before, makes the slow-start-rule
temporal in nature [3]. As a result of this new systematic behaviour, jams will now
become less ravelled (as opposed to the STCA), because the slow-to-start rule will
have the tendency to merge queues.

The BJH-TCA model was also applied to the description of a motorway with an
on-ramp, leading to the conclusions that (i) it actually is beneﬁcial to have jams on
the main motorway, due to the fact that these jams homogenise the trafﬁc streams
as they compete for stopped vehicles, and (ii) it is desirable to set a maximum
speed limit on this main motorway which allows to maximise the performance of
the on-ramp. Note that in their discussion, Benjamin et al. used the queue length
at the on-ramp as a performance measure. In our opinion, this is not a very good
choice as it ignores e.g., the total time spent in the system, which we believe is a
more important measure (see also the work of Bellemans [95] and Hegyi [96] in
this respect).

To conclude, we note that the (k,q) diagrams of the BJH-TCA and T2-TCA models
qualitatively look the same, with the exception the former does not have the possi-
bility of an inﬂection point, or a density region with zero ﬂow, as was the case for
the latter model (see section 3.3.1) [93,18].

45

3.3.3 Velocity-dependent randomisation TCA (VDR-TCA)

As already explained in the introduction of this section, reducing the outﬂow from
a jam is responsible for the capacity drop and hysteresis phenomenon. To this end,
Barlovi´c et al. proposed a TCA model that generalises the STCA model (see section
3.2.1) by employing an intuitive slow-to-start rule for stopped vehicles [97,98].
Similar to the STCA-CC (see section 3.2.2), the complete rule set for the VDR-
TCA is as follows:

R0: determine stochastic noise

vi(t − 1) = 0 =⇒ p′(t) ← p0,

vi(t − 1) > 0 =⇒ p′(t) ← p,






R1: acceleration and braking

vi(t) ← min{vi(t − 1) + 1, gsi(t − 1), vmax},

R2: randomisation

R3: vehicle movement

ξ(t) < p′(t) =⇒ vi(t) ← max{0, vi(t) − 1},

(55)

(56)

(57)

(58)

xi(t) ← xi(t − 1) + vi(t).

As before, in rule R2, equation (57), ξ(t) ∈ [0, 1[ denotes a uniform random num-
ber (speciﬁcally drawn for vehicle i at time t) and p′(t) is the stochastic noise
parameter, dependent on the vehicle’s speed (hence the name ‘velocity-dependent
randomisation’). The probabilities p0 and p are called the slow-to-start probability
and the slowdown probability, respectively, with p0, p ∈ [0, 1]. Note that Barlovi´c
et al. only considered the case with two different noise parameters (i.e., p0 and p),
ignoring the more general case where we can have a noise parameter for each pos-
sible speed (i.e., p0, . . . , pvmax). Their model was also considered for systems with
open boundary conditions [99].

Depending on their speed, vehicles are subject to different randomisations: typical
metastable behaviour results when p0 ≫ p, meaning that stopped vehicles have to
wait longer before they can continue their journey. This has the effect of a reduced
outﬂow from a jam, so that, in a closed system, this leads to an equilibrium and
the formation of a compact jam. For such a typical situation, e.g., p0 = 0.5 and
p = 0.01, the tempo-spatial evolution is depicted in Fig. 25. We can see an initially
homogeneous trafﬁc pattern (one metastable phase) breaking down and kicking the
system into a phase-separated state, consisting of a compact jam surrounded by
free-ﬂow trafﬁc. In such a state, trafﬁc jams in the system will absorb as many
vehicles as is necessary, in order to have a free-ﬂow phase in the rest of the system
[6]. Note that the VDR-TCA can also be equipped with a cruise control, by turning
of ﬂuctuations for vehicles driving at the maximum speed vmax.

46

Fig. 25. A time-space diagram of the VDR-TCA model for vmax = 5 cells/time step,
p0 = 0.5, p = 0.01, and a global density of k = 1
6 vehicles/cell. The shown lattice contains
300 cells, with a visible period of 1000 time steps. We can see the breakdown of an initially
homogeneous trafﬁc pattern. As the phase separation takes place, a persistent compact jam
is formed, surrounded by free-ﬂow trafﬁc. The signiﬁcant decrease of the density in the
regions outside the jam results from the jam’s reduced outﬂow.

In the left part of Fig. 26, we have plotted a histogram of the distributions of the ve-
hicles’ speeds, for all global densities k ∈ [0, 1]. Here we can clearly see the distinc-
tion between the free-ﬂow and the congested regime: the space-mean speed remains
more or less constant at a high value, then encounters a sharp transition (i.e., the ca-
pacity drop), resulting in a steady declination as the global density increases. Note
that as the critical density is encountered, the standard deviation jumps steeply; this
means that vehicles’ speeds ﬂuctuate wildly at the transition point (because they
are entering and exiting the congestion waves). Once the compact jam is formed,
the dominating speed quickly becomes zero (because vehicles are standing still in-
side the jam). Although most of the weight is attributed to this zero-speed, there is
a non-negligible maximum speed present for intermediate densities. If the global
density is increased further towards the jam density, this maximum speed disap-
pears and the system settles into a state in which all vehicles either have speed zero
or one (i.e., systemwide stop-and-go trafﬁc).

Studying the (k,q) diagram in the right part of Fig. 26, gives us another view of
this phase transition. We can see a capacity drop taking place at the critical density,
where trafﬁc in its vicinity behaves in a metastable manner. This metastability is
characterised by the fact that sufﬁciently large disturbances of the fragile equilib-
rium can cause the ﬂow to undergo a sudden decrease, corresponding to a ﬁrst-order
phase transition. The state of very high ﬂow is then destroyed and the system settles
into a phase separated state with a large megajam and a free-ﬂow zone. The large
jam will persist as long as the density is not signiﬁcantly lowered, thus implying
that recovery of trafﬁc from congestion follows a hysteresis loop. In contrast to the
STCA-CC’s bistability, the VDR-TCA model is truly metastable, because now the
free-ﬂow branch in the (k,q) diagram becomes unstable for large enough perturba-
tions. Furthermore, the spontaneous formation of jams in the downstream front that
troubled the STCA, is suppressed in the VDR-TCA model.

47

Fig. 26. Left: a contour plot containing the histograms of the distributions of the vehicles’
speeds v as a function of the global density k in the VDR-TCA (with vmax = 5 cells/time
step, p0 = 0.5 and p = 0.01). The thick solid line denotes the space-mean speed, whereas
the thin solid line shows its standard deviation. The grey regions denote the probability
densities. Right: a (k,q) diagrams for the same TCA model. The dotted line denotes global
measurements that were obtained when starting from homogeneous initial conditions; the
solid line is based on a compact superjam as the initial condition. The right part clearly
shows a typical reversed λ shape, which indicates a capacity drop.

Note that if p0 ≪ p, then the behaviour of the system will be drastically dif-
ferent. Four distinct trafﬁc regimes emerge in the limiting case where p0 = 0
and p = 1; in this case, the model is called fast-to-start [100]. In these four
regimes, moving vehicles can never increase their speed once the system has
settled into an equilibrium. Furthermore, there exists a regime which expe-
riences forward propagating density waves, corresponding to a non-concave
region in the system’s ﬂow-density relation. For more information, we refer
to our work in [101] and [102].

3.3.4 Time-oriented TCA (TOCA)

Considering the STCA model (see section 3.2.1), Brilon and Wu acknowledged the
fact that it is quite capable of reproducing trafﬁc dynamics in urban street networks.
However, they also recognised the fact that the model performed rather inadequate
when it comes to correctly describing the characteristics of trafﬁc ﬂows on motor-
ways, e.g., compared to ﬁeld data of a German motorway. Brilon and Wu blamed
the unrealistic car-following behaviour of the STCA model for its inferior capabil-
ities. At the core of their argument, they attributed this to the fact that the STCA
model is exclusively based on spatial variables (e.g., space headways). In order to
alleviate these problems, they proposed to use a model that was based on temporal
variables (e.g., time headways), leading to more realistic vehicle-vehicle interac-
tions [69]. The rule set for this time-oriented TCA model (TOCA) is as follows:

R1: acceleration

48

gsi(t − 1) > (vi(t − 1) · gts) ∧

ξ1(t) < pacc

=⇒ vi(t) ← min{vi(t − 1) + 1, vmax},

R2: braking

R3: randomisation

R4: vehicle movement

vi(t) ← min{vi(t), gsi(t − 1)},

gsi(t − 1) < (vi(t − 1) · gts) ∧

ξ2(t) < pdec

=⇒ vi(t) ← max{vi(t) − 1, 0},

(59)

(60)

(61)

(62)

xi(t) ← xi(t − 1) + vi(t).

In the above rules, ξ1(t), ξ2(t) ∈ [0, 1[ are random numbers drawn from a uniform
distribution, gts≥∆T is the safe time gap, pacc is the acceleration probability, and
pdec is the deceleration probability. Because all interactions between vehicles in
the STCA are bounded by the update time step, their speeds will never oscillate,
leading to a rigid and stable system. As a consequence of the TOCA’s temporal
rules however, vehicles will now behave more elastically, taking a safe time gap
into account that allows them to adapt their speeds with a relaxation. In this case, a
vehicle will resort to emergency braking (i.e., an instantaneous deceleration) only
if it gets too close to its direct frontal leader [52]. Typical parameter values for the
TOCA are gts = 1.2 time steps and pacc = pdec = 0.9. Brilon and Wu also extended
their model with rudimentary rules that allowed for lane changes on unidirectional
multi-lane roads.

In the left part of Fig. 27, we can see a similar tempo-spatial behaviour as with
the VDR-TCA (see section 3.3.3), in that an initially homogeneous trafﬁc pattern
breaks down, resulting in dilute jam that is surrounded by free-ﬂow trafﬁc. The
major difference between jamming in the VDR-TCA and TOCA models however,
is that in the former model, vehicles come to a complete stop when entering a jam
(see Fig. 25). They remain stationary until they can leave the downstream front of
the queue. In contrast to this, the jams in the TOCA model contain moving vehicles.
Pushing the global density even further to k = 0.5 vehicles/cell as was done in the
right part of Fig. 27, results in a fully developed jam that dominates the entire
system and contains temporarily stopped vehicles.

Fig. 28 depicts two groups of (k,q) diagrams for the TOCA model, with vmax = 5
cells/time step. The left part shows four diagrams for different combinations of pacc
and pdec ∈ {(0.9, 0.1), (0.9, 0.9), (0.1, 0.1), (0.1, 0.9)}, each time with gts = 1.2
time steps. As can be seen, the default case with pacc = pdec = 0.9 leads to an

49

Fig. 27. Typical time-space diagrams of the TOCA model for vmax = 5 cells/time step,
gts = 1.2 time steps, and pacc = pdec = 0.9. The global density was set to k = 1
6 vehi-
cles/cell (left) and k = 0.5 vehicles/cell (right). The shown lattices each contain 300 cells,
with a visible period of 580 time steps. In the left part, we can see the breakdown of an
initially homogeneous trafﬁc pattern, resulting in dilute jam that is surrounded by free-ﬂow
trafﬁc. In the right part, we see a fully developed jam, dominating the entire system. As
can be seen, for moderately light densities, the jams in the TOCA model contain moving
vehicles.

inﬂection point at a moderately high density of k = 0.5 vehicles/cell, resulting in
two different slopes for the congested branch of the TOCA’s (k,q) diagram. At this
point, vehicles will have average space gaps less than one cell, and because pdec is
rather high, vehicles will have the tendency to slow down (and pacc is smaller then
one, so their acceleration is somewhat inhibited). As a result, a large jam, com-
parable to the system’s size, will dominate tempo-spatial evolution. Furthermore,
the acceleration probability pacc should take on rather high values, otherwise the
global ﬂow in the system is too low because vehicles are not accelerating anymore.
In the right part of Fig. 28, we have shown a large amount of diagrams for differ-
ent gts with pacc = pdec = 0.9. Here we can see that, for gts < ∆T , the resulting
density-ﬂow curves are non-monotonic. Higher values for gts in more vehicles that
drive more cautiously, apparently leading to higher values for the critical density
and the capacity ﬂow. Note that the seemingly small capacity drops at the end of
each free-ﬂow branch are in fact ﬁnite-size effects [73,74].

In their original paper, Brilon and Wu claim that their TOCA model results in a bet-
ter agreement with empirical data, a fact which is based on a qualitative comparison
of the (q,vs) diagrams [69]. Note that, after personal communication with the au-
thors, it seems they performed a minimisation of the square errors in the (k,vs)
diagram. However, in order to get the correct values for calibrating the TOCA’s
parameters, they just manually guessed, without performing a thorough numeri-
cal optimisation. Despite this optimistic view, Knospe et al. later investigated the
TOCA model’s capabilities more thoroughly. Their conclusions state that a quite
large value for the deceleration probability pdec is necessary in order to obtain real-
istic capacity ﬂows. Although the time headway distribution of a jam’s downstream
front in the TOCA model is correct with respect to real-life observations, its down-
stream front moves too fast due to the large deceleration probability. As a result,
the jams in the TOCA model are more dilute, as could be seen in Fig. 27 [19].

50

pAcc = 0.9, pDec = 0.1
pAcc = 0.9, pDec = 0.9
pAcc = 0.1, pDec = 0.1
pAcc = 0.1, pDec = 0.9

0.7

0.6

0.5

0.4

0.3

0.2

0.1

]
p
e
t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o
l
f
 
l
a
b
o
G

l

0
0

0.2

0.4

0.6

0.8

1

Global density [vehicles/cell]

Fig. 28. Two groups of (k,q) diagrams for the TOCA model, with vmax = 5 cells/time step.
Left: four diagrams for different combinations of pacc and pdec, with gts = 1.2 time steps.
Right: a large amount of diagrams for different gts with pacc = pdec = 0.9. For gts < ∆T ,
the resulting density-ﬂow curves are non-monotonic. Note that the seemingly small capac-
ity drops at the end of each free-ﬂow branch are in fact ﬁnite-size effects [73,74].

3.3.5 TCA models incorporating anticipation

One of the models related to anticipative driving (i.e., only taking a leaders’ reac-
tions into account, without predicting them), can be found in the work of Krauß et
al., who derived a collision-free model based on the STCA (see section 3.2.1), but
which uses continuous vehicle speeds. Their model can be considered as a sim-
pliﬁed version of the Gipps model [1]. Although the model restricts vehicles’ de-
celeration capabilities, it is still able to correctly reproduce the capacity drop and
hysteresis phenomena [74].

Another model with anticipation was proposed by Eissfeldt and Wagner [41]. Their
model is based on Krauß’s work [1], and employs a next-nearest-neighbour interac-
tion, which stabilises dense ﬂows and results in a non-unique ﬂow-density relation.

Recently, L´arraga et al. introduced a TCA model that includes a driver’s anticipa-
tion of the leading vehicle’s speed [42]. In contrast to the STCA model (see section
3.2.1), the acceleration and braking rules are decoupled. As a ﬁrst rule, the standard
acceleration towards the maximum speed is applied, after which the randomisation
is performed by means of a second rule. Only then, the model considers braking in
its third rule; however, the deceleration is not only based on the space gap between
both vehicles, but also on an anticipation of the leading vehicle’s speed:

R3: anticipation and braking

vi(t) ←

min 



vi(t), gsi(t − 1) +

(1 − αi) · vi+1(t − 1) +

(cid:20)

safe distance

(63)

,

1
2 (cid:21)




}

with vi(t) on the right-hand side corresponding to the computed speed after apply-
ing rule R2, [x] denoting x rounded to the nearest integer, vi+1(t − 1) the speed of

{z

|

51

the leading vehicle at the current time step, and αi ∈ [0, 1] an anticipatory driving
parameter for the ith vehicle. In their work, L´arraga et al. considered all αi to be
equal.

The interesting aspect of this anticipatory TCA model, is that for certain values
of α, it can result in dense platoons of vehicles, travelling coherently and thereby
leading to forward propagating density structures. In the free-ﬂow regime, the (k,q)
diagram also exhibits a slight curvature near the capacity ﬂow, similar to the ER-
TCA model (see section 3.2.5). Del Ri´o and L´arraga later also extended the model
to accommodate for multi-lane trafﬁc ﬂows [103].

3.3.6 Ultra discretisation, slow-to-accelerate, and driver’s perspective

It is also possible to derive a cellular automaton model, based on the discretisation
of a partial differential equation. Starting from a PDE (e.g., the Burgers equation
[1], we can obtain an ﬁnite difference equation by discretising the spatial and tem-
poral dimensions, resulting in a model that still has continuous state variables. As
a further step, we can now also discretise these state variables, using a process
called the ultra-discretisation method (UDM) [104]. The result of the UDM can
be interpreted as a cellular automaton in the Euler representation. The latter means
that for a TCA model, a road is considered to be a ﬁeld, whereby the individual
cars are not distinguished [105]. The interesting part of this type of CA is that its
cells are allowed to hold multiple vehicles, which makes it possible to implicitly
model multi-lane trafﬁc in a simpliﬁed sense (because the effects of lane changes
are neglected) [3]. As a next step, this obtained CA can be cast in its Lagrangian
representation, by means of an Euler-Lagrange transformation [105,106]. The re-
sulting Lagrange representation treats the positions of all vehicles individually, thus
leading to the well-know position-based rule sets of the TCA models discussed in
this report.

Nishinari proposed an interesting TCA model, based on the above UDM scheme.
Their discretisation leads to the so-called Burgers cellular automaton (BCA), which
is for single-lane trafﬁc equivalent to the CA-184 TCA model (see section 3.1.1)
[107,108]. Emmerich et al. also provided a TCA model, by applying the UDM
scheme to a Korteweg-de Vries equation. In contrast to the BCA model, their work
resulted in a second-order TCA model because the CA’s global map not only needs
the conﬁguration at the previous time step t − 1, but also the conﬁguration at time
step t − 2 [109,3].

Nishinari et al. recently extended the BCA model, thereby allowing for slow-to-
start effects with vmax > 1 cell/time step [110]. Their model contains a rule similar
to the classic notion of slow-to-start rules, but now generalised for moving vehicles,
leading to the terminology of a slow-to-accelerate rule. Taking the idea of antici-
pation one step further, they also incorporated a driver’s perspective, meaning that
a vehicle will base its acceleration and braking decisions not only on the basis of
its space gap and the anticipated speed of the vehicle ahead, but also on the space
gap with the next leading vehicle (or even a vehicle located more downstream). As

52

a result, the model exhibits multiple metastable branches in the (k,q) diagram, as
can be seen in Fig. 29. For the lowest metastable branch, vehicles inside jams will
come to a complete stop. In contrast to this, vehicles will still be able to move for-
ward inside jams for the higher branches. Note that depending on the strength of
a local perturbation, trafﬁc will shift from the highest branch to one of the lower
branches. Finally, Nishinari et al. also combined the model with the classic STCA
(see section 3.2.1), thereby allowing for stochasticity in both the acceleration and
braking rules.

Fig. 29. A (k,q) diagram of Nishinari et al.’s extended BCA model, with vmax = 5
cells/time step, ∆T = 1.3 s, ∆X = 7.5 m, and a driver’s perspective of two vehicles
ahead. The resulting diagram exhibits multiple metastable branches. Vehicles inside jams
come to a complete stop only for the lowest metastable branch; for the higher branches,
vehicles inside jams are still able to move forward. Depending on the strength of a local
perturbation, trafﬁc will shift from the highest branch to one of the lower branches (image
reproduced after [110]).

4 Multi-cell models

Whereas all the previously discussed TCA models were based on a single-cell
setup, this section introduces some of the existing multi-cell TCA models (still
for single-lane trafﬁc). In a multi-cell model, a vehicle is allowed to span a number
of consecutive cells in the longitudinal direction, i.e., li ≥ 1 cell.

In the subsequent sections, we discuss several multi-cell TCA models encountered
in literature. We ﬁrst start with an overview of the artifacts that can be introduced
when switching to a multi-cell setup. Subsequently, we describe three multi-cell
TCA models, which have more intricate rule sets than the simple models of section
3:

• Helbing-Schreckenberg TCA (HS-TCA)

53

• Brake-light TCA (BL-TCA)
• The model of Kerner, Klenov, and Wolf (KKW-TCA)

Note that with respect to the measurements performed on the TCA models’ lat-
tices, we assume homogeneous trafﬁc ﬂows, i.e., all vehicles have the same length.
This allows us, after suitable adjustment with the average vehicle length l = li, to
express the global density as kg ∈ [0, 1].

4.1 Artifacts of a multi-cell setup

It might seem that a translation of the classic STCA model (see section 3.2.1) into
a multi-cell version would be straightforward. However, using a ﬁner discretisation
introduces a very speciﬁc artifact, i.e, hysteresis. In order to investigate this phe-
nomenon, we have performed several experiments based on a multi-cell translation
of the STCA model (now called the MC-STCA). In what follows, we assume a
closed-loop lattice consisting of 105 cells. The simulations ran each for 5 × 105
time steps, with ∆T = 1 s.

Setting the slowdown probability to p = 0.5, the left part of Fig. 30 shows the result-
ing (k,q) diagrams for different spatial discretisations, each time for homogeneous
initial conditions. The average vehicle length was set to l ∈ {2, 4, 8, 16, 32, 64}
cells. In these experiments, we also scaled the maximum speed vmax correspond-
ingly (e.g., if l = 4 cells, then vmax would become 5 × 4 = 20 cells/time step),
as can be seen from the coinciding free-ﬂow branches in the left part in Fig. 30.
We also notice that an increase of the average vehicle length apparently results in
a higher critical density, with an associated higher capacity ﬂow. Furthermore, the
ﬂow seems to encounter a capacity drop at this critical dense.

average vehicle length = 64 cells
average vehicle length = 32 cells
average vehicle length = 16 cells
average vehicle length = 8 cells
average vehicle length = 4 cells
average vehicle length = 2 cells

p = 0.1
p = 0.3
p = 0.5
p = 0.7
p = 0.9

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

]

p
e

t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o
l
f
 
l
a
b
o
G

l

0
0

0.1

0.2

0.3

0.4

0.5

0.1

0.2

0.3

0.4

0.5

Global density [vehicles/cell]

Global density [vehicles/cell]

Fig. 30. Left: several (k,q) diagrams of the MC-STCA, for l ∈ {2, 4, 8, 16, 32, 64} cells
and p = 0.5. As can be seen, an increase of the average vehicle length apparently results
in a higher critical density, with an associated higher capacity ﬂow (followed by a capacity
drop). Right: the same setup for the MC-STCA, but now with a ﬁxed l = 8 cells and
vmax = 5 × 8 = 40 cells/time step. The (k,q) diagrams depict the results of changing the
slowdown probability p ∈ {0.1, 0.3, 0.5, 0.7, 0.9}: an increase of p, leads to decrease of
both the critical density and the capacity ﬂow.

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

]

p
e

t
s
 
e
m

l

i
t
/
s
e
c
h
e
v
[
 

i

w
o
l
f
 
l
a
b
o
G

l

0
0

54

What causes this capacity drop ? To answer this question, we must ﬁrst consider
what happens in the deterministic case where p = 0. Here, our experiments have
shown that there is no difference between a single-cell and a multi-cell setup. Set-
ting p > 0, the randomisation rule R2, equation (47), introduces ﬂuctuations in
the high speeds of vehicles in free-ﬂow trafﬁc. However, these speed ﬂuctuations
are actually small compared to the vehicles’ speeds themselves. Because of this
limited inﬂuence, the free-ﬂow branch of the (k,q) diagrams remains very stable.
The smaller the discretisation, i.e., the larger the average vehicle length, the more
stable the free-ﬂow branch becomes for larger densities (note however that the ca-
pacity drop gets less pronounced for increasing average vehicle lengths). This ca-
pacity drop behaviour due to a stabilisation effect, is akin to the observations in the
STCA’s cruise-control limit (see section 3.2.2), and thus different from the VDR-
TCA (see section 3.3.3), where a reduced outﬂow from a jam causes the drop in
ﬂow [19]. In contrast to this, random initial conditions or a superjam to start the
simulations with, will always lead to the congested branch, thereby indicating a
hysteretic phase transition. As the left part of Fig. 30 indicates, changing the dis-
cretisation level of the STCA, by adjusting the average vehicle length and relatively
keeping the same maximum speed, has only an effect on the length of the free-ﬂow
branch; the trafﬁc dynamics in the congested regime remain the same.

Holding l ﬁxed at 8 cells and vmax = 5 × 8 = 40 cells/time step, the right part
of Fig. 30 shows the resulting (k,q) diagrams for different values of the slowdown
probability p ∈ {0.1, 0.3, 0.5, 0.7, 0.9}. It is clear that an increase of p, leads to a
decrease of both the critical density and the capacity ﬂow. Note that the size of the
capacity drop remains approximately the same for the different p.

To conclude, we mention the work of Grabolus who performed extensive numeri-
cal studies on the STCA. He also noted that it is possible to translate any multi-cell
STCA variant into an equivalent single-cell STCA model, by suitably adjusting the
values of the density and the maximum speed [100].

Interestingly, the use of a smaller discretisation was already considered by
Barrett et al. in the early course of the TRANSIMS project [111,1]. In their
work, they introduce the terminology of multi-resolution TCA models, cor-
responding to our multi-cell setup. Although they discuss several methods
for integral reﬁnements of the TCA’s lattice, they do not make any mention
of the observed hysteresis phenomenon introduced by a ﬁner discretisation.

4.2 Advanced multi-cell models

Having discussed the repercussions of switching to a multi-cell setup, we now il-
lustrate three TCA models that have more complex rule sets. We discuss their prop-
erties by means of time-space diagrams, fundamental diagrams of global and local
measurements, and histograms of the distributions of the space and time gaps.

55

4.2.1 The model of Helbing and Schreckenberg (HS-TCA)

Similar in spirit as the STCA (see section 3.2.1) and the ER-TCA (see section
3.2.5), Helbing and Schreckenberg proposed their HS-TCA model in analogy with
the optimal velocity model [112]. In fact, their model can be seen as a direct dis-
cretisation of the OVM, with the following rule set:

R1: acceleration and braking

vi(t) ← vi(t − 1) + ⌊α (V (gsi(t − 1)) − vi(t − 1))⌋,

(64)

R2: randomisation

R3: vehicle movement

ξ(t) < p =⇒ vi(t) ← max{0, vi(t) − 1},

(65)

(66)

xi(t) ← xi(t − 1) + vi(t).
The function V (gsi) in rule R1, equation (64), is the discrete version of the optimal
velocity function; it is speciﬁed in the form of a lookup table, containing speed en-
tries for each space gap (see Table 1) and has the following meaning: higher values
for the parameter α indicate an almost instantaneous adaptation of the vehicle’s
speed to the OVF, whereas lower values denote an increasing inertia and longer
adaptation times [112]. However, as stated by Chowdhury et al. and Knospe et al.,
the role of α is a bit unclear as it does not exactly correspond to the timescale of the
adaptation to the OVF (which is the case for the original optimal velocity model)
[3,19]. Furthermore, certain values for α can, in combination with the OVF, lead
to collisions between vehicles (because α reduces a vehicle’s braking capability).
Knospe et al. later provided the necessary conditions that guarantee collision-free
driving, and avoid the possible backward moving of vehicles [19]. Note that, similar
to the Fukui-Ishibashi models (see sections 3.1.2 and 3.2.3), vehicles are allowed to
accelerate instantaneously in the HS-TCA model. The model is stochastic, in that
it introduces randomisation by means of rule R2, equation (65), with ξ(t) ∈ [0, 1[
a random number drawn from a uniform distribution.

In Fig. 31, we have given two time-space diagrams of the HS-TCA for global den-
sities k = 0.25 and k = 0.40 vehicles/cell. The length of a vehicle was l = 2 cells,
p = 0.001, α = 1÷ 1.3, vmax = 15 cells/time step, ∆T = 1 s, and ∆X = 2.5 m.
Due the small slowdown probability, the system dynamics are strongly determinis-
tic, totally dependent on the initial (homogeneous) conditions. In the left diagram
we can observe how vehicles can accelerate instantaneously when exiting a jam.
Note that for higher densities, all jams become dense and compact, always con-
taining stopped vehicles, as is depicted in the right diagram. Because of the non-
linearity introduced by the discretised optimal velocity function, all tempo-spatial
patterns in the system are of a chaotic nature (i.e., nonlinear with stochastic noise)
[19].

The (k,vs) and (k,q) diagrams in Fig. 32 are based on local and global measure-
ments. A feature of these diagrams is that the local measurements tend to form

56

gsi

V (gsi)

V (gsi)

0, 1

2, 3

4, 5

6

7

8

9

10

0

1

2

3

4

5

6

7

gsi

11

12

13

14, 15

16 – 18

19 – 23

24 – 36

≥ 37

8

9

10

11

12

13

14

15

Table 1
A possible optimal velocity function (OVF) for the TCA model of Helbing and Schreck-
enberg (HS-TCA). The OVF is represented as a table, giving the optimal speed V (gsi)
(expressed as cells/time step) associated with each possible space gap gsi (expressed as a
number of cells).

Fig. 31. Typical time-space diagrams of the HS-TCA model, with l = 2 cells, p = 0.001
α = 1÷ 1.3, and vmax = 15 cells/time step. The shown closed-loop lattices each contain
300 ×2 = 600 cells, with a visible period of 580 time steps. The global density k was set to
0.25 vehicles/cell (left) and 0.40 vehicles/cell (right). The formation of congestion waves
leads to dense, compact jams containing stopped vehicles. Vehicles strive to decelerate
smoothly, but are allowed to accelerate instantaneously when exiting jams fronts.

clusters around certain space-mean speeds (see the left part of Fig. 32): these clus-
ters correspond to the speeds dictated by the discretised optimal velocity function
of Table 1, each time associated with an average space gap corresponding to the in-
verse of the locally measured density. As a result, the (k,q) diagram in the right part
of Fig. 32 shows several branches, each one with a different OVF speed. The lowest
branch corresponds to the speed of the backward propagating waves, i.e., the jam
speed. Even more striking, is that from a certain ﬁnite density k ≪ 1 vehicle/cell
on, all vehicles always come to a full stop and the ﬂow in the system becomes zero
[112].

To conclude our discussion of the HS-TCA, we give the histograms of the distribu-
tions of the space and time gaps in the left and right parts, respectively, of Fig. 33.
The most prominent features of these histograms, are that (i) there exist small clus-
ters of probability mass between certain space gaps (i.e., 15 – 20, 25 – 25, and 35

57

Fig. 32. The (k,vs) (left) and (k,q) (right) diagrams for the HS-TCA, obtained by local
and global measurements. The local measurements tend to form clusters around certain
space-mean speeds, corresponding to the speeds dictated by the discretised optimal velocity
function of Table 1. These clusters are visible in the right diagram as branches with different
slopes. Remarkably, from a certain ﬁnite density k ≪ 1 vehicle/cell on, all vehicles always
come to a full stop and the ﬂow in the system becomes zero.

– 40 cells), corresponding to groups of vehicles, (ii) for higher densities, we can
observe a spread-out cluster of probability mass, corresponding to the lowest local
measurements in the left part of Fig. 32, and (iii) in contrast to the previous TCA
models, the median of the time gap for the HS-TCA is already very small for den-
sities k < 0.1.

Fig. 33. Histograms of the distributions of the vehicles’ space gaps gs (left) and time gaps
gt (right), as a function of the global density k in the HS-TCA. The thick solid lines denote
the mean space gap and median time gap, whereas the thin solid line shows the former’s
standard deviation. The grey regions denote the probability densities.

58

The HS-TCA might seem an interesting improvement, as its being based on
a discretisation of the optimal velocity model. But although its authors state
that it “reproduces many of empirically observed features” [112], Knospe
et al. showed several shortcomings in the model [19]: care must be taken
to avoid collisions, and the model fails to reproduce the synchronised-ﬂow
regime entirely. This latter can be understood by looking at the dense, com-
pact structure of jams in the time-space diagrams of Fig. 31, and the occur-
rence of branches with distinct speeds as in the right part of Fig. 32.

4.2.2 Brake-light TCA (BL-TCA)

Recently, an interesting idea was pursued by Knospe et al.; their TCA model in-
cludes anticipation effects, introduced by equipping the vehicles with brake lights
[113]. The focus of this (and the following) TCA model lies in a correct repro-
duction of the three phases of trafﬁc as introduced by Kerner et al. [58,1]. In a
sense, the BL-TCA incorporates many of the features encountered in previously
discussed single-cell TCA models. First of all, the BL-TCA has randomisation for
spontaneous braking. Secondly, it has slow-to-start behaviour for the capacity drop
and hysteresis phenomena. Moreover, it incorporates anticipation which can lead
to a stabilisation of the free-ﬂow branch. Finally, it includes elements for reproduc-
ing synchronised trafﬁc. These latter two aspects clearly go beyond the standard
incentive if drivers to avoid collisions. As such, it is the desire for smooth and
comfortable driving (which resembles human behaviour), is responsible for the oc-
currence of trafﬁc states like e.g., synchronised trafﬁc [40]. To achieve all this, the
rule set of the BL-TCA becomes quite complex, in comparison with some of the
more standard single-cell TCA models of section 3:

R0: determine stochastic noise

bi+1(t − 1) = 1 ∧ thi(t − 1) < tsi(t − 1)

=⇒ p(t) ← pb,

vi(t − 1) = 0

=⇒ p(t) ← p0,

else

=⇒ p(t) ← pd,

bi(t) ← 0,






R1: acceleration

(bi(t − 1) = 0 ∧ bi+1(t − 1) = 0)

∨ thi(t) ≥ tsi(t)

=⇒ vi(t) ← min{vi(t + 1), vmax},

59

(67)

(68)

R2a: determine effective space gap

g∗
si(t) ←
gsi(t − 1)+

max{min{vi+1(t − 1), gsi+1(t − 1)}

−gssecurity, 0},

R2b: braking

|

{z

}

anticipated speed of leading vehicle

vi(t) ← min{vi(t), g∗

si(t)},

vi(t) < vi(t − 1)

=⇒ bi(t) ← 1,

R3: randomisation

ξ(t) < p(t) =⇒

p(t) = pb ∧ vi(t) = vi(t − 1) + 1

=⇒ bi(t) ← 1,

vi(t) ← max{0, vi(t) − 1},

R4: vehicle movement

(69)

(70)

(71)

xi(t) ← xi(t − 1) + vi(t),

(72)

where bi(t) denotes the state (0 or 1) of the brake light of the ith vehicle at time step
t, thi = gsi/vi and tsi = min{vi, h} with h the interaction range of the brake light.
As such, thi is the time to reach the leading vehicle, which gets compared with an
interaction horizon tsi that depends on the speed vi and is constrained by h. If the
leading vehicle is far away, its brake light should not inﬂuence the following vehi-
cle. Furthermore, rule R0 also takes into account that drivers are more alert when
they are travelling at high speeds. The slowdown probability p in rule R0, equation
(67), corresponds to either the braking probability pb, the slow-to-start probability
p0, or the classic slowdown probability pd for decelerations. Finally, g∗
si(t) in rules
R2a and R2b, equations (69) and (70), respectively, denotes the effective space gap,
based on the anticipated speed of the leading vehicle and taking into account a se-
curity constraint gssecurity. Just as the previous TCA models, the BL-TCA is stochas-
tic, in that it introduces randomisation by means of rule R3, equation (71), with
ξ(t) ∈ [0, 1[ a random number drawn from a uniform distribution. If a vehicle was
in the process of braking due to the previous rules, then its brake light bi is turned
on. Note that Knospe also extended the BL-TCA with rules that allow asymmetric
lane changing on a two-lane road (unidirectional), incorporating a right-lane pref-
erence as well as an overtaking prohibition on the right lane. As such, the model
correctly reﬂects the density inversion phenomenon (see also section 5.1) [40,114].

60

In the remainder of this discussion, we set pb = 0.94, p0 = 0.5, pd = 0.1, h = 6
time steps, gssecurity = 7 cells, vmax = 20 cells/time step, with a vehicle length of
l = 5 cells, ∆T = 1 s, and ∆X = 1.5 m [113,19]. With respect to the calibration
of the BL-TCA model’s parameters, Knospe et al. provide a nice overview, giving
intuitive analogies for each of these parameters (e.g., p0 is associated with the speed
of the backward propagating waves) [19].

In Fig. 34, we have given two time-space diagrams of the BL-TCA for global densi-
ties k = 0.25 and k = 0.40 vehicles/cell. As can be seen in the time-space diagram
in the left part, the anticipation and synchronisation phenomena lead to forward
propagating density waves, where vehicles carry the density downstream. Going to
higher densities, we can see stable jams, indicative of the wide-moving jam phase
(see also Kerner’s three-phase trafﬁc theory [58,1]).

Fig. 34. Typical time-space diagrams of the BL-TCA model (refer to the text for the used
parameter values). The shown closed-loop lattices each contain 300 ×5 = 1500 cells, with
a visible period of 580 time steps. The global density k was set to 0.25 vehicles/cell (left)
and 0.40 vehicles/cell (right). The visible forward propagating density waves are a result
of the anticipation and synchronisation phenomena. At higher densities, stable jams occur,
indicative of the wide-moving jam phase.

Looking at the (k,vs) and (k,q) diagrams in Fig. 35, we can use the local measure-
ments to discriminate between the free-ﬂow (◦), synchronised-ﬂow (·), and jammed
regimes (⋆). The synchronised regime is visible as a wide scatter in the data points,
having various speeds but relatively high ﬂows. The data points in the wide-moving
jam correspond to Kerner’s so-called line J [58,1]. The use of a ﬁner discretisation
can lead to metastable states (see section 4.1), but as Knospe et al. note, the slow-
to-start behaviour in rule R0, equation (67), is necessary in order to produce the
correct speed of the backward propagating wave, as a result of a reduced outﬂow
from a jam [19].

Finally, Fig. 36 depicts the histograms of the distributions of the space and time
gaps in the left and right parts, respectively. In contrast to the HS-TCA, there are
no more clusters for the space gap (see left part of Fig. 33), but rather a smooth re-
gion of probability mass: as the global density of the system increases, the average
space gap diminishes continuously and monotonically. The observations for the dis-
tributions of the time gaps correspond to those encountered in literature [113,19]:
from the right part of Fig. 36, we can see a wide range of probability mass at low
densities (free-ﬂow trafﬁc), corresponding to a wide distribution of time gaps. At
intermediate densities (synchronised ﬂow), the distribution tends to peak, leading

61

Fig. 35. The (k,vs) (left) and (k,q) (right) diagrams for the BL-TCA model, obtained by
local and global measurements. The local measurements discriminate between the free-ﬂow
(◦), synchronised-ﬂow (·), and jammed regimes (⋆). The synchronised regime is visible as
a wide scatter in the data points, having various speeds but relatively high ﬂows. The data
points in the wide-moving jam correspond to Kerner’s line J.

to a small dense cluster at approximately k = 0.15 vehicles/cell, with a median time
gap of 1 time step. Finally, at higher densities (jammed trafﬁc), the distribution of
the time gaps gets more peaked, as is illustrated by the narrowing of the grey region
of probability mass.

Fig. 36. Histograms of the distributions of the vehicles’ space gaps gs (left) and time gaps
gt (right), as a function of the global density k in the BL-TCA model. The thick solid lines
denote the mean space gap and median time gap, whereas the thin solid line shows the
former’s standard deviation. The grey regions denote the probability densities.

4.2.3 The model of Kerner, Klenov, and Wolf (KKW-TCA)

Based upon the BL-TCA of Knospe et al., Kerner, Klenov, and Wolf (KKW) re-
ﬁned this approach by extending it. Their work resulted in a family of models that
incorporate the notion of a synchronisation distance for individual vehicles [115].
Derived from this model class, Kerner et al. proposed discretised versions in the
form of trafﬁc cellular automata models. In this report, we consider the KKW-1
TCA model, of which the complex rule set is as follows [116]:

62

(73)

(74)

(75)

(77)

(78)

R1a: determine synchronisation distance

R1b: determine acceleration and deceleration

Di(t) ← D0 + D1vi(t − 1),

vi(t − 1) < vi+1(t − 1) =⇒ ∆acci(t) ← a,

vi(t − 1) = vi+1(t − 1) =⇒ ∆acci(t) ← 0,

vi(t − 1) > vi+1(t − 1) =⇒ ∆acci(t) ← −b,

R1c: determine desired speed

gsi(t − 1) > (Di(t) − li)

=⇒ vdesi(t) ← vi(t − 1) + a,

gsi(t − 1) ≤ (Di(t) − li)

=⇒ vdesi(t) ← vi(t − 1) + ∆acci(t),

R1d: determine deterministic speed

vi(t) ← max{0, min{vmax, gsi(t), vdesi(t)}},

(76)

R2a: determine acceleration probability

R2b: determine braking probability

vi(t) < vp =⇒ pa(t) ← pa1,

vi(t) ≥ vp =⇒ pa(t) ← pa2,

vi(t) = 0 =⇒ pb(t) ← p0,

vi(t) > 0 =⇒ pb(t) ← pd,











R2c: determine stochastic noise

ξ(t) < pa(t)

=⇒ ηi(t) ← a,

pa(t) ≤ ξ(t) < pa(t) + pb(t) =⇒ ηi(t) ← −b,

(79)

ξ(t) ≥ pa(t) + pb(t)

=⇒ ηi(t) ← 0,

R2d: determine stochastic speed

vi(t) ← max{0, min{vmax, vi(t) + ηi(t), vi(t) + a}},

(80)

R3: vehicle movement

xi(t) ← xi(t − 1) + vi(t).

(81)

63
















As can be seen from this overview, the KKW-TCA model’s rule set is mainly com-
posed of a deterministic part (rules R1a – R1d) and a stochastic part (rules R2a –
R2d). In the deterministic part, the synchronisation distance Di is computed ﬁrst
with rule R1a, which uses a linear function (other forms, e.g., quadratic functions,
are also possible). The parameters D0 and D1 need to be estimated. Rule R1c de-
termines the desired speed vdesi: the ﬁrst part of the rule allows the vehicle to ac-
celerate, whereas the second part of the rule uses an acceleration ∆acci deﬁned by
rule R1b (a and b are parameters denoting the acceleration, and respectively brak-
ing, capabilities). As such, a vehicle will tend to adapt its speed to that of its direct
frontal leader, whenever the vehicle is within a zone of interaction (i.e., the syn-
chronisation distance). The deterministic speed is then computed by means of rule
R1d, which takes into account the maximum speed vmax, the space gap gsi to avoid
a collision, and the previously computed desired speed of rule R1c.

In the stochastic part for computing the speed, a randomisation is introduced in rule
R2d by means of a stochastic acceleration ηi. The values of ηi are obtained in rule
R2c with probability pa for accelerating, and probability pb for braking. The former
is dependent on the vehicles computed deterministic speed and the parameters vp,
pa1, and pa2 with pa1 > pa2 and pa1 + pa2 ≤ 1. The latter, pb is dependent on the
vehicles computed deterministic speed and the slowdown probability pd and the
slow-to-start probability p0 with p0 > pd.

In the remainder of this discussion, we set D0 = 60, D1 = 2.55, a = b = 1,
vp = 28, pa1 = 0.2, pa2 = 0.052, p0 = 0.425, pd = 0.04, vmax = 60 cells/time step,
with a vehicle length of l = 15 cells, ∆T = 1 s, and ∆X = 0.5 m [19].

Considering the KKW-TCA models’ time-space diagrams in Fig. 37, we can see
that, in contrast to the BL-TCA (see section 4.2.2), there are less spontaneous for-
mations of small trafﬁc jams. The forward propagating density waves in Fig. 34 are
absent in the KKW-TCA model. However, the two models show good correspon-
dence with respect to the speed of the backward propagating waves.

Fig. 37. Typical time-space diagrams of the KKW-TCA model (refer to the text for the used
parameter values). The shown closed-loop lattices each contain 300 ×15 = 4500 cells, with
a visible period of 580 time steps. The global density k was set to 0.25 vehicles/cell (left)
and 0.40 vehicles/cell (right). Note the stable ﬂow of vehicles surrounding the dense and
compact superjams.

Similar as in the BL-TCA model’s effective space gap g∗
si(t), the synchronisation
distance D is responsible for producing the typical two-dimensional scatter in the

64

(k,vs) and (k,q) diagrams in Fig. 38. When a driver who is within the synchroni-
sation distance adapts the vehicle’s speed, the only factors taken into account are
the current speed of the direct frontal leader and a safety criterion (in the form of
the current space gap); it is this effect that produces the scatter in the data, because
the exact speciﬁcation of this speed is absent. In both diagrams of Fig. 38, the local
measurements discriminate between the free-ﬂow (◦), synchronised-ﬂow (·), and
jammed regimes (⋆). One of the major differences between these two models, is
that the ﬂow in the synchronised regime is almost a factor two larger for the KKW-
TCA than the BL-TCA. The KKW-TCA also experiences a capacity drop similar
as in the BL-TCA, but also undergoes an abrupt transition when going from the
synchronised-ﬂow to the wide-moving jam regime around a global density of some
0.4 vehicles/cell (see the left part of Fig. 38). Because the model is built around the
assumption that vehicles tend to approximate the behaviour of their direct leader
within a certain synchronisation distance, the resulting trafﬁc regimes correspond
well to Kerner’s empirical observations [58,1].

Fig. 38. The (k,vs) (left) and (k,q) (right) diagrams for the KKW-TCA model, obtained by
local and global measurements. The local measurements discriminate between the free-ﬂow
(◦), synchronised-ﬂow (·), and jammed regimes (⋆). The synchronised regime is visible as a
wide scatter in the data points, having various speeds but ﬂows comparable to the capacity
ﬂow.

In Fig. 36, we have depicted the histograms of the distributions of the space and
time gaps in the left and right parts, respectively. The distributions are similar to
those of the BL-TCA, but there are some important differences. With respect to
the space gaps in the left part of Fig. 36, there is a high variance in the jammed
regime, due to the fact that there are vehicles in free-ﬂow trafﬁc, as well as inside
the wide-moving jams (although most of the probability mass is assigned to the
zero space gap inside the dense jams). Considering the time gaps in the right part
of Fig. 36, we can see that they always form a tight cluster around the median of the
distribution, indicating very narrow distributions with an pronounced peak. This is
completely different behaviour than in the BL-TCA model (see the right part of
Fig. 36). The main reason is probably due to the lack of an anticipation effect in
the KKW-TCA model. Even more severe, is the fact that the KKW-TCA model,
despite its elaborate construction based on a synchronisation distance, completely

65

fails to describe the microscopic structure of motorway trafﬁc. The BL-TCA model
however succeeds in having a good ﬁt on both macroscopic and macroscopic scales,
as stated according to Knospe et al. [114,19].

Fig. 39. Histograms of the distributions of the vehicles’ space gaps gs (left) and time gaps
gt (right), as a function of the global density k in the KKW-TCA model. The thick solid
lines denote the mean space gap and median time gap, whereas the thin solid line shows
the former’s standard deviation. The grey regions denote the probability densities.

5 Multi-lane trafﬁc, city trafﬁc, and analytical results

In this ﬁnal section on trafﬁc cellular automata models, we take a look at some other
aspects related to TCA models. We ﬁrst discuss some properties and methodologies
for modelling multi-lane trafﬁc in the context of a cellular automaton, after which
we brieﬂy consider several approaches for dealing with city trafﬁc. The ﬁnal part of
the section concludes with an overview of different analytical treatments of TCA
models.

5.1 Multi-lane trafﬁc

In this section, we brieﬂy discuss some properties and methodologies for modelling
multi-lane trafﬁc in the context of a cellular automaton. To this end, we illustrate
the types of lane changes that are possible, then discuss the general setup for a
lane-changing model. We conclude with a short overview on the implementation
of lane-change rules and explain the phenomenon of ping-pong trafﬁc, an artifact
introduced by an inferior implementation.

5.1.1 Types of lane changes

In general, there are two types of lane changes identiﬁed: mandatory lane changes
(MLC) and discretionary lane changes (DLC) [1]. In the former case, a vehicle is
obliged to execute a lane change, e.g., because it needs to exit the motorway at an
off-ramp, or because the vehicle is by law obliged to drive in the right shoulder

66

lane. In the latter case, a vehicle changes a lane at its own discretion, e.g., when
approaching and overtaking a slow-moving leading vehicle.

With respect to the rules for lane changing, there are also two approaches: symmet-
ric and asymmetric. In the US, the symmetric approach is more applicable: this is
embodied by the fact that motorways have a large number of lanes (i.e., more than
three), with vehicles driving at lower speeds (e.g., 60 miles/hour, corresponding to
some 100 kilometres/hour), effectively using all lanes more homogeneously. Such
a system is typically called “keep-your-lane”, as frequent lane changes are discour-
aged. In contrast to this, people in most European countries are obliged by law to
drive on the outer right shoulder lane whenever possible. Motorways have fewer
lanes (typically either two or three, unidirectional), operating at higher speeds of
e.g., 120 kilometres/hour. In addition, most of these countries have instituted an
overtaking prohibition on the right lane, with large trucks restricted to the two most
right lanes.

With respect to this latter system of asymmetric lane changes, the phenomenon
of density or lane inversion plays an important role, especially on the numerous
2x2 motorways in Europe (see also the beginning of section 3 for a discussion of
this phenomenon). Another aspect that has a signiﬁcant inﬂuence, is the change of
driver behaviour, e.g., near on-ramps. Here, drivers might avoid the shoulder lane
to allow trafﬁc to enter, or because of their increased attention, they might induce
a more subtle effect such as the capacity funnel (see also our discussion in [51] for
more details on this phenomenon).

5.1.2 General setup for lane changing

Deciding on whether or not to perform a lane change, is typically split in two sep-
arate steps: ﬁrst, a vehicle checks if it is desirable to change lanes, i.e., making the
distinction between a mandatory or discretionary lane change. If a lane change is
indeed desirable, then the second step proceeds to check whether or not such a lane
change can be performed at all with respect to safety and collision avoidance. Thus,
there is a check for gap acceptance.

One of the ﬁrst approaches to model such lane-changing behaviour an a two-lane
road in a TCA model, is due to Nagatani. His work was based on the deterministic
CA-184 model (see section 3.1.1) [117]. One of the artifacts of his lane-changing
rules, was the existence of states in which blocks of vehicles alternated from one
lane to another, without moving at all. To circumvent this problem, Nagatani ran-
domised the lane-changing behaviour [118]. Rickert et al. later applied this lane-
changing methodology, by extending the STCA model (see section 3.2.1) to handle
two-lane unidirectional trafﬁc [119]. Wagner et al. later assessed the previous work
of Rickert et al., concluding that it did not capture certain aspects (e.g., density in-
version) of trafﬁc ﬂows very well [120]. To this end, they built upon the previous
work, adding a more specialised security constraint that takes into account the fact
that vehicles should also consider the following vehicles in the target lane, thereby
avoiding severe disruptions. As a ﬁnal comment, they state that the lane-changing

67

rules in a TCA model typically do not provide a realistic microscopic model, but
they rather lead to a good correspondence with respect to observed macroscopic
features (e.g., the frequency of lane changes).

In order to address the correct reproduction of the density inversion phenomenon,
Nagel et al. artiﬁcially introduced a slack parameter, capturing the inclination of a
driver to change back to the right lane. They furthermore also provided an extensive
classiﬁcation of some 10 lane changing rules and criteria encountered in literature
[56]. Another excellent overview of multi-lane trafﬁc is given by Chowdhury et al.
[3].

As all the previous work dealt with unidirectional roads, it seems logical to con-
sider bidirectional trafﬁc, i.e., trafﬁc with adjacent but opposing lanes. Simon and
Gutowitz were among the ﬁrst to consider a TCA model of such trafﬁc, with vehi-
cles driving on two lanes [121]. Central to their approach, is the notion of a local
density that each driver must assess before attempting to complete an overtaking
manoeuvre. When a driver encounters a slower moving vehicle, a check is made
whether or not there is enough space in front of this leading vehicle (this is the lo-
cal density). If the check is positive, then a lane change can be performed (under the
condition of course that there is a safe gap in the opposing lane). With this scheme
in mind, high density trafﬁc thus excludes such overtaking manoeuvres, due to the
fact that the local density is too low to complete them.

Note that some authors, e.g., Gundaliya et al. [122], Mallikarjuna and Ra-
machandra Rao [123], use a peculiar variant of a multi-lane setup. Their
models have essentially a multi-cell structure, but now the multi-cell con-
cept is extended in the lateral direction. So cells not only get smaller, but
also ‘thinner’, allowing variable-width vehicles, e.g., motor cycles that can
more easily pass other vehicles in the same lane. In our opinion, this leads to
unnecessary complexity, giving little beneﬁts. In fact, we believe that such a
scheme directly opposes the idea behind a CA model, as explained at the in-
troduction of this report. We strongly feel that heterogeneity in a TCA model
should only be incorporated by means of different lengths, maximum speeds,
acceleration characteristics, anticipation levels, and stochastic noise for dis-
tinct classes of vehicles and/or drivers. Any other approach would be better
off with a continuous microscopic model.

5.1.3 Implementation of lane-changing rules and the phenomenon of ping-pong

trafﬁc

adjacent lanes,

The basic implementation of a lane-changing model in a TCA setting, leads to two
substeps that are consecutively executed at each time step of the CA:

• ﬁrst, the lane-changing model is executed, exchanging vehicles between laterally

• then, all vehicles are moved forward (i.e., longitudinal) by applying the car-

following part of the TCA model’s rules.

68

One immediate result from this approach, is that a lane change in a TCA model
is completed within one time step (i.e., ∆T ). This is in contrast to real-life trafﬁc,
where lane changes have a duration of several seconds [56].

For more than two lanes, care must be taken to avoid so-called scheduling conﬂicts
during the ﬁrst substep. Consider for example three lanes, with two vehicles driving
in the outer left, respectively outer right, lane at the same longitudinal position. If
the cell in the middle lane is empty, then the vehicles may decide to move to this lo-
cation, resulting in a lateral collision. In order to compensate this, one possibility is
to choose a vehicle at random (or by preference), thereby allowing it to perform its
requested lane change. Another possibility is to perform left-to-right lane changes
in even time steps, and right-to-left lane changes in odd time steps.

As hinted earlier, the ‘correctness’ of a lane-change model should be judged on the
basis of certain macroscopic observations. Examples of these are the frequency of
lane changes with respect to different densities, the capacity ﬂows for all lanes sep-
arately and combined, the critical density at which a breakdown occurs in each of
the lanes, . . . Good indicators can be found in the many small ﬂuctuations typically
exhibited by multi-lane TCA models, instead of the large jams in single-lane traf-
ﬁc. Trafﬁc ﬂows get more ﬂuid if vehicles are allowed to pass moving bottlenecks
[120,56]. However, under certain conditions, Helbing and Huberman have shown
the existence of coherent states, where vehicles’ speeds are synchronised across ad-
jacent lanes. For heterogeneous trafﬁc ﬂows, this can lead to a moving ‘solid block’
of vehicles [124].

When implementing lane-change rules in a TCA model, care must however be
taken that the implementation does not introduce any unrealistic artifacts. A promi-
nent example of this, plaguing many TCA models, is a phenomenon called ping-
pong trafﬁc. Nagatani was among the ﬁrst to observe this peculiar behaviour of ve-
hicles in trafﬁc ﬂows (see section 5.1.2). In ping-pong trafﬁc, vehicles typically al-
ternate between lanes during successive time steps. As explained earlier, one way to
resolve this behaviour is by randomising the lane-change decision, thereby quickly
destroying any such artiﬁcial patterns [118,119].

5.2 City trafﬁc and intersection modelling

When modelling city trafﬁc, essentially two approaches can be followed: either
the entire road network is considered as a two-dimensional lattice (i.e., a grid), or
each road in the network is a single longitudinal lattice (single- or multi-lane) with
explicitly modelled intersections. The former was historically used in the context of
phase transitions in a CA, whereas the latter is more applicable to describe real-life
trafﬁc ﬂows in populated cities.

In this section, we illustrate both approaches, starting with a classic grid layout as
embodied by the Biham-Middleton-Levin (BML) and Chowdhury-Schadschneider
(ChSch) TCA models, after which we brieﬂy comment on explicit descriptions of
intersections in TCA models.

69

5.2.1 Grid trafﬁc

The ﬁrst model of ‘city trafﬁc’ was proposed by Biham, Middleton, and Levine
(BML). It was developed around the same time Nagel and Schreckenberg presented
their STCA (see section 3.2.1). The BML-TCA, is a two-dimensional model that
describes trafﬁc on a square grid in a toroidal setup (i.e., opposing sides are iden-
tiﬁed), with vehicles distributed randomly over the lattice [125]. The model is in
fact a very simplistic model, in that it assumes that all vehicles either move from
the south to the north direction, or from the west to the east. Each cell of the lattice
is assumed to contain a trafﬁc light, in the sense that all west-east vehicles try to
move during even time steps, and all south-north vehicles during odd time steps
(thus vmax = 1 cell/time step for all vehicles). The BML-TCA constitutes a fully
deterministic model, where the only randomness is introduced through the initial
conditions. Note that its one-dimensional version corresponds to the CA-184 and
the TASEP (see sections 3.1.1 and 3.2.4).

Depending on the global density of vehicles in the lattice, the model results in
two distinct trafﬁc regimes, with a sharp ﬁrst-order phase transition between them.
The ﬁrst regime, i.e., free-ﬂow trafﬁc, corresponds to a state with alternate moving
vehicles (i.e., west-east and south-north moving); an example is depicted in the left
part of Fig. 40. In the congested regime, a self-organised global cluster emerges,
completely composed of blocked vehicles (see e.g., the right part of Fig. 40). When
the phase transition between both regimes occurs, the space-mean speed changes
abruptly from one to zero cells/time step [125,126]. Fukui and Ishibashi studied
the repercussions of a local disruption in the lattice (e.g., a crashed vehicle that
remains stopped for an eternal period), and found that it provides the seed of a
growing global cluster [127]. Biham et al. also considered a less restrictive version
of the above model, in which now all vehicles try to move at each time step. In case
of conﬂicts between a west-east and a south-north vehicle, one of them is chosen
at random. Another variation considers also opposing trafﬁc, which can lead to
gridlocked situations where no vehicles are able to move at all. A generalisation of
the BML-TCA, was provided by Freund and Poschel who consider a similar setup,
but now with trafﬁc moving in all four directions [128]. Finally, Shi is able to obtain
analytical expressions for the critical densities at which the previously mentioned
phase transitions occur [129].

In the work of Chowdhury et al., a comprehensive overview is given, describing
extensions to the BML-framework [3]. This overview includes asymmetric distri-
butions of the west-east and south-north vehicles, unequal maximum speeds, two-
level crossings (where two vehicles can share the same cell), faulty trafﬁc lights
(here, either a west-east or south-north vehicle is chosen at random to occupy a
cell, irrespective of the current time step), road blocks, line- and point-defects (i.e.,
a crowded ‘street’ of the model, corresponding to a dense horizontal or vertical row
of cells), random turning of vehicles, cut-off streets (similar to a row of two-level
crossings), and so forth and so on.

Chowdhury and Schadschneider later extended the BML-TCA model to incorpo-

70

Fig. 40. Left: snapshot of the spatial structure in the BML-TCA for k = 0.25. In this
free-ﬂow regime, all vehicles move alternatingly, with the right-oriented arrows denoting
west-east travelling vehicles, and the upward-oriented arrows denoting south-north trav-
elling vehicles. Right: same setup as before, but now for k ≈ 0.4082. In this congested
regime, a global cluster emerges, completely composed of blocked vehicles. Bottom: an
overview of the ChSch-TCA, showing the street segments of ﬁnite length between the
BML-TCA’s original intersections. The ﬁrst two images are reproduced after [125], the
third after [98].

rate randomisation effects like in the STCA model, having the result that jamming
can now occur spontaneously [130]. Their model furthermore contains street seg-
ments of ﬁnite length between the cells, with vehicles driving according to the
STCA’s rules on these streets. The original cells in the BML-TCA model form the

71

signallised intersections of the Chowdhury-Schadschneider model (ChSch-TCA),
as can be seen in the bottom part of Fig. 40. At sufﬁciently large densities, a transi-
tion can occur that leads to a self-organising state of completely gridlocked trafﬁc.
Barlovi´c later provided a solution to this problem, making the model well-suited
for assessing the results of different trafﬁc light control policies in a city [98].

5.2.2 Explicit intersection modelling

In contrast to the previous section were all trafﬁc operations were essentially de-
ﬁned on a two-dimensional lattice, it is also possible to consider a complete road
network, consisting of separate links that are connected to each other by means of
intersections. These intersections can either be signallised, or unsignallised, turn-
ing priorities can be deﬁned, as well as different geometrical layouts (e.g., round-
abouts).

Road networks based on the above assumptions, typically combine a set of basic
building blocks. As such, the network is logically decomposed in a set of nodes
and links. The former denote the intersections, whereas the latter can, depending
on the implementation, refer to individual lanes, a group of adjacent lanes, or even
a road with two-way trafﬁc. In general, trafﬁc operations on motorways are primar-
ily inﬂuenced by the behaviour of vehicles on links, i.e., their car-following and
lane-changing behaviour. Conversely, trafﬁc operations in cities and denser street
networks, are primarily deﬁned by the behaviour of vehicles at intersections, i.e.,
queueing delays at trafﬁc lights, priority turns, . . . In many cases, the intersection
logic is simpliﬁed, such that all decisions (conﬂict resolving et cetera) are taken
before a vehicle enters the intersection [14].

Several non-exhaustive examples include the work of Esser and Schreckenberg
with applications to the city of Duisburg [131], the work of Simon and Nagel who
primarily focussed on single-lane trafﬁc in combination with several setups for con-
trolling trafﬁc lights, applying their work to the city of Dallas (different links have
different slowdown probabilities associated with them, thus enabling to model dif-
ferent street capacities) [132], the work of Diedrich et al. who consider the effects
of various implementations of on- and off-ramps in the classic STCA model [133],
and all the references on TRANSIMS, the travel behaviour in Switzerland, the re-
gion of Dallas, the city of Portland, and the city of Geneva (where all intersections
are replaced by generalised roundabouts), mentioned in our discussion in [1].

72

All these examples have in common that they are based on simple building
blocks. Despite this elegance, most of them however, do not provide satisfac-
tory information regarding the calibration and validation of their underlying
models (this for example with respect to the correct observed queueing de-
lays at intersections). A popular technique is to use sources and sinks, where
vehicles are added and removed, allowing tuning of the simulator in order
to agree with incoming on-line measurements. Clearly, we feel that besides
a need for elaborate descriptions of the employed models, there is perhaps
even a bigger need for correct information with respect to these models’ ﬁ-
delity and accuracy.

5.3 Analytical results

Because most studies based on TCA models heavily rely on numerical simulations,
this creates the danger of introducing artifacts (e.g., ﬁnite-size effects) that obscure
the true dynamics of the systems under consideration. Although most of these prob-
lems should resolve in the so-called thermodynamic limit where KL, Tmp → +∞
(i.e., a lattice with inﬁnite length considered over an inﬁnite time period), resort-
ing to this approach is computationally not feasible. As a result, researchers have
focussed on analytical methods. Except for the most trivial cases with a determin-
istic (i.e., noiseless) TCA model, these analytical methods most of the time provide
approximations at best.

In this section, we illustrate several of these analytical methods encountered in lit-
erature. Our discussion focusses on the concept of a mean-ﬁeld theory, after which
we elaborate on some of its improvements that lead to better agreement with nu-
merical results.

Note that other avenues for analytical treatments of CA models, and TCA
models in particular, are also explored. In this section, we will however not
go into detail about them. For more information, we refer the reader to the
interesting work of Fuk´s and Boccara [134,135,136,137,138].

5.3.1 Mean-ﬁeld theory

As mentioned in the introduction of this section, for the case of arbitrary vmax and
p = 0 or p = 1, or for vmax = 1 cell/time step, the analytical solution of the re-
sulting TCA model is exactly known. This solution, expressed as its (k,q) diagram,
corresponds to the set of diagrams as depicted in Fig. 10 (see section 3.1.2) for the
DFI-TCA.

The problem is to ﬁnd an analytical description of how the system evolves in time
through the state space, i.e., what are the occurring conﬁgurations ? The evolution
of a system, can be described by what is called a master equation. For cellular
automata, this equation is a ﬁrst-order differential equation, describing the change

73

in probability of a system’s lattice to be in a certain conﬁguration. The downside is
that, in general, this master equation can not be solved exactly.

For the TASEP model (see section 3.2.4) with open boundary conditions and ran-
dom sequential update, the master equation can be solved exactly [139,18]. In a
ﬁrst step, the master equation is elegantly written in vector form, comprising a
transfer matrix that contains the time-evolution of the probabilities. By assuming
the matrix-product ansatz (MPA) formalism, the transfer matrix can be rewritten
as a product of local transfer matrices, operating on sets of cells. This provides a
algebra that can be solved exactly, thereby solving the TASEP analytically. Note
that for the TASEP with a parallel update however, obtaining the exact solution is
difﬁcult, because no simple MPA decomposition into local matrices is possible.

In contrast to this promising result, obtaining an analytical solution becomes harder
to even intractable for the STCA model (see section 3.2.1) with vmax > 1 cell/time
step and 0 < p < 1. In the master equation, probabilities of cluster of cells will oc-
cur, making its solution very hard [54]. One well-known method that is suitable for
dealing with many-particle systems in statistical mechanics, is the construction of a
mean-ﬁeld theory (MFT) of the model. Such a MFT can provide an approximation
of the master equation; in some cases, the MFT turns out to be an exact solution.

The idea behind a MFT, is that all correlations between neighbouring cells are
neglected. For TCA models, such a site-oriented mean-ﬁeld theory (SOMF) as-
sumes that all cluster probabilities are replaced by single cell probabilities. The
MFT now replaces the effects of these individual cells with an average effect (the
‘mean ﬁeld’), which simpliﬁes computations considerably. When translating the
STCA’s rules R1 – R3, i.e., equations (46) – (48), R1 is decoupled into separate
acceleration and braking rules R1a and R1b, after which their order is changed to
R1b, R3, R4, R1a. The upshot of this is that there are no stopped vehicles in the
system, thereby reducing the number of possible states for a cell by one. If vmax = 1
cell/time step, then the system can be fully described by cell occupancies. Apply-
ing this SOMF theory to the STCA model, results in considerably underestimation
of the ﬂow in the system (even for the restricted case of vmax = 1 cell/time step)
[140,72,54].

5.3.2 Improving the SOMF theory

As mentioned in the previous section, setting vmax = 1 cell/time step leads to an
underestimation of the ﬂow. However, when switching from a parallel update pro-
cedure to a random sequential one, the resulting SOMF theory becomes exact !
It turns out that the reason for the underestimation, can be traced back to its ne-
glecting of all correlations between cells (which are a consequence of the parallel
update procedure). As explained in the beginning of section 3.2.4, using a parallel
update excludes certain Garden of Eden states. However, the SOMF theory naively
includes these paradisiacal states. As a solution, these GoE states can be eliminated,
resulting in a paradisiacal mean-ﬁeld theory (pMFT). In systems with higher max-
imum speeds, more GoE states occur, making it difﬁcult to derive a pMFT. Even

74

then, the theory still remains an approximation (albeit a better one) when using a
parallel update procedure [141,72,54].

Taking into account short-range correlations, can be done by considering a car-
oriented mean-ﬁeld theory (COMF). Instead of dealing with cells and their occu-
pancies, the COMF theory computes the probabilities Pn(v) of ﬁnding a space gap
of n cells for a vehicle driving with speed v [142]. In a sense, the COMF the-
ory approximates the problem by neglecting the correlations between space gaps
of successive vehicles [3]. As such, it gives qualitatively good approximations for
p → 0; in all other cases, the COMF theory starts to fail, because there are also
correlations between the space gaps [18,3]. Note that the COMF theory has also
been applied to the BJH-TCA and VDR-TCA models (see sections 3.3.2 and 3.3.3,
respectively) [93].

Another approach to analytically solve the master equation, is to explicitly take
into account the correlations between neighbouring cells, by considering clusters
composed of n consecutive cells [72,54]. Such a site-oriented cluster-theoretic ap-
proach proves to perform better than the COMF theory from the previous sec-
tion [140]. The improvement of the approximation is even better when considering
larger clusters; it is exact for n → +∞ [143,18,3].

6 Summary and outlook

This report gave an elaborate and understandable review of trafﬁc cellular automata
(TCA) models, which are a class of computationally efﬁcient microscopic trafﬁc
ﬂow models. TCA models arise from the physics discipline of statistical mechan-
ics, having the goal of reproducing the correct macroscopic behaviour based on a
minimal description of microscopic interactions.

We began with an overview of cellular automata (CA) models, their background
and physical setup. Applying this technique to the modelling of trafﬁc ﬂows, we
discretise a road into a number of small cells (a procedure called coarse graining),
having a width of e.g., ∆X = 7.5 m. Time is also discretised into units of approxi-
mately ∆T = 1 s. After introducing the mathematical notations, we showed how to
perform measurements on a TCA model’s lattice of cells, and how to convert these
quantities into real-world units and vice versa.

Subsequently, we gave an extensive account of the behavioural aspects of several
TCA models encountered in literature. Already, several reviews of TCA models
exist, but none of them consider all the models exclusively from the behavioural
point of view. In this respect, our overview ﬁlls this void, as it focusses on the be-
haviour of the TCA models, by means of time-space diagrams, (k,q) diagrams and
the like, and histograms showing the distributions of vehicles’ speeds, space, and
time gaps. In the report, we have distinguished between single-cell and multi-cell
models, whereby in the latter vehicles are allowed to span a number of consecutive

75

cells. We concluded with a concise overview of TCA models in a multi-lane set-
ting, and some of the TCA models used to describe city trafﬁc as a two-dimensional
grid of cells, or as a road network with explicitly modelled intersections. The ﬁnal
part of the report illustrated some of the more common analytical approximations
to single-cell TCA models.

Considering the state-of-the-art in using TCA models, our analysis indicates that
the ﬁeld has evolved rapidly over the last decade. Starting from initial attempts
based on rather crude models, the past few years have seen an increase in the com-
putational complexity as well as the available computational power. More complex
models are developed, of which we believe the brake-light TCA model of section
4.2.2 is the most promising: it is able to faithfully reproduce the correct real-life em-
pirical observations, and quite some work has been done at calibrating the model,
see e.g., the recent work of Knospe et al. [19]. To conclude, we note an evolving
trend of using these TCA models as the physical models underlying multi-agent
systems, in part describing the behaviour of individual people in large-scale road
networks [1].

A TCA+ JavaTM software

As already brieﬂy mentioned in the paper, all simulations were performed by means
of our Trafﬁc Cellular Automata + software [102]. It was developed for the JavaTM Vir-
tual Machine (JVM), and can be downloaded 1 from:

http://smtca.dyns.cx

The software is also referenced on the Trafﬁc Forum 2 (see section Links, subsec-
tion Online Trafﬁc Simulation or Visualization (Java Applets), item Java (Swing)
application for several cellular automata models).

In this appendix, we summarise our rudimentary TCA+ software. We start with an
overview of its features, explain how to run the software, and conclude with some
technical details with respect to the implementation of its code base.

A.1 Overview and features

The TCA+ software package’s goal is two-fold: on the one hand, it provides an
intuitive didactical tool for getting acquainted with the concept of single-lane trafﬁc
cellular automata models. On the other hand, it provides a rich enough code base
to perform hand-tailored simulation experiments, as well as giving insight into the
details of programming TCA models.

1 From May 2002 until June 2005, the software has been downloaded some 800 times, of
which we suspect one third to be trafﬁc coming from search engines’ indexing robots.
2 http://www.trafficforum.org

76

In a nutshell, our software considers one-dimensional trafﬁc cellular automata with
periodic boundary conditions, i.e., vehicles driving on a unidirectional circular
road. Different sets of rules can be chosen, and for each set its parameters (e.g.,
stochastic noise) can be changed at run time. Both local and global measurements
can be performed on the lattice by means of artiﬁcial loop detectors. A trafﬁc light
with cyclical red and green phases was also added, allowing to study elementary
queueing behaviour. In the software, we have implemented the TCA models listed
in Table A.1.

TCA model

Refer to section

CA-184

DFI-TCA

STCA

STCA-CC

SFI-TCA

TASEP

ER-TCA

deterministic T2-TCA

stochastic T2-TCA

VDR-TCA

VDR-CC-TCA

TOCA

MC-STCA

HS-TCA

BL-TCA

KKW-TCA

3.1.1

3.1.2

3.2.1

3.2.2

3.2.3

3.2.4

3.2.5

3.3.1

3.3.1

3.3.3

3.3.3

3.3.4

4.1

4.2.1

4.2.2

4.2.3

Table A.1
All TCA models implemented in our TCA+ software, accompanied by references to the
respective sections in the paper where they are extensively discussed.

In Fig. A.1, we show a screenshot of the main graphical user interface (GUI). As
can be judged from the image, the TCA+’s GUI is rather huge, spanning approx-
imately 1400x1200 pixels (scrollbars are automatically placed if it does not ﬁt on
the screen). It consists of several panels:

• a scrolling time-space diagram containing vehicle trajectories and an animation

of the road situation,

• a panel containing some simulation statistics,
• several simulator controls,

77

• and scrolling loop detector plots and plots of the (k,q), (k,vs), and (q,vs) dia-

grams.

In the following paragraphs, we describe each of these features in more detail.
Note that there currently are two versions of the GUI: a standard version for all
the single-cell TCA models, and a modiﬁed multi-cell TCA version with limited
functionality (mainly for creating coloured tempo-spatial diagrams).

Fig. A.1. A screenshot of the TCA+’s main graphical user interface (GUI) for single-cell
TCA models. The GUI is rather huge, spanning approximately 1400x1200 pixels, con-
sisting of several panels: a scrolling time-space diagram containing vehicle trajectories,
an animation of the road situation, a panel containing some simulation statistics, several
simulator controls, scrolling loop detector plots and plots of the (k,q), (k,vs), and (q,vs)
diagrams.

Vehicle animation

Looking at the time-space diagram in the upper-left panel, we can discern the indi-
vidual vehicle trajectories, as well as the typical backwards-travelling shock waves
of congestion. In this scrolling diagram, the time axis goes from the left to the
right, while the space axis goes from the bottom to the top (and is a one-to-one
mapping of the consecutive cells on the ring road). Each pixel here corresponds
to a unique cell of the simulator and each vehicle is coloured with a certain shade

78

of yellow (in order to easily distinguish between different neighbouring vehicles).
There is also a setting available that allows stopped vehicles to be coloured red.
In the upper-middle panel, the actual geometrical conﬁguration of the ring road is
depicted. This allows us to view the current physical situation on the road, i.e., the
positions of all the vehicles. Each vehicle can be coloured with a certain shade of
yellow (the same as in the time-space diagram). The current phase of the trafﬁc
light is also shown, as well as the positions of all the loop detectors: their positions
are indicated by the small purple boxes alongside the road. The small green box in-
dicates the position of the trafﬁc light, with vehicles travelling in clockwise fashion.

Simulation statistics

In the upper-right panel, we can ﬁnd the length of the ring road (expressed in the
number of cells), the number of vehicles currently in the simulator, the global ve-
hicle density, and the current time step. There is also a small panel that allows to
quickly set the status of the trafﬁc light to either red or green.

Simulator controls and settings

The middle-left panel contains buttons for starting, stopping (i.e., pausing), re-
setting, and quitting the simulator. Several preferences can also be speciﬁed, i.e.,
whether or not to activate several panels containing the simulator’s output. There
is also the possibility to log the measurements from the loop detectors to a default
ﬁle (called detector-values.data). And ﬁnally, the type of trafﬁc cellular automaton
(i.e., its rule set) can also be selected from a list, speciﬁed by radio control buttons.

Note that there are several initial conditions possible for each density level: it is
possible to start with a homogeneous state (all vehicles are spaced evenly), with a
compact superjam of vehicles that are all stopped, or with a random initialisation
(see also the introduction of section 3).

If the simulation goes (visually) too fast, the cycle hold time can be increased,
thereby freezing the simulation for a while between two consecutive time steps.
Besides this, the ring road’s global density and the vehicles’ maximum speed can
be speciﬁed. The sampling time for the artiﬁcial loop detectors can be adjusted (to
increase or smooth out ﬂuctuations). And ﬁnally, all probabilities can be adjusted
between 0% and 100% in incremental steps of 1%.

The red and green cycle times for the trafﬁc light can be speciﬁed, such that the
light can operate automatically, thereby inducing artiﬁcial queues at regular in-
tervals. One can also control the trafﬁc light manually (enabling the red or green
phase) using the small upper-right panel; but if applied, the trafﬁc-light controls
override these manual settings.

Plots of macroscopic measurements

The software has the ability to extract both local and global macroscopic ﬂow mea-
surements from several uniformly road-side placed loop detectors which record

79

ﬂows, densities, and space-mean speeds.

The three large coloured regions in the middle panel represent the measured (and
averaged) values of the local ﬂows, local densities, and local space-mean speeds
of the loop detectors. Pair-wise correlating these values, results in the plots of the
(k,q), (k,vs), and (q,vs) diagrams in the lower-right panel. The coloured dots in-
dicate locally obtained measurements, whereas the black dots represent globally
obtained ones.

Note the small button that allows to construct these diagrams: when it is pressed,
the global density is incrementally increased from 0% to 100%, each time adding
a single vehicle to the ring road. The simulation is then ran for a certain amount
of time and the measurements from all the loop detectors are recorded. When all
densities are processed (an indicator of the total time left is shown), the diagrams
should be clearly visible in the loop detector plots in the lower-right panel.

A.2 Running the software

When visiting the website mentioned in the introduction of this appendix, there are
two options for downloading the software. One is by downloading the compiled
classes, whereas the other is to download the programme’s source code. Once the
compiled software has been downloaded, it is relatively easy to start the graphi-
cal user interface. Considering the single-cell setup GUI, the software is ran by
executing the following command:

java -jar tca.jar

Note that a JavaTM Development Kit (JDK) (preferably Sun’s 3 ) should be installed.
Furthermore, due to a change in the threading of the JavaTM SwingTM API, it appears
that only JDK/JRE 1.3.1 is suitable !

A.3 Technical implementation details

It should be noted that the software is not implemented as an applet, but instead as
a full JavaTM application because it uses SwingTM components that are not standard
supported by most browsers (at least not without installing a necessary plugin). The
source itself logically consists of three different parts:

• the TCA engine with different rule sets,
• the graphical user interface,
• and a whole range of predeﬁned experiments.

The geometrical conﬁguration used in the single-cell TCA engine is a unidirec-
tional ring road with a single lane. Vehicles are located in cells of ∆X = 7.5 m and
can have speeds of 0 to 5 cells/time step (corresponding to a maximum speed of
135 km/h). One iteration in the simulation corresponds to a time step of ∆T = 1 s.

3 http://java.sun.com

80

A number of artiﬁcial loop detectors are uniformly placed alongside the road,
aggregating various macroscopic trafﬁc measurements (i.e., ﬂows, densities and
space-mean speeds). In the GUI, global measurements on the entire lattice are per-
formed according to the methodology explained in section 2.3.2, whereas local
measurements are performed according to section 2.3.1. Note that for the TCA
software itself, it is also possible to perform local measurements using a detector
of unit length, according to the methodology explained in section 2.3.3.

Besides the standard single-cell GUI and the limited multi-cell GUI, there also ex-
ist some predeﬁned experiments. These allow to create the (k,q), (k,vs), and (q,vs)
diagrams, histograms of the vehicles’ speeds, space gaps, and time gaps, as well as
several order parameters (density correlations, nearest neighbours, and an inhomo-
geneity measure that compares the locally recorded densities to the current global
density).

Inside the TCA+ software, several packages are available:

• tca.base containing the deﬁnitions of cells, global states, loop detectors, and

the trafﬁc cellular automaton’s lattice,

• tca.automata containing implementations of all the TCA models mentioned

• tca.simulator containing the classes related to the single-cell and multi-cell

in section A.1,

GUIs,

• tca.experiments.fundamentaldiagrams,

tca.experiments.histograms,
and tca.experiments.orderparameters containing setups for the pre-
viously mentioned experiments.

81

82

B Glossary of terms

B.1 Acronyms and abbreviations

ASEP

BCA

BJH

asymmetric simple exclusion process

Burgers cellular automaton

Benjamin, Johnso, and Hui

BJH-TCA

Benjamin-Johnson-Hui trafﬁc cellular

automaton

BL-TCA

brake-light trafﬁc cellular automaton

BML

Biham, Middleton, and Levine

BML-TCA

Biham-Middleton-Levine trafﬁc cellular

automaton

CA

cellular automaton

CA-184

Wolfram’s cellular automaton rule 184

ChSch-TCA Chowdhury-Schadschneider trafﬁc

CML

COMF

DLC

ECA

cellular automaton

coupled map lattice

car-oriented mean-ﬁeld theory

cellular automaton

discretionary lane change

elementary cellular automaton

DFI-TCA

deterministic Fukui-Ishibashi trafﬁc

ER-TCA

Emmerich-Rank trafﬁc cellular

GoE

Garden of Eden state

HS-TCA

Helbing-Schreckenberg trafﬁc cellular

JDK

JavaTM Development Kit

KKW-TCA Kerner-Klenov-Wolf trafﬁc cellular

automaton

automaton

automaton

83

LGA

LWR

MFT

MLC

MPA

NaSch

NCCA

OVF

OVM

PCE

PCU

SMS

SOC

SOMF

SSEP

STCA

lattice gas automaton

Lighthill, Whitham, and Richards

MC-STCA multi-cell stochastic trafﬁc cellular

automaton

mean-ﬁeld theory

mandatory lane change

matrix-product ansatz

Nagel and Schreckenberg

optimal velocity function

optimal velocity model

passenger car equivalent

passenger car unit

number conserving cellular automaton

pMFT

paradisiacal mean-ﬁeld theory

SFI-TCA

stochastic Fukui-Ishibashi trafﬁc

cellular automaton

space-mean speed

self-organised criticality

site-oriented mean-ﬁeld theory

symmetric simple exclusion process

stochastic trafﬁc cellular automaton

STCA-CC stochastic trafﬁc cellular automaton

with cruise control

T2-TCA

Takayasu-Takayasu trafﬁc cellular

TASEP

totally asymmetric simple exclusion

automaton

process

TCA

TMS

trafﬁc cellular automaton

time-mean speed

84

TOCA

time-oriented trafﬁc cellular

automaton

System

TRANSIMS TRansportation ANalysis and SIMulation

UDM

ultra-discretisation method

VDR-TCA

velocity-dependent randomisation trafﬁc

cellular automaton

85

86

B.2 List of symbols

C(0)
C(t)
δ
G
G−1
KL
L
Ni

|N |

O−

C(t)|G−1

O+

C(0)|G

σi(t)
Σ

ΣL

ΣN

|ΣΣN
|
TC(0)|G

α
αi
a

β
b

δ

bi(t)

a CA’s initial conﬁguration
a CA’s global conﬁguration at time step t
a CA’s local transition rule
a CA’s global map
a reversible CA’s inverse global map
the number of cells in one lane of a TCA’s lattice
a CA’s lattice (e.g., Z2)
the (partially) ordered set of cells in the
neighbourhood of the ith cell
the number of cells in the neighbourhood
of each cell
the backward orbit of the conﬁguration C(t)
under G−1
the forward orbit of the initial conﬁguration
C(0) under G
the state of the ith cell at time step t
the set of all possible states a CA’s cells can
be in (e.g., Z2)
the set of all possible global conﬁgurations
of a CA
the set of all possible conﬁgurations of a
cell’s neighbourhood
the number of all possible rules of a CA
the trajectory/orbit of the initial conﬁguration
C(0) under G
the entry rate of particles in the TASEP model
the anticipatory driving parameter of vehicle i
the acceleration capability of a vehicle in the
KKW-TCA model
the exit rate of particles in the TASEP model
the deceleration capability of a vehicle in the
KKW-TCA model
the state of the brake light of vehicle i at time
t in the BL-TCA model
the probability for a particle to move to the
right in the TASEP model

87

∆acci

∆T
∆V
∆X
D0

D1

Di

ηi

γ

gs
g∗
si(t)

gssecurity

gt
gts
h

ξ(t)

kg

kl
KL

L
li
l

LL
Mgsi ,vi

the deterministic acceleration of vehicle i in
the KKW-TCA model
a TCA’s temporal discretisation
a TCA’s speed discretisation
a TCA’s spatial discretisation
a parameter for the synchronisation distance
in the KKW-TCA model
a parameter for the synchronisation distance
in the KKW-TCA model
the synchronisation distance of vehicle i in
the KKW-TCA model
the stochastic acceleration of vehicle i in
the KKW-TCA model
the probability for a particle to move to the
left in the TASEP model
the average space gap
the effective space gap of vehicle i at time t
in the BL-TCA model
a security constraint for the space gap in the
BL-TCA model
the median time gap
the safe time gap in the TOCA model
the upper limit to the interaction horizon in
the BL-TCA model
a random number in [0, 1[ drawn at time t
from a uniform distribution
the global density of a TCA’s
lattice
the local density of a TCA’s lattice
the number of cells in one lane of a TCA’s
lattice
a TCA’s lattice
the length of vehicle i
the average length of all vehicles on a TCA’s
lattice
the number of lanes in a TCA’s lattice
the gap-speed matrix of the ER-TCA model

88

p
p0
pa

pa1

pa2

pacc

pb

pd

pdec

ps

pt

qg
ql
tsi
vdesi

vp

vsff
vsg
vsl
xl,b
i

Pn(v)

the slowdown probability in [0, 1]
the slow-to-start probability in [0, 1]
the acceleration probability in [0, 1] in the
KKW-TCA model
a parameter for the acceleration probability in
the KKW-TCA model
a parameter for the acceleration probability in
the KKW-TCA model
the acceleration probability in [0, 1] in the
TOCA model
the braking probability in [0, 1] in the
BL-TCA model
the deceleration probability in [0, 1] in the
KKW-TCA model
the slowdown probability in [0, 1] in the
BL-TCA model
the deceleration probability in [0, 1] in
the TOCA model
the slow-to-start probability in [0, 1] in
the BJH-TCA model
the slow-to-start probability in [0, 1] in
the T2-TCA model
the probabilities of ﬁnding a space gap of
n cells
for a vehicle driving with speed v
the global ﬂow of a TCA’s lattice
the local ﬂow of a TCA’s lattice
the interaction horizon in the BL-TCA model
the desired speed of vehicle i in the
KKW-TCA model
a parameter for the acceleration probability
in the KKW-TCA model
the space-mean speed in the free-ﬂow regime
the global space-mean speed of a TCA’s lattice
the local space-mean speed of a TCA’s lattice
the longitudinal position of vehicle i’s
left-back neighbour

89

xl,f
i

xr,b
i

xr,f
i

the longitudinal position of vehicle i’s
left-front neighbour
the longitudinal position of vehicle i’s
right-back neighbour
the longitudinal position of vehicle i’s
right-front neighbour

Acknowledgements

Dr. Bart De Moor is a full professor at the Katholieke Universiteit Leuven, Bel-
gium. Our research is supported by: Research Council KUL: GOA AMBioRICS,
several PhD/postdoc & fellow grants, Flemish Government: FWO: PhD/post-
doc grants, projects, G.0407.02 (support vector machines), G.0197.02 (power is-
lands), G.0141.03 (identiﬁcation and cryptography), G.0491.03 (control for in-
tensive care glycemia), G.0120.03 (QIT), G.0452.04 (new quantum algorithms),
G.0499.04 (statistics), G.0211.05 (Nonlinear), research communities (ICCoS, AN-
MMM, MLDM), IWT: PhD Grants, GBOU (McKnow), Belgian Federal Science
Policy Ofﬁce: IUAP P5/22 (‘Dynamical Systems and Control: Computation, Iden-
tiﬁcation and Modelling’, 2002-2006), PODO-II (CP/40: TMS and Sustainabil-
ity), EU: FP5-Quprodis, ERNSI, Contract Research/agreements: ISMC/IPCOS,
Data4s,TML, Elia, LMS, Mastercard.

References

[1]

S. Maerivoet, B. D. Moor, Transportation Planning and Trafﬁc Flow Models, 05-155,
Katholieke Universiteit Leuven, Department of Electrical Engineering ESAT-SCD
(SISTA) (Jul. 2005).

[2] R. Barlovi´c, J. Esser, K. Froese, W. Knospe, L. Neubat, M. Schreckenberg,
J. Wahle, Online trafﬁc simulation with cellular automata, Trafﬁc and Mobility:
Simulation-Economics-Environment
f¨ur Kraftfahrwesen,
RWTH Aachen, Duisburg.

(1999) 117–134Institut

[3] D. Chowdhury, L. Santen, A. Schadschneider, Statistical physics of vehicular trafﬁc

and some related systems, Physics Reports 329 (2000) 199–329.

[4] D. Chowdhury, L. Santen, A. Schadschneider, Vehicular trafﬁc: A system of

interacting particles driven far from equilibrium, Current Science 77 (411).

[5] D. E. Wolf, Cellular automata for trafﬁc simulations, Physica A 263 (1999) 438–451.

[6] D. Helbing, Trafﬁc and related self-driven many-particle systems, Reviews of

Modern Physics 73 (2001) 1067–1141.

90

[7] D. Helbing, Tam´as Vicsek, Optimal self-organization, New Journal of Physics 1 (13)

(1999) 1–17.

[8]

I. Karafyllidis, A. Thanailakis, A model for predicting forest ﬁre spreading using
cellular automata, Ecological Modelling 99 (1997) 87–97.

[9] K. Nagel, E. Raschke, Self-organizing criticality in cloud formation ?, Physica A:

Statistical and Theoretical Physics 182 (4) (1992) 519–531.

[10] S. Gobron, N. Chiba, Crack pattern simulation based on 3D surface cellular
automaton, The Visual Computer – Special Issue: Computer Graphics International
2000 17 (5) (2001) 287–309.

[11] K. Nishinari, D. Chowdhury, A. Schadschneider, Cluster formation and anomalous
fundamental diagram in an ant trail model, Physical Review E 67 (2003) 036120–1–
036120–11.

[12] B. Immers, M. Westerman, H. de Ruiter, Sturen zonder structuren, in: Proceedings
Colloquium Vervoersplanologisch Speurwerk, Amsterdam, The Netherlands, 1998.

[13] H. J. van Zuylen, Het spel van de regels; Het richting geven aan chaotische

maatschappelijke processen, Technische Universiteit Delft (1999).

[14] D. Helbing, K. Nagel, The physics of
Contemporary Physics 45 (5) (2004) 405–426.

trafﬁc and regional development,

[15] K. Nagel, Distributed intelligence in large scale trafﬁc simulations on parallel
in: Collective Cognition: Mathematical Foundations of Distributed

computers,
Intelligence, Santa Fe Institute, 2002.

[16] K. Nagel, Trafﬁc networks, in: S. Bornholdt, H. Schuster (Eds.), Handbook on

Networks, 2002.

[17] D. Chowdhury, K.Nishinari, A. Schadschneider, Self-organized patterns and trafﬁc

ﬂow in colonies of organisms, Phase Transitions 77 (2004) 601–624.

[18] L. Santen, Numerical investigations of discrete models for trafﬁc ﬂow, Ph.D. thesis,

Universit¨at zu K¨oln (1999).

[19] W. Knospe, L. Santen, A. Schadschneider, M. Schreckenberg, An empirical test for

cellular automaton models of trafﬁc ﬂow, Physical Review E 70 (016115).

[20]

J. von Neumann, The general and logical theory of automata, in: L. A. Jeffress (Ed.),
Cerebral Mechanisms in Behavior, John Wiley, New York, 1948, pp. 1–41, paper
presented at the Hixon Symposium.

[21] S. Wolfram, Statistical mechanics of cellular automata, Reviews of Modern Physics

55 (1983) 601–644.

[22] M. Delorme, An introduction to cellular automata, in: M. Delorme, J. Mazoyer
(Eds.), Cellular Automata – a parallel model, Kluwer Academic Publishers Group,
1998, iSBN 0792354931.

91

[23] A. M. Turing, The chemical basis of morphogenesis, Philosophical Transactions of

the Royal Society of London 237 (641) (1952) 37–72.

[24] M. Gardner, Mathematical games – The fantastic combinations of John Conway’s

new solitaire game “life”, Scientiﬁc American (1970) 120–123.

[25] Y. Georget, A Game of Life in C for X11 (Mar. 2002).

[26] S. Wolfram, A New Kind of Science, Wolfram Media, Inc., 2002, iSBN 1-579-

955008-8.

[27] L. Gray, A mathematician looks at wolfram’s new kind of science, Notices of the

AMS 50 (2) (2003) 200–211.

[28] L. Chua, A Nonlinear Dynamics Perspective of Wolfram’s New Kind of Science.
From Bernoulli Shift to Universal Computation, Inaugural lecture of the international
Francqui chair, katholieke Universiteit Leuven (Jun. 2005).

[29] R. Gosper, Life is universal !, in: E. Berlekamp, J. Conway, R. Guy (Eds.), Winning
Ways for your Mathematical Plays, Vol. 2 (1982), Proceedings of the Winter
Simulation Conference, Washington D.C., 1974, Academic Press, New York, 1974,
chapter 25.

[30] K. Zuse, Rechnender raum, Elektronische Datenverarbeitung 8 (1967) 336–344.

[31] K. Zuse, Rechnender raum, Schriften zur Datenverarbeitung 1, friedrich Vieweg &

Sohn, Braunschweig, Germany.

[32] E. Fredkin, Digital mechanics: An informational process based on reversible

universal ca, Physica D 45 (1990) 254–270.

[33] H. Gutowitz, Cellular automata and the sciences of complexity (part I), Complexity

1 (5).

[34] P. Sarkar, A brief history of cellular automata, ACM Computing Surveys 32 (1)

(2000) 80–107, iSSN 0360-0300.

[35]

J. P. Crutchﬁeld, K. Kaneko, Phenomenology of spatiotemporal chaos, in: Directions
in Chaos, World Scientiﬁc, 1987, pp. 272–353.

[36] K. Kaneko, Simulating physics with coupled map lattices, in: K. Kawasaki, A. Onuki,
M. Suzuki (Eds.), Formation, Dynamics, and Statistics of Patterns, World Scientiﬁc,
1990, pp. 1–52.

[37] K. Nagel, Particle hopping models and trafﬁc ﬂow theory, Physical Review E 53 (5)

(1996) 4655–4672.

[38] K. Nagel, M. Schreckenberg, A cellular automaton model for freeway trafﬁc, Journal

de Physique I France 2 (1992) 2221–2229.

[39] A. Moreira, Universality and decidability of number-conserving cellular automata,

Theoretical Computer Science 292 (2003) 711–721.

[40] W. Knospe, L. Santen, A. Schadschneider, M. Schreckenberg, Human behavior as

origin of trafﬁc phases, Physical Review E 65.

92

[41] N. Eissfeldt, P. Wagner, Effects of anticipatory driving in a trafﬁc ﬂow model,

European Physical Journal B 23 (2003) 121–129.

[42] M. L´arraga, J. del R´io, A. Schadschneider, New kind of phase separation in a CA
trafﬁc model with anticipation, Journal of Physics A: Mathematical and General (37)
(2004) 3769–3781.

[43] S. Wolfram, O. Martin, A. Odlyzko, Algebraic properties of cellular automata,

Communications in Mathematical Physics 93 (1984) 219–258.

[44] S. Wolfram, Universality and complexity in cellular automata, Physica D 10 (1984)

[45] K. ˇCulik, S. Yu, Undecidability of CA classiﬁcation schemes, Complex Systems 2 (2)

1–35.

(1988) 177–190.

[46] W. Li, N. Packard, The structure of the elementary cellular automata rule space,

Complex Systems 4 (1990) 281–297.

[47] G. Braga, G. Cattaneo, P. Flocchini, C. Q. Vogliotti, Pattern growth in elementary

cellular automata, Theoretical Computer Science 45 (1995) 1–26.

[48] A. Wuensche, Classifying cellular automata automatically, Complexity 4 (3) (1999)

47–66.

[49]

J.-C. Dubacq, B. Durand, E. Formenti, Kolmogorov complexity and cellular
automata classiﬁcation, Theoretical Computer Science 259 (1–2) (2001) 271–285.

[50] N. Fat`es, Experimental study of elementary cellular automata dynamics using
´E. R´emila (Eds.), Discrete Models for
the density parameter,
Complex Systems – DMCS03, Vol. AB, 2003, pp. 155–166, discrete Mathematics
& Theoretical Computer Science.

in: M. Morvan,

[51] S. Maerivoet, B. D. Moor, Trafﬁc Flow Theory, 05-154, Katholieke Universiteit
Leuven, Department of Electrical Engineering ESAT-SCD (SISTA) (Jul. 2005).

[52] K. Nagel, P. Wagner, R. Woesler, Still ﬂowing: old and new approaches for trafﬁc

ﬂow modeling, Operations Research 51 (5) (2003) 681–710.

[53] A. Schadschneider, Statistical physics of trafﬁc ﬂow, Physica A (285) (2000) 101.

[54] A. Schadschneider, Trafﬁc ﬂow: A statistical physics point of view, Physica A 313

(2002) 153–187.

[55] M. Schreckenberg, R.Barlovi´c, W. Knospe, H. Kl¨upfel, Statistical physics of
cellular automata models for trafﬁc ﬂow, in: K. H. Hoffmann, M. Schreiber (Eds.),
Computational Statistical Physics, Springer, Berlin, 2001, pp. 113–126.

[56] K. Nagel, D. E. Wolf, P. Wagner, P. Simon, Two-lane trafﬁc rules for cellular
automata: A systematic approach, Physical Review E 58 (2) (1998) 1425–1437.

[57] G. F. Newell, A moving bottleneck, Transportation Research B 32B (8) (1998) 531–

537.

93

[58] B. S. Kerner, The Physics of Trafﬁc – Empirical Freeway Pattern Features,
Engineering Applications, and Theory, Understanding Complex Systems, Springer,
2004, iSBN 3-540-20716-3.

[59] K. Nagel, P. Nelson, A critical comparison of the kinematic-wave model with
observational data, in: H. S. Mahmassani (Ed.), Proceedings of the 16th International
Symposium on Transportation and Trafﬁc Theory (ISTTT16), University of
Maryland, 2005.

[60] D. Chowdhury, A. Pasupathy, S. Sinha, Distributions of time- and distance-headways
in the Nagel-Schreckenberg model of vehicular trafﬁc: Effects of hindrances,
European Physics Journal B - Condensed Matter 5 (3) (1998) 781–786.

[61] S. Maerivoet, B. De Moor, Non-concave fundamental diagrams and phase transitions
in a stochastic trafﬁc cellular automaton, The European Physical Journal B –
Condensed Matter Physics 42 (1) (2004) 131–140.

[62] M. Cremer, J. Ludwig, A fast simulation model for trafﬁc ﬂow on the basis of boolean
operations, Mathematics and Computers in Simulation 28 (4) (1986) 297–303.

[63] H. Sch¨utt, Entwicklung und Erprobung eines sehr schnellen, bitorientierten
Verkehrssimulationssystems f¨ur Straßennetze, Tech. Rep. 6, Schriftenreihe der AG
Automatisierungstechnik, T.U. Hamburg, Hamburg (1991).

[64] K. Nagel, High-speed microsimulations of trafﬁc ﬂow, Ph.D. thesis, Universit¨at zu

K¨oln (Mar. 1995).

[65] M. Fukui, Y. Ishibashi, Trafﬁc ﬂow in 1d cellular automaton model including cars
moving with high speed, Journal of the Physical Society of Japan 65 (6) (1996) 1868–
1870.

[66] C. F. Daganzo, In trafﬁc ﬂow, cellular automata = kinematic waves, UCB-ITS-RR-
2004-05, Institute of Transportation Studies, University of California at Berkeley
(Oct. 2004).

[67] G. F. Newell, Delays caused by a queue at a freeway exit ramp, Transportation

Research B 33B (1999) 337–350.

[68] K. Nagel, H. J. Herrmann, Deterministic models for trafﬁc jams, Physica A (199)

(1993) 254.

[69] W. Brilon, N. Wu, Evaluation of cellular automata for trafﬁc ﬂow simulation on
freeway and urban streets, Trafﬁc and Mobility: Simulation-Economics-Environment
(1999) 163–180Institut f¨ur Kraftfahrwesen, RWTH Aachen, Duisburg.

[70] S. Krauß, K. Nagel, P. Wagner, The mechanism of ﬂow breakdown in trafﬁc
in: Proceedings of the International Symposium on Trafﬁc and

ﬂow models,
Transportation Theory (ISTTT99), Jerusalem, 1999.

[71] K. Nagel, Life-times of simulated trafﬁc jams, International Journal of Modern

Physics C 5 (3) (1994) 567–580.

94

[72] A. Schadschneider, The Nagel-Schreckenberg model revisited, European Physical

Journal B 10 (3) (1999) 573–582.

[73] K. Nagel, M. Paczuski, Emergent trafﬁc jams, Physical Review E 51 (4) (1995) 2909–

2918.

[74] S. Krauß, P. Wagner, C. Gawron, Metastable states in a microscopic model of trafﬁc

ﬂow, Physical Review E 55 (304) (1997) 5597–5602.

[75] K. Ghosh, A. Majumdar, D. Chowdhury, Distribution of time-headways in a particle-
hopping model of vehicular trafﬁc, Physical Review E 58 (3) (1998) 4012–4015.

[76] P. Bak, C. Tang, K. Wiesenfeld, Self-organized criticality, Physical Review A 38

(1988) 368.

[77] D. L. Turcotte, Self-organized criticality, Rep. Prog. Phys. 62 (1999) 1377–1429.

[78] K. Nagel, S. Rasmussen, Trafﬁc at the edge of chaos, in: R. A. Brooks, P. Maes
(Eds.), Artiﬁcial Life IV: Proceedings of the Fourth International Workshop on the
Synthesis and Simulation of Living Systems, 1994, p. 222.

[79] B.-H. Wang, Y.-R. Kwong, P.-M. Hui, Statistical mechanical approach to Fukui-

Ishibashi trafﬁc ﬂow models, Physical Review E 57 (3) (1998) 2568–2573.

[80] L. Wang, B.-H. Wang, B. Hu, A cellular automaton trafﬁc ﬂow model between
the Fukui-Ishibashi and Nagel-Schreckenberg models, Trafﬁc Forum – Statistical
Mechanics (Feb. 2001).

[81] K. Lee, P. Hui, D. Mao, B.-H. Wang, Q.-S. Wu, Fukui-Ishibashi trafﬁc ﬂow models
with anticipation of movement of the car ahead, Journal of the Physical Society of
Japan 71 (7) (2002) 1651–1654.

[82] B. Derrida, E. Domany, D. Mukamel, An exact solution of a one-dimensional
asymmetric exclusion model with open boundaries, Journal of Statistical Physics 69
(1992) 667–687.

[83] A. B. Kolomeisky, G. M. Sch¨utz, E. B. Kolomeisky, J. P. Straley, Phase diagram of
one-dimensional driven lattice gases with open boundaries, Journal of Physics A:
Mathematical and General 31 (1998) 6911–6919.

[84] B. D. Greenshields, A study of trafﬁc capacity,

in: Highway Research Board

Proceedings, Vol. 14, 1935, pp. 448–477.

[85] H. Emmerich, E. Rank, An improved cellular automaton model for trafﬁc ﬂow

simulation, Physica A 234 (1997) 676–686.

[86] B. Eisenbl¨atter, L. Santen, A. Schadschneider, M. Schreckenberg, Jamming transition
in a cellular automaton model for trafﬁc ﬂow, Physical Review E 57 (1998) 1309–
1314.

[87] C. Kayatz, Stability analysis of trafﬁc ﬂow models, Master’s thesis, Eidgen¨ossische

Technische Hochschule in Z¨urich (Aug. 2001).

95

[88] D. Jost, Breakdown and recovery in trafﬁc ﬂow models, Master’s thesis, Department

of Computer Science, ETH Z¨urich (Aug. 2002).

[89] D. Jost, K. Nagel, Probabilistic trafﬁc ﬂow breakdown in stochastic car following
models, in: Transportation Research Board Annual Meeting, Washington, D.C.,
2003, paper 03-4266.

[90]

J. Werth, Galilei-invariante fahrzeugwechselwirkungen im straßenverkehr, Master’s
thesis, Duisburg University, Duisburg, Germany (1998).

[91] M. Takayasu, H. Takayasu, 1/f noise in a trafﬁc model, Fractals 1 (4) (1993) 860–

866.

[92] M. Fukui, Y. Ishibashi, Effect of delay in restarting of stopped cars in a one-
dimensional trafﬁc model, Journal of the Physical Society of Japan 66 (2) (1997)
385–387.

[93] A. Schadschneider, M. Schreckenberg, Trafﬁc ﬂow models with ‘slow-to-start’ rules,

Annalen der Physik 6 (7) (1997) 541–551.

[94] S. C. Benjamin, N. F. Johnson, P. Hui, Cellular automata models of trafﬁc ﬂow along
a highway containing a junction, Journal of Physics A: Mathematical and General 29
(1996) 3119–3127.

[95] T. Bellemans, Trafﬁc control on motorways, Ph.D. thesis, Katholieke Universiteit
Leuven, Department of Electrical Engineering ESAT-SCD (SISTA) (May 2003).

[96] A. Hegyi, B. D. Schutter, J. Hellendoorn, S. Hoogendoorn, C. Tamp`ere, Gelijke
behandeling voor verkeersstroommodellen, Verkeerskunde 52 (4) (2001) 32–36.

[97] R. Barlovi´c, L. Santen, A. Schadschneider, M. Schreckenberg, Metastable states in

cellular automata for trafﬁc ﬂow, European Physics Journal B5 (793).

[98] R. Barlovi´c, Trafﬁc jams – Cluster formation in low-dimensional cellular automata
models for highway and city trafﬁc, Ph.D. thesis, Universit¨at Duisburg-Essen,
Standort Duisburg (Oct. 2003).

[99] R. Barlovi´c, T. Huisinga, A. Schadschneider, M. Schreckenberg, Open boundaries in
a cellular automaton model for trafﬁc ﬂow with metastable states, Physical Review E
66 (4) (2002) 6113–6123.

[100] S. Grabolus, Numerische untersuchungen zum nagel-schreckenberg-verkehrsmodell
und dessen varianten, Master’s thesis, Institut f¨ur Theoretische Physik, Universit¨at zu
K¨oln (2001).

[101] S. Maerivoet, B. De Moor, Advancing density waves and phase transitions in a
velocity dependent randomization trafﬁc cellular automaton, 03-111, Katholieke
Universiteit Leuven (Oct. 2004).

[102] S. Maerivoet, Trafﬁc Cellular Automata, Java software tested with JDK 1.3.1, uRL:

http://smtca.dyns.cx (2004).

[103] J. del R´io, M. L´arraga, Transient situations in trafﬁc ﬂow: Modelling the Mexico City

Cuernavaca Highway (Jan. 2005).

96

[104] T. Tokihiro, D. Takahashi, J. Matsukidaira, J. Satsuma, From soliton equations to
integrable cellular automata through a limiting procedure, Physical Review Letters
76 (18) (1996) 3247–3250.

[105] K. Nishinari, Euler and Lagrange representation of trafﬁc models, in: Proceedings of

the Workshop on Trafﬁc and Granular Flow ’01, Nagoya University, Japan, 2001.

[106] J. Matsukidaira, K. Nishinari, Euler-Lagrange correspondence of cellular automaton

for trafﬁc-ﬂow models, Physical Review Letters 90 (2003) 088701.

[107] K. Nishinari, D. Takahashi, A new deterministic ca model for trafﬁc ﬂow with
multiple states, Journal of Physics A: Mathematical and General 32 (1999) 93–104.

[108] K. Nishinari, A Lagrange representation of cellular automaton models of trafﬁc ﬂow,

Journal of Physics A: Mathematical and General 34 (2001) 10727–10736.

[109] H. Emmerich, T. Nagatani, K. Nakanishi, From modiﬁed Korteweg-de Vries equation
to a second-order cellular automaton for trafﬁc ﬂow, Physica A 254 (1998) 548–556.

[110] K. Nishinari, M. Fukui, A. Schadschneider, A stochastic cellular automaton model
for trafﬁc ﬂow with multiple metastable states, Journal of Physics A: Mathematical
and General 37 (2004) 3101–3110.

[111] C. L. Barrett, S. Eubank, K. Nagel, S. Rasmussen, J. Riordan, M. Wolinsky, Issues
in the representation of trafﬁc using multi-resolution cellular automata, LA-UR-
95:2658, Los Alamos National Laboratory, TRANSIMS Report Series (1995).

[112] D. Helbing, M. Schreckenberg, Cellular automata simulating experimental properties

of trafﬁc ﬂow, Physical Review E 59 (1999) 2505–2508.

[113] W. Knospe, L. Santen, A. Schadschneider, M. Schreckenberg, Towards a realistic
microscopic description of highway trafﬁc, Journal of Physics A: Mathematical and
General 33 (2000) 477–485.

[114] W. Knospe, Synchronized trafﬁc – microscopic modeling and empirical observations,

Ph.D. thesis, Universit¨at Duisburg (Jun. 2002).

[115] B. Kerner, S. Klenov, Microscopic theory of spatial-temporal congested trafﬁc

patterns at highway bottlenecks, Physical Review E 68 (3).

[116] B. S. Kerner, S. K. Klenov, D. E. Wolf, Cellular automata approach to three-phase
trafﬁc theory, Journal of Physics A: Mathematical and General 35 (2002) 9971–
10013.

[117] T. Nagatani, Self-organization and phase transition in trafﬁc-ﬂow model of a two-lane

roadway, Journal of Physics A: Mathematical and General 26 (1993) 781.

[118] T. Nagatani, Trafﬁc jam and shock formation in stochastic trafﬁc-ﬂow model of a

two-lane roadway, Journal of the Physical Society of Japan 63 (1994) 52.

[119] M. Rickert, K. Nagel, M. Schreckenberg, A. Latour, Two lane trafﬁc simulations

using cellular automata, Physica A 231 (1996) 534.

97

[120] P. Wagner, K. Nagel, D. E. Wolf, Realistic multi-lane trafﬁc rules for cellular

automata, Physica A 234 (1997) 687–698.

[121] P. Simon, H. Gutowitz, A cellular automaton model for bi-directional trafﬁc, Physical

Review E 57 (2) (1998) 2441–2444.

[122] P. Gundaliya, V. Tom, S. Dhingra, Heterogeneous trafﬁc ﬂow modelling using
cellular automata for an arterial, in: Proceedings of the 6th International Workshop
on Transportation Planning and Implementation Methodologies for Developing
Countries (TPMDC04), Transportation Systems Engineering, IIT Bombay, 2004.

[123] C. Mallikarjuna, K. Ramachandra Rao, Trafﬁc ﬂow modelling on highways using
cellular automata: A review, in: J. Bandyopadhyay, B. Maitra (Eds.), Proceedings of
International Conference on Structural and Transportation Engineering (START05),
Elite Publishing House, New Delhi, 2005, pp. 912–919.

[124] D. Helbing, B. Huberman, Coherent moving states in highway trafﬁc, Nature

396 (738) (1998) 738–740.

[125] O. Biham, A. A. Middleton, D. Levine, Self-organization and a dynamical transition

in trafﬁc-ﬂow models, Physical Review A 46 (10) (1992) R6124–R6217.

[126] O. Angel, A. E. Holroyd, J. B. Martin, The Jammed Phase of the Biham-Middleton-

Levine Trafﬁc Model (Mar. 2005).

[127] M. Fukui, Y. Ishibashi, Evolution of trafﬁc jam in trafﬁc ﬂow model, Journal of the

Physical Society of Japan 62 (11) (1993) 3841–3844.

[128] J. Freund, T. P¨oschel, A statistical approach to vehicular trafﬁc, Physica A 219 (1995)

95–113.

[129] Y. Shi, Self-organization in BML trafﬁc ﬂow model: Analytical approaches,

Communications in Theoretical Physics 31 (1999) 85–90.

[130] D. Chowdhury, A. Schadschneider, Self-organization of trafﬁc jams in cities: Effects
of stochastic dynamics and signal periods, Physical Review E 59 (2) (1999) 1311–
1314.

[131] J. Esser, M. Schreckenberg, Microscopic simulation of urban trafﬁc based on cellular
automata, International Journal of Modern Physics C 8 (5) (1997) 1025–1036.

[132] P. Simon, K. Nagel, Simpliﬁed cellular automaton model for city trafﬁc, Physical

Review E 58 (2) (1998) 1286–1295.

[133] G. Diedrich, L. Santen, A. Schadschneider, J. Zittartz, Effects of on- and off-ramps
in cellular automata models for trafﬁc ﬂow, International Journal of Modern Physics
C 11 (2) (2000) 335–345.

[134] H. Fuk´s, N. Boccara, Generalized deterministic trafﬁc rules, International Journal of

Modern Physics C 9 (1998) 1–12.

[135] H. Fuk´s, Exact results for deterministic cellular automata trafﬁc models, Physical

Review E 60 (1999) 197–202.

98

[136] H. Fuk´s, N. Boccara, Convergence to equilibrium in a class of interacting particle

systems evolving in discrete time, Physical Review E (64).

[137] H. Fuk´s, Critical behaviour of number-conserving cellular automata with nonlinear

fundamental diagrams, Journal of Statistical Mechanics – Theory and Experiment.

[138] N. Boccara, H. Fuk´s, Critical behavior of a cellular automaton highway trafﬁc model,

Journal of Physics A: Mathematical and General 33 (2000) 3407–3415.

[139] N. Rajewsky, A. Schadschneider, M. Schreckenberg, The asymmetric exclusion

model with sequential update, Journal of Physics A 29 (1996) 305–309.

[140] M. Schreckenberg, A. Schadschneider, K. Nagel, N. Ito, Discrete stochastic models

for trafﬁc ﬂow, Physical Review E 51 (4) (1995) 2939–2949.

[141] A. Schadschneider, M. Schreckenberg, Garden of Eden states in trafﬁc models,

Journal of Physics A 31 (1998) 225–231.

[142] A. Schadschneider, M. Schreckenberg, Car-oriented mean-ﬁeld theory for trafﬁc ﬂow

models, Journal of Physics A 30 (1997) 69–75.

[143] A. Schadschneider, Analytical approaches to CA for trafﬁc ﬂow: Approximations and
exact solutions, in: M. Schreckenberg, D. Wolf (Eds.), Proceedings of the Workshop
on Trafﬁc and Granular Flow ’97, Springer, 1997.

99

