5
0
0
2
 
r
p
A
 
5
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
4
3
0
4
0
5
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

On the Google-Fame of Scientists and Other Populations

James P. Bagrow∗ and Daniel ben-Avraham∗

∗Department of Physics, Clarkson University, Potsdam NY 13699-5820

Abstract. We study the fame distribution of scientists and other social groups as measured by the number of Google hits
garnered by individuals in the population. Past studies have found that the fame distribution decays either in power-law [1]
or exponential [2] fashion, depending on whether individuals in the social group in question enjoy true fame or not. In our
present study we examine critically Google counts as well as the methods of data analysis. While the previous ﬁndings are
corroborated in our present study, we ﬁnd that, in most situations, the data available does not allow for sharp conclusions.

1. INTRODUCTION

The concept of Fame within a population has critical so-
cial and economic impact. Recently, the idea of using the
number of hits returned from a search of a person’s name
on Google as a means of quantifying that person’s fame
has been explored [1, 2]. A seminal paper explored the
fame of a unique population, that of World War I “ace”
pilots [1], and found, among other things, a power-law
decay in the tail of the distribution. More recent work [2]
has applied this to a population of scientists who have
published on the cond-mat e-print archive1. The tail of
their fame distribution was best ﬁt by an exponential.
On the other hand, the fame of other populations was
found to follow a power-law decay. The difference was
attributed to the fact that scientists habitually use the
World Wide Web as a professional means of communi-
cation and cite each other on the web in relation to their
published work.

Google’s goal as a service is to provide accurate search
results to its users. For the purposes of determining a sub-
ject’s fame, what is most relevant is not having accurate
results listed ﬁrst, as it is for most users, but to have an ac-
curate count of those results. Unfortunately, Google does
not provide enough accuracy, and there are several rea-
sons for this [3].

Google acknowledges that the hits count given is an
estimate, but does not elaborate on the accuracy of this
estimation nor reveal how it is calculated. It seems rea-
sonable to assume that very small counts are more accu-
rate than larger ones. This means that the error is largest
in the tail of the fame distribution, and it is this region
that is of most interest. In addition, the tail of the dis-

1 http://arxiv.org/archive/cond-mat

tribution is more likely to contain results that are over-
counted, further compounding the error.

In [1], over-counting was prevented by verifying each
hit by hand, a time-consuming procedure that limited
the sample size. At the time of this writing, Google
only returns the ﬁrst 1000 hits, so it is impossible to
verify the accuracy of any results beyond that number,
and one must trust in Google’s estimation. Even manual
veriﬁcation is limited.

The previous searches in [1, 2] used a search lexi-
con including the boolean OR operator. We have since
found out that Google returns incorrect hit counts when
OR is used [3]. For a simple illustration, a search for
cars OR automobiles returns 80.5 million hits (at
the time of this writing) while searches for cars and
automobiles return 94.2 million and 8.82 million
hits, respectively, violating basic set theory. Thus, the
previous work must be reproduced using a better lexicon.
In the current work, all our searches avoid the problem-
atic OR operator. See Table 1.

Despite these issues, Google still provides an excel-
lent tool for research. It is the simplest means of getting
the most information available and it commands a very
large sample space. For example, the work in [4] uses
hit counts to “teach” the semantic meaning of words to
software — a central problem in Artiﬁcial Intelligence.
Related words such as ‘painter’ and ‘artist’ will have
many more joint occurrences than disparate words, such
as ‘plumber’ and ‘artist’, leading to higher hit counts.
Their work conﬁrms that Google yields reasonable re-
sults when avoiding the OR and using the AND operator
only.

Google has been generous enough to open their search
interface to allow tools to be created that can perform

Google searches automatically2. We have used this to
eliminate the laborious task of entering single queries
and recording the hits count. Larger populations can be
searched much more quickly using an automatic tool. For
the present work, we used a script that performed the
searches from a web server. An easier way still is with the
open-source PyGoogle package3, which integrates the
Google search interface with the Python programming
language.

In both [1] and [2], ﬁts were performed by binning the
search results with exponentially-sized bins and then ﬁt-
ting to the binned data using least-squares. A better tech-
nique than binning, when working with sparse data, is
examining cumulative distributions [5], as we do in the
present work. Also, it has been shown that there are prob-
lems with using least-squares ﬁts to logarithmic plots [6].
One problem is that the log operation magniﬁes the error
in the tail. Least-squares ﬁtting assumes that errors for
each data point are uniform and will not properly weigh
the noisier tail. In this work, we use a more robust tech-
nique, that of Maximum Likelihood, to achieve less bi-
ased ﬁts. See section 2.

All distributions studied here exhibit a power-law tail,
although for many the tail covers a very narrow range.
For the scientists populations, we observe a power-law
tail only in the top 12% of the data. Most of the data for
scientists is best ﬁt by an exponential, just as found in the
previous study [2]. In contrast, other populations do not
ﬁt to an exponential over any sizable range. See section
4.

2. MAXIMUM LIKELIHOOD FITTING

A better technique to determine the parameter(s) of a
probability distribution from sampled data is that of
Maximum Likelihood. The results are more robust in
terms of error-weighing. This is a very common tech-
nique and is covered in many statistics and regression
texts.

To brieﬂy illustrate how maximum likelihood works,
let us derive the Maximum Likelihood Estimator (MLE)
for l
, the parameter for an exponential probability dis-
tribution:

P(x) = l e−l x

(1)

The goal of Maximum Likelihood is to ﬁnd the most
likely l given the existing data. For this, we start with
the probability of the experiment given l
, assuming in-

2 http://code.google.com
3 http://pygoogle.sourceforge.net

dependence of the data points:

P (x1, x2, ...xN|l ) =

l e−l xi

N

i=1

= l N exp

−l

N

xi

 

i=1

!

where xi is the unbinned data gathered from the exper-
iment. This function is the total probability of all mea-
surements occurring in the experiment. From this, we de-
ﬁne the likelihood function, using Bayes’ Theorem:

l(l |x1, x2, ...xN) = P(x1, x2, ...xN|l )

P(l )
P(x1, x2, ...xN)

(4)

This is the likelihood of l given the experimental data.
Assuming P(x1, x2, ...xN) = 1 (the experiment has al-
ready occurred) and P(l ) is uniformly distributed (all
l ’s are equally likely), then l(l |x) (cid:181) P(x|l ). To ﬁnd
the most likely l
, we must ﬁnd the maximum of this
function with respect to the parameter l
. To simplify the
calculation, we will instead maximize the log-likelihood
function, L, which is equivalent:

L = ln(l) = N ln l − l

N

xi

i=1

dL
dl =

N
l −

xi = 0

N

i=1

N

l = N/

xi

 

i=1

!

This is just the inverse of the mean, exactly as expected
for an exponential distribution. We need not account for
the proportionality between l(l |x) and P(x|l ) because
we only used the derivative of L

The other probability distribution we are concerned

with is the power-law distribution:
x−g

P(x) (cid:181)

For the MLE of g , we reproduce the derivation given in
[5]. The ﬁrst step is to normalize Eqn. (8) for the given
data points:

P(x) = Cx−g

=

−g

g − 1
xmin (cid:18)

x
xmin (cid:19)

where C is a constant of proportionality and xmin is the
smallest data point from the given sample. This is then
used to get the probability of the experiment:

P(x1, x2, ...xN|g ) =

P(xi) =

N

i=1

−g

N

i=1

g − 1
xmin (cid:18)

xi
xmin (cid:19)

(10)

(2)

(3)

(5)

(6)

(7)

(8)

(9)

(cid:213)
(cid:229)
(cid:229)
(cid:229)
(cid:229)
(cid:213)
(cid:213)
(11)

(12)

(13)

(14)

(15)

This is proportional to l(g |x) as before:

l(g |x1, x2, ...xN) =

−g

N

i=1

g − 1
xmin (cid:18)

xi
xmin (cid:19)

Again, we work with L = ln l, which is equivalent for
ﬁnding the most likely g . Then:

N

L =

i=1(cid:18)

ln(g − 1) − lnxmin − g ln

= N ln(g − 1) − N ln xmin − g

xi
xmin (cid:19)
xi
xmin

ln

N

i=1

The MLE for g can then be found:

N

i=1

N

dL
dg =

N
g − 1

−

ln

= 0

xi
xmin

g = 1 + N/

ln

xi
xmin !

 

i=1

Maximum Likelihood derives an estimator for a distri-
bution’s parameter(s), regardless of whether the sampled
data truly does come from such a distribution. Hence,
one needs a way to test how well the estimator matches
the sample. For our purposes, the Kolmogorov-Smirnov
(KS) Test works quite well [6]. This test compares the
cumulative distribution function (CDF) of the hypothe-
sized probability distribution to the empirical CDF of the
sampled data. The test statistic is:

K = sup

|F(x) − S(x)|,

(16)

x

where F(x) is the hypothesized CDF and S(x) is the
empirical CDF. K is then compared with a critical value
(for the given signiﬁcance level) which can be found in
a table or generated by software. MATLAB’s Statistics
Toolbox has a built-in KS-Test function, kstest().

3. POPULATIONS

We have been able to greatly expand upon the number
of searches performed compared to previous work. In
addition, due to the problems with the OR operator, we
have performed multiple searches of the same population
using progressively inclusive lexicons. Here we describe
the populations studied.

Scientists: Two populations of scientists were used in
this study. The smaller one (of size 449) is the same
population used in [2]. The larger population (of
size 1625) is a list of authors who have published re-

cently on cond-mat and was harvested using arXiv’s
OAI XML feed4.

Aces: The population of 1851 aces contains the 393
German aces studied in [1] as well as all the listed
aces of other nationalities5.

Actors: The actors population contains 778 actors who
were born on the second or third of each month
between the years 1950 and 1955, as collected from
the archives of the Internet Movie Database6. These
selection criteria were chosen to insure a mostly
uniform sample and to give all the chosen subjects
roughly the same career length.

Villains: The villains population was gathered from a
user-contributed list of antagonists from ﬁctional
media7. This list contains both ﬁctitious charac-
ters and real people who have appeared in ﬁctional
works. Since this list was generated by users, the
characters must already enjoy a substantial level of
popularity.

Programmers: Similar to the villains population, this
population was collected from a user-contributed
list of famous programmers8; people who have
made a large contribution to computing, the Inter-
net, etc., such as Tim Berners-Lee, who invented
the World Wide Web, and Bill Gates, a co-founder
of Microsoft. As with the villains, it seems safe to
assume that this population is “famous”.

Clarkson Students: The students population was cho-
sen from Clarkson University’s student directory. It
consists of all students (undergraduate and gradu-
ate) whose last name contains the letter “e”. This
criterion was chosen simply to make it easy to har-
vest a large collection of names from the online stu-
dent directory. We assume this is a “non-famous”
population, in that the students are too young to
have amassed any real fame.

Runners: This population was used previously [2]. The
original searches used the erroneous OR operator
and are here reproduced without it.

4. RESULTS AND ANALYSIS

Table 1 contains the power-law exponents and search lex-
icons for the populations studied. Many of the power-law
exponents are ≈ 2, as ﬁrst predicted in [1]. All popula-
tions display a power-law tail, regardless of whether they

4 See www.openarchives.org
5 See www.theaerodrome.com
6 www.imdb.com
7 See en.wikipedia.org/wiki/List_of_villains
8 See en.wikipedia.org/wiki/List_of_programmers

(cid:213)
(cid:229)
(cid:229)
(cid:229)
(cid:229)
ACKNOWLEDGMENTS

We are grateful to Eduard Vives for suggesting the anal-
ysis of cumulative plots by the method of maximum like-
lihood and to the Universidad de Granada for facilitating
discussions leading to this work. DbA thanks NSF grant
PHY-0140094 for partial support of this work.

REFERENCES

1. M.V. Simkin and V.P. Roychowdhury, “Theory of Aces:
Fame by chance or merit?" (preprint, arxiv.org/abs/cond-
mat/0310049, 2003).

2. J.P. Bagrow, H.D. Rozenfeld, E.M. Bollt, and D. ben-

Avraham, “How Famous is a Scientist? – Famous to Those
Who Know Us." cond-mat/0404515, Europhys. Lett., 67, (4)
511-516 (2004).

3. G.R. Notess, “Google Inconsistencies.”

4. R. Cilibrasi, and P.M.B Vitanyi. “Automatic
Meaning Discovery Using Google." (preprint,
arxiv.org/abs/cs.CL/0412098, 2004).

5. M.E.J. Newman, “Power laws, Pareto distributions,

and Zipf’s law.” Contemporary Physics in press (2004).
cond-mat/0412004.

6. M.L. Goldstein, S.A. Morris, and G.G. Yen. “Problems
with Fitting to the Power-Law Distribution." (preprint,
arxiv.org/abs/cond-mat/0402322, 2004).

http://www.searchengineshowdown.com/features/google/inconsi

are “famous” or not. It should be pointed out, however,
that for some populations the range ﬁtting a power-law is
extremely narrow, casting doubt on this interpretation. In
those cases, an exponential distribution may ﬁt as well.
Most of the scientists distributions ﬁt an exponential over
much of the “non-tail”. See Table 2. Clarkson students,
another population assumed to be non-famous, does not
ﬁt to an exponential over such a range. This is further
evidence that the exponential distribution for scientists
stems from their use of the World Wide Web as a pro-
fessional means for disseminating research, rather than
related to fame.

The power-law exponent tends to increase as the re-
striction due to the lexicon increases. This is expected be-
cause a more restrictive search will make high hit counts
less frequent, increasing the slope of the tail. Figure 1
contains rank / frequency plots for several populations
to illustrate this effect. The plots are proportional to the
empirical CDF, P(X > x). Note that individual searches
which return zero hits are not shown, changing the max-
imum rank between lexicons. This is most evident in the
Students population: the third lexicon is very restrictive
and many students garnered zero hits.

The proposed model in [1] was shown to have a power-
law exponent that approaches 2 asymptotically, from
above, as the number of relevant web pages citing the
population in question increases over time. The popula-
tion changes in size in Table 1 are due to progressively
restrictive lexicons and do not pertain to the same phe-
nomenon. On the other hand, we are unable to account
for the many instances of power-law exponents smaller
than 2 observed, as any reasonable extension of the the-
ory in [1] yields powers g ≥ 2.

5. CONCLUSIONS

A purely visual inspection of plots such as those in Fig-
ure 1 may lead one to conclude that a search is exponen-
tially or power-law distributed, but this is misleading and
subjective. The eye will overweigh the number of data
points in the tail, due to the logarithmic axes. Objective
hypothesis tests such as the KS-test must be used.

In addition to problems with hit estimation, OR, etc.,
the choice of a lexicon has noticeable impact. In the rank
/ frequency plot for the aces population in Figure 1, the
second search shows a much cleaner tail, though again
this region contains less than 6% of the aces. All of these
factors make it difﬁcult to test theories. For the size of
populations involved, Google hits have too much “noise”
to accurately distinguish distributions.

TABLE 1. MLE Power-Law Fits to Search Results. All ﬁts pass the KS-test (a = 0.05).

Population (Size)

Search

g

Fitting Range∗

Lexicon

Scientists (449)

Scientists (1625)

Aces (1851)

Actors (778)

Villains (421)

Programmers
(148)

Clarkson Students
(1533)

Runners (222)

1
2
3
4

1
2
3
4

1
2

1
2
3

1
2
3

1
2
3
4

1
2
3

1
2

1.82
2.18
2.29
2.69

2.02
1.77
2.08
2.00

2.74
3.62

1.88
2.04
2.10

1.57
1.86
2.03

1.88
2.16
2.03
2.43

1.74
1.99
2.57

1.71
1.92

Top 99
" "
" "
" "

Top 105
Top 240
Top 150
Top 210

Top 99
" "

Top 120
" "
" "

Top 99
" "
" "

Top 59
" "
" "
" "

Top 119
" "
" "

Top 99
" "

<name>
<name> physics
<name> statistical physics
<name> statistical physics condensed

<name>
<name> physics
<name> statistical physics
<name> statistical physics condensed

<name> WWI
<name> WWI ace

<name>
<name> movie
<name> movie actor

<name>
<name> villain
<name> villain evil

<name>
<name> programmer
<name> computer
<name> computer programmer

<name>
<name> clarkson
<name> "clarkson university"

<name>
<name> olympics

∗ For example, Top 99 means that the ﬁt was applied to only the 99 highest-ranked searches. Note that some
sub-samples constitute less than 10 percent of the population and that the tail contains the noisiest, and therefore
least reliable, data.

TABLE 2. MLE Exponential Fits to Search Results. All ﬁts pass the KS-test
(a = 0.05) except for Scientists (1625) Search 4.

Population (Size)

Search

K

CV ∗

Fitting Range

Scientists (449)

Scientists (1625)

l −1

1040
591
385
134

468
343
161
75

1
2
3
4

1
2
3
4

0.0877
0.0663
0.0650
0.0602

0.0495
0.0385
0.0397
0.0423

0.0908
0.0706
0.0688
0.0644

0.0505
0.0395
0.0416
0.0369

230 - 449
85 - 449
65 - 449
10 - 449

910 - 1625
455 - 1625
570 - 1625
280 - 1625

∗ The critical value that is compared to K. A distribution passes the KS-test when
K < CV .

4
10

3
10

2
10

1
10

3
10

2
10

1
10

0
10

0
10

0
10

0
10

Scientists (1625)

Aces

Search 1
Search 2
Search 3
Search 4

Search 1
Search 2
Search 3

3
10

2
10

1
10

0
10

0
10

2
10

1
10

0
10

0
10

Search 1
Search 2
g  = 3.62

Search 1
Search 2
g  = 1.92

2
10

4
10

6
10

8
10

1
10

2
10

3
10

4
10

5
10

Clarkson Students

Runners

2
10

4
10

6
10

1
10

2
10

3
10

4
10

5
10

FIGURE 1. Rank / Frequency plots for several populations. The horizontal axis is the number of Google hits and the vertical axis
is the rank of the (sorted) data points. Note that straight lines (offset for clarity) will have slope −g + 1.

