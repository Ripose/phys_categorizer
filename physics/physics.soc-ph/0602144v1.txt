6
0
0
2
 
b
e
F
 
1
2
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
4
4
1
2
0
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Fast Community Identiﬁcation by Hierarchical Growth

F. A. Rodrigues, G. Travieso, and L. da F. Costa
Institute of Physics of S˜ao Carlos. University of S˜ao Paulo
S˜ao Carlos, SP, Brazil, PO Box 369,
13560-970, phone +55 16 3373 9858,
{francisco,gonzalo,luciano}@ifsc.usp.br

A new method for community identiﬁcation is proposed which is founded on the analysis of
successive neighborhoods, reached through hierarchical growth from a starting vertex, and on the
deﬁnition of communities as a subgraph whose number of inner connections is larger than outer
connections. In order to determine the precision and speed of the method, it is compared with one
of the most popular community identiﬁcation approaches, namely Girvan and Newman’s algorithm.
Although the hierarchical growth method is not as precise as Girvan and Newman’s method, it is
potentially faster than most community ﬁnding algorithms.

I.

INTRODUCTION

Boccaletti et al [10].

Lying at the intersection between graph theory and
statistical mechanics, complex networks exhibit great
generality, which has allowed applications to many areas
such as modeling of biological systems [1], social interac-
tions [2, 3, 4, 5] and information networks [6, 7], to cite
just a few [8].

As this research area comes of age, a large toolkit is
now available to characterize and model complex net-
works (e.g.
surveys [9, 10, 11, 11, 12]). An impor-
tant problem which has been subject of great interest re-
cently concerns the identiﬁcation of modules of densely
connected vertices in networks, the so-called communi-
ties. These structures result from interactions between
the network components, deﬁning structural connecting
patterns in social networks [4, 13], metabolic networks
[14] as well as the worldwide air transportation network
[15].

Despite the intense eﬀorts dedicated to community
ﬁnding, no consensus has been reached on how to de-
ﬁne communities [16]. Radichi et al. [17] suggested the
two following deﬁnitions. In a strong sense, a subgraph
is a community if all of its vertices are more intensely
connected one another than with the rest of the network.
In a weak sense, a subgraph corresponds to a commu-
nity whenever the number of edges inside the subgraph
is larger than the number of connections established with
the remainder of the network.

Along the last few years, many methods have been pro-
posed for community identiﬁcation based on a variety of
distinct approaches such as: (i) link removal, as used
by Girvan and Newman [18] and Radicchi et al. [17];
(ii) spectral graph partitioning [19]; (iii) agglomerative
methods, including hierarchical clustering [20, 21]; (iv)
maximization of the modularity, as in Newman [3] and
Duch and Arenas [22]; and (v) consideration of succes-
sive neighborhoods through hierarchical growth emanat-
ing from hubs [23, 24]. A good survey of community
identiﬁcation methods has been provided by Newman
[25] and Danon et al.
[16]. This subject has also been
partially addressed in the surveys by Costa et al. [9] and

Arguably, the most popular method for community
identiﬁcation is that proposed by Girvan and New-
man [18]. This approach considers that the edges in-
terconnecting communities correspond to bottlenecks be-
tween the communities, so that the removal of such edges
tend to partition the network into communities. The bot-
tleneck edges are identiﬁed in terms of a measurement
called edge betweenness, which is given by the number of
shortest paths between pairs of vertices that run along
the edge. This algorithm has been proven to be eﬀective
for obtaining communities in several types of networks.
However, its eﬀectiveness implies a computational cost of
order O(n2m) in a network with m edges and n vertices.
An alternative algorithm to calculate betweenness cen-
trality, based on random walks, has been proposed [26]
which, although conceptually interesting, is also compu-
tationally demanding.

The method described in the present article overcomes
tends to run faster than the Girvan-Newman’s algorithm
while oﬀering reasonable, though smaller, precision for
It is based on the con-
identiﬁcation of communities.
sideration of successive neighborhoods of a set of seeds,
implemented through hierarchical growth. Starting from
a vertex (seed), the links of its successive neighborhood
are analyzed in order to verify if they belong to the same
community than the seed. This process starts from each
vertex in the network and, at each step, inter-community
edges are removed splitting the network into communi-
ties.

A related approach was previously proposed by
Costa [23], who developed a method based on the ﬂood-
ing the network with wavefronts of labels emanating si-
multaneously from hubs. The expanding region of each
label was implemented in terms of hierarchical growth
from the starting hubs and the communities are found
when the wavefronts of labels touch each one. Com-
petitions along the propagating neighborhoods are de-
cided by considering an additional criterion involving the
moda of the labels at the border of the neighborhood
and the number of emanating connections. The possibil-
ity to detect communities by using expanding neighbor-
hoods has also been addressed by Bagrow and Bollt [24],

who proposed an algorithm based on the growth of an l-
shell starting from a vertex v0, with the process stopping
whenever the rate of expansion is found to fall bellow an
arbitrary threshold. The l-shell is composed by a set of
vertices placed at distance l from the vertex v0, which is
analogous to the concept of ring deﬁned by Costa [27, 28]
in order to introduce hierarchical measurements. At each
expansion, the total emerging degree of a shell of depth
l is calculated as corresponding to the sum of the emerg-
ing degree of each vertex at distance l from v0, i. e. the
degree of i minus the number of links that connect i with
vertices inside the shell (analogous to the concept of hi-
erarchical degree introduced by Costa [27, 28]). When
the rate between the total emerging degree at distance
l and l − 1 is shorter than a given threshold, the set
of vertices inside the l-shell is classiﬁed as a community.
Despite its simplicity, the determination of the local com-
munity is accurate just when the vertex v0 is equidistant
from all parts of its enclosing community [24]. In order
to overcome this limitation, Bragrow and Bollt suggested
starting from each vertex and then ﬁnd a consensus parti-
tioning of the network using a membership matrix. Such
an approach makes the algorithm more precise. On the
other hand, it is slow because it requires sorting the mem-
bership matrix, which is of order O(n3).

The method reported in the present article also in-
volves the consideration of expanding neighborhoods and
completion of growth in terms of rate of expansion. How-
ever, it diﬀers from the method of Bagrow and Bollt be-
cause it analyzes the connections of each vertex at the
border of the community individually instead of all ver-
tices at same time. Besides, it considers not only the ﬁrst
neighborhood of the community, but the second one too.
At each expansion from an starting vertices, edges can
be removed considering two trials based on the ﬁrst and
second neighborhood of the enclosing community. An-
other diﬀerence is that our method uses a threshold just
at the second neighborhood, whose value is determined
so as to obtain the best value of the modularity, i. e.
the value of this threshold varies from 0 to a maximum
value and at each variation it is computed the modular-
ity. The procedure is to that used by Girvan-Newman,
as the modularity is calculated at each edge removal.

The next sections describe the suggested method as
well as its application to community detection in real
and in computer generated networks. A comparison with
the Girvan-Newman method in terms of precision and
execution time is also presented and discussed.

II. HIERARCHICAL GROWTH METHOD

A community is formed by a set of densely connected
vertices which is sparsely connected with the remain-
der of the network. The proposed hierarchical growth
method ﬁnds communities by considering two expanding
neighborhoods. The ﬁrst neighborhood of a given vertex
is composed by those vertices at a distance of one edge

2

(1)

(2)

from that vertex. Similarly, the set of vertices at distance
of two edges from that given vertex constitutes its sec-
ond neighborhood. Following this deﬁnition, two steps
are performed in order to determine if a given vertex i
located in the ﬁrst neighborhood of a known community
belongs to this community, i.e.

1.

2.

where kin1 (i) is the number of links of the vertex i
with vertices belonging to community and with ver-
tices in the ﬁrst neighborhood, and kout1 (i) is the
number of links between the vertex i and vertices
in the remainder of the network.

kin1 (i)
kout1 (i)

≥ 1,

kin2 (i)
kout2 (i)

> α,

where kin2 (i) is the number of links of the neigh-
bors of i located in the second community neighbor-
hood with vertices belonging to the ﬁrst neighbor-
hood, and kout2 (i) is the number of links between
the neighbors of i and vertices in the remainder of
the network. The parameter α varies from 1 to a
threshold value which is determined according to
the higher value of the modularity.

The ﬁrst condition is suﬃcient to determine if a vertex
belongs to the community, but it is not necessary. The
coeﬃcient α acts as a threshold ranging from one to a
maximum value. The extension of the current method
for weighted network is straightforward.

The hierarchical growth starts from each vertex of the
network at each step, with the vertices with highest clus-
tering coeﬃcient [9] selected ﬁrst because they are more
likely to be inside communities. So, the ﬁrst and/or the
second conditions are analyzed at each step, while the
ring between the starting vertex grows, adding vertices
to the community or removing edges. Nodes satisfying
the ﬁrst and/or the second conditions (equations 1 and 2)
are added to the community. Otherwise, their links with
the known community are removed. Figure 1 illustrates
a simple application example of the method. In order to
determine the best division of the network the thresh-
old α is varied from 0 to a maximum value and at each
variation, the modularity Q is computed. The modular-
ity is a measure of the quality of a particular division of
networks [26]. If a particular network is to be split in c
communities, Q is computed deﬁning a symmetric c × c
matrix E whose elements of diagonal, eii, give the con-
nections between vertices in the same community and the
remainder elements, eij , give the number of connections
between the communities i and j,

Q = X
i

[eii − (X
j

2
eij)

] = T r(E) − ||E

||,

(3)

2

III. APPLICATIONS

3

In this section we illustrate applications of the hierar-
chical growth to particular problems while analyzing its
accuracy and the performance. In the ﬁrst case, its ac-
curacy is determined by comparing the obtained results
with expected divisions of diﬀerent networks. With the
purpose of determining the performance, we compared
the hierarchical growth method with Girvan-Newman’s
algorithm, whose implementation is based on the algo-
rithm developed by Brandes [29] for computing of vertex
betweenness centrality.

In order to split the network into communities the

Girvan-Newman algorithm proceeds as follows:

1. Calculate the betweenness score for each of the

edges.

2. Remove the edge with the highest score.

3. Compute the modularity for the network.

4. Go back to step 1 until all edges of the networks
are removed, resulting in N non-connected nodes.

The best division is achieved when the highest modu-
larity value is obtained. In this way, the Girvan-Newman
method runs in two steps: (i) ﬁrst all edges are removed
from the network and the modularity value is computed
at each removal, (ii) next, the highest value of modularity
is determined and the corresponding edges removed.

A. Computer generated networks

A typical procedure to quantify how well a community
identiﬁcation method performs adopts networks with
known community structure, called computer generated
networks, which are constructed by using two diﬀerent
probabilities [26]. Initially, a set of n vertices are clas-
siﬁed into c communities. At each subsequent step, two
vertices are selected and linked with probability pin if
they are in the same community, or pout in case they are
belong to diﬀerent communities. The values of pin and
pout can be selected so as to control the sharpness of the
separation between the communities. When pin ≪ pout,
the communities can easily be visualized. On the other
hand, when pin → pout, it is diﬃcult to distinguish the
communities and the methods used for community iden-
tiﬁcation lose precision in the correct classiﬁcation of the
vertices into communities.

We generated networks with 128 vertices, divided into
four communities of 32 vertices each. The total average
vertex degree kin + kout of the network was kept constant
and equal to 16. In this way, as the value of kout is varied
from 0 to 8, the more diﬃcult the network communities
recognition becomes. The proposed community ﬁnding
algorithm was applied to each network conﬁguration, and
the fraction of vertices classiﬁed correctly was calculated.
In Figure 2 it is shown the sensitivity of the hierarchical

FIG. 1: Application example of the hiearchical growth. The
process is started at vertex 0.
Its neighborhood, indicated
by black vertices, are analyzed next, and the vertices 1, 2, 4
and 5 are added to community following the ﬁrst condition
(equation 1). The vertex 3 is added to community following
the second condition (equation 2 with α = 1). The current
community neighborhood (gray vertices) is then checked, and
the vertices 6, 7 and 8 are added because of the ﬁrst condition.
Next, the links between the community and the vertices 9 and
10 are removed, splitting the network into two communities.

Algorithm 1: The general algorithm for the hierarchical
growth method.

for each vertex of the network do

put the next vertex with highest clustering coeﬃcient
value in C
while C does not stop growing do
put the neighbors of C in R
for each vertex i in R do

compute kin1 (i) and kout1(i)
if kin1 (i) ≥ kout1 (i) then
insert the vertex i in C

else

select the neighbors of R and put in R1
compute kin2 (i) and kout2 (i)
if kin2 (i) > αkout2 (i) then
insert the vertex i in C

else

remove the links between the vertex i and the
vertices in C

end if

end if
end for
end while
Clean C, R and R1

end for

where T r(E) is the trace of matrix E and ||E|| indi-

cates the sum of the elements of the matrix E.

Thus, the splitting of the network considers the value
of α that provides the highest value of the modularity.
The pseudocode which describes the hierarchical growth
method is given in Algorithm 1.

growth method compared with the results obtained by
using Girvan-Newman’s method.

4

FIG. 2: Fraction of correctly classiﬁed vertices in terms of the
number of inter-community edges kout for a network with 128
vertices considering kin + kout = 16. The Girvan-Newman’s
method is more precise than the hierarchical growth method
when kout > 5. Each data point is an average over 100 graphs.

As Figure 2 shows, the algorithm performs near full
accuracy when kout ≤ 5, classifying more than 90% of
vertices correctly. For higher values, this fraction falls
oﬀ as the connections between communities gets denser.
When kout > 5, the Girvan-Newman’s method gives a
better result, so it tends to be more suitable for this kind
of networks.

The execution times of both methods were compared
considering the computer generated cases for which the
hierarchical growth method provides exact results (i.e.
we used kout = 2, 3 and 4). We considered the net-
work size varying from N = 128 until N = 1, 024 and
kept the average degree kin + kout = 16. The hierar-
chical growth method resulted faster than the Girvan-
Newman’s method, as shown in Figure 3. While the
Girvan-Newman’s processing time scales as N 3.0±0.1, the
time of the hierarchical growth method scales as N 1.6±0.1,
which suggests that the former method is particularly
suitable for large networks.

The constant α considered in the algorithm is deter-
mined in the following way. The algorithm runs for α
varying from 1 to a maximum value αM increasing in
steps of 0.5. For each value of α, the communities are
computed, and the decomposition with the best value of
modularity is chosen. In our tests, the best value of α
was always equal to 1 for all network sizes considered.

FIG. 3: Processing time versus the size of network. The hi-
erarchical growth (HG) method runs faster than the Girvan-
Newman (GN) method. While the time of processing of the
Girvan-Newman’s method scales as N 3.0±0.1, the time of hi-
erarchical growth method scales as N 1.6±0.1. Each data point
is an average over 10 graphs.

B. Zachary karate club network

In order to apply the hierarchical growth method to a
real network, we used the popular Zachary karate club
network [30], which is considered as a simple benchmark
for community ﬁnding methodologies [22, 23, 25]. This
network was constructed with the data collected observ-
ing 34 members of a karate club over a period of 2 years
and considering friendship between members. The two
obtained communities are shown in Figure 4. This par-
titioning of the network corresponds almost perfectly to
the actual division of the club members, while only one
vertex, i.e. vertex 3, has been misclassiﬁed. This result is
analogous to that obtained by using the Girvan-Newman
algorithm based on measuring of betweenness central-
ity [18].

C.

Image segmentation

A third application of our method is related to the im-
portant problem of image segmentation, i.e. the partition
of image elements (i.e pixels) into meaningful areas corre-
sponding to existing objects. As described by Costa [31],
an image can be modeled as a network and methods ap-
plied to networks characterization can be used to iden-
tify image properties. The application of a community
ﬁnding algorithm to image segmentation was proposed in
that same work [23]. Since digital images are normally
represented in terms of matrices, where each element cor-
responds to a pixel, it is possible to associate each pixel
to a node using network image representation. The edge
weight between every pair of pixels can be determined by

5

In this way, the resulting weighted network has N = M 2
nodes and n = N (N − 1)/2 edges.

Figure 5 shows the initial image and its respective
segmentation. The results obtained by the hierarchi-
cal growth method and by using the Girvan-Newman’s
method are similar. Since the network obtained typi-
cally for images can be substantially large (N = M 2),
a faster method to community identiﬁcation is necessary
for practial applications, a demand potentially met by
hierarchical growth method.

IV. CONCLUSIONS

In this paper we have proposed a new method to iden-
tify communities in networks. The method is based on a
hierarchical growth from a starting node while its neigh-
borhood is analyzed, and edges removed according to two
rules based on the ﬁrst and/or second neighborhoods of
the growing community. We have applied this method to
computer generated networks in order to determine its
precision and performance comparing it with the pop-
ular method based on edge betweenness centrality pro-
posed by Girvan and Newman [18]. Despite resulting
not so precise as the Girvan-Newman’s method, the pro-
posed algorithm is promisingly fast for determining com-
munities. We have also applied the hierarchical growth
method to the Zachary karate club network and image
segmentation. In both cases, the resulting networks are
similar to those obtained by the Girvan-Newman’s algo-
rithm.

As discussed by Danon et al. [16], the most accurate
methods tend to be computationally more expensive.
The method presented in this article can not provide as
good precision as most of the methods, but it yields com-
peting velocity. As a matter of fact, performance and
accuracy need to be considered when choosing a method
for practical purposes. Particularly in the case of im-
age segmentation, the suggested method is particularly
suitable given the large size of the typical networks (in-
creasing with the square of the image size, N = M 2) and
the sharped modular structure often found in images.

As a future work, the algorithm proposed here can be
improved considering other conditions to include nodes in
the growing community as, for example, higher levels of
community neighborhood. Besides, consideration of local
modularity can be also considered in order to obtain a
more precise partition of the network.

V. ACKNOWLEDGMENTS

Luciano da F. Costa is grateful to FAPESP (proc.
99/12765-2), CNPq (proc. 308231/03-1) and the Human
Frontier Science Program (RGP39/2002) for ﬁnancial
support. Francisco A. Rodrigues acknowledges FAPESP
sponsorship (proc. 04/00492-1).

FIG. 4: The friendship Zachary karate club network divided
into two communities, represented by circles and squares. The
division obtained by the hierarchical growth is the same as the
one provided by the Girvan-Newman’s method.

FIG. 5: The real image and its respective segmentation. The
image is transformed into a network and a threshold T = 0.25
is used to eliminate weak links.

the Euclidean distance between feature vectors composed
by visual properties (e.g. gray-level, color or texture) at
or around each pixel. Thus, considering the distance be-
tween every feature vector of pair of pixels in the image,
this approach results in a fully-connected network, where
closer pixels are linked by edges with higher weights. To
eliminate weak links, a threshold can be adopted over
the weighted network, resulting in a simpliﬁed adjacency
matrix. The connections whose distance is shorter than
the threshold are assigned to zero, otherwise, to one.

The mapping between a pixel in the image to a node
in the network and the reverse operation, is deﬁned [23]
by

i = y + (x − 1)M,
x = ⌊(i − 1)/M ⌋ + 1,
y = mod((i − 1), M ) + 1,

(4)
(5)
(6)

where M is the size of the square image, and
1 ≤ x, y ≤ M are the pixel positions in the image.

6

[1] A. L. Barabasi and Z. N. Oltvai. Network biology: under-
standing the cells functional organization. Nature, 5:101–
113, 2004.

[2] M. E. J. Newman. Mixing patterns in networks. Phys.

Rev. E, 67:026126, 2003.

[3] M. E. J. Newman and J. Park. Why social networks are
diﬀerent from other types of networks,. Phys. Rev. E,
68(036122), 2003.

[4] P. M. Gleiser and L. Danon. Community structure in

jazz. Advances in complex systems, 6(4), 2003.

[17] F. Radicchi, C. Castellano, F. Cecconi, V. Loreto, and
D. Parisi. Deﬁning and identifying communities in net-
works. Proc. Natl. Acad. Sci. USA, 101(09):2658–2663,
2004.

[18] M. Girvan and M. E. J. Newman. Community structure
in social and biological networks. Proc. Natl. Acad. Sci.
USA, 99(12):7821–7826, 2002.

[19] A. Capocci, V. D. P. Servedio, G. Caldarelli, and F. Co-
laiori. Detecting communities in large networks. cond-
mat/0402499, 2004.

[5] J. Scott. Social Network analysis: A Handbook. Sage

[20] John Scott. Social Network Analysis: A Handbook. Sage

Publications, 2nd edition, 2000.

Publications, London, 1979.

[6] M. Faloutsos, P. Faloutsos, and C. Faloutsos. On power-
law relationships of the internet topology. Computer
Communication Review, 29(4):251–262, 1999.

[21] Stanley Wasserman and Katherine Faust. Social Network
Analysis: Methods and Applications. Cambridge Univer-
sity Press, 1994.

[7] R. Albert, H. Jeong, and A.-L. Barabsi. Diameter of the

[22] J. Duch and A. Arenas.

world wide web. Nature, 41:130–131, 1999.

[8] A. L. Barab´asi. Linked: How Everything Is Connected
to Everything Else and What It Means. Massachusetts:
Persus Publishing, 2002.

[9] L. da F. Costa, F. A. Rodrigues, G. Travieso, and
P. R. Villas Boas. Characterization of complex networks:
A survey of measurements. cond-mat/0505185.

[10] S. Boccaletti, V. Latora, Y. Moreno, M. Chaves, and D.-
U. Hwang. Complex networks: structure and dynamics.
Physics Reports, 2005. (in press).

[11] R. Albert and A. L. Barab´asi. Statistical mechanics of
complex networks. Reviews of Modern Physics, 74(47),
2002.

[12] M. E. J. Newman. Structure and function of complex

networks. SIAM Review, 45(2):167–256, 2003.

[13] A. Arenas, L. Danon, A. D´iaz-Guilera, P. M. Gleiser, and
R. Guimer`a. Community analysis in social networks. The
European Physical Journal B, 38:373–380, 2004.

[14] R. Guimer`a and L. A. N. Amaral. Functional cartography
of complex metabolic networks. Nature, 433(7028):895—
900, 2005.

[15] R. Guimer`a, S. Mossa, A. Turtschi, and L. A. N. Amaral.
The worldwide air transportation network: Anomalous
centrality, community structure, and cities’ global roles.
Proc. Natl. Acad. Sci. USA, 102(31):7794–7799, 2005.
[16] L. Danon, J. Duch, A. Arenas, and A. Diaz-Guilera.
J. Stat. Mech,

Community structure identiﬁcation.
P09008, 2005.

complex networks using extremal optimization.
mat/0501368, 2005.

Community detection in
cond-

[23] L. da F. Costa. Hub-base community ﬁnding.

cond-

mat/0405022, 2004.

[24] J.P. Bagrow and E. M. Bollt. A local method for detect-
ing communities. Phys. Rev. E, 72(046108), 2005.
[25] M. E. J. Newman. Detecting community structure in
networks. The European Physical Journal B, 38:321–330,
2004.

[26] M. E. J. Newman and M. Girvan. Finding and evaluating
community structure in networks. Phys. Rev. E, 69:1:15,
2004.

[27] L. da F. Costa. A generalized approach to complex net-
works. In Expectations and Trends in Statistical Physics.
NEXT-SigmaPhi 3rd International Conference, August
2005.

[28] L. da F. Costa. A hierarchical approach of complex net-

works. cond-mat/0412761, 2005.

[29] U. Brandes. A faster algorithm for betweenness central-
ity. Journal of Mathematical Sociology, 25(2):163–177,
2001.

[30] W. Zachary. An information ﬂow model for conﬂict and
ﬁssion in small groups. Journal of Anthropological Re-
search, 33:452–473, 1977.

[31] L. da F. Costa. Complex networks, simple vision. cond-

mat/0403346, 2004.

