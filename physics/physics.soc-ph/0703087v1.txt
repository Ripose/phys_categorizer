7
0
0
2
 
r
a

M
 
7
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
7
8
0
3
0
7
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Unveiling community structures in weighted networks

Nelson A. Alves∗
Departamento de F´ısica e Matem´atica, FFCLRP Universidade de S˜ao Paulo, Avenida Bandeirantes 3900,
CEP 14040-901, Ribeir˜ao Preto, S˜ao Paulo, Brazil
(Dated: February 27, 2007)

Random walks on simple graphs in connection with electrical resistor networks lead to the deﬁ-
nition of Markov chains with transition probability matrix in terms of electrical conductances. We
extend this deﬁnition to an eﬀective transition matrix Pij to account for the probability of going
from vertex i to any vertex j of the original connected graph G. Also, we present an algorithm
based on the deﬁnition of this eﬀective transition matrix among vertices in the network to extract
a topological feature related to the manner graph G has been organized. This topological feature
corresponds to the communities in the graph.

Keywords: communities in networks, weighted graph,

electrical network, random walks, Laplacian spectrum.

PACS-No.: 89.75.-k, 89.75.Hc, 05.10.-a

1.

INTRODUCTION

Network modeling is becoming an essential tool to
study and understand the complexity of many natural
and artiﬁcial systems [1]. Applications [2, 3, 4] include
technological networks as the Internet, World Wide Web
and electric power grid; biological networks as metabolic
[5, 6, 7] and amino acid residue networks [8, 9, 10, 11];
and far more studied, social networks. This understand-
ing ﬁrstly passes through the analysis of their topological
features, usually related to complex networks. Examples
are the degree distribution P (k), average degree
, clus-
i
tering coeﬃcient C, the “betweenness” of a vertex i and
“assortative mixing” describing correlations among ver-
tices in the network.

k
h

Nowadays, an important research issue within com-
plex network (graph) ﬁeld is the study and identiﬁca-
tion of its community structure, a problem also known
as graph partitioning. Many deﬁnitions of community
are presented in the literature. In essence, this amounts
to divide the network into groups where vertices inside
each group share denser connections among them when
compared with connections across any two groups. The
main concerns in proposing methods to ﬁnd communi-
ties are in developing well successful automatic discovery
computer algorithms and execution time that can not be
prohibitive for large network sizes n.

More recently various methods have been proposed to
ﬁnd good divisions of networks [12, 13].
In particular,
some techniques are based on Betweenness measures [14],
resistor network [15], Laplacian eigenvalues [16, 17], im-
plementing quantitative deﬁnitions of community struc-
tures in networks [18] or through out beneﬁt functions
known as modularity [14, 16]. Those methods discover

∗E-mail: alves@ﬀclrp.usp.br

O

O

(n3) or even

communities in time runs that typically scale with the
(n4). However, there is a
network size as
proposal that scales linearly in time but needs a param-
eter dependent considerations [15]. This method views
the network as an electric circuit with current ﬂowing
throught all edges represented by resistors. The auto-
matic community ﬁnding procedure is hampered by the
need of electing two nodes (poles) that lie in diﬀerent
communities and deﬁning a threshold in voltage spec-
trum.

Here we show how random walkers on graphs, also
in connection with electrical networks, unveil the hier-
archies of subnetworks or the so called community struc-
ture. Our method combines Laplacian eigenvalue ap-
proach with electrical network theory. A brief review of
how the spectral graph theory can characterize the struc-
tural properties of graphs using the eigenvectors of the
Laplacian matrix, related to the adjacency matrix, has
been presented by Newman [16].

The main aspect of the method relies on a generaliza-
tion of the usual transition probability matrix P. The
matrix element Pij means the probability for a walk on
a weighted graph at i to its adjacent vertex j. The in-
terpretation of conductances, the inverse of resistances,
among any vertices leads to the deﬁnition of an eﬀective
transition matrix that accounts for hops on the graph.
Deﬁning a similarity matrix as a function of the eﬀec-
tive transition matrix elements it is possible to extract
a topological feature related to the manner graph G has
been organized. It turns out that this topological feature
corresponds to hierarchical classes of vertices which we
interpret as communities of the network theory.

To explain our method, we present the essential of the
spectral analysis of Laplacian matrices in Section 2. In
Section 3 we present the arguments leading to the simi-
larity matrix that sets a scale to extract the community
structure. In Section 4 we describe how to implement the
algorithm and show the results for the karate club net-
work studied by Zachary [19] and for the model designed
by Ravasz and Barab´asi [20], an example of network with
scale-free property and modular structure. Section 5 con-
centrates our discussions on weighted graphs and the ﬁnal
Section 6 contains our conclusions.

2. LAPLACIAN EIGENVALUES AND
TRANSITION MATRIX

evaluated by means of the electrical network theory as
[27, 28]

}

{

, n

· · ·

1, 2,

Let us consider a simple graph G, i.e., undirected and
with no loops or multiple edges, on a ﬁnite vertex set
V =
and edge set E, represented by the
adjacency matrix A. The degree ki for each vertex i is
n
obtained from the adjacency matrix A as ki =
j=1 Aij.
n adjacency
For non-weighted graphs, the symmetric n
matrix takes values Aij = 1, if there is an edge connecting
vertices (i, j) and 0 otherwise. Thus, ki counts the num-
ber of edges that connect the selected vertex i to other
vertices. This extends naturally to weighted adjacency
matrix but we leave its version to Section 5.

P

×

For our purpose we study the graph G through a posi-
tive semideﬁnite matrix representation. This is achieved
in the usual manner using the Laplacian. The Laplacian
matrix of a graph G on n vertices, denoted by L(G), is
simply the matrix with elements

ki
1
−
0

i = j
i and j are adjacents

if
if
otherwise ,

(1)

Lij = 




which corresponds to the degree diagonal matrix minus
A. The Laplacian matrix
the adjacency matrix, L = K
has a long history.
It was introduced by Kirchhoﬀ in
1847 with a paper related to electrical networks [21] and
consequently is also known as Kirchhoﬀ matrix.

−

The Laplacian matrix is real and symmetric. More-
over, L is a positive semideﬁnite singular matrix with
If we label the
n eigenvalues λi and eigenvectors vi.
λn,
λ2 ≤ · · · ≤
eigenvalues in increasing order λ1 ≤
we have L(G) v1 = 0. The eigenvalue λ1 = 0 is al-
ways the smallest one and has the normalized eigenvector
, 1)/√n. Since the matrix L(G) is singular,
v1 = (1, 1,
it has no inverse, but in such cases it is possible to intro-
duce the so-called generalized inverse (L†) of L according
to Moore and Penrose’s deﬁnition [22].

· · ·

Among many properties for the second smallest eigen-
value λ2(G), known as the algebraic connectivity, we re-
call that [21, 23] λ2(G) = 0 iﬀ G is not connected. For
connected networks, the eigenvector components of the
ﬁrst non-null eigenvalue (λ2) has been applied as an ap-
proximate method for grouping vertices into communities
[16, 17, 24]. However the success in partitioning depends
on how well λ2 is separated from other eigenvalues.

From now on we identify the graph G = (V, E) with
an electrical network connected by edges of unit resis-
tances [25, 26]. A random walk on G is a sequence of
states (vertices) chosen among their adjacent neighbors.
To describe the overall behavior of a walker on G, one
needs to go beyond the usual analysis of Markov chains
with transition matrix Pij, probability to go from ver-
tex i to an adjacent vertex j, to include also hops, i.e.,
moves across the graph. For this end, we evaluate the ef-
fective resistances rij between all distinct vertices i and
j of G. Those eﬀective resistances rij can be numerically

rij = (L†)ii + (L†)jj −
= j and rij = 0 for i = j. Here, L†(G) is the
for i
Moore-Penrose generalized inverse of the Laplacian ma-
trix L(G). Its deﬁnition amounts to write L†(G) as

(L†)ij −

(L†)ji ,

(2)

(L†)ij =

vkivkj .

(3)

n−1

X
k=1

1
λk

This leads to a simple formulation of the eﬀective resis-
tances between all pairs of vertices as a function of the
eigenvalues and eigenvectors of L(G),

rij =

n−1

X
k=1

1
λk

(vki −

vkj )2 .

As a natural generalization, it is convenient to deﬁne the
eﬀective conductances cij for all pairs of vertices (i, j) as
cij = 1/rij, for i

= j.

As a consequence of the above results it is possible
to extend the usual random process that moves around
through adjacent states i and j to hops on the graph.
We deﬁne the hop transition probability from vertex i to
any vertex j by

Pij =

cij
ci

,

where cij is the eﬀective conductance from i to j and
ci =
Pj cij. Since a connected network is considered,
the probability that a walker who begins the run at any
given vertex i and reaches any other given vertex does
not vanish.

3. METHOD

Although Pij is not necessarily equal to Pji, it is possi-
ble to describe hierarchical classes of states perceived by
the walker as follows.

Firstly, we consider the generalized “distance” expres-

sion,

n
(cid:16)P
k6=i,j |

d(q)
ij =

1/q

q

Pjk|

(cid:17)

,

Pik −
2
n
−

where q is a positive real number, as a similarity mea-
sure between any vertices. Small d(q)
ij would imply high
similarity between i and j and could be used to set a hier-
archical classiﬁcation. Unfortunately this measure does
not provide a good score to classify those states into com-
munities. We have realized that the ﬂuctuations Sij in
indeed play the main role for that classiﬁca-
Pik −
|
tion. Let us take q = 1 and deﬁne

Pjk|

dij = P

n
k6=i,j |
n

Pik −
2
−

Pjk|

2

(4)

(5)

(6)

(7)

6
6
as the average “distance” between i and j. The standard
deviation between those vertices is given by

Sij = 


n

1

−

n

3

X
k6=i,j

Pik −
(cid:0)|

Pjk| −

2
d(i, j)
(cid:1)



1/2

.

(8)

As a matter of fact, this quantity gives a better descrip-
tion of the similarity among the vertices in opposite to
the average value in Eq. (6). The importance of those
ﬂuctuations to classify vertices into communities may be
surmised saying that we should not ask how far away two
vertices are, but who are their neighbors.

Secondly, we explore the behavior of Pij because low
transition probability to go from state i to j means
that state j is less accessible from state i. On the
other hand, high transition probability among states de-
ﬁnes a class of easily connected states. This is bet-
ter understood in terms of 1/Pij. Since the elements
Pij are not necessarily symmetric, we deﬁne how close
i and j are by taken as distance min
=
{
{ij} . In other words, the quan-
1/max
Pij, Pji} ≡
{
tity 1/P max
{ij} sets diﬀerent levels of transient classes on
G(V, E).

1/Pij, 1/Pji}

1/P max

Pij , Pji}

Thirdly, in order to have a well deﬁned class of states
we should expect small transition probability for leav-
ing it. Let us also introduce the notation P min
{ij} ≡
P min
min
. Thus, a large value of ∆ij ≡
{ij}
{
is consequence of small value for the leaving probability
{ij} and large value for P max
P min
{ij} .
Therefore, we extract the desired hierarchical analysis
deﬁning heuristically a similarity matrix (or “distance
matrix”) D taken simultaneously into account the above
remarks:

{ij} −

P max

Dij = Sij

max
{

∆ij, P min
{ij} }
P max
{ij}

.

(9)

Comparative values of P min
{ij} , for diﬀerent (i, j) pairs, may
be translated as a penalty when they are rather large,
which has an intimate connection with ∆ij. Thus, the
maximum between ∆ij and P min
{ij} enters in the nominator
of Eq. (9) as an extra term to help to set a similarity (or
proximity) scale. As we will show in the next sections, the
symmetric matrix D is able to unveil the entire transient
classes of states.

4. EVALUATING COMMUNITY
IDENTIFICATION

To understand the meaning of those transient classes
we investigate in some examples the structure of G(V, E)
encoded by the similarity matrix. Our analysis reveal
well-deﬁned classes of vertices. They occur at diﬀerent
levels of the hierarchical tree under Dij with the interest-
ing interpretation of communities i.e., with the structure
of well-deﬁned subnetworks.

A. Performance on artiﬁcial community graphs

3

Before discussing a particular issue on how to im-
plement the algorithm we report its performance on
graphs with a well known ﬁxed community structure [14].
Our method was tested on large number of graphs with
n = 128 vertices and designed to have four communities
of 32 vertices. Each graph is randomly generated with
probability pin to connect vertices in the same commu-
nity and probability pout to those vertices in diﬀerent
communities. Those probabilities are evaluated in order
to make the average degree of each vertex equals to 16.
The test amounts to evaluate the fraction of vertices cor-
rectly classiﬁed as a function of zout, the average number
of edges a given vertex has to outside of its own commu-
nity. Our algorithm classiﬁes correctly vertices into the
four communities for small values of zout, decreasing its
performance towards zout = 8. We have, for example, the
fractions 0.99
0.03,
respectively for zout = 5, 6, 7 and 8. The error bar was
evaluated over 100 randomly generated graphs. Those
results are competitive with the analyzed algorithms in
Ref. [13]. Moreover, we stress that the proposed method
is fully parameter independent. Also, its computational
cost is limited to methods in computing the eigenval-
ues and eigenvectors of symmetric matrices. In general
(n3) operations, with subsequent
it amounts to initial
O
less expensive iterations

0.02, 0.57

0.01, 0.81

0.01, 0.95

(n2).

±

±

±

±

O

B. A graph with leaves

The method is quite simple and much of the computer
time is spent in calculating the eigenvalues and eigenvec-
tors of L. All that remains to calculate is the eﬀective
resistances in Eq. (4) and, with the elements Pij , the
ﬁnal similarity matrix D in Eq. (9). However, some care
is needed when the graph presents what we call leaves.
This is explained as follows.

We present in Fig. 1 a small graph to display the infor-
mation contained in the matrix D and how to perform
the hierarchical analysis. This example shows a graph
containing a subgraph with tree-like topology. A tree is
a connected acyclic graph. In this example, the tree is the
subgraph with vertex numbers 5, 6 and 7, which we call
leaves. Their eﬀective resistances are r56 = r57 = r35 = 1
and therefore we have r36 = r37 = 2. For tree-like sub-
graphs the eﬀective resistances correspond to the num-
ber of edges ℓij connecting vertices i and j. Therefore,
rij = ℓij for acyclic branches. Also r48 = 1 because
there is only one way of reaching vertex 8 from vertex
4. On the other hand, whenever we have diﬀerent paths
joining adjacent vertices (i, j), we obtain rij < 1 as con-
sequence of calculating the eﬀective resistance of resis-
tors connected in parallel and in series. For example,
r89 = r8(10) = r9(10) = 0.6667. To unveil the hierarchi-
cal structure of graphs with leaves, we need to proceed as

4

FIG. 1: A simple graph with a tree-like subgraph: vertices
5, 6 and 7. Our graph ﬁgures are drawn using VISONE
(www.visone.de).

follows because well-deﬁned transient classes of states are
only identiﬁed for graphs with no local tree-like topology.
Suppose we start with a graph with m vertices (m = 10).
If the graph has leaves, we collect leaf after leaf to remove
acyclic branches and we end up with a reduced number
of vertices n (n < m). After collecting all leaves, we
work with the Laplacian matrix of order n obtained from
the reduced adjacency matrix. During this process we
keep trace of the original labels. The hierarchical struc-
ture of this example is shown in Fig. 2 as a dendrogram
where we have joined the previously removed vertices (6,
7 and 5) to vertex 3 because they naturally belong to the
same community as vertex 3 does. All presented dendro-
grams have their similarity (y-axis) D scaled to be in the
range (0, 100). This allows a comparative display of their
branches.

FIG. 3: The karate club network studied by Zachary. In-
dividual numbers represent the members of the club and
edges their relationships as observed outside the normal
activities of the club. Squares and circles indicate the
observed ﬁnal splitting of the karate club into two com-
munities led by the administrator (34) and the instructor
(1). A clear further splitting is identiﬁed with shaded
circles.

analyze two well known networks in the literature.

The ﬁrst example (Fig. 3) corresponds to the network
of members of the karate club studied by Zachary [19].
This graph contains a single leaf: member 12. Our anal-
ysis led to the hierarchical structure shown in Fig. 4
by means of a hierarchical clustering tree, deﬁning com-
munities at diﬀerent levels. The two main communities
reproduce exactly the observed splitting of the Zachary
club and studied by diﬀerent community ﬁnding tech-
niques [12, 13, 14, 15, 17, 18, 29, 30].
Interestingly, a
smaller community presented by the hierarchical tree can
be clearly identiﬁed in Fig. 3.
It consists of members
displayed with shaded circles. This small group is only
inﬂuenced by its members and has a direct interaction
with the instructor.

FIG. 2: The community structure of graph in Fig. 1
is depicted as a hierarchical tree or dendrogram with
the complete linkage method for the similarity ma-
trix D. Our dendrogram ﬁgures are drawn with the
data plotting package and programming language R
(http://www.R-project.org).

C. Zachary karate club network

To illustrate further the meaning of transient classes
on G(V, E) from global information carried out by D we

FIG. 4: The hierarchical structure of network in Fig.
3 is shown as a dendrogram with the complete linkage
method. It correctly identiﬁes the two main communities
of the karate club.

5

FIG. 5: The deterministic hierarchical scale-free model
with n = 5 vertices proposed by Ravasz et al. [6]. It is
built by generating replicas of the small 5-vertex module
(a) shown at left side.

D. Ravasz and Barab´asi square hierarchical
network

The second example is shown in Fig. 5. It was designed
by Ravasz and Barab´asi [20] as a prototype of hierarchi-
cal organization we may encounter in real network with
scale-free topology and high modularity. The main ﬁg-
ure is built with the module in (a). A similar ﬁgure but
with more connections between vertices can be built with
the module in (b). The study of Dij reveals community
structures at diﬀerent hierarchical levels in Fig. 6, re-
spectively for the graphs generated with the modules (a)
and (b).

The hierarchical trees present similar structures, but
the hierarchical levels in both ﬁgures clearly display dif-
ferent network formation patterns. Moreover, the hier-
archical formation pattern of G(V, E) with branches at
diﬀerent heights may be seen as a measure of how cohe-
sive those subgroups are. The normalized scale for Dij
then can be used to also set degrees of cohesiveness re-
lated to the community formation.

5. WEIGHTS ON THE EDGES

Our method also applies to graphs such that each edge
has a positive real number, the weight of the edge. The
structure of the graph is now represented by the cor-
responding weighted adjacency matrix W.
It assigns
weight wij > 0 if and only if i and j are connected
vertices and 0, otherwise. The concept of the Lapla-
cian matrix extends directly to weighted edges, L(G) =
n
E(G)
j=1 wij is the diagonal
P
weighted matrix whose values are the total weight of the

W(G), where Eii =

−

FIG. 6: Hierarchical structure for the formation pattern
of the network in Fig. 5. Dendrogram (a) refers to the
network built with module (a) in Fig. 5 whereas den-
drogram (b) refers to the graph built with module (b) in
Fig.5.

edges adjacents to vertex i. Again, L(G) is a real sym-
metric matrix where the row sums and the column sums
are all zero. Thus, we have the same spectral properties
as recalled to the particular case wij = 1 for all adjacent
vertices i and j. Therefore, the method presented to un-
weighted graphs extends naturally to weighted ones with
no change in the algorithm.

A. Performance on artiﬁcial community weighted
graphs

We have also veriﬁed the performance of this method
on weighted graphs with ﬁxed community structure [31].
Our test is performed on the same artiﬁcial graphs ran-
domly generated as described in Section 4.A. The com-
puter generated graphs have 128 vertices and are divided
into four groups of 32 vertices. Here, edges among ver-
tices are randomly chosen such that the average degree
is ﬁxed at 16. The test is performed for the most diﬃ-
cult situation where zout = zin = 8. That is, each vertex
has as many adjacent connections to inside as to out-
side its community. For each graph, we attach a weight
w > 1 to the edges inside each community and keep the
ﬁxed weight 1 for those edges which lie between commu-
nities. We evaluate again the fraction of vertices classi-
ﬁed correctly as a function of w. As w increases from
the starting value 1, the weights enhance the community
structure. This is clearly highlighted by our method.
Our performance amounts to the following fractions of
correctly classiﬁed vertices, 0.89, 0.94, 0.97 and 0.98, re-
spectively for w = 1.4, 1.6, 1.8 and 2. The averages were
calculated over 100 randomly generated graphs, with er-
ror bars smaller than 0.01.

FIG. 7: Network community of professional discussions
among teachers at “Our Hamilton High”.

6. CONCLUSIONS

6

7. Its structure exhibits the formation of various commu-
nities. For comparison with the results in [32], we also
pick out the four main groups. The study of the their
members reveals an association mainly according to race
[32]. However, there
and gender, as also found in Ref.
are some diﬀerences in the members identiﬁcation in each
group. This may be due to the fact we are not analyz-
ing exactly the same weighted network: our network is
made undirect throught out an average process while the
original one was handled in its original directed form.

In conclusion, random walks on graphs in connection
with electrical networks highlight a topological property
of G(V, E): transient classes of vertices which we inter-
pret as communities in the original graph. Here we em-
phasize that those special classes of vertices are a direct
consequence of eﬀective transition probabilities, which
display a global perspective about the map of interac-
tions that characterize the graph. We demonstrate its
high performance in identifying community structures in
some examples which became benchmark for initial al-
gorithm validation. Moreover, it is parameter tunning
independent. Our criterion to deﬁne communities de-
pends only on G(V, E) and not on any explicit deﬁnition
of what a community structure must be.

It is likely that our proposed algorithm may produce
new insights for large graphs. Application examples
may include protein-protein interactions and the com-
partment identiﬁcation in food-web structures. The vi-
sual information about how members form communities
along the hierarchical tree may permit understand and
characterize cohesive communities.

Acknowledgments

The author acknowledges valuable discussions with
O. Kinouchi, A.S. Martinez and the support from the
Brazilian agencies CNPq (303446/2002-1) and FAPESP
(2005/04067-6).

B.

identifying cohesive subgroups

As an example, we apply our method to the problem
of analyzing weighted interactions related to verify how
pairs of teachers are engaged in professional discussions
[32]. This is a social network with n = 24 members.
Their edges are characterized by the professional discus-
sions in a high school, called “Our Hamilton High”, dur-
ing the 1992-1993 school year. Teachers were asked to
list and weight the frequency of their discussions in that
school to at most ﬁve teachers. This way of attributing
weights leads to a directed network. The weights should
follow a scale running from 1, for discussions occuring
less than once a month, to the largest weight value 4, for
almost daily discussions [32]. Every vertex number con-
tains characteristics of teachers as gender, race, subject
ﬁeld, room assignment, among others. To perform our
analysis we have deﬁned the weights to each edge as the
average of the values placed on the edges in the origi-
nal directed network. Thus, this new weighted network
is characterized by edges with real values in the range
(0.5, 4) as representing the interactions among the mem-
bers of that school. The community structure revealed
by our analysis is represented by the dendrogram in Fig.

[1] A.-L. Barab´asi, Nature Phys. 1, 68 (2005).
[2] R. Albert and A.-L. Barab´asi, Rev. Mod. Phys. 74, 47

[3] S.N. Dorogovtsev and J.F.F. Mendes, Adv. Phys. 51,

(2003).

(2004).

[4] M.E.J. Newman, SIAM Review 45, 167 (2003).
[5] P. Holme, M. Huss and H. Jeong, Bioinformatics 19, 532

(2002).

1079 (2002).

(2003).

[10] A.R. Atilgan, P. Akan and C. Baysal, Biophys. J. 86, 85

[11] N.A. Alves and A.S. Martinez, Physica A 375 336 (2007).
[12] M.E.J. Newman, Eur. Phys. J. B. 38, 321 (2004).
[13] L. Danon, A. Diaz-Guilera, J. Duch and A. Arenas, J.

Stat. Mech. P09008 (2005).

[14] M.E.J. Newman and M. Girvan, Phys. Rev. E 69, 026113

[6] E. Ravasz, A.L. Somera, D.A. Mongru, Z.N. Oltvai and

(2004).

A.-L. Barab´asi, Science 297, 1551 (2002).

[7] R. Guimer`a and L.A.N. Amaral, Nature 433 895 (2005).
[8] M. Vendruscolo, N.V. Dokholyan, E. Paci and M.

[15] F. Wu, B.A. Huberman, Eur. Phys. J. B 38, 331 (2004).
[16] M.E.J. Newman, Phys. Rev. E 74 036104 (2006).
[17] L. Donetti and M. A. Mu˜noz, J. Stat. Mech. P10012

Karplus, Phys. Rev. E 65, 061910 (2002).

(2004).

[9] L.H. Greene and V.A. Higman, J. Mol. Biol. 334, 781

[18] F. Radicchi, C. Castellano, F. Cecconi, V. Loreto and

7

D. Parisi, Proc. Natl. Acad. Sci. USA 101 2658 (2004);
C. Castellano, F. Cecconi, V. Loreto, D. Parisi, and F.
Radicchi, Eur. Phys. J. B 38, 311 (2004);

[19] W.W. Zachary, J. Anthropological Research 33, 452

[25] B. Bollob´as, Modern Graph Theory, Springer-Verlag,

New York 1998.

[26] P.G. Doyle and J.L. Snell, Random walks and electric
networks, Mathematical Association of America, 1999.
(http://math.dartmouth.edu∼doyle/docs/walks/walks.ps)

[20] E. Ravasz and A.-L. Barab´asi, Phys. Rev. E 67, 026112

[27] W. Xiao and I. Gutman, Theor. Chem. Acc. 110, 284

(1977).

(2003).

erences therein.

[21] R. Grone, Linear Algebra Appl. 150, 167 (1991) and ref-

[22] S.L. Campbell and C.D. Meyer, Generalized Inverses of
Linear Transformations. Dover Publications, New York
(1991).

[23] A. Baltz and L. Kliemann, Lecture Notes in Computer

Science 3418, 373 (2005).

[24] K.M. Hall, Manag. Sci. 17, 219 (1970).

(2003).

[28] I. Gutman and W. Xiao, Bulletin de l’Academie Serbe
des Sciences et des Arts (Cl. Math. Natur.) 129, 15
(2004).

[29] M.E.J. Newman, Phys. Rev. E 69, 066133 (2004).
[30] H. Zhou, Phys. Rev. E 67, 061901 (2003).
[31] M.E.J. Newman, Phys. Rev. E 70, 056131 (2004).
[32] K.A. Frank, Social Networks 18, 93 (1996).

