6
0
0
2
 
l
u
J
 
1
1
 
 
]
h
p
-
c
o
s
.
s
c
i
s
y
h
p
[
 
 
1
v
0
0
1
7
0
6
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Resolution limit in community detection

Santo Fortunato1, 2, 3 and Marc Barth´elemy1, 4
1School of Informatics and Biocomplexity Center, Indiana University,
Eigenmann Hall, 1900 East Tenth Street, Bloomington IN 47406
2Fakult¨at f¨ur Physik, Universit¨at Bielefeld, D-33501 Bielefeld, Germany
3Complex Networks Lagrange Laboratory (CNLL), ISI Foundation, Torino, Italy
4CEA-Centre d’Etudes de Bruy`eres-le-Chˆatel, D´epartement de Physique
Th´eorique et Appliqu´ee BP12, 91680 Bruy`eres-Le-Chˆatel, France
(Dated: February 21, 2014)

Detecting community structure is fundamental to clarify the link between structure and function
in complex networks and is used for practical applications in many disciplines. A successful method
relies on the optimization of a quantity called modularity [Newman and Girvan, Phys. Rev. E 69,
026113 (2004)], which is a quality index of a partition of a network into communities. We ﬁnd that
modularity optimization may fail to identify modules smaller than a scale which depends on the
total number L of links of the network and on the degree of interconnectedness of the modules,
even in cases where modules are unambiguously deﬁned. The probability that a module conceals
well-deﬁned substructures is the highest if the number of links internal to the module is of the order
of √2L or smaller. We discuss the practical consequences of this result by analyzing partitions
obtained through modularity optimization in artiﬁcial and real networks.

PACS numbers: 89.75.-k, 89.75.Hc, 05.40 -a, 89.75.Fb, 87.23.Ge
Keywords: Networks, community structure, modularity

I.

INTRODUCTION

Community detection in complex networks has at-
tracted a lot of attention in the last years (for a re-
view see [1, 2]). The main reason is that complex net-
works [3, 4, 5, 6, 7] are made of a large number of nodes
and that so far most of the quantitative investigations
were focusing on statistical properties disregarding the
roles played by speciﬁc subgraphs. Detecting commu-
nities (or modules) can then be a way to identify rele-
vant substructures that may also correspond to impor-
tant functions. In the case of the World Wide Web, for
instance, communities are sets of Web pages dealing with
the same topic [8]. Relevant community structures were
also found in social networks [9, 10, 11], biochemical net-
works [12, 13, 14], the Internet [15], food webs [16], and
in networks of sexual contacts [17].

Loosely speaking a community is a subgraph of a net-
work whose nodes are more tightly connected with each
other than with nodes outside the subgraph. A decisive
advance in community detection was made by Newman
and Girvan [18], who introduced a quantitative measure
for the quality of a partition of a network into commu-
nities, the so-called modularity. This measure essentially
compares the number of links inside a given module with
the expected value for a randomized graph of the same
size and degree sequence. If one takes modularity as the
relevant quality function, the problem of community de-
tection becomes equivalent to modularity optimization.
The latter is not trivial, as the number of possible par-
titions of a network in clusters increases exponentially
with the size of the network, making exhaustive opti-
mization computationally unreachable even for relatively
small graphs. Therefore, a number of algorithms have

been devised in order to ﬁnd a good optimization with
the least computational cost. The fastest available pro-
cedures uses greedy techniques [19, 20] and extremal op-
timization [21], and are at present time the only algo-
rithms capable to detect communities on large networks.
More accurate results are obtained through simulated an-
nealing [22, 23], although this method is computationally
very expensive.

Modularity optimization seems thus to be a very eﬀec-
tive method to detect communities, both in real and in
artiﬁcially generated networks. The modularity itself has
however not yet been thoroughly investigated and only
a few general properties are known. For example, it is
known that the modularity value of a partition does not
have a meaning by itself, but only if compared with the
corresponding modularity expected for a random graph
of the same size [24], as the latter may attain very high
values, due to ﬂuctuations [22].

In this paper we focus on communities deﬁned by mod-
ularity. We will show that modularity contains an intrin-
sic scale which depends on the number of links of the
network, and that modules smaller than that scale may
not be resolved, even if they were complete graphs con-
nected by single bridges. The resolution limit of modular-
ity actually depends on the degree of interconnectedness
between pairs of communities and can reach values of the
order of the size of the whole network. It is thus a priori
impossible to tell whether a module (large or small), ob-
tained through modularity optimization, is indeed a sin-
gle module or a cluster of smaller modules. This result
thus introduces some caveats in the use of modularity to
detect community structure.

In Section II we recall the notion of modularity and
discuss some of its properties. Section III deals with

the problem of ﬁnding the most modular network with a
given number of nodes and links. In Section IV we show
In Sec-
how the resolution limit of modularity arises.
tion V we illustrate the problem with some artiﬁcially
generated networks, and extend the discussion to real
networks. Our conclusions are presented in Section VI.

II. MODULARITY

The modularity of a partition of a network in modules

can be written as [18]

Q =

m

Xs=1 h

ls
L − (cid:18)

ds
2L (cid:19)

2

,
i

(1)

where the sum is over the m modules of the partition,
ls is the number of links inside module s, L is the total
number of links in the network, and ds is the total degree
of the nodes in module s. The ﬁrst term of the summands
in Eq. (1) is the fraction of links inside module s; the
second term instead represents the expected fraction of
links in that module if links were located at random in
the network (under the only constraint that the degree
sequence coincides with that in the original graph). If for
a subgraph
of a network the ﬁrst term is much larger
than the second, it means that there are many more links
than one would expect by random chance, so
inside
is indeed a module. The comparison with the null
S
model represented by the randomized network leads to
the quantitative deﬁnition of community embedded in
the ansatz of Eq. (1). We conclude that, in a modularity-
with ls internal links and
based framework, a subgraph
total degree ds is a module if

S

S

S

2

ls
L − (cid:18)

ds
2L (cid:19)

> 0.

Let us express the number of links lout
joining nodes of
the module s to the rest of the network in terms of ls,
i.e. lout
s = (a + 2)ls
and the condition (2) becomes

0. So, ds = 2ls + lout

s = als with a

≥

s

from which, rearranging terms, one obtains

ls
L − (cid:20)

(a + 2)ls
2L

(cid:21)

2

> 0,

ls <

4L
(a + 2)2 .

(2)

(3)

(4)

S

If a = 0, the subgraph
is a disconnected part of the
network and is a module if ls < L which is always true.
If a is strictly positive, Eq. (4) sets an upper limit to
the number of internal links that
must have in order
to be a module. This is a little odd, because it means
that the deﬁnition of community implied by modular-
ity depends on the size of the whole network, instead of
involving a “local” comparison between the number of

S

2

(5)

s

s > dout

internal and external links of the module. For a < 2 one
has 2ls > lout
, which means that the total degree inter-
nal to the subgraph is larger than its external degree,
i.e. din
. The attributes “internal” and “external”
here mean that the degree is calculated considering only
the internal or the external links, respectively.
In this
would be a community according
case, the subgraph
to the “weak” deﬁnition given by Radicchi et al. [25].

S

s

From Eq. (4), we then get that such a subgraph would
be a community both within the modularity framework
and according to the weak deﬁnition of Radicchi et al. if

ls <

L
4

.

In Section IV we shall consider modules of this kind.

According to Eq. (2), a partition of a network into
actual modules would have a positive modularity, as all
summands in Eq. (1) are positive. On the other hand,
for particular partitions, one could bump into values of Q
which are negative. The network itself, meant as a par-
tition with a single module, has modularity zero: in this
case, in fact, l1 = L, d1 = 2L, and the only two terms
of the unique module in Q cancel each other. Usually, a
value of Q larger than 0.3
0.4 is a clear indication that
the subgraphs of the corresponding partition are mod-
ules. However, the maximal modularity diﬀers from a
network to another and depends on the number of links
of the network. In the next section we shall derive the
expression of the maximal possible value QM (L) that Q
can attain on a network with L links. We will prove that
the upper limit for the value of modularity for any net-
work is 1 and we will see why the modularity is not scale
independent.

−

III. THE MOST MODULAR NETWORK

In Ref.

In this section we discuss of the most modular net-
work which will introduce naturally the problem of scales
in modularity optimization.
[2], the authors
consider the interesting example of a network made of
m identical complete graphs (or ‘cliques’), disjoint from
each other. In this case, the modularity is maximal for
the partition of the network in the cliques and is given
by the sum of m equal terms. In each clique there are
l = L/m links, and the total degree is d = 2l, as there
are no links connecting nodes of the clique to the other
cliques. We thus obtain

Q = m

2

l
L − (cid:18)

2l
2L (cid:19)

h

i

= m

1
m −

1
m2 (cid:19)

(cid:18)

= 1

, (6)

1
m

−

which converges to 1 when the number of cliques goes to
inﬁnity. We remark that for this result to hold it is not
necessary that the m connected components be cliques.
The number of nodes of the network and within the mod-
ules does not aﬀect modularity. If we have m modules,

3

maximum is then given by

2

h

1

−

− (cid:18)

L/m

L/m
L

QM (m, L) = m

1
m
(9)
We have now to ﬁnd the maximum of QM (m, L) when
the number of modules m is variable. For this purpose
we treat m as a real variable and take the derivative of
QM (m, L) with respect to m

m
L −

L (cid:19)

= 1

−

i

.

dQM (m, L)
dm

=

1
L

−

+

1
m2

(10)

which vanishes when m = m⋆ = √L. This point in-
deed corresponds to the absolute maximum QM (L) of
the function QM (m, L). This result coincides with the
one found by the authors of [22] for a one-dimensional
lattice, but our proof is completely general and does not
require preliminary assumptions on the type of network
and modules.

Since m is not a real number, the actual maximum is
reached when m equals one of the two integers closest to
m⋆, but that is not important for our purpose, so from
now on we shall stick to the real-valued expressions, their
meaning being clear. The maximal modularity is then

QM (L) = QM (m⋆, L) = 1

(11)

2
√L

,

−

−

and approaches 1 if the total number of links L goes to in-
ﬁnity. The corresponding number of links in each module
is l = √L
1. The fact that all modules have the same
number of links does not imply that they have as well the
same number of nodes. Again, modularity does not de-
pend on the distribution of the nodes among the modules
as long as the topological constraints are satisﬁed. For
instance, if we assume that the modules are connected
graphs, there must be at most n = l + 1 = √L nodes in
each module. The crucial point here is that modularity
seems to have some intrinsic scale of order √L, which
constrains the number and the size of the modules. For
a given total number of nodes and links we could build
many more than √L modules, but the corresponding net-
work would be less “modular”, namely with a value of the
modularity lower than the maximum of Eq. (11). This
fact is the basic reason why small modules may not be
resolved through modularity optimization, as it will be
clear in the next section.

IV. THE RESOLUTION LIMIT

M

1 and

We analyze a network with L links and with at least
three modules (Fig. 2). We focus on a pair of modules,
2, and distinguish three types of links: those
M
internal to each of the two communities (l1 and l2, re-
2 (lint) and between the
spectively), between
M
0 (lout
two communities and the rest of the network
1
and lout
In order to simplify the calculations we ex-
press the numbers of external links in terms of l1 and

1 and

M

M

).

2

FIG. 1: Design of a connected network with maximal modu-
larity. The modules (circles) must be connected to each other
by the minimal number of links.

we just need to have L/m links inside the modules, as
long as this is compatible with topological constraints,
like connectedness. In this way, a network composed by
m identical trees (in graph theory, a forest) has the same
maximal modularity reported in Eq. (6), although it has
a far smaller number of links as compared with the case
of the densely connected cliques (for a given number of
nodes).

A further interesting question is how to design a con-
nected network with N nodes and L links which maxi-
mizes modularity. To address this issue, we proceed in
two steps: ﬁrst, we consider the maximal value QM (m, L)
for a partition into a ﬁxed number m of modules; af-
ter that, we look for the number m⋆ that maximizes
QM (m, L).

Let us ﬁrst consider a partition into m modules. Ide-
ally, to maximize the contribution to modularity of each
module, we should reduce as much as possible the number
of links connecting modules. If we want to keep the net-
work connected, the smallest number of inter-community
links must be m
1. For the sake of clarity, and to sim-
plify the mathematical expressions (without aﬀecting the
ﬁnal result), we assume instead that there are m links
between the modules, so that we can arrange the latter
in the simple ring-like conﬁguration illustrated in Fig. 1.
The modularity of such a network is

−

Q =

m

Xs=1 h

ls
L − (cid:18)

2ls + 2

2L (cid:19)

2

,
i

where

m

Xs=1

ls = L

m.

−

(7)

(8)

It is easy to see that the expression of Eq. (7) reaches its
maximum when all modules contain the same number
s = 1, 2, ..., m. The
of links, i.e.

ls = l = L/m

1,

−

∀

M

1 

M
2

lint

l

1

l

2

l out
1

l out
2

M

0

FIG. 2: Scheme of a network partition into three or more
modules. The two circles on the left picture two modules,
the oval on the right reprensents the rest of the network
0,
whose structure is arbitrary.

M

M

M

M
≤

0. Since

1 = b1l1 and lout

l2, so lint = a1l1 = a2l2, lout
2 = b2l2,
2 are modules
with a1, a2, b1, b2
1 and
≥
by construction, we also have a1 + b1
2
2, a2 + b2
and l1, l2 < L/4 (see Section II). Now we consider two
partitions A and B of the network. In partition A,
1
M
and
2 are taken as separate modules, and in partition
B they are considered as a single community. The split of
the rest of the network is arbitrary but identical in both
partitions. We want to compare the modularity values
QA and QB of the two partitions. Since the modular-
ity is a sum over the modules, the contribution of
0 is
the same in both partitions and is denoted by Q0. From
Eq. (1) we obtain

M

≤

QA = Q0 +

l1
L − (cid:20)

(a1 + b1 + 2)l1
2L
2

2

(cid:21)

+

+

l2
L

(a2 + b2 + 2)l2
2L

(cid:21)

;

− (cid:20)

(12)

QB = Q0 +

l1 + l2 + a1l1
L

+

(2a1 + b1 + 2)l1 + (b2 + 2)l2
2L

(cid:21)

− (cid:20)

2

.

(13)

The diﬀerence ∆Q = QB

QA is

−

−

M

1 and

∆Q = [2La1l1

(a1 + b1 + 2)(a2 + b2 + 2)l1l2] /(2L2).
(14)
As
2 are both modules by construction, we
would expect that the modularity should be larger for
the partition where the two modules are separated, i.e.
QA > QB, which in turn implies ∆Q < 0. From Eq. (14)
we see that ∆Q is negative if

M

l2 >

2La1
(a1 + b1 + 2)(a2 + b2 + 2)

.

(15)

We see that if a1 = a2 = 0, i.e.
between

if there are no links
2, the above condition is trivially

1 and

M

M

4

satisﬁed. Instead, if the two modules are connected to
each other, something interesting happens. Each of the
coeﬃcients a1, a2, b1, b2 cannot exceed 2 and l1 and l2 are
both smaller than L/4 by construction but can be taken
as small as we wish with respect to L. In this way, it is
possible to choose l1 and l2 such that the inequality of
Eq. (15) is not satisﬁed. In such a situation we can have
∆Q > 0 and the modularity of the conﬁguration where
the two modules are considered as a single community
is larger than the partition where the two modules are
clearly identiﬁed. This implies that by looking for the
maximal modularity, there is the risk to miss important
structures at smaller scales. To give an idea of the size
of l1 and l2 at which modularity optimization could fail,
we consider for simplicity the case in which
2
M
l1 = l2 = l. The
have the same number of links, i.e.
condition on l for the modularity to miss the two modules
also depends on the fuzziness of the modules, as expressed
by the values of the parameters a1, a2, b1, b2. In order
to ﬁnd the range of potentially “dangerous” values of l,
we consider the two extreme cases in which

1 and

M

•

•

the two modules have a perfect balance between
internal and external degree (a1 + b1 = 2, a2 + b2 =
2), so they are on the edge between being or not
being communities, in the weak sense deﬁned in
[25];

the two modules have the smallest possible external
degree, which means that there is a single link con-
necting them to the rest of the network and only
one link connecting each other (a1 = a2 = b1 =
b2 = 1/l).

In the ﬁrst case, the maximum value that the coeﬃcient
of L can take in Eq. (15) is 1/4, when a1 = a2 = 2 and
b1
0, so we obtain that Eq. (15) may not be
satisﬁed for

0, b2

≈

≈

l < lmax

R =

L
4

,

(16)

which is a scale of the order of the size of the whole net-
work. In this way, even a pair of large communities may
not be resolved if they share enough links with the nodes
outside them (in this case we speak of “fuzzy” communi-
ties). A more striking result emerges when we consider
the other limit, i.e. when a1 = a2 = b1 = b2 = 1/l. In
this case it is easy to check that Eq. (15) is not satis-
ﬁed for values of the number of links inside the modules
satisfying

l < lmin

R =

L
2

.

r

(17)

If we now assume that we have two (interconnected) mod-
ules with the same number of internal links l < lmin
R <
lmax
R , the discussion above implies that the modules can-
not be resolved through modularity optimization, not
even if they were complete graphs connected by a sin-
gle link. As we have seen from Eq. (16), it is possible

A

mK

mK

mK

mK

mK

mK

mK

mK

B

mK

mK

mK

mK

pK

pK

FIG. 3: (A) A network made out of identical cliques (which
are here complete graphs with m nodes) connected by single
links. If the number of cliques is larger than about √L, modu-
larity optimization would lead to a partition where the cliques
are combined into groups of two or more (represented by a
dotted line). (B) The same phenomenon occurs also for the
example of a network with four cliques (complete graphs with
m and p nodes, respectively), where modularity optimization
merges the two modules on the right into one (shown with a
dotted line).

to miss modules of larger size, if they share more links
with the rest of the network (and with each other). For
= l2 the conclusion is similar but the scales lmin,max
l1
are modiﬁed by simple factors.

R

V. CONSEQUENCES

−

1)/2 links.

We begin with a very schematic example, for illustra-
tive purposes. In Fig. 3(A) we show a network consist-
ing of a ring of cliques, connected through single links.
Each clique is a complete graph Km with m nodes and
has m(m
If we assume that there are n
cliques, with n even, the network has a total of N = nm
1)/2 + n links. The network has
nodes and L = nm(m
a clear modular structure where the communities corre-
spond to single cliques and we expect that any detection
algorithm should be able to detect these communities.
The modularity Qsingle of this natural partition can be
easily calculated and equals

−

Qsingle = 1

−

m(m

1) + 2 −

(18)

1
n

.

2

−

On the other hand, the modularity Qpairs of the parti-
tion in which pairs of consecutive cliques are considered
as single communities (as shown by the dotted lines in

5

(19)

(20)

Fig. 3(A)) is

Qpairs = 1

−

m(m

1) + 2 −

2
n

.

1

−

The condition Qsingle > Qpairs is satisﬁed if and only if

m(m

1) + 2 > n.

−

In this example, m and n are independent variables and
we can choose them such that the inequality of formula
(20) is not satistied. For instance, for m = 5 and n = 30,
Qsingle = 0.876 and Qpairs = 0.888 > Qsingle. An eﬃ-
cient algorithm looking for the maximum of the modular-
ity would ﬁnd the conﬁguration with pairs of cliques and
Qsingle
not the actual modules. The diﬀerence Qpairs
would be even larger if n increases, for m ﬁxed.

−

The example we considered was particularly simple
and hardly represents situations found in real networks.
However, the initial conﬁguration that we considered in
the previous section (Fig. 2) is absolutely general, and the
results make us free to design arbitrarily many networks
with obvious community structures in which modularity
optimization does not recognize (some of) the real mod-
ules. Another example is shown in Fig. 3(B). The circles
represent again cliques, i.e. complete graphs: the two on
the left have m nodes each, the other two p < m nodes.
If we take m = 20 and p = 5, the maximal modularity
of the network corresponds to the partition in which the
two smaller cliques are merged [as shown by the dotted
line in Fig. 3(B)]. This trend of the optimal modularity to
group small modules has already been remarked in [26],
but as a result of empirical studies on special networks,
without any complete explanation.

In general, we cannot make any deﬁnite statement
about modules found through modularity optimization
without a method which veriﬁes whether the modules
are indeed single communities or a combination of com-
munities. It is then necessary to inspect the structure of
each of the modules found. As an example, we take the
network of Fig. 3(A), with n = 30 identical cliques, where
each clique is a Km with m = 5. As already said above,
modularity optimization would ﬁnd modules which are
pairs of connected cliques. By inspecting each of the
modules of the ‘ﬁrst generation’ (by optimizing modu-
larity, for example), we would ultimately ﬁnd that each
module is actually a set of two cliques.

We thus have seen that modules identiﬁed through
modularity optimization may actually be combinations
of smaller modules. During the process of modularity
optimization, it is favorable to merge connected modules
if they are suﬃciently small.

We have seen in the previous Section that any two
interconnected modules, fuzzy or not, are merged if the
number of links inside each of them does not exceed lmin
R .
This means that the largest structure one can form by
merging a pair of modules of any type (including cliques)
has at least 2lmin
internal links. By reversing the argu-
ment, we conclude that if modularity optimization ﬁnds

R

6
a module
with lS internal links, it may be that the lat-
ter is a combination of two or more smaller communities
if

S

lS < 2lmin

R = √2L.

(21)

This example is an extreme case, in which the internal
partition of
can be arbitrary, as long as the pieces are
modules in the sense discussed in Section II. Under the
condition (21), the module could in principle be a cluster
of loosely interconnected complete graphs.

S

R

On the other hand, the upper limit of lS can be much
larger than √2L, if the substructures are on average more
interconnected with each other, as we have seen in Sec-
tion IV. In fact, fuzzy modules can be combined with
each other even if they contain many more than lmin
links. The more interconnected the modules, the larger
will be the resulting supermodule. In the extreme case
in which all submodules are very fuzzy, the size lS of
the supermodule could be in principle as large as that of
the whole network, i.e. lS < L. This result comes from
the extreme case where the network is split in two very
fuzzy communities, with L/4 internal links each and L/2
between them. By virtue of Eq. (16), it is favorable (or
just as good) to merge the two modules and the resulting
structure is the whole network. This limit lS < L is of
course always satisﬁed but suggests here that it is im-
portant to carefully analyze all modules found through
modularity optimization, regardless of their size.

The probability that a very large module conceals sub-
structures is however small, because that could only hap-
pen if all hidden submodules are very fuzzy communities,
√2L
which is unlikely. Instead, modules with a size lS
or smaller can result from an arbitrary merge of smaller
structures, which may go from loosely interconnected
cliques to very fuzzy communities. Modularity optimiza-
tion is most likely to fail in these cases.

∼

In order to illustrate this theoretical discussion, we an-

alyze ﬁve examples of real networks:

1. the transcriptional regulation network of Saccha-

romyces cerevisiae (yeast);

2. the transcriptional

regulation network of Es-

cherichia coli;

3. a network of electronic circuits;

4. a social network;

5. the neural network of Caenorhabditis Elegans.

We downloaded the lists of edges of the ﬁrst four net-
works from Uri Alon’s Website [29], whereas the last one
was downloaded from the WebSite of the Collective Dy-
namics Group at Columbia University [30].

In the transcriptional regulation networks, nodes rep-
resent operons, i.e. groups of genes that are transcribed
on to the same mRNA and an edge is set between two
nodes A and B if A activates B. These systems have

6

been previously studied to identify motifs in complex net-
works [28]. There are 688 nodes, 1, 079 links for yeast,
423 nodes and 519 links for E. coli. Electronic circuits
can be viewed as networks in which vertices are electronic
components (like capacitors, diodes, etc.) and connec-
tions are wires. Our network maps one of the benchmark
circuits of the so-called ISCAS’89 set; it has 512 nodes,
819 links. In the social network we considered, nodes are
people of a group and links represent positive sentiments
directed from one person to another, based on question-
naires: it has 67 nodes and 182 links. Finally, the neural
network of C. elegans is made of 306 nodes (neurons),
connected through 2, 359 links (synapsis, gap junctions).
We remark that most of these networks are directed, here
we considered them as undirected.

First, we look for the modularity maximum by using
simulated annealing. We adopt the same recipe intro-
duced in Ref. [13], which makes the optimization proce-
dure very eﬀective. There are two types of moves to pass
from a network partition to the next: individual moves,
where a single node is passed from a community to an-
other, and collective moves, where a pair of communities
is merged into a single one or, vice versa, a community
is split into two parts. Each iteration at the same tem-
perature consists of a succession of N 2 individual and N
collective moves, where N is the total number of nodes
of the network. The initial temperature T and the tem-
perature reduction factor f are arbitrarily tuned to ﬁnd
in most cases we took
the highest possible modularity:
T

1 and f between 0.9 and 0.99.

∼
We found that all networks are characterized by high
modularity peaks, with Qmax ranging from 0.4022 (C.
elegans) to 0.7519 (E. coli). The corresponding opti-
mal partitions consist of 9 (yeast), 27 (E. coli), 11 (elec-
tronic), 10 (social) and 4 (C. elegans) modules (for E.
coli our results diﬀer but are not inconsistent with those
obtained in [13] for a slighly diﬀerent database; these dif-
ferences however do not aﬀect our conclusions). In order
to check if the communities have a substructure, we used
again modularity optimization, by constraining it to each
of the modules found. In all cases, we found that most
modules displayed themselves a clear community struc-
ture, with very high values of Q. The total number of
submodules is 57 (yeast), 76 (E. coli), 70 (electronic),
21 (social) and 15 (C. elegans), and is far larger than
the corresponding number at the modularity peaks. The
analysis of course is necessarily biased by the fact that
we neglect all links between the original communities,
and it may be that the submodules we found are not
real modules for the original network. In order to verify
that, we need to check whether the condition of Eq. (2)
is satisﬁed or not for each submodule and we found that
it is the case. A further inspection of the communities
found through modularity optimization thus reveals that
they are, in fact, clusters of smaller modules. The mod-
ularity values corresponding to the partitions of the net-
works in the submodules are clearly smaller than the peak
modularities that we originally found through simulated

annealing (see Table I). By restricting modularity op-
timization to a module we have no guarantee that we
accurately detect its substructure and that this is a safe
way to proceed. Nevertheless, we have veriﬁed that all
substructures we detected are indeed modules, so our re-
sults show that the search for the modularity optimum
is not equivalent to the detection of communities deﬁned
through Eq. (2).

# modules (Qmax) total # of modules (Q)

network
Yeast
E. Coli
Electr. circuit
Social
C. elegans

9 (0.7396)
27 (0.7519)
11 (0.6701)
10 (0.6079)
4 (0.4022)

57 (0.6770)
76 (0.6615)
70 (0.6401)
21 (0.5316)
15 (0.3613)

TABLE I: Results of the modularity analysis on real net-
works. In the second column, we report the number of mod-
ules detected in the partition obtained for the maximal mod-
ularity. These modules however contain submodules and we
report in the third column the total number of submodules we
found and the corresponding value of the modularity of the
partition, which is lower than the peak modularity initially
found.

The networks we have examined are fairly small but
the problem we pointed out can only get worse if we
increase the network size, especially when small commu-
nities coexist with large ones and the module size distri-
bution is broad, which happens in many cases [20, 27].
As an example, we take the recommendation network of
the online seller Amazon.com. While buying a product,
Amazon recommends items which have been purchased
by people who bought the same product. In this way it
is possible to build a network in which the nodes are the
items (books, music), and there is an edge between two
items A and B if B was frequently purchased by buy-
ers of A. Such a network was examined in Ref. [20] and
is very large, with 409, 687 nodes and 2, 464, 630 edges.
The authors analyzed the community structure by greedy
modularity optimization which is not necessarily accu-
rate but represents the only strategy currently available
for large networks. They identiﬁed 1, 684 communities
whose size distribution is well approximated by a power
law with exponent 2. From the size distribution, we esti-
mated that over 95% of the modules have sizes below the
limit of Eq. (21), which implies that basically all modules
need to be further investigated.

7

deﬁnition of community implied by modularity is actu-
ally not consistent with its optimization, as the latter
may favour network partitions in which groups of mod-
ules are combined into larger communities. This is due to
the fact that, by enforcing modularity optimization, the
possible partitions of the system are explored at a coarse
level, so that modules smaller than some scale may not
be resolved. The resolution limit of modularity does not
rely on particular network structures, but only on the
comparison between the sizes of interconnected commu-
nities and that of the whole network, where the sizes are
measured by the number of links.

The origin of the resolution scale lies in the fact that
modularity is a sum of terms, where each term corre-
sponds to a module. Finding the maximal modularity is
then equivalent to look for the ideal tradeoﬀ between the
number of terms in the sum, i.e. the number of mod-
ules, which is an unknown, and the value of each term.
An increase of the number of modules does not neces-
sarily correspond to an increase in modularity because
the modules would be smaller and so would be each term
of the sum. This is why for some characteristic num-
ber of terms the modularity has a peak (see Section III).
The problem is that this “optimal” partition, imposed
by mathematics, is not necessarily correlated with the
actual community structure of the network, where com-
munities may be very heterogeneous in size, especially if
the network is large.

Our result implies that modularity optimization might
miss some important substructures of a network. From
our discussion we deduce that it is not possible to ex-
clude that modules of virtually any size may be clusters
of modules, although the problem is most likely to oc-
cur for modules with a number of internal links of the
order of √2L or smaller. For this reason, it is crucial to
check the structure of all detected modules, for instance
by constraining modularity optimization on each single
module.

The fact that quality functions such as the modularity
have an intrinsic resolution limit calls for a new theo-
retical framework which focuses on a local deﬁnition of
community, regardless of its size. Quality functions are
still helpful, but their role should be probably limited to
the comparison of partitions with the same number of
modules.

VI. CONCLUSIONS

In this paper we analyzed in detail modularity and its
applicability to community detection. We found that the

Acknowledgments.– We thank A. Barrat, C. Castel-
lano, V. Colizza, A. Flammini, J. Kert´esz and A. Vespig-
nani for enlightening discussions and suggestions. We
also thank U. Alon for providing the network data.

[1] M. E. J. Newman, Eur. Phys. J. B 38, 321-330 (2004).

[2] L. Danon, A. D´iaz-Guilera, J. Duch and A. Arenas, J.

8

Stat. Mech., p. P09008, (2005).

[3] A.-L. Barab´asi and R. Albert, Rev. Mod. Phys. 74, 47-97

(2002).

[4] S. N. Dorogovtsev and J. F. F. Mendes, Evolution of
Networks: from biological nets to the Internet and WWW
(Oxford University Press, Oxford 2003).

[5] M. E. J. Newman, SIAM Review 45, 167-256 (2003).
[6] R. Pastor-Satorras and A. Vespignani, Evolution and
structure of the Internet: A statistical physics approach
(Cambridge University Press, Cambridge, 2004).

[7] S. Boccaletti, V. Latora, Y. Moreno, M. Chavez and D.-

[17] G. P. Garnett, J. P. Hughes, R. M. Anderson,
B. P. Stoner, S. O. Aral, W. L. Whittington,
H. H. Handsﬁeld and K. K. Holmes, Sexually Transmit-
ted Diseases 23, 248-257 (1996); S. O. Aral, J. P. Hughes,
B. P. Stoner, W. L. Whittington, H. H. Handsﬁeld,
R. M. Anderson and K. K. Holmes, American Journal
of Public Health 89, 825-833 (1999).

[18] M. E. J. Newman and M. Girvan, Phys. Rev. E 69,

026113 (2004).

[19] M. E. J. Newman, Physical Review E 69, 066133 (2004).
[20] A. Clauset, M. E. J. Newman and C. Moore, Phys. Rev.

U. Hwang, Phys. Rep. 424, 175-308 (2006).

E 70, 066111 (2004).

[8] G. W. Flake, S. Lawrence, C. Lee Giles and F. M. Coet-

zee, IEEE Computer 35(3), 66-71 (2002).

[9] M. Girvan and M. E. J. Newman, Proc. Natl. Acad. Sci.

99, 7821-7826 (2002).

[21] J. Duch and A. Arenas, Phys. Rev. E 72, 027104 (2005).
[22] R. Guimer`a, M. Sales-Pardo and L. A. N. Amaral, Phys.

Rev. E 70, 025101(R) (2004).
S.

Reichardt

and

[23] J.

Bornholdt,

preprint

[10] D. Lusseau and M. E. J. Newman, Proc. R. Soc. London

cond-mat/0603718 (2006).

rd

Int. Workshop on

cond-mat/0606220 (2006).

[24] J.

Reichardt

and

S.

Bornholdt,

preprint

B 271, S477-S481 (2004).

[11] L. Adamic and N. Glance, Proc. 3
Link Discovery, 36-43 (2005).

[12] P. Holme, M. Huss and H. Jeong, Bioinformatics 19, 532

[13] R. Guimer`a and L. A. N. Amaral, Nature 433, 895-900

(2005).

[14] G. Palla, I. Der´enyi, I. Farkas and T. Vicsek, Nature 435,

physics/0601144 (2006).

(2003).

(2005).

814-818 (2005).

[15] K. Eriksen, I. Simonsen, S. Maslov and K. Sneppen,

Phys. Rev. Lett. 90, 148701 (2003).

[16] S. L. Pimm, Theor. Popul. Biol. 16, 144 (1979);
A. E. Krause, K. A. Frank, D. M. Mason, R. E. Ulanow-
icz and W. W. Taylor, Nature 426, 282 (2003).

[25] F. Radicchi, C. Castellano, F. Cecconi, V. Loreto and
D. Parisi, Proc. Natl. Acad. Sci. 101, 2658-2663 (2004).
[26] S. Muﬀ, F. Rao, A. Caﬂisch, Phys. Rev. E 72, 056107

[27] L. Danon, A. D´iaz-Guilera and A. Arenas, preprint

[28] R. Milo, S. Shen-Orr, S. Itzkovitz, N. Kashtan, D.
Chklovskii and U. Alon, Science 298, 824-827 (2002).

[29] http://www.weizmann.ac.il/mcb/UriAlon/.
[30] http://cdg.columbia.edu/.

