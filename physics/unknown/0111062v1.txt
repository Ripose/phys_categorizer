GPIB ADDRESS CONVERTER 
 
Y. Suzuki, M.Ieiri, Y.Katoh, E.Kusano, M.Minakawa, H.Noumi, M.Takasaki, K.H.Tanaka, and 
Y.Yamanoi 
KEK, Tsukuba, Ibaraki 305-0801, Japan 

TUAP052 

Abstract 

 

GPIB Address Converter (GAC) has constructed. This 
paper  reports  the  function  and  the  test  result.  The  GAC 
has  two  GPIB  connectors  (upper  and  lower  ports).  The 
upper port has a GPIB primary address, and connected to 
a GPIB system controller. The lower port acts for a GPIB 
controller of the lower side GPIB line. The GPIB system 
controller  can  access  to  the  lower  side  GPIB  devices 
through  the  GAC  by  the  use  of  the  extended  two-byte 
address  function.  The  two-byte  address  (primary  + 
secondary)  is  shown  in  the  combination  of  the  GAC 
address  and  the  address  of  the  lower  side  device.  The 
GAC  converts  the  secondary  address  into  the  primary 
address of the lower side GPIB device. By the use of 30 
GACs,  the  GPIB  system  controller  can  access  to  930 
devices assigned primary address only. 

 

1 INTRODUCTION 
In  the  control  and  monitor  of  the  accelerator  or 
experimental  physics,  GPIB  is  one  of  the  useful  field 
buses.  When  the  primary  address  is  used,  one  GPIB 
controller  can  control  30  devices.  According  to  the 
specification:  (IEEE-488.1),  one  GPIB  controller  can 
control 960 devices, when the extended two-byte address 
function  is  used,  However,  there  is  one  inconvenience. 
There are many useful instruments equipped with GPIB: 
oscilloscope, multi-meter, or accelerator control devices, 

 
etc. Though there is scarcely equipped with the extended 
two-byte  address  function.  In  this  situation,  GPIB 
Address  Converter  (GAC)  was  developed.  Figure  1 
shows  the  photograph  of  the  GAC.  Figure  2  shows  an 
example  configuration  of  the  GAC  in  a  GPIB  system. 

(cid:5) (cid:6)(cid:7) (cid:8) (cid:9) (cid:10) (cid:11) (cid:2)(cid:13)

(cid:1)(cid:2)(cid:3)(cid:4) (cid:14)(cid:15) (cid:11) (cid:16)(cid:17) (cid:18) (cid:13)(cid:9) (cid:7) (cid:16)(cid:19)(cid:9) (cid:20)(cid:20)(cid:17) (cid:19)

(cid:1)

(cid:2)

(cid:4)

(cid:5)

(cid:6)

(cid:22)(cid:23) (cid:8) (cid:17) (cid:24) (cid:6)(cid:25) (cid:17) (cid:11)

(cid:1)(cid:2)(cid:3)(cid:4)
(cid:9)
(cid:8)
(cid:7)
(cid:27)(cid:28)(cid:16)(cid:10)(cid:9) (cid:17) (cid:29)(cid:16)(cid:17) (cid:7) (cid:8) (cid:17) (cid:19)(cid:11) (cid:7) (cid:17) (cid:17) (cid:8) (cid:30)

(cid:2) (cid:9) (cid:3) (cid:10)

(cid:10)

(cid:3)

(cid:1)(cid:21) (cid:13)

(cid:10)

(cid:1)

(cid:2)

(cid:3)

(cid:4)

(cid:5)

(cid:6)

(cid:7)

(cid:8)

(cid:1)(cid:2)(cid:3)(cid:4)

(cid:22)(cid:26) (cid:8) (cid:17) (cid:24) (cid:6)(cid:25) (cid:17) (cid:11)

(cid:27)(cid:28)(cid:16)(cid:10)(cid:9) (cid:17) (cid:29)(cid:16)(cid:17) (cid:7) (cid:8) (cid:17) (cid:19)(cid:11) (cid:7) (cid:17) (cid:17) (cid:8) (cid:30)

(cid:2) (cid:9)(cid:2) (cid:9)

(cid:3) (cid:10)

 

Figure 2. Configuration example 

Figure- 3 shows the block diagram of the GAC. 

When  the  GPIB  controller  addresses  the  GAC,  the 
GAC  converts  the  secondary  address  into  the  primary 
address, and then the GAC controls the devices with the 
primary address through the lower GPIB port. The data, 
which  pass  through  the  GAC,  do  not  change.  Then  the 
GPIB  system  controller  does  not  need  to  add  any 
program or to change. By the use of this GAC, one GPIB 
controller  can  control  930  devices  assigned  primary 
address only. 
 

(cid:1)(cid:2)(cid:3)

) + +(cid:17) (cid:19) (cid:1)(cid:2)(cid:3)(cid:4) + (cid:9) (cid:19)(cid:16)

(cid:31) (cid:26)!(cid:23)"(cid:31) (cid:26)!(cid:26)

# $ (cid:14) %%(cid:26)&

’ ((cid:23) (cid:13)(cid:2))

# $ (cid:14) %%(cid:26)&

(cid:31) (cid:26)!"(cid:31) (cid:26)!(cid:26)

(cid:4))(cid:14) # (cid:19),(cid:7) (cid:11) (cid:25) (cid:17) (cid:6)(cid:24) (cid:17) (cid:19)

# -(cid:3)- (cid:14).(cid:31) (cid:26)!(cid:23)"(cid:31) (cid:26)!(cid:26)

(cid:1)(cid:2)(cid:3)(cid:4) (cid:21) (cid:8) ,+ (cid:16)(cid:17) (cid:19)

# $ (cid:14)%%(cid:26)&

(cid:13)(cid:2))
’ ((cid:23)

(cid:1)(cid:2)(cid:3)(cid:4) (cid:25) (cid:9) (cid:7) (cid:16)(cid:19)(cid:9) (cid:20)(cid:20)(cid:17) (cid:19)

 
Figure 1. The GAC is assembled into a NIM module. 

*(cid:9) (cid:10)(cid:17) (cid:19) (cid:1)(cid:2)(cid:3)(cid:4) + (cid:9) (cid:19)(cid:16)
Figure 3. Block diagram of the GAC 

 

 

2 GAC 

side GPIB port. 

2.1 Hardware 

The  main  parts  of  the  GAC  are  two  GPIB  adapters 
TMS-9914  and  an  eight-bit  microprocessor  Z80.  In  the 
block diagram of Figure 3, the upper port acts for a GPIB 
device,  not  controller,  and  occupies  one  GPIB  primary 
address number of 0 to 30 except the address number of 
the system controller. The lower port GPIB adapter acts 
for  a  GPIB  controller  of  TMS-9914’s  Local  Mode,  and 
then  it  does  not  occupy  any  GPIB  address.  Then  31 
numbers  of  0  to  30  can  be  assigned  to  the  lower  side 
devices.  

In  actual  use  condition,  the  maximum  number  of  the 
GPIB  devices  connected  to  the  GAC’s  lower  port 
directly is limited to 14. The reason is based on the fan-
out ability of the bus-driver: 75160/75161  (regulated  by 
IEEE488).  A  GPIB  extender 
is  available  for  the 
expansion of the bus. 
2.2 Address Conversion  

The  secondary  address  number,  received  from  the 
system  controller,  is  converted  into  the  primary  address 
in the following equations. 

LAn: Listener primary Address n code 

code 20H to 3EH are assigned to LAn 0 to 30 
code 3Fh is assigned to UNL: Un-Listen  

TAn: Talker primary Address n code 

code 40H to 5EH are assigned to TAn 0 to 30 
code 5FH is assigned to UNT: Un-Talk 

SCm: Secondary Address m code 

code 60H to 7FH are assigned to SCm 0 to 31 

1) In the listener condition 
LAn=SCm-40H 
2) In the talker condition 
TAn=SCm-20H 

device. 

2.3 Listener Sequences 

Then n=m. 
LAn and TAn are used for the control of the lower side 

The  GAC  receives  the  following  message  bytes  from 

the system controller. 
[Upper GPIB port] 
UNL : inhibits all current listeners,.(Un-Listen) 
TAD : system controller is assigned to the talker  
LAD : GAC is assigned to the listener 
SCm : receive secondary address 
At this point, the GAC accepts all SCm. 

The  GAC  sends  the  following  messages  to  the  lower 

[Lower GPIB port] 
UNL : Un-Listen  
LAn : LAn=SCm-40H 
At  this  point  GAC  checks  the  upper  GPIB  port. 
Received interface messages are transferred to the lower 
side GPIB. Those messages are as follows: 
SDC : Selected Device Clear 
GTL : Go To Local 
GET : Group Execute Trigger 
When  DATA  byte  is  received,  the  lower  GPIB  adaptor 
TMS-9914  is  set  in  the  Talk  Only  mode,  and  the  ATN 
(attention) signal is set in L (0). Then, the data read out 
from  the  upper  GPIB  port  is  repeatedly  written  in  the 
lower  GPIB  port.  EOI  (end  or  identify)  signal  is  also 
checked,  and  it  is  sent  to  the  lower  GPIB  port  with  the 
data. 

2.4  Talker and Serial Poll Sequences 

The  GAC  receives  the  following  message  bytes  from 

the system controller. 
[Upper GPIB port] 
UNL : Un-Listen 
LAD : system controller is assigned to the listener 
TAD : GAC is assigned to the talker 
SCm : receive secondary address 
Next  step  is  that  there  are  two  cases.  The  one  is 
SPOLL  (Serial  Poll).  Another  is  data  request.  But,  it  is 
not  possible  to  know  the  serial  pole  in  advance.  Then 
every time SPOLL is executed, and STB is read out from 
the lower GPIB device. The flow is the following. 

[Lower GPIB port] 
UNL  Un-listen 
SPE : serial poll enable 
TAm : the lower device is assigned to Talker 
STB (SBN or SBA): Status byte 
SPD : serial poll disable 
UNT : Un-talk 
 The  STB  from  the  device  is  set  to  the  serial  poll 

register of the upper GPIB adapter (TMS-9914). 

Then, the operation of the upper GPIB is permitted (by 
the  Z80-cpu),  and  the  operation  is  continued.  When 
SPOLL has not done by the system controller, the STA is 
stored  in  STB  memory  for  the  next  SPOLL  (for  when 
receive  SCm).  Then,  the  memory  is  cleared,  when 
SPOLL has received. 

(STA: represent a status byte sent by a device in which 

a request for service is indicated (bit 7=1)). 

(STB:  represents  a  status  byte  sent  by  a  device  in 

which a request for service is not indicated (bit 7=0)). 

[Upper GPIB port] 

3.2 Transfer Speed 

The 

transfer  speeds  were  measured  under 

the 
following  two  conditions.  One  is  that  the  controller 
connected  directly  to  the  device  (PSCx8),  the  other  is 
connected through the GAC.  
Test-1:  Loop  of  1000  times  of  (UNL,  MTA,  LAD,  16 
byte DATA with EOI). 
Test-2: Loop of 1000 times of (UNL, MTA, LAD, 4 byte 
DATA  with  EOI,  +  UNL,  MLA,  TAD,  21  byte  DATA 
with EOI). 
Test-3: Serial poll 1000 times. 
The test result is shown in Tble-2. 

Test-1 

Test-2 

Test-3 

7.299 
7.459 
2.2 

7.236 
7.575 
4.7 
Windows PC 450MHz, Agilent VEE 6.01  
Table-2 

12.22 
12.74 
4.3 

 
  The delay time (+dt) % of the data through the SAC on 
Test-1,  Test-2,  and  Test-3  are  respectively  2.2%,  4.3%, 
and  4.7%.  The  other  device’s  data  transfer  speed  is 
slower than the PSCx8, then the delay time is more small. 

4. CONCLUSION 
  The GPIB address converter (GAC) has developed. The 
function  has  confirmed  that  the  GAC  adds  devices  the 
extended  two-byte  address  function.  By  the  use  of  the 
GAC, it available to configure ordinal devices up to 930  
equipped with primary address function on one GPIB. 

To  improve  the  SAC  transfer  speed  two  CPUs, 
H8/3048-(16-bit), and SH7045 (32-bit) are under testing 
in the SAC. 

 

 

ATN=0 means a demand of DATA  
Next procedures are as follows: 
[Lower GPIB port] 
UNL : Un-Listen 
TAm : lower side devise is assigned to Talker 
Set GPIB adapter TMS-9914 Listen Only mode 
ATN=0 
DATA : read data is repeatedly sent to the upper GPIB 
port. The EOI signal of the lower GPIB port is checked, 
and it is also sent with the DATA byte.   

 

2.5 SRQ, SDC, DC, and IFC, 

The  SRQ  line  in  the  lower  GPIB  port  is  always 
watched,  and  the  SRQ  signal  is  transfer  immediately  to 
the  upper  GPIB  port.  When  STA  is  stored  in  the  STB 
memory, SRQ signal is also set. 

The  lower  GPIB  port  executes  SDC(selected  device 
clear), DC, or IFC(Interface Clear), when those interface 
message are received in the upper GPIB port.  

Time 
(sec) 
Direct 
with GAC 
+dt  (%) 

3. OPERATION RESALT 
To confirm the operation of the GAC, used equipment 

are shown in Table-1. 
Device 

GAC 
Multi-meter HP34401A 
Multi-meter HP34420A 
Function generator HP33120A 
Oscilloscope HP 54602B 
PSCx8 Power supply controller 
Windows PC 
Agilent VEE 6.0 
Lab VIEW 6.0 

Table-1 

3.1 Connection Test 

Address 
3 
3+22 
3+23 
3+10 
3+07 
3+13 
 
 
 

In 

the  condition 

that  Windows  PC,  GAC  and 
measuring devices were connected in the GPIB cables in 
series.  The  test  program  was  written  in  VEE.  The 
following  GPIB  function  are  included  for  test:  Listener, 
Talker, Serial poll, SDC, DC, Remote/Local, GET, IFC, 
and  binary  data  transfer  with  EOI.  The  Bus  Monitor  of 
VEE monitors  the  message  transfer  on  the  GPIB.  It  has 
confirmed  that  the  data  is  smoothly  transferred  through 
the  GAC.  And  the  operation  of  the  application  program 
of  Agilent  VEE:  the  Panel  Drivers  of  HP34401A, 
HP34420A,  HP33120A,  and  HP54602B  have  confirmed 
to  mount  on  the  Windows  PC  display  correctly  and  to 
work without any additional program or change.  

