PSN#FRAT003 

DISTRIBUTED CAN-BUS BASED BEAM DIAGNOSTIC SYSTEM FOR 
PULSE RACE-TRACK MICROTRON 
F. Nedeoglo, O. Novojilov, S. Dudnikov, Department of Physics, Moscow State University, 
119899, Moscow, Russia 
A.  Chepurnov, I. Gribov, V. Shvedunov, Institute for Nuclear Physics, Moscow State University, 

119899, Moscow, Russia 

 

Abstract 

 

is 

four 

from 

consists 

amplifier 

controller 

Very compact 70 MeV pulse race-track microtron is 
under  construction  now.    To  acquire  outputs  of beam-
current  transformers  placed  on  every  orbit  and  pulses 
of  high  voltage  and  RF  field  distributed  multi-channel 
system  was  developed.  Each 
beam  diagnostic 
acquisition 
fast 
differential  amplifiers  and  one  DSP-based  micro-
controller  with  on-chip  ADC  and  CAN-bus  controller. 
Each 
coupled  with  beam-current 
transformer and has bandwidth up to 150MHz and gain 
up  to  10.    One  of  four  channels  is  acquired  during  a 
measurement cycle. Another channel could be selected 
between  two  following  pulses.  All  the  controllers  are 
connected  via  optically  coupled  CAN-bus  with  host 
diskless  PC  running  under  Linux  with  RTLinux 
extension.    Dedicated  software  of  the  system  consists 
from  low  level  acquisition  software  for  DSP,  network 
software  for  controllers  and  host  PC,  application 
software for PC to present date for operator and control 
system. 
layers  were 
considered  but  refused  because  of  closed  character  of 
the whole system and centralised synchronisation of the 
whole system. 

  Standard  CAN  application 

1 INTRODUCTION 
First successful runs of very compact pulse 70 MeV 
race-track  microtron  (RTM)  have  been  provided  and 
final  tuning  is  carried  out  now.  [1].  Parameters  of  the 
RTM are listed in the Table 1. 
 
Table 1. 
Injection energy    
Energy gain/orbit 
Output energy 
Number of orbits 
Output current at 70 MeV  
Pulse length 
Pulse repetition rate 
Dimensions 
Weight 
Because of the limited place between orbits the original 
small size pulse beam current monitor (BCM) has been 

50 keV 
5 MeV 
10-70 MeV 
14 
40 mA 
~6-10 Âµs 
150 Hz 
2.2x1.8x0.9 mm 
3200 kg 

is  a  passive  wide-band  current 
designed.  BCM 
transformer with sensitivity up to 4,9 V/A and double-
ended 50 Ohm-coupled output. 

To  measure  amplitudes  of  the  beam  current  in  each 
orbit  together  with  the  amplitude of RF-field and high 
voltage pulse multi-channel distributed data acquisition 
beam diagnostic system has been created.  

2 BEAM DIAGNOSTIC SYSTEM AS A 
PART OF CONTROL SYSTEM 
Diagnostic  system  provides  data  necessary  for 
control algorithms and human-machine interface (HMI) 
which  are  implemented  in  control  system  (CS)  of  the 
accelerator, so the system has been designed in such a 
way to be easily integrated with CS. 

CS  has  traditional  three  levels  structure  [2].  X86-
level 
compatible  computers  are  used.  Front-end 
consists from diskless PC with data acquisition boards. 
Middle  level  consists  from  diskless  PC  running  under 
Linux  together  with  real-time  extension  of the Linux - 
RTLinux.  Linux  is  used  to  implement  static  and  soft 
real-time  algorithms  whereas  RTLinux  is  used  to  run 
hard  real-time  algorithms. HMI and the data bases are 
implemented in third level. Ethernet over fibre optic is 
used to connect PCs in the accelerator hall with servers 
and HMI computers in the control room. 

Beam  diagnostic  looks  from  top  level  of  CS  as  one 
more dedicated acquisition subsystem but has different 
implementation architecture of front-end level. 

3  STRUCTURE OF THE BEAM 
DIAGNOSTIC SYSTEM 
The  following  technologies  developed  during  last 
years  have  been  used  for  the  system:  application  of 
diskless  PC  running  under  Linux  with  real-time 
extension  -  RTLinux  [3,4];  application  of  distributed 
[5]; 
stand-alone  DSP-  based 
application of CAN-bus for accelerator control [6]. 

smart  controllers 

Output  signal  of  BCM  is  measured  by  stand-alone 
intelligent  controller.    Every  controller has four inputs 
for  BCM.  One  of  the  four  amplified  signals  could  be 
digitised in single acquisition cycle.  Digitising process 
is  synchronised  by  dedicated  pulse  generated  by 
general  synchronisation  system of the RTM. CAN-bus 

 

 

is  used  to  connect  controllers  with  diskless  x86-
running  under  Linux 
compatible  host  computer 
together with real-time extension RT-Linux (Figure 1.). 
BOOTP  protocol  is  used  to  download  operational 
system 
the  host  computer  via  Ethernet  after 
switching  power  on.  Host  computer  is  equipped  with 
inhome designed CAN-bus adapter [5]. 

to 

to Control System

Ethernet

CAN-bus

diskless PC with
Linux+RTLinux

CAN-bus-ISA

controller

controller

.   .    .

controller

RTM orbits  / RF system / High Voltage

Figure 1. Structure of beam diagnostic system. 
 
CAN-bus  is  very  popular  fieldbus  for  accelerator 
control.  Proceedings  of  ICALEPCS,  PCAPAC  and 
other  conferences  shows  growing  the  popularity  of 
CAN-bus  for  accelerator  control  with  every  next  year. 
Maximum  speed  of  CAN-bus  is  1  Mbit/sec.  But  it  is 
enough  when  beam  diagnostic  system  is  used  to 
measure  values  necessary  for  relatively  slow  static 
algorithms and HMI implemented in high level of CS. 
Pulsed nature of the data allows to transfer data in time 
gaps between two following pulses.  

independent 

(Figure  2).  Four 

4  ACQUISITION CONTROLLER  
Acquisition  controller  consists  of  analogue  and 
fast 
digital  parts 
instrumental  amplifiers  (IA)  are  implemented  in  the 
analogue part. Every IA has unit gain bandwidth up to 
200 MHz. Each of the IA could be separately enabled 
or  disabled  by  controlling  DSP.  All  outputs  of  IA  are 
connected  together  to  the  inputs  of  two  additional 
buffer amplifiers. They are used to couple the output of 
IA  with  ADC 
test  analogue  output 
simultaneously.  Test  analogue  output  allows  us  to  use 
digitising  oscilloscope  to  measure  and  store  shape  of 
the pulses in each orbit of RTM. 

input  and 

Digital  part  consists  of  digital  signal  processor 
(DSP)  TMS320F241,  optically  decoupled  CAN-bus 
interface,  optically  decoupled  synchronisation  input, 
synchronisation and control schematic based on CPLD, 
interface.  DSP  has  on  chip  CAN-bus 
RS-232 
controller, fast ADC and other useful peripherals. Fast 
 

 
on  chip  ADC  has  10-bits  resolution  and  800  ns 
minimum conversion time.  

Interrupt  service  mode of DSP operation allows us 

to utilise high performance of DSP and ADC module. 

Synchronisation  pulse  coupled  with  beam  pulse 
starts data acquisition process. One of the four channels 
is  measured  during  one  measuring  cycle.  Host 
computer  set  the  number  of  the  channel  to  measure 
after the next synchronisation pulse comes. In addition, 
host  computer  checks  state  of  the  controller,  define 
number  of  continuous  measurements  and 
initiate 
transmission of the results from measuring controller to 

Optically coupled CAN transceiver

RS232

External
start

CPLD
Lattice
ispM4

SCI

JTAG

CAN
controller

DSP
TMS320F241
ADC

CAN-bus

Oscilloscope

Enable/Disable
lines

Instrumental
amplifier

Beam current
monitor

the host via CAN-bus. 

 
Figure 2. Structure of acquisition controller. 

5  BEAM DIAGNOSTIC SOFTWARE 
Standard CAN application layers such as CANopen 
and  DeiceNet  were  considered  as  candidates  for  CAN 
application layers for beam diagnostic system. Because 
of  the  following  reasons  the  dedicated  high  level 
CANdiag protocol was created: 

- 

is 

the  diagnostic  system  is  closed  for  future 
extension, so a custom protocol is acceptable; 
-  DSP has limited size of on chip Flash-memory, 
too  small  for  standard  protocols. 
is  not 

that 
Application  of  external  memory 
reasonable; 
centralised  synchronisation  of  the  system  and 
asymmetric flows of data makes application of 
standard protocols inconvenient. 

- 

CANdiag  protocol  is  based  on  master-slave  model 
of 
is 
interaction.  Master  portion  of  protocol 
implemented  in  host  computer  whereas  all  controllers 
are slaves. 

11-bits  CAN-identifier  is  used  only.  Figure  3 

represents usage of CAN-identifier bits. 
2

10

6

Source
MAC

Destination
MAC

Message
type

Fig. 3. Usage of CAN-identifier field in CANdiag 

0

 

protocol. 

 

to  be  receiver  of 

Each  controller  connected  to  the  CAN-bus  has  its 
unique  Media  Access  Control  (MAC)  identifier  (ID), 
which identify device in the network and is used during 
procedure  of  access  to  the  bus.  When  device  sends 
message  to  the  bus  the  first  four  bits  of  the  CAN-
identifier content the MAC ID of sender (Source MAC 
ID).  Next  four  bits  content the MAC ID of the device 
which  expected 
this  message 
(Destination  MAC  ID).  Last  three  bits  are  used  to 
identify  a  type  of  the  message  which  define  semantic 
meaning of the message and format of data fields.  
CANdiag  protocol  supports simultaneous operation up 
to  15  devices  in  CAN-bus  with  addresses  in  range 
between  0x00  and  0x0e.  MAC  ID  0x0f  is  used  for 
broadcast messages to implement duplication MAC ID 
checking.  
 Each  device  on  CAN-bus  working  under  CANdiag 
protocol  starts  its  activity  on  the  bus  after  switching 
power  on  with  duplication  MAC 
ID  checking 
procedure.  CAN-bus  node  sends  broadcast  message 
with  Source  MAC  ID  equal  to  Destination  MAC  ID 
and equal to 0x0f. Data field contains MAC ID of the 
node trying to connect to the bus.  All nodes of the bus 
which are active in this moment receive this broadcast 
message and compare MAC ID from data field with its 
own MAC ID. If received MAC ID is equal to its own 
MAC  ID  this  node  send  broadcast  reply  which  means 
that  requested  MAC  ID  is  occupied  already  and  it 
means that attempt to connect to the bus failed.  

CANdiag  protocol  supports  the  following  set  of 

â¢ 

types of messages defined by âMessage typeâ field: 
â¢ 

configuration  messages  â  are  used 
to  select 
dedicate measurement channel in slave device and 
reset controller remotely, 
status  messages  are  used  to  check  state  of  the 
controller; 
input/output  messages  are  used  to  transfer  stored 
digitised data. 
Application  software  of  the  system  was  developed 
in  ANSI  C  and  consists  of  the  low  level  software  of 
slave  controller  running  on  DSP  and  high  level 
software of master.  

â¢ 

Software  for  slave  part  of  CANdiag  protocol  was 
completely  created,  tested  and  debugged  under  Linux 
in emulation mode taking in consideration features of C 
âcompiler for DSP platform. Than pieces of code have 
been ported very easily and quickly to DSP. 
Software  of  master  consists  of  loadable  module  for 
RTLinux  3.0  and  application  software  running  under 

 

 
Linux on the same host computer. Application modules 
allow  to  scan  CAN-bus  to  check  state  of  all  slave 
controllers, to provide cyclic polling of the controllers 
and so on. 

Dedicated  API  is  used  between  host  computer  and 
general CS of RTM to allow access to beam diagnostic 
system  from  CS.    Control  program  that  is  a  part  of 
software  of  CS  uses 
to 
communicate with masterâs software. One FIFO is used 
to 
to 
transmit  commands  from  control  program 
masterâs program. The second FIFO is used to transfer 
results back from master to control program. 

real-time  FIFO 

two 

4  CONCLUSIONS 

To  simplify  unification  of  beam  diagnostic  system 
with  control  system  during  start  up  and  future 
operation,  the  same  architectural  decisions  should  be 
used. Single platform of software development consists 
of  GNU  C  under  Linux  together  with  RTLinux  was 
used. The platform was used to develop as software for 
CS as for beam diagnostic system, as for high level as 
for  embedded  application  as  for  real-time  as  for  non 
is  very 
real-time 
convenient  and  could  be  recommended  to  develop 
control  and  beam  diagnostic  systems.  One  more 
application of CAN-bus for beam diagnostic systems is 
described. Disk-less PC running under Linux could be 
recommended  as  reliable  and  inexpensive  decision  for 
middle level of control systems.  

components.  This 

approach 

REFERENCES 
 [1]  V.I.  Shvedunov,  et.  al.,  â70  MeV  Electron 
racetrack microtron commissioningâ Proc. of PAC, 
Chicago June 18-22, 2001 

[2]  I.V.  Gribov.,  I.V.  et.  al.,    âRaceTrack  Microtron 
Control  Systemâ  Proc.  of  PAC,  Chicago  June  18-
22, 2001 

[3] A. Chepurnov, F. Nedeoglo, et. al., âSimple CAN-
bus  adapter  for  accelerator  control  running  under 
Linux  and  RTLinuxâ  CD-ROM  Proceedings  of 
PCAPACâ2000 

[4]  F.  Nedeoglo,  A.  Chepurnov,  D.  Komissarov, 
âLinux and RT-Linux for accelerator control - pros 
and  cons,  application  and  positive  experienceâ 
Proc. Of ICALEPCSâ99, Trieste, Italy, ISBN: 88-
87992-00-2, pp. 520-522. 

for  Accelerator 

[5]  Chepurnov  A.S.,  Dorokhin  A.A.,  et.  al.,  âControl 
System 
  with  distributed 
Intelligence  Based  on  a  "Family  of  Smart 
Devices",  Proc.  of  the  Vth    Europ.  Particle 
(Barcelona), 
Accelerator  Conference  Sitges 
Institute  of  Physics  Publish.  Bristol 
and 
Philadelfia, 1996, p.1794-1796 

[6] A. Chepurnov, A. Alimov, et. al., âControl System 
for  New  Compact  Electron  Linacâ  Proc.  Of 
ICALEPCSâ99, Trieste, Italy, ISBN: 88-87992-00-
2, pp.84-86. 

