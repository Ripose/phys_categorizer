DRAFT

ALTRO and TPC Performance of ALICE

Roland Bramm
Dissertation 2005

DRAFT

Computing 
Pedestals 
TCF 
BSC2 & ZSU 
Conﬁguration 
Literaturverzeichniss 
The Experiment 
Front End Electronic 
Jitter 
Prototype Environment 
ALTRO Parameter Optimising  
Pulse Finder 
Pedestal Calculation log 
make coeﬃcients 
Correlator 

39
39
39
40
40
43
44
45
45
45
46
48
48
49
50

Content

1
ALICE 
1
TPC 
1
ALTRO 
1
Roland Bramm 
1
Dissertation 2004 
1
The Experiment 
2
The Experiment 
2
TPC 
3
Requirements 
3
Working principle  
4
Gas Ionisation 
5
Electron/Ion Drift 
5
Electron Diﬀusion 
6
Readout Chamber 
7
Signal creation 
7
Prototype 
11
Front End Electronic 
12
The Front End Electronic 
12
FEC 
12
PASA 
13
ALTRO 
13
ADC 
13
BCSI 
14
TCF 
14
BSC2 
15
ZSU 
15
DFU 
15
MEB 
16
Backplane 
16
RCU 
16
SIU 
16
DCS 
19
Jitter 
20
Jitter 
20
Simulation 
21
Result  
25
Prototype Environment 
26
Prototype 
IROC & Mapping 
26
Data Aquisition and Conﬁguration 26
27
Data Format One 
27
Data Format Two 
27
Monitoring 
28
Test Beam 
28
Conﬁguration 
29
Readout 
29
Data Storage 
29
Data Format 
30
Monitoring 
31
HLT 
33
ALTRO Parameter Optimising 
34
Parameter Optimising 
34
BCS1 Parameters 
34
Extraction 
34
Result 
35
Baseline Dispersion 
35
TCF Parameters 
35
Pulse Finder 
36
Parameter Set Finder 
36
Correlator 
36
Best Set Finder 
38
BSC2 & ZSU Parameters 
39
Altro++ 

III

The Experiment

The Experiment

ALICE (A Large Ion Collider Experiment)[1-5] 

is  an  experiment  at  the  LHC  (Large 
Hadron  Collider)  with  the  goal  to  study  heavy  ion  colli-
sions up to the top energy available. It is designed to study 
the  physics  of  strongly  interacting  matter  and  the  QGP 
(Quark Gluon Plasma). The experimental setup is shown 
in the picture below.
In general the detectors are highly capable to measure and 
identify hadrons, leptons and photons around mid rapidity 
over a broad range from very low (100 MeV) up to fairly high 
(100 GeV) impulses. In addition there is a myon arm ➉ [6] 
which covers the detection at large rapidities (-4 < η < -2.4). 
In a moderate magnetic ﬁeld of up to 0.5 T provided by the 
reused and modernised L3 Magnet ➀ [32] are positioned 
the central detectors which are covering the mid rapidity 
region  (-0.9 < η < 0.9).  A  big  part  of  ALICE  also  covers 
360° in φ in this region. For tracking the main detectors 
the ITS (Inner Tracking System, ➁) [7] as a silicon based 
detector,  the  TPC  (Time  Projection  Chamber, ➂) [8] 
and  a  highly  granular  TRD  (Transition  Radiation 
Detector, ➃) [9] are used, this set is called central barrel. 
For particle identiﬁcation the TPC measurement of the en-
ergy loss (dE/dx), the transition radiation of the TRD and 
the time of ﬂight of the TOF (Time Of Flight, ➄) [10] is 
used. In addition there is the HMPID (High Momentum 
Particle Identiﬁcation Detector, ➅) [11] for high momen-
tum particles, and a photon spectrometer PHOS (Photon 
Spectrometer, ➆) [12] for photon measurements, these two 
detectors do not have the full 360° acceptance in φ. There 

are fast detectors for the trigger at large rapiditys like the 
FMD (Forword Multiplicity Detector, ➇) [13], V0 and T0 
at (-3.4 < η < -5.1) [14,15] for measuring charged particles 
and a narrower band for photons (2.3 < η < 3.5) with the 
PMD (Photon Multiplicity Detector, ➈) [16]. At last there 
are two ZDC (Zero Degree Calorimeters) [17], to measure 
the spectator nucleons at beam rapidity.

TPC

A time projection chamber (TPC) provides a complete, 3D 
picture of the ionization deposited in a gas volume. It acts 
similar  like  a  bubble  chamber,  however  with  a  fast  and 
purely  electronic  readout.  This  3D  “imagine”  capability 
deﬁnes the usefulness as a tracking device in a high track 
density environment and for the identiﬁcation of particles 
through  their  ionisation  energy  loss  (dE/dx). Therefore  it 
is the main tracking detector in the central barrel of the 
ALICE experiment. The usage as a large acceptance track-
ing  and  identiﬁcation  detector  in  heavy  ion  experiments 
starts with NA49 [18] and STAR (Solenoidal Tracker At 
RHIC)  [19]  at  the  SPS  (Super  Proton  Synchrotron)  and 
RHIC (Relativistic Heavy Ion Collider), respectively.
A TPC consists of mainly three parts, the drift chamber, 
the  readout  chamber  and  the  front  end  electronics.  The 
ﬁeld  cage  surrounds  the  detector  gas  and  provides  a  ho-
mogenious electrical ﬁeld to transport the electrons of the 
ionisation  to  the  readout  chamber.  This  is  also  the  sensi-
tive volume of a TPC. The readout chamber ampliﬁes the 
signal  and  provides  the  coupling  to  the  gas  for  the  front 
end electronics. Here the signal is again ampliﬁed, shaped, 

➉

➉

➀

➄

➅

➂

➈

➁

➇

➆

➃

➉

���������������������

2

digitised,  processed,  stored  and  then  send  to  the  data  ac-
quisition.

Requirements

The physics program foreseen determines the exigencies at 
the ALICE TPC alone and in conjunction with other de-
tectors. The hadron physics demands:

TWO TRACK RESOLUTION: The two track resolution has 
to be suﬃcient to allow a HBT [???] measurement with 
a resolution in relative momentum of a few (< 5) MeV.
DE/DX RESOLUTION:  The dE/dx resolution should be 
at least 8% or better to properly identify hadrons.
TRACK MATCHING: For fast decaying particles a proper 
(85% - 95%) matching capability of the TPC to ITS or 
TOF or both is needed.

»

»

»

READOUT  CHAMBERS:  The  readout  chamber  covers  a 
area of 33 m2 at the two endcaps of the ﬁeld cage and is 
built as conventional multiwire proportional chamber. 
To fullﬁll the necessary accuracy in dE/dx and position 
resolution, as well as momentum resolution, there will 
be about 560000 readout pads.
ELECTRONICS: As close as possible to the readout cham-
bers the electronics for these 560000 pads have to re-
side, this demands a highly integrated system.
INTELLIGENT  READOUT:  Even  after  the  zero  suppres-
sion directly in the detector electronics an event is still 
60 MB in size. The data throughput when reading out 
at the highest detector readout rate exceeds the allowed 
throughput to a permanent storage by roughly a factor 
of  10.  To  get  the  highest  acquisition  rate  for  special 
events (e.g. high momentum jets, Y particle, ...) a HLT 
(High Level Trigger) [20] is foreseen to ﬁnd candidates 
for this events online.

For  leptonic  observables  the  demands  are  partially  diﬀer-
ent:

Size

length

Ne/N2/CO2 90/5/5

5m

80cm

250cm

88m3

400 V/cm

2.85 cm/us

88 us

557568

30:1

900:1

1000 e

10%

85 MB

1-2 MB

200 Hz

1000 Hz

TRACKING  EFFICIENCY:  Since  electron  pairs  are  most 
interesting,  a  tracking  eﬃciency  of  at  least  90%  for 
tracks at pt > 1GeV/c should be achieved.
MOMENTUM RESOLUTION: To get a good mass resolu-
tion (< 100 MeV) for heavy mesons like the Y, the mo-
mentum resolution for electrons of about 4 GeV should 
be at least 2.5%.
DE/DX  RESOLUTION:  For  electrons  the  dE/dx  resolu-
tion should be better than 10%. In cooperation with 
the TRD this leads to a electron to pion separation of 
more than a factor of 1000.
RATE CAPABILITY: For the inspection of electrons  the 
TPC should work at 200 Hz at heavy ion collisions.

Gas

FEE

inner radius

outer radius

composition

volume

Drift ﬁeld

Drift velocity

Drift time

#channels

Signal/Nosie

dynamic Range

Noise(ENC)

Crosstalk

For the proton running of ALICE the demands are partly 
lower because of the low multiplicity but on the other hand 
higher since the TPC has to run at a higher rate due to the 
high luminosity.

RATE CAPABILITY: Due to the high luminosity in pro-
ton running the TPC has to operate at 1kHz or more 
to minimise the eﬀect of pile up.

These  demands  lead  to  a  design  of  a  quite  conventional 
TPC,  but  with  many  new  resolutions  in  the  detail.  The 
major facets are:

ACCEPTANCE: The acceptance of the TPC matches the 
one  of  the  ITS,  TRD  and  TOF.  For  event  by  event 
studies as well as for all rare observables a considerable 
big acceptance is necessary to collect enough statistics. 
This leads to a size as shown in table at the end of this 
section.
MATERIAL BUDGET: To minimise the eﬀect of multiple 
scattering and secondary particle production the mate-
rial amount should be minimised. This determines the 
light ﬁeld cage material as well as the gas choice.
FIELD CAGE:  To match the rate exigencies the ﬁeld cage 
has to provide a high ﬁeld of 400 V/cm which implies a 
voltage greater than 100 kV at the central membrane.

< 0,3% / -60 db

Power Consumption < 100mW

max dead time

Event size

Pb Pb central

Trigger rate Pb Pb central 

p p

p p

Technical data of the ALICE TPC

Working principle 

Starting  from  a  particle  running  through  the  gas  of  the 
drift  chamber  it  ionises  the  gas  molecules,  so  a  track  of 
ions  remains  along  the  particle  trajectory.  The  electrical 
ﬁeld applied from the ﬁeldcage now lets this electron cloud 
drift with a constant velocity in ﬁeld direction away from 
the central membrane towards the two readout chambers. 
There  the  signal  will  be  ampliﬁed  by  avalanche  creation 
and read out on the pad plane. Then the front end electron-
ics electrically ampliﬁes shapes and digitises the signal. The 
x and y coordinate are deﬁned by the pad and the row coor-

»

»

»

»

»

»

»

»

»

»

»

3

dinate of the pad plane in the readout chamber. The z coor-
dinate is deﬁned as the drift time of the electron cloud.

0
I
/
I

2.4

Gas Ionisation

A  charged  particle  running  through  a  gas  can  ionise  gas 
molecules, so it produces primary electrons. The statistics 
of the primary interactions implies a Poisson distribution 
of a number of primary electrons as shown below.

2.2

2

1.8

1.6

1.4

1.2

1

0.8
10

-1

s
t
i
n
u
 
y
r
a
r
t
i
b
r
a

5

4

3

2

1

0

4

1

10

2

10

3

10

4

10
��

Bethe Bloch curve for 90% Argon and 10% CH4, data 
from [21]

0

5

15

10
Number of primary electrons per 1 cm for MIP

45

35

40

30

20

25

50

Distribution of numbers of primary electrons per 1 cm for 
a MIP in 90% Ne & 10% CO2 [8]

This is also used in the simulation due to the lack of energy 
loss data in the 1/β2 region and of the behaviour of Neon 
being quite similar to the Argon based mixtures. [24]
With  suﬃcient  energy  the  primary  electron  can  ionise  at-
oms so it produces additional secondary electrons. The to-
tal number of electrons in an electron cluster is described 
with:

The distance in between the collisions is described by an 
exponential [21]

Ntot =

Etot − Ipot
Wi

+ 1

 

(f4)

with l as the distance between two successive collisions and 
λ as the mean distance between primary ionisations

P (l) =

e −l

λ

1
λ

 

λ =

1
Nprim · f (βγ)

 

(f1)

(f2)

with Etot is the energy loss in a given collision, Wi the ef-
fective energy required to produce an electron ion pair and 
IPot is the ﬁrst ionisation potential. This clusters are treated 
pointlike, so primary and secondary electrons are treated 
indiﬀerent. This is justiﬁed because the eﬀective range of 
low energy electrons is small. [8]
To  optimise  the  signal  to  noise  ratio,  the  number  of  pro-
duced electrons should be as high as possible, which leads 
to a heavier gas but also an increasing space charge due to 
the higher electron production and the lower ion mobility 
which leading to a higher occupancy.

where Nprim is the number of primary electrons per centim-
eter produced by a MIP (Minimum Ionising Particle) and 
f(βγ) as the Bethe Bloch curve [22,23].

dE
dx

=

4πN e4
mc2β2 z2

ln

�

2mc2β2γ2
I

− β2

�  

Based  on  the  proposed  parametrisation  of  the  ALEPH 
(Apparatus for LEP Physics) [21] collaboration

f (βγ) =

P1
βP4

·

P2 − βP4 − ln
�

�

P3 +

1

(βγ)P5 ��  

(f3)

Gas

roh[g/l]

(f3)

helium

0.1785

0.89990

28.94

neon

argon

krypton

xenon

ref rob[26]

1.784

3.733

5.887

X0[g/
cm2]

94.32

19.55

11.34

8.48

X0[m]

nmp[1/
cm]

5280

322

110

30.4

14.4

2.7

16

38

63

115

Parameters of the noble gases used in TPCs

with the parameters P1=0.76210-1, P2=10.632, P3=0.13410-4, 
P4=1.863, P5=1.948, the energy loss data for 90% Argon & 
10% CH4 [21,24] is shown in the ﬁgure below.

Taking the maximum multiplicity at LHC of dn/dy ~ 6000 
[26] the heavy gases are ruled out. Finally, since the TPC is 

�
�
�
�
�
�
�
�
�

�

�

���

���

���

���

���

���

�

�

�

�

�

the second innermost detector the material budget should 
be minimised, so this speaks in favour for a light gas.

Electron/Ion Drift

In  the  inﬂuence  of  the  homogeneous  electrical  ﬁeld,  as 
provided from the ﬁeldcage the electron cloud moves with 
a constant speed towards the readout chamber. The drift 
speed vd is a dynamical equilibrium of the acceleration due 
to the drift ﬁeld and the stopping due to the collisions with 
the gas atoms. For the drift speed vd is:

vD =

e
√2me ·

1
σ(�)√� ·

E
N

 

(f5)

with E as the electrical ﬁeld and N the density of the gas. 
The drift speed changes with the eﬀective cross section σ(ε) 
dependent on the kinetic energy of the electrons. 
The drift speed as function of the ﬁeld is shown in the ﬁg-
ure below for diﬀerent gases. For the high rates of the TPC 
the  drift  speed  has  to  be  quite  high.  For  a  drift  time  of 
90 μs the drift ﬁeld has to be 400 V/cm. Warum Gas+Co2 
= vd groesser ...ref in bild

��������
��������
����
�����
�������
�����

�
�
�
�
�
�
�
�
�

�

�

���

���

���

���

�

���

���

���

���

�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

� ������

The mean thermal energy is deﬁned by the integral:

Pure noble gases have low drift speed [25]

�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

� ������

When adding minimal amounts of CO2 to neon, the drift 
velocity at low ﬁelds of this gased increases rapiditly. The 
lowest curve is for the pure gas, the following for 0.25%, 
0.5%, ..., 1.75%, 2%, 3%, ..., 9%, 10% [25]

Ions  drift  at  much  lower  speed  (~1000  times  slower  than 
the electrons) in the opposite direction towards the central 
membrane. When comparing Argon and Neon the mobil-
ity of Neon is twice that of Argon. Helium has a extremely 
high drift speed due to its light mass, but it is diﬃcult to 
be contained due to its high leak rate.

Electron Diﬀusion

The drift speed of one single electron diﬀers from the mean 
motion of the electron cloud due to the statistical process 
of the scattering. These electrons follow a thermal energy 
distribution (Maxwell distribution) [27]:

F (e) =

4�
πk3T 3

�

· e −�

kT

(f52)

�e� =

�F (�) d� =

kT = �

∞

�
0

 

(f53)

So the electron cloud will widen up during the drift time. 
Starting with a point-like electron cloud at t = 0 and the 
assumption of an constant broadening the cloud will get a 
gaussian-shaped density distribution:

n =

3

1
√4πDt �

�

·

e −r2

4Dt

with 
r2

= x2

+ y2

2
+ (z − vt)

 

3
2

 

 

(f6)

(f7)

5

and D as the diﬀusion coeﬃcient calculated via the use of 
the mean free path:

D =

v λ(�)

1
3

 

The width of (f6) is

σx = √2Dt =

2DL
µE

�

=

�

4�L
3eE

 

when using
v = µE  

D
µ

= kT
e  

and the Nernst-Townsend formula [28]:

�

�

�
�
�
�
�
�
�
�

�
�
�

�
�

���

���

���

���

���

���

���

���

��

(f8)

(f9)

(f10)

(f11)

To get a small σx at high drift ﬁelds small electron energies 
are required. In Argon a ﬁeld strength of 1 V/cm already 
produces electron energies larger than the thermal energy, 
so  Argon  is  called  “Hot  Gas”.  On  the  contrary,  for  CO2 
this behaviour occurs at ﬁelds of 2 kV/cm, so it is a “Cold 
Gas”. The reason is a large energy loss due to the internal 
degrees of freedom which are already accessible at low col-
lision energies. In ALICE the gas mixture of Neon is fore-
seen. To reduce the eﬀect of the diﬀusion CO2 is added.

������ ����� ������

����������� ������

�������

�

�

�
�
�
�
�
�
�
�
�
�
�
�
�
�

���

���

���

���

���

���

���

���

���

���

��

��

��

��

6

�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

� ������

Transverse diffusion for Neon mixed with, from top to 
bottom, 5%, 10%, 15%, 20% CO2. These curves are 
calculated without magnetic ﬁeld. [25]

Readout Chamber

The readout chamber is based on a commonly used scheme 
of an anode wires grid above the pad plane, a cathode wire 
grid and a gating grid. An electron which reaches the an-
ode wire plane will react to the strong ﬁeld induced by this 
plane, and will be accelerated. The energy deposited in the 
electron is enough to ionise the gas so at this point the op-
posite  behaviour  as  in  the  drifting  region  is  desired. The 
newly produced electron is also accelerated and ionises an-
other  gas  atom  so,  as  the  number  of  electrons  multiplies 
in this successive generations, the avalanche continues to 
grow  until  all  electrons  are  collected  by  the  anode  wire. 
The  remaining  ions  in  between  the  cathode  and  anode 
plane drift towards the cathode wire grid and are mostly 
collected  there.  The  processes  in  detail  are  quite  compli-
cated  as  there  is  ionisation,  multiple  ionisation,  optical 
and  metastable  excitations  and  recombinations  and  ener-
gy transfer by collisions between atoms. The signal reach-
ing the readout chamber is proportional to the number of 
produced  electrons. The  readout  chamber in  this  type  of 
TPC is also known as MWPC (Multi Wire Proportional 
Chamber). The multiplication of ionisation is described by 
the Townsend coeﬃcient α. The increase of the number of 
electrons is given by:

Due  to  the  several  processes  which  are  included  in  α  no 
fundamental description exists and it has to be measured 
or  simulated  for  every  gas  mixture.  For  the  NeCO2  mix-
ture, α is calculated using Magboltz [29] as shown in the 
graph below.

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

�
�
�

� ������

Longitudinal diffusion coefficient in 80% Neon 20% CO2 
approaches the thermal limit at low ﬁelds. Dashed lines 
are for B = 0T and solid lines for B = 0.5T. [25]

dN = N α ds  

(f12)

l
a
n
g
i

S

8

6

4

2

0

-2

-4

-6

-8

1.5

2

1

0.5

e
d
u

t
i
l

p
m
A
d
e
z

 

i
l

a
m
r
o
N

0

0

�

���

�

�
�
�
�
�
�

���

���

���

���

�

���

���

���

���

�

���

���

���

���

ﬁeld.  This  creates  a  positive  peak.  The  induced  signal  is 
shown in for diﬀerent ion drift targets.

Pads

Drift

Drift

�
�

�
�

�
�

�
�

�
�

�
�

�
�

�
�

�
�
�

�
�
�

�
�

� ������ �

�

Cathode

Gate

The Townsend coefficient for neon mixed with, from top 
to bottom, 0%, 5%, 10%, 15%, 20%, 25%, 50%, 75%, 
100% CO2.[25]

0 1
0

2
0

3
0

4
0

5
0

6
0

7
0

8
0

9
0

1
0
0

1
1
0

1
2
0

1
3
0

1
4
0

Time  �sec�

The  gain  in  connection  to  the  applied  potential  is  a  key 
feature of a proportional chamber. The gain factor M de-
scribes the ratio of the produced electrons n and the initial 
electrons n0. When using the Townsend coeﬃcient, M can 
be expressed by:

M =

= exp

α(x) dx

n
n0

x1

� �

x0

�  

(f13)

Gas Gain Alice ... Argon vs Neon
There is one eﬀect which would spoil the space resolution 
when using a noble gas since during the avalanche creation 
also  photons  are  produced  which  have  a  bigger  cruising 
range  and  can  have  energies  which  are  enough  to  ionise 
atoms. So they could create another avalanche at a diﬀer-
ent place which would result into a fake cluster not belong-
ing to a particle track from the collision. In addition, this 
load when exceeding the Raether limit [30] could generate 
spark discharges producing aging eﬀects or possibly destro-
ing the readout chamber. When adding a gas with a high 
photoabsorption crossection this photons are captured ear-
ly  and  the  readout  chamber  can  be  driven  with  a  higher 
ﬁeld and therefore with an higher ampliﬁcation factor. A 
quencher gas is an organic gas due to the high number of 
degrees of freedom. In ALICE, CO2 is used as a quencher.

Signal creation

The electrons drift towards the anode wire grid and are col-
lected there. This induces a fast rise of a few ps of the read 
out  signal  on  the  pad  plane.  The  ions  are  drifting  much 
slower  (~1000  times)  towards  the  cathode  plane,  there-
fore away from the pad plane. They are inducing a mirror 
charge on the pad plane. The measured signal now shows a 
slow decay of a few μs.
The ion velocity is higher, when they just leave the anode 
wire  due  to  the  smaller  diameter  and  therefore  a  higher 

Plots of collections of signals for the five different targets, 
showing the spread in drift time needed to reach the gate 
and cathode wires.

For the ions drifting towards the pad plane the signal is un-
ipolar due to the ﬁeld pointing towards the plane. The ions 
drifting to the cathode or gate wire grid, the product of the 
drift  velocity  and  the  ﬁeld  changes  sign  inducing  a  nega-
tive current between the avalanche wire and the cathode 
wire. The observed signal is bipolar and is represented in 
the undershoot. The amplitude of the undershoot as well as  
the secondary peak and the zero cross time vary with the 
geometry and gas of the chamber. The ions are also accel-
erated towards the gating grid which induces a secondary 
lower peak. Due to the angular spread around the anode 
wire and the relative strength of the ﬁelds in between the 
cathode wire plane and the pad plane the signal induced 
in the cathode wire is typically more frequent than the pad 
signal.

Detector Signal with Ion Tail

Input Current
Shaper

200

400

800

1000

600
nanoseconds

Integrated shape of several avalanche processes including 
the ion tail [31]

Each avalanche signal is the result of the contribution of 
many positive ions leaving the anode wires in various an-
gles. An ampliﬁer shaper integrates the signal over several 
avalanche processes producing a pulse with a long falling 
tail  as  shown  in  the  plot  above.  The  width  of  the  pulse 

7

depends on the track inclination, the drift length and the 
diﬀusion. [31]
The electrons are accelerated towards the anode wire grid, 
creating an avalanche process and are collected there. The 
remaining ions are drifting much slower (~1000 times) to-
wards the cathode plane, therefore away from the pad plane. 
They are inducing a mirror charge on the pad plane. Some 
ions are collected by the pad plane or the gating grid wires. 
Each avalanche signal is the result of the contribution of 
a large number of positive ions leaving the anode wire in 
various angles, so following diﬀerent paths which can last 
for several tens of microsenconds inducing the long ion tail 
[ref neues paper]. chck ...>

Prototype

A small prototype was build to do a TPC performace test. 
It consists of one IROC (Inner Readout Chamber) module 
on one side and a complete ﬁeldcage with a central mem-
brane in a gas tight aluminium box. First tests were done to 
verify the electrostatic behaviour without a readout system. 
Later for the complete TPC performance test, it was was 
equipped with four FEC boards and a triggering setup us-
ing szintilators for cosmic rays. At this time the front end 
cards  were  uncooled  and  the  test  TPC  was  ﬂooded  with 
ArCO2. Later a simple cooling setup and four additional 
cards were added and the Gas was changed to NeCO2. The 
cooling system is based on a underpressure liquid cooling 
and a copper shielding around the FEC as shown in the 
FEE chapter. This setup was used to gather some statistics 
of cosmic particles on MIPs as the most probable particle, 
showers  as  an  estimate  for  the  high  multiplicity  environ-
ment and particles whith a big ionisation to see saturation 
eﬀects, as also since two diﬀerent gas mixtures were used 
to study diﬀerences in the signals. The data is available at 
[33]

Picture of the prototype setup at the PS testbeam.

8

9

Front End Electronic

The Front End Electronic

The FEE (Front End Electronics) of the ALICE TPC 

has to cope with some signiﬁcant design considera-
tions. Due to the needed temperature stability in the 
TPC, the heat dissipation has to be minimised. The huge 
number of pads requires the electronics have to be highly 
integrated and in addition the high readout rate makes an 
intelligent  readout  mandatory.  To  minimise  the  heat  dis-
sipation, the electronics is cooled and the power consump-
tion is minimised. The space consumption was minimised 
in packing several channels into each circuit and also com-
bine analog and digital electronics in one chip as well as  
packing  many  channels  on  one  FEC.  For  the  high  rate, 
the  sampling  speed,  the  processing  power  and  the  trans-
fer bandwidth are maximised. The on detector electronics 
consist of the FEC and the RCU with the daughterboards 
DCS and SIU. The oﬀ-detector electronics consists of the 
DIU, RORC, DAQ and HLT.[n9]

FEC

The FEC (Front End Card) contains 128 complete readout 
channels.  The  signal  ﬂow  starts  at  the  detector  end  with 
the analogue signal transported through six ﬂexible kapton 
cables and the connectors. The PASA has short connexion 
links to this connectors, to minimise the crosstalk caused 
by the fast input signal from the detector. Afterwards the 
ALTROs  are  directly  connected  to  the  PASAs  using  dif-
ferential  signals.  With  the  ALTRO  the  analogue  part  of 
the  FEC  ends  and  also  the  digital  part  starts.  The  dig-
ital  outputs  are  multiplexed  through  a  LVCMOS  (Low 
Voltage CMOS) bus and translated to the GTL (Gunning 
Transceiver Logic) level and linked to the connectors of the 
backplane.  In  addition  there  is  a  BC  (Board  Controller) 
realised  as  a  FPGA  (Field  Programmable  Gate  Array) 
which provides an independent access to the FEC via the 
I2C (Inter-IC) link. This is used to control the state of the 
voltage  regulators  and  monitor  the  board  activity,  power 
supplies and temperatures, so it represents the slow control. 
The FEC PCB (Printed Circuit Board) contains four signal 
layers and four power layers divided into two supply layers 
and two ground layers.

12

Picture of the FEC PCB with all components. The Signal 
ﬂows from the right through the connectors, the PASA, 
the ALTRO the GTL trancievers and the connectors.

In total the FEC has a maximum power consumption of 
6 W. The FECs are located directly on the end caps of the 
TPC and with the strict temperature requirements the heat 
dissipation of the FEE has to be minimised. For this reason 
the  FEC  is  embedded  in  a  water  cooled  tray  made  from 
copper plate as shown in the picture below. [n1]

Picture of the FEC in the copper cooling plates. This plate 
design is to be reﬁned since it introduces additional noise 
in the signal measurment

PASA

The  charge  collected  by  a  TPC  pad  is  ampliﬁed  and  in-
tegrated  using  the  PASA  (Preampliﬁer/Shaper).  It  has  a 
low input impedance ampliﬁer which is based on a CSA 
(Charge Sensitive Ampliﬁer) followed by a semi Gaussian 
pulse shaper of the fourth order. (formula+plot) The PASA 
is implemented in the AMS CMOS [???] (Complementary 

Metal  Oxide  Semiconductor)  0.35 μm  technology,  and 
consists  like  the  ALTRO  of  16  channels  with  a  power 
consumption  of  11 mW/channel.  The  conversion  gain 
is  12 mV/fC  and  the  output  has  a  dynamic  range  of  2 V 
with a diﬀerential non-linearity of 0.2 %. The output is a 
pulse (picture) with a shaping time (FWHM: Full Width 
Half Maximum) of 190 ns. The noise of one single channel 
is  below  570 electrons  (RMS:  Root  Mean  Square)  and  a 
channel to channel crosstalk below -60 db.[n1,n13]

ALTRO

The ALTRO (ALICE TPC readout) [n1,n3,n4,n5,n9] is a 
chip specially designed for the needs of the ALICE TPC 
consisting of an analog part in addition to a digital part. 
There  are  16  channels  integrated  in  one  IC  (Integrated 
Circuit),  realised  as  0.25 μm  CMOS  process  operating 
concurrently  on  the  analog  signals  coming  from  16  in-
dependent inputs.  Each of this channels is composed of 
an ADC (Analog Digital Converter) as the analog part, a 
BCSI (Baseline Correction and Subtraction I), a TCF (Tail 
Cancellation  Filter),  again  a  BCSII  (Baseline  Correction 
and  Subtraction  II),  a  ZSU  (Zero  Suppression  Unit),  a 
DFU  (Data  Formatting  Unit)  and  a  MEB  (Multi  Event 
Buﬀer), as the digital part. In addition, there is a central 
CCL (Common Control Logic) for the conﬁguration and 
control  for  the  trigger  and  bus.  There  are  two  frequency 
domains one is driven by the bus clock and consists of the 
Bus  Interface  in  the  CCL  and  the  memory  in  the  MEB 
and the other is driven by the readout clock and consists 
of the rest. Since 95% of the ALTRO runs with the sam-
pling clock, the inﬂuence of the readout clock on the sig-
nal  is  minimised.  The  ALTRO  is  continuously  sampling 
the input, on arrival of a ﬁrst level trigger (L1) an event is 
temporarily stored in the memory. The maximum length 
of an event is 1008 samples. Upon arrival of a second level 
trigger (L2) the latest acquisition is frozen and kept until 
readout from the memory by the RCU via the ALTRO bus. 
The MEB has a capacity of eight events. Is there another 

level one trigger signal prior to second level trigger the ﬁrst 
acquisition is discarded and overwritten by the next.

The  ADC  of  the  ALTRO  is  based  on  a  commercial  de-
sign, the Microelectronics TSA1001 [n2] and was slightly 
modiﬁed for the needs deﬁned by ALICE. The TSA1001 
was chosen because of the low power consumption which 
is a quite important prerequisite of the TPC, since there 
are  extremely  tight  temperature  constrains  [n6].  The  dy-
namic  range  is  10 bit  and  the  sampling  frequency  is  up 
to  25 MSPS  (Million  Samples  Per  Second).  Due  to  the 
fact that there is a analogue part and a digital part on the 
ALTRO the electrical coupling has to be minimised to not 
decrease the quality of the sampling.

ADC

BCSI

In  the  digital  block  the  ﬁrst  unit  is  the  baseline  correc-
tion,  its  main  purpose  is  the  preparation  of  the  signals 
for the adjacent tail cancellation unit. This unit demands 
the  removal  of  the  DC  level  and  a  relatively  stable  base-
line during the data acquisition and in between. There are 
several sources of perturbations which can have an impact 
on the signal. A source of perturbations are low frequency 
(<1 kHz) variations, which are nearly constant during an 
acquisition  window.  The  origin  of  these  are  temperature 
variations in the electronics, coupling of AC or DC and the 
ﬁnite  detector  load  [n17,n18].  The  self  calibration  circuit 
(AUTOCAL) of the ALTRO removes these disturbances. 
Since  the  ALTRO  is  continuously  sampling  and  process-
ing the input signal it can detect these slow variations out-
side  the  data  acquisition  window.  This  self  calibration  is 
stopped in arrival of a level one trigger and the last value 
is taken as DC level of the baseline which is then removed 
from the signal. Past a level two Trigger the calibration is 
re-enabled.

ACQUISITION CHANNEL (×16)

ADC

DATA PROCESSOR

DATA MEMORY

10

10-bit
25 MSPS

First Baseline
Correction

Pedestal
Memory

11

2'sC

3rd Order
Digital Filter

11

2'sC

Second
Baseline
Correction

11

2'sC

Zero
Supression

11

2'sC

Data Format

40

Multi
Acquisition
Buffer

COMMON
CONTROL
LOGIC

Configuration
and Status
Registers

Bus
Interface

BD CTRL

Trigger
Manager

L1

L2

13

count.  The  problems  are  the  long  signal  tail  by  itself  in 
addition to the pile up eﬀect when several signals are oc-
curring in a short time. To improve this situation the signal 
tail is removed by this entity. It is implemented by a cas-
cade  of  three  ﬁrst  order  IIR  (Inﬁnite  Impulse  Response) 
ﬁlter circuits and described in [n7,n8]. Each of this circuits 
has  a  set  of  two  parameters.  So  in  total  there  are  six  pa-
rameters to accommodate the TCF to the real signal shape. 
(ref->AltroOptimisation)

Original Pulse
after TCF

40

20

0

10

15

20

25

30

5

10

15

20

25

30
Timebins

In this picture the performance of the TCF is shown to 
remove the signal tail without modiﬁing the pulse and die 
amplitude.

BSC2

The second baseline correction is only applied during the 
acquisition of an event and corrects non systematic signal 
perturbations. It is realised as a moving average ﬁlter. The 
correction is calculated by using the average of eight pre-
samples which are in the acceptance window. The accept-
ance window is deﬁned by a conﬁgurable double threshold 
scheme. If the next sample is outside this window it is not 
used to update the moving average value. This means, that 
if there is a big variation which is normally induced by a 
pulse  of  a  cluster  the  correction  value  stays  on  the  value 
which was calculated with the last sample in front of the 
pulse. After the pulse, the samples are again in the accept-
ance window and the correction is again calculated. In ad-
dition  to  minimise  the  inﬂuence  of  the  pulses,  a  conﬁg-
urable  number  of  samples  can  be  excluded  pre  and  post 
the pulse.

300

s
t
n
u
o
c
 
C
D
A

250

200

150

100

50

0

0

250

s
t
n
u
o
c
 
C
D
A

200

150

100

50

0

-50

0

C
D
A

500

400

300

200

100

0

Event 1

Event 2 Event 3

Event 4

5

10

15

20

25

30

Time a.u.

In this picture a low frequency pertubation as the black 
line is shown, the ALTRO AUTOCAL circuit detects and 
the BCSI removes this pertubation.

Another source of perturbations are systematic signals like 
the switching of the gating grid (->TPC). The removal of 
these  is  based  on  a  LuT  (Look  up  Table)  which  is  real-
ised  as  a  memory  in  the  ALTRO.  This  table  is  extracted 
from acquired empty events which means a normal data 
acquisition of the TPC just without tracks from a collision 
(->Conﬁguration).

5

10

15

20

25

30

Time a.u.

In this picture systematic pertubation the green line is 
shown, this is removed by the use of the LuT.

In addition the gain calibration can also be performed by 
this unit. The activation and the combinations of this dif-
ferent sub entities is conﬁgurable by several predeﬁned set-
ups as described in the ALTRO manual [n5]. 

TCF

The  ALTRO  was  optimised  for  the  TPC  type  used  in 
ALICE (ref->TPC) and the presequent PASA with the semi 
gaussian shaping signal. This combination creates signals 
with  a  fast  rise  time  (>1 ns)  followed  by  a  long  tail.  The 
eﬀectiveness of the later following zero suppression is not 
eﬃcient when the expected signal density is taken into ac-

14

s
t
n
u
o
c
 
C
D
A

180

160

140

120

100

80

60

40

20

0

-20

0

Inside a pulse,
the baseline is not
computed and
remains constant

Double Threshold
scheme for the BCSII

5

10

15

20

25

30

Time a.u.

This picture shows the double threshold signal following 
scheme of the BSC2. During a pulse the processing is 
frozen and the correction value is kept.

ZSU

The last processing entity in the chain is the zero suppres-
sion unit. When compressing data, the most obvious way 
is to remove zeros since they are not carrying information. 
In this case, these zeros are inbetween two pulses and they 
only  carry  noise.  For  this  urpose,  all  samples  which  are 
above a threshold are marked. Glitches are removed by re-
quiring more than one sample above the threshold. To not 
loose any information of the pulse additional samples can 
be  marked  as  to  keep  by  using  the  conﬁgurable  pre  and 
post  samples.  If  there  are  two  pulses  very  close  together 
they  are  merged  when  there  is  only  one  or  two  samples 
distance, because the DF (see below) adds for each found 
sequence two words. This merging increases the compres-
sion quality.

above-threshold samples

pre-samples

post-samples

fill-in samples

rejected glitches

dismissed samples

discarded
glitches

adjoined pre and
post samples

merged clusters

Here the behaviour of the ZSU is shown, it is configured 
to remove glitches of the length of on ADC above 
threshold.

DFU

When removing the samples in between the pulses one rel-
evant information gets lost, the time information. As men-
tioned above the DFU adds two words to each sequence, 
the ﬁrst is the time information and the second is the total 
length of the sequence. The time information is the time 
distance in number of samples after the trigger. With this 
additional information a decompression is again possible. 
In  addition  this  unit  bundles  the  10 bit  words  to  40 bit 
words since the ALTRO bus has a width of 40 bit. When 
the last 40 bit word is not completely ﬁlled the hexadeci-
mal  pattern  0x2AA  will  be  added  as  often  as  needed  to 
complete this word. Finally the trailer word with a length 
of 40 bit is added. It consists of the total number of 10 bit 
words before and the “Hardware Address” which is unique 
for  each  ALTRO-channel  in  one  readout  partition  (see 
rcu/readout),  the  unused  start  is  ﬁlled  with  the  pattern 
0x2AAA and in between the numbers a 0xA.

This schematic shows the ALTRO format packing. “S” 
means Sample, “T” means the time position and the 
number the complete length of a sequence.

MEB

To  reduce  the  dead  time,  the  data  transfer  is  decoupled 
from  the  data  acquisition  of  the  detector  electronic.  For 
this purpose the ALTRO has a memory of 1024·40 bit and 
can be blocked in two, four and eight blocks. On arrival 
of a level one trigger the acquisition of an event is started 
andwill be stored in the memory, if a level two trigger ar-
rives the event is frozen in the memory and stays there until 
a CHRDO (Channel Readout) command is send [n5]. If 
after a level one trigger again a level one trigger occurs, the 
memory will just be overwritten by the next coming event 
With this scheme the FEE can cope with bursts of events by 
ﬁlling up the buﬀers faster than the read out, which then 
catches up when the event rate is smaller.

15

Backplane

The ALTRO-bus from each front end card is ﬁrst connect-
ed to the two backplane PCBs. The backplane also delivers 
the termination support for the bus. For each patch in one 
TPC sector there is a diﬀerent backplane due to the fact, 
that the number of FEC is diﬀering. There are always two 
branches.[n1, n14]

Here the prefinal RCU with both daughter boards (SIU & 
DCS) and connected on the backside the backplane with 
two FEC is shown.

Both backplanes fully equipped with FEC are shown. 
The connector to the RCU is in the middle and the 
termination is on both ends.

The SIU (Source Interface Unit) is the detector end of the 
DDL (Detector Data Link) which is then connected to the 
ALICE  DAQ  system.  The  SIU  uses  a  32 bit  half  duplex 
data  bus  for  the  interface  from  the  RCU  and  an  optical 
transceiver to the DDL.[n16]

SIU

DCS

The  DCS  (Detector  Control  System)  daughter  Board  is 
running  a  complete  embedded  LINUX  called  μClinux 
[n12]  on  an  ARM  922T  [n11]  hardwired  logic  on  an 
FPGA. This is the end of the DCS system for the TPC, so 
this board handles then the conﬁguration of the FEC and 
the RCU and also the control of the status of the boards. 
The Trigger receiver is also located here. It delivers the L1 
and L2 trigger information to the FEE.[n16]

RCU

The RCU (Readout Control Unit) [n10,n15] is connected 
to the two branches of the FEC and has connectors for two 
daughter  boards  which  are  the  later  explained  (SIU  and 
DCS Board). The RCU provides the bus termination. The 
purpose of the RCU is to be the interface in between the 
FEE and the DAQ (Data Acquisition) and DCS. There is 
a ALTRO Module for the communication via the ALTRO 
bus with the ALTROs and the Board Controller. For the 
communication via the I2C link to the Board Controller 
there is the slow control module. The read out data is pre-
pared by the Data Sampler to cope with the needs of the 
SIU.  The  control  over  the  RCU  is  handled  by  the  DCS 
card  which  needs  three  interfaces.  One  is  the  conﬁgura-
tion of the RCU FPGA itself, to change the ﬁrmware on 
updates and failures induced by single event upsets. There 
is the interface for the DCS system to control and conﬁg-
ure  the  Front  End  and  to  the  TTCRX  (TT:Trigger  and 
C:Controll  and  Rx:Reciever)  which  delivers  the  diﬀerent 
Trigger  information  [n16].  Parts  of  the  Trigger  informa-
tion have to be delivered to the SIU to build up the DATE 
(Data Acquisition Test Environment) event header.

16

17

Jitter

Jitter

culation. For each channel the RMS (Root Mean Square) 
was calculated and all are collected in the plot shown be-
low.

Each  clock  has  a  certain  amount  of  jitter,  which 

means that the period in between two clock pulses 
is not exactly constant. For digital circuits this is no 
problem  since  all  components  are  running  in  sync  with 
the clock, but when working with analog signals the inac-
curacy in the knowledge of the exact time position leads to 
an inaccuracy in the measurement of the signal, because 
the time point when measuring is not exactly known. The 
clock accuracy is a trade oﬀ between the needed time accu-
racy of the measurement and the eﬀort to build the clock. 
Since in this case the clock is needed on all FEC on the 
TPC a complicated clock scheme is complex and expensive. 
To  ﬁnd  out  the  needed  accuracy  a  simulation  was  done. 
This simulation is described and the results are shown in 
this chapter.

20000

18000

16000

14000

12000

10000

8000

6000

4000

2000

0
0

DATA: run0060
Raw Data
RMS: 0.053768
Mean: 0.637804
Altro++ calculation
RMS: 0.055314
Mean: 0.642353

Simulation

The  starting  point  is  the  signal  generated  by  the  PASA, 
which has the shape of a gamma4 function.

f (t) =

k

0

�

�

t−t0
τ

· e−4 t−t0

τ

4

�

t > 0
t ≤ 0 

with the parameters t0 as the starting time τ as the relaxa-
tion time and k is deﬁned as:

k = Ae4

 

with A as the amplitude. The four is in both cases the order 
of the function which is deﬁned by the PASA. This func-
tion as shown below is sampled without jitter and sampled 
at slightly diﬀerent positions to simulate the jitter, which 
results in a amplitude error.

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

Noise spetrum of the ALTRO, the mean RMS value is 0.6.

This leads to simulate the noise using a gaussian probability 
distribution with a σ of 0.6. The jitter is simulated using 
also a gaussian distributed noise generator with a varying 
width which represents the assumed clock accuracy. To cir-
cumvent systematic errors by using always the same start-
ing position t0 it is also randomly varied. All parameters are 
shown in the table:

(f14)

Parameter
A
t0

min
25
-0.5

1.5

(f15)

tau

max
1000
0.5

1.5

jitter

sigma = 0

sigma = 2ns

noise

sigma=0.6

Parameters of the simulation

comment
20 steps
ﬂat random

ﬁxed

gaussian 
random

gaussian 
random

���������������������
��������������������������
�����������

This three sets of samples: only noise, only jitter, noise and 
jitter are then rounded to integer values to add the quan-
tisation  noise  and  ﬁtted  separately  using  the  same  func-
tion as ﬁt function. The start parameters for the ﬁt are the 
original  values  of  the  generated  Pulse.  There  are  two  im-
portant parameters of a cluster, the time position and the 
amplitude. To measure the impact of the jitter the diﬀer-
ence of the cluster parameters of the original pulse and the 
disturbed one are calculated as shown.

1000

800

600

400

200

0
0

20

1

2

3

4

5

6

7

The generated signal (black line) the correct sample, the 
due to jitter disturbed time position and the read sample 
are shown.

On this values the noise of the ALTRO is added. The noise 
was extracted from the data recorded for the pedestal cal-

��������������������

]
s
n
[
 

S
M
R

1.6

1.4

1.2

1

0.8

0.6

0.4

0.2

0
0

s
t
n
u
o
C

6

10

5

10

4

10

3

10

2

10

2

1.8

1.6

1.4

1.2

1

0.8

0.6

0.4

0.2

0
0

100

80

60

40

20

]

C
D
A

[
 
a
m
g
i
s

1

0.8

0.6

0.4

0.2

0
0

0
0

1

2
���������������

3

4

5

6

7

Here the generated pulse and the to the distorted data 
points ﬁtted pulse is shown.

Result 

This two values of 2000 diﬀerent sets of pulses generated 
as  explained  are  collected  and  from  this  distribution  the 
RMS  is  calculated.  For  the  amplitude  diﬀerence  the  dis-
tribution is ﬁtted by a gaussian to get more stable results, 
since  when  the  ﬁt  is  not  converging  this  leads  to  big  dif-
ferences. The  Plot  below  is  showing  the  introduced  error 
when increasing the amount of jitter by widening the σ of 
the random generator and a ﬁxed amplitude of 100 for the 
amplitude precision and below for the time accuracy. The 
red lines shows the inﬂuence of the noise alone, the green 
of the jitter alone and the black of both. As expected the 
noise introduces a constant error and the error of the jitter 
increases with the decreasing accuracy of the clock. 

0.2

0.4

0.6

0.8

1

1.2

1.4

1.6

1.8

2
ns

Difference in the time measurment with increasing 
amount of jitter. Red is the inﬂuence of the noise only, 
green the inﬂuence of the jitter alone and black is the 
combination of both.

The ADC value of a cluster in the TPC data is less probable 
the higher the value is. This is shown in the plot below:

0

50

100

150

200

250
ADC-value

Distribution of the ADC values in an simulated event of 
the TPC (ref anders)

The simulation was done for 17 diﬀerent amplitudes from 
25 to 1000. The results are shown in the two plots below for 
the amplitude error and the time error.

0.2

0.4

0.6

0.8

1

1.2

1.4

1.6

1.8

2
ns

Difference in the amplitude measurment with increasing 
amount of jitter. Red is the inﬂuence of the noise only, 
green the inﬂuence of the jitter alone and black is the 
combination of both.

100

200

300

400

500

600

700

800

900

1000

Difference in the amplitude measurment through all 
simulated amplitudes and jitter. The red line indicates the 
crossover in between the noise and the jitter as main 
error source.

10

9

8

7

6

5

4

3

2

1

21

0.03

0.025

0.02

0.015

0.01

0.005

100

200

300

400

500

600

700

800

900

1000

Difference in the amplitude measurment through all 
simulated amplitudes and jitter. The red line indicates the 
crossover in between the noise and the jitter as main 
error source.

The red line indicated the crossover in between the noise as 
the dominant source of the error and the jitter.
In the following two plots the cut along the foreseen clock 
inaccuracy of 1 ns is shown.

200

400

600

800

1000

Amplitude [ADC]

Difference in the amplitude measurment at the forseen 
clock accuracy.

Spread of jitter = 1.00 ns
Jitter and Noise
Jitter
Noise

Spread of jitter = 1.00 ns

Jitter and Noise

  

Jitter

Noise

200

400

600

800

1000

Amplitude [ADC]

Difference in the time measurment at the forseen clock 
accuracy.

2

1.8

1.6

1.4

1.2

1

0.8

0.6

0.4

0.2

0
0

]

C
D
A

[
 
a
m
g
i
s

5

4

3

2

1

0
0

]

C
D
A

[
 

S
M
R

-210

-3

10

-410

0

22

23

Prototype Environment

Prototype

A small  prototype  was  build  to  do  a  TPC  perfor-

mace test. It consists of one IROC (Inner Readout 
Chamber) module on one side and a complete ﬁeld-
cage  with  a  central  membrane  in  a  gas  tight  aluminium 
box.  First  tests  were  done  to  verify  the  electrostatic  be-
haviour without a readout system. Later for the complete 
TPC performance test, it was was equipped with four FEC 
boards and a cosmic ray triggering setup using szintilators. 
At this time the front end cards were uncooled and the test 
TPC was ﬂooded with ArCO2 gas mixture. Later a simple 
cooling  setup  and  four  additional  cards  were  added  and 
the gas mixture was changed to NeCO2. The cooling sys-
tem is based on a underpressure liquid cooling and a cop-
per shielding around the FEC as shown in the FEE chap-
ter. This setup was used to gather some statistics of cosmic 
particles on MIPs as the most probable particle, showers as 
an estimate for the high multiplicity environment and par-
ticles whith a big ionisation to see saturation eﬀects, as also 
since two diﬀerent gas mixtures were used to study diﬀer-
ences in the signals.The data is available at [n21]

length

diameter

drift length

Anode Voltage

Fieldcage Voltage

Gas Mixtures

2.7m

1.1m

1.35m

1245V

55.8 kV (400 V/cm)
90% Ar 10% CO2
90% Ne 10% CO2
90% Ne 5% N2 5% CO2

Detector Parameters of the test TPC

IROC & Mapping

The endcaps of the ALICE TPC are circular and parted in 
18  trapezoidal  segments  on  each  side.  The  pad  plane  fol-
lows this scheme and is subdevided in two parts, the IROC 
and  OROC  (Outer  Readout  Chamber)  as  shown  in  the 
scheme in the next column. Another subdivision is given 
by the ordering of the FEC, there are six rows of them, two 
on  the  IROC  and  four  on  the  OROC,  this  subdivisions 
are called patches. Due to this trapezodial form so diﬀer-
ent number of pads per row a trivial direct mapping of the 
pad to one readout channel is not possible. Each pad has 
an unique number per ROC (Readout Chamber), starting 
with 0 as the left pad in the innermost row and then count-
ing every pad until the outermost row. A table of the pad 
index  correlation  to  pad  and  row,  FEC,  cable,  connector 
and pin for the IROC and OROC exists.[n18]

26

Distribution of the FEC on the Readout chamber. Both 
the IROC and OROC are shown.(IROC+OROCin pic)

Data Aquisition and Conﬁguration

The  data  was  read  out  via  the  ALTRO  bus  with  an  old 
version  of  the  RCU  often  called  RCUI  via  a  ﬂat  cable. 
This  version  was  based  an  a  commercial  PCI  (Peripheral 
Component Interconnect) card, a borad from PLDA [n1] 
with an FPGA and a commercial PCI core also from PLDA 
[n2].  In  addition  there  was  a  mezzanine  card  put  on  top 
of    the  RCUI  to  interface  to  the  ALTRO  bus.  The  host 
operating system was LINUX [n20] with a low level PCI 
driver  to  interface  to  the  RCU.  The  registers  of  the  ﬁrm-
ware in the FPGA were mapped in the address space of the 
computer. A set of small C [n3] routines handle the com-
munication to the driver as also the coding and decoding 
of  the  readout  memory  (->altroFormat).  This  C  routines 
are interfaces with a LabVIEW [n4] based GUI (Graphical 
User Interface). The LabVIEW software also implements 
the control, setup logic, graphical displays of the running 
status and storing of the data. The choice of LabVIEW de-
termined the data format and the speed of the aquisition. 
The speed was limitid to roughly storing 2 MByte/s with 
the equvalent of an 1 Hz event rate, since the trigger rate 
for  cosmics,  espeacially  when  adopting  the  trigger  to  se-
lect high multiplicity or high ionisation events the speed 
was suﬃcient. The data format as descried below is big en-
dian. There is the historical approach of building little en-
dian systems which means they are working in low  byte 
high byte order, since this approach needed less transistors. 
Outdated CPU architectures like x86 (for the Intel IA32 
line and AMD Intel compatible line in 32 and 64 bit) the 
Intel Itanium and the Digital Alpha are using this scheme. 

And there are the big endian systems, which are working 
in  order,  so  high  byte  low  byte.  This  scheme  is  more  ef-
ﬁcient in handling integer data. Most CPU architectures 
are  following  this  paradigm  like  the  IBM  and  Motorola 
PowerPC  platform,  SPARC  and  MIPS.  Since  LabVIEW 
has its origin on big endian systems they use only this for-
mat when writing binary data independent on the hosting 
platform.  When  reading  this  ﬁles  with  another  program 
or programming language on an big endian system there 
is no problem, but when reading them on a little endian 
system  the  byte  order  has  to  be  swapped  as  described  in 
the following table.

length

C++ name

1 Byte

2 Byte

4 Byte

char

short

long int

8 Byte

long long

Big Endian
B0
B1,B0
B3,B2,B1,B0
B7,B6, ... , B1,B0

Little Endian
B0
B0,B1
B0,B1,B2,B3
B0,B1, ... B7,B8

Table showing the difference in the big endian and little 
endian coding.

Data Format One

The ﬁrst data format is in principle no format, as the data 
is just written as a continous stream of the samples in one 
channel  as  big  endian  coded  short  integers  (16  bit)  num-
bers  and  increasing  ALTRO  adress.  Without  the  knowl-
edge of the conﬁguration as number of samples per chan-
nel and number of channels, which are not included in the 
ﬁle the data is not decodable.

Data Format Two

The second data format added a header in front of the data, 
which  is  then  saved  as  the  ﬁrst  format.  The  header  con-
sists of the number of channels, the list of active channels, 
again the number of channels, the number of samples per 
channel and the data block. The double number of chan-
nels is only because of the way LabVIEW stored the data. 
In the header short and long ints (32 bit) are used.

10

5

0

-5

-10

0

Format 1

#channels

channellist

#channels

#samples

-

-

-

-

#channel * short int

Format 2

long int

long int

long int

data

n * short int

#channels * 
#samples *short int

Data formats of the LabVIEW based readout Software

Monitoring

In this set a quasi online monitoring system was integrat-
ed  to  oﬀer  a  way  for  a  fast  visual  inspection  of  the  data. 
Implementing a monitor by using LabVIEW would intro-
duce a number of drawbacks like low speed, high complex-

ity in debugging, complicated maintainance and expencive, 
since  it  would  depend  on  a  commercial  product.  As  plat-
form for the monitoring ROOT [n5], a well known data 
analysis framework was chosen. A set of C++ [n6] classes 
were  developed  to  have  a  fast  data  decoding  and  analy-
sis and packed in one .so (Shared Object). The interactive 
part is based on a set of CINT (C Interpreter) [n7] macros 
wich call the functions and classes of the .so. This adjudica-
tion of extending ROOT with the needed classes made the 
monitoring package independent on the running platform, 
as  long  ROOT  is  available  [n19].  Since  the  online  moni-
tor was running in the interactive mode of ROOT all plot 
manipulation capabilities are available as well as the save 
functionality. The monitoring was working on an request 
base, so the user requests a new event, the newest stored ﬁle 
is read and then displayed.
As stated before the data is stored in the readout order which 
means that starting from FEC to the last and in each FEC 
the channels are sorted in ALTRO addresses. Since there 
are four ALTROs on each side and the connection lines to 
the PASA are optimised to be short, the addressing on the 
top side is in FEC-channel order and the ones on the back-
side in the reverse order. This internal ordering was added 
to the mapping table of the IROC. The pad index was re-
placed by the channel number in readout order (appendix 
table). Unfortunatly this means that every conﬁguration of 
FEC equipped needs another mapping table. In the picture 
below  the  topview  of  the  maximum  ADC  value  of  each 
channel of the eight FEC on the test TPC is shown.

Event: "/Volumes/TPCData/RUNS/run0052/evt0129"   Timebin: 0-999

100

80

60

40

20

0

27

10

20

30

40

50

60

Row (IROC)

Topview of an cosmic event of the test TPC equiped with 
8 FEC.

To get a usefull topview of the TPC there were two meth-
ods  to  calculate  the  baseline,  one  online  and  one  oﬄine  
and substract it from each channel. The online version is 
based on a double pass calculation, the ﬁrst pass calculates 
the mean over all timebins egardless on the variance, the 
second  pass  then  sets  a  double  threshold  scheme  around 
the previously calculated baseline and recalculates it only 
using  the  samples  inside  the  window.  For  low  occupan-
cy events this approach provided results with a negligable 
error  compared  to  the  oﬄine  version.  The  second  called 
oﬄine  method  favours  a  special  pedestal  run  or  uses  a 
normal data run. When having a pedestal run, the mean 
of  each  channel  is  calculated  and  then  averaged  over  all 
events  and  stored.  The  scheme  is  slightly  more  complex 
when having no special run. Then only channels without 

125

120

115

110

105

100

95

110

105

100

95

90

85

80

a  signal  are  used  for  the  calculation,  which  was  possible 
since most cosmic events had a very low occupancy. The 
pedestals  were  stored  in  the  format  readout  number  and 
pedestal. (LTstability ?)
From the topview the channel view was accesible by just 
moving the mouse over the pads. As soon as a new pad gets 
the focus the channel view was updated with a maximum 
rate of more than 10 Hz. In the channel view the baseline, 
a  moving  average  calculation,  the  ALTRO++  calculation 
(->ALTRO++)  and  a  pulse  ﬁnder  as  also  a  zoomed  view 
around the baseline to study the signal tail was available 
and conﬁgurable.

520

500

480

460

440

420

400

380

360

340

Event: 15 Row=58 Pad=50 RMS=79.148216 Channel=488 maxADC =32

Peak[0] mean = 87.916667 charge =48.000000
 maxadc = 20 ratio =2.400000
Peak[1] mean = 364.074074 charge =27.000000
 maxadc = 11 ratio =2.454545
Peak[2] mean = 460.644860 charge =107.000000
 maxadc = 32 ratio =3.343750

0

100

200

300

400

500

600

700

800

900

Test Beam

Pad view of a cosmic event. The black line is the signal, the 
red line is the baseline, the green lines are at the position 
of the wheighted mean of the peak. In the grey box the 
parameters of each found peak are shown.

Zoom around Baseline

45

40

35

30

25

20

15

10

5

46

48

50

52

54

56

58

Row view of an cosmic event. Red crosses are the 
sequence means and the green circle is the cluster 
centroid.

The conﬁguration was splittet in two ﬁles, one for the con-
ﬁguration of the monitor behaviour, like screen resolution 
or the conﬁguration of the moving average display and the 
other  for  the  run  related  parameters  like  the  path  to  the 
run ﬁles or the pedestal ﬁles. in appendix ?
As an independ entity there was a macro which could draw 
a 3D representation of the ADC in the event. This used the 
OpenGL (Open Graphics Library) [n8] capabilities of root 
which alowed to zoom, move and rotate in real time.

This year in spring there was a beam test with the described 
setup in the PS (Proton Synchrotron) testbeam, but fully 
equipped with FECs and cooling as well as the use of the 
gating grid during data aquisition. Since the test beam was 
also seen as integration test of the complete data and trig-
ger chain a preversion of the ﬁnal RCU, the DCS Board 
a DATE detector readout and a small Trigger setup were 
used. The previously used ﬂat cable was exchanged by the 
current version of the backplane. This amount of changes 
had a big impact on the software needed to conﬁgure, con-
trol and monitor the TPC. The TPC gas was changed to 
the ﬁnal ALICE choise of Neon Nitrogen CO2. In addition 
to the TPC there was a silicon telescope and a TOF detec-
tor present and included in the trigger and data aquisition 
system.

Conﬁguration

The conﬁguration of the front end electronics is completly 
diﬀerent compared to the previous setup. The prior setup 
with  a  PCI  based  RCU  has  changed,  there  are  now  two 
paths to the RCU, one is the DDL via the provided low 
level  communication  library  and  the  FeC2  (Front  End 
Control  and  Conﬁguration)  script  language  for  easy  de-
velopment and debugging data transfer [n9] and a ethernet 
connection  to  the  DCS  board.  The  internal  communica-
tion layer of the DCS board and the steering host above is 
based on the DIM (Distributed Information Management) 
client server system and is called InterCom Layer [n10]. Its 
forseen  to  implement  the  InterCom  layer  also  over  the 
DDL to get the same acces via the diﬀerent physical layers. 
This will replace the FeC2 script language or the low level 

150

200

250

300

350

400

450

500

550

Timebin

Zoomed view of a pad of an cosmic event. The black line 
is the signal, the blue line is the moving average ant the 
pink line is the ALTRO++ simulation.

When clicking on a pad and holding the button, the pad 
view was frozen to keep the wanted pad to allow to modify 
the  plot  like  zooming  or  ﬁtting  the  signal  or  saving  the 
plot  as  eps,  ps,  svg  or  gif  (eps:  Encapsulated  Postscript, 
ps: Postscript, svg: Scalable Vector Graphics Format, gif: 
Graphics Interchange Format).
On a double click the row view was opened. Here the ADC 
are  displayed  color  coded,  a  cluster  ﬁnder  was  available, 
both the centroids of the pulse ﬁnder in each channel and 
then the merged cluster were displayable.

28

DDL  communication  library  which  have  no  user  C/C++ 
interface.

31                           24                             16                           8                               0

Readout

The readout is now done via the DDL and the DATE sys-
tem, which made a new online monitoring scheme necas-
sary. When the electronic is set up the data aquisition is 
started. There  are  two  patches  in  one  IROC  so  also  two 
RCU cards and two DDLs for the aquisition system. The 
data of this two links as well as the data from the silicon 
telescope and the TOF are then merged in one DATE ﬁle.

Data Storage

During  this  test  beam  roughly  0.5  TB  of  data  were  tak-
en.  This  data  was  ﬁrstly  stored  on  the  local  discs  of  the 
DATE  computers  at  the  experiment  and  then  tranfered 
to  CASTOR  (CERN  Advanced  Storage  Manager)  a 
CERN central taping system for the LHC data [n22,n23]. 
Irritatingly oﬀ site access to the data in CASTOR is com-
plicated and insecure.

Data Format

The  usage  of  DATE  as  readout  systen  also  introduced  a 
complete new data format as well as the usage of the new 
RCU,  which  introduced  the  ﬁnal  ALTRO  format.  Each 
RCU reads out both branches of one complete patch and 
converts  this  40  bit  data  into  32  bit  data  since  the  DDL 
only  supports  this.  This  is  done  as  shown  in  the  scheme 
below.

31                                 24                                       16                                  8

0

ALTRO WORD1[31..0]

ALTRO WORD2[23..0]

ALTRO WORD3[15..0]

ALTRO WORD2[40..24]

ALTRO WORD1
[40..32]

ALTRO WORD4[7..0]

ALTRO WORD3[40..16]

ALTRO WORD4[40..8]

Translation scheme to convert 40 bit into 32 bit by the 
RCU data sampler.

So four 40 bit ALTRO words are converted in ﬁve 32 bit 
words. Ahead this data block a header is added which is 
similar  to  the  standard  DATE  event  header.  The  header 
consists of seven 32 bit words and is shown below.

Format Version

L1 Trigger Type

Res. MBZ

[24-31]

[16-23]

Event ID 1
(Bunch Crossing)
[0-11]

Res. MBZ

Event ID 2 (Orbit Number) [0-23]

Block Att.[23-31]

Participating Sub-Detecors[0-23]

Res. BZ

Status & ErrorBits [12-27]

Mini-Event ID [0-11]

(1)

(2)

Res. MBZ. [18-27]

Trigger classes [0-17]

Trigger classes [0-31] Low

(4)

(5)

ROI High [0-31]

(3)

High

ALTRO CHANNEL 1 DATA

(6)
ALTRO CHANNEL 2 DATA

ROI L.

[28-31]

(6)
…….

…….

(6)

ALTRO CHANNEL n-1 DATA

(6)
ALTRO CHANNEL n DATA

Event Length

(7)

Complete data block generated by one RCU at the test 
beam. The blue entries are set, the black ones are ﬁxed 
to zero.

At the end the total number of 32 bit words is added, this is 
extremly important because its needed to retranslate the 32 
bit data back into 40 bit. This shown block is calles “pay-
load” in the DATE language.
From the RCU this data is transfered via the SIU into the 
DATE  system  which  collects  the  data  from  all  diﬀerent 
sources and merges this to one event. DATE collects sev-
eral events in an quite unhandy ﬁle format by just concate-
nating them in the event number order. Each event starts 
with an event header composed of the GDC (Global Data 
Conentrator) which consists of the total event size the event 
id, the event type, the run id and other by DATE used in-
formations. Importand is the event id, since there are cer-
tain types of events without physical relevance, which have 
to be excluded from any analysis or monitoring. After the 
event  header  a  sub  event  header  follows,  which  includes 
the information coming from the ﬁrst LDC (Local Data 
Conentrator)  which  ﬁnished  the  data  transfer.  Now  the 
equipment  header  follows,  it  consits  of  the  equipment  id 
and  additional  data  of  each  DDL,  since  it  is  possible  to 
have several DDLs with one LDC as target. Now ﬁnally 
the previously described data block is concatenated. In the 
case of the test beam there were both DDLs plugged in one 
LDC,  so  after  the  ﬁrst  data  payload  the  next  eqiupment 
header followed with the data block. The equipment id is 
used to identify the diﬀerent RCUs so the diﬀerent patches 
of the TPC, it is a integer number and unfortunatly the 
meaning of each number is nowhere included in the ﬁles 
and also no ﬁxed deﬁnition exists, so to decode the data 
it is mandatory to also know the exact setup of DATE. If 
there  are  additional  LDCs  in  the  setup  a  new  sub  even 
header is concatenated with the previusly described equip-

29

40

20

0

-20

-40

140

120

100

80

60

40

20

0
0

ment  header  and  data  payload.  The  information  of  how 
many equipments are coming after each sub event header 
is stored nowhere, so no crosscheck of the event structure 
is possible. At the testbeam there were two additional LDC 
one for the silicon telescope and one for the TOF. In the 
ﬁles  the  order  of  the  LDCs  is  mixed  since  as  described 
above the ﬁrst ﬁnished is the ﬁrst stored. Irritatingly also 
in  the  event  header  the  number  of  following  sub  events 
is not stored. The only way to get back on track if an er-
ror is in the event structure would be by scanning for the 
event magic number in the event header which is ﬁxed and 
in principle used to identify if a endiannes swap happend. 
Irritatingly this sequence can also occur in the data so this 
method is insecure. In the DATE ﬁles aquired during the 
test beam some do not have a correct structure. All read-
able events up to the point of the uncorrect structure are 
used and the remaining events are discarded. At last in an 
event ﬁle nowhere a pointer to the included events or even 
the number of the events is stored, the complete event has 
to be parsed to get this information. It would have been a 
trivial task to concatenate this information at the end of 
the ﬁle. scheme of format

Monitoring

Plenty of changes and new implementations were needed as 
also  backporting  to  an  completly  outdated  operating  sys-
tem (Red Hat 7.3) and non standard compiler (gcc 2.96). 
At ﬁrst the idea of having the written event ﬁles as inter-
face was not possible anymore, since the DATE group did 
not want this simple approach. Now there are two running 
modes in the online monitor one uses a DATE library to 
access the data online and the other one which reads stored 
DATE  ﬁles.  Irritatingly  there  was  neither  a  library  nor  a 
class which encapsulates the interal DATE format which 
is roughly explained above [n11, n12] and also the availabe 
documentation was outdated and incomplete. Several C++ 
classes  were  implemented  to  get  an  encapsulation  of  the 
monitoring library and of the ﬁle access. Based on this a 
class  to  encapsulate  the  DATE  format  was  implemented, 
it uses a slightly modiﬁed version of the provided event.h 
header ﬁle to decode the header and gives access to the data 
payload and the included information in the header. The 
change in the header ﬁle was neccassary due to an incom-
patibility with CINT.
The  online  monitor  extracts  the  two  data  blocks  of  each 
RCU and ﬁrst translates the 32 bit into 40 bit which are 
stored  in  64  bit  integers  and  then  decodes  the  internal 
ALTRO  data.  At  the  moment  the  RCU  ﬁrmware  does 
not include the branch number into the ALTRO address, 
so  there  every  address  is  doubled.  This  is  cured  via  the 
AltroFormat class which searches for a falling edge to ﬁnd 
the crossover point in the branch and then sets the twelfth 
bit to code the branch. Both encoded data blocks are then 
merged  and  the  double  addresses  are  eliminated  setting 
the patchnumber at the thirteenth bit. This can also be ex-
tended for more patches by the usage of higher bits. In the 
mapping the readout count number was exchanged with 
the patched ALTRO address which is now unique for each 
channel.

30

Event: "355"   Timebin: 0-1000

100

90

80

70

60

50

40

30

20

10

0

30

35

40

45

50

55

60

Row (IROC)

Topview of an test beam event of the fully equipped test 
TPC. The beam is entering the TPC from the left. REDO

Another change is visible in the pad view. There are always 
12 samples at zero in the start, this is due the length of the 
processing pipeline of the ALTRO [n14]. Additionaly the 
length of each channel is not known, this is set at the time 
when the ALTRO is conﬁgured. Since this is done manu-
ally and independent of the data aquisition so this informa-
tion is stored nowhere. The structure in the beginning of 
the channel is induced by the switching of the gating grid.

Event: 355 Row=58 Pad=41 Channel=4456 maxADC =6

100

200

300

400

500

600

700

800

900

Timebin

1000

Pad view of a channel from a test beam event. The first 
12 samples are zero due to the length of the processing 
pipeline of the ALTRO. The aquisition length was 
conﬁgured to 500 timebins. The structure in the start is 
induced by the switching of the gating grid.

This  information  could  have  been  extracted  from  each 
ALTRO  coded  channel  as  long  the  zero  suppression  is 
turned oﬀ. It was forseen to also take data including the 
zero suppression but there were problems in conﬁguring all 
channels with the correct baseline which is mandatory.
There  is  a  monitoring  sub  system  from  the  DATE  group 
which was not available during the test beam since it could 
not  handle  the  TPC  data  and  also  the  scheme  to  imple-
ment the monitoring of the data in the data aquisition sys-
tem is questionable.

HLT

In  the  testbeam  also  the  HLT  was  included  as  a  data  er-
ciever and also producer. The HLT gets the data payload of 
both RCUs. In the HLT publisher subscriber [n15,n16,n17] 
system for the data processing the AltroFormat class was 
included to decode the ALTRO data. Unfortunatly during 
the test beam there was not enough time to also complete  
the monitoring to run as a HLT client.

31

ALTRO Parameter Optimising

Parameter Optimising

problems  are  currently  investigated  at  the  FEE  group  at 
CERN [n1].

The digital processor of the ALTRO has to be accom-

modated to the detector response of the ALICE TPC 
by conﬁguring the diﬀerent processing units in the 
digital processor. For each of this units a diﬀerent scheme 
to extract the parameters has to be used. Since the eﬀects 
of the processing are not completely reversible it is impor-
tant to have a good crosscheck of the inﬂuence of the pa-
rameters  on  the  data  and  the  wanted  impact  during  the 
extraction.

Result

An interesting part of the signal is the inﬂuence of the gat-
ing grid switching, this should be a systematic eﬀect and 
constant over time. The plot below shows the signal, the 
corresponding  baseline  pattern  and  the  result  of  the  cor-
rection.

Event: 473 Row=24 Pad=22 Channel=622 maxADC =1 count =4753

90

80

70

60

50

40

30

20

10

0

Slope

20000

18000

16000

14000

12000

10000

8000

6000

4000

2000

BCS1 Parameters

Depending on the working mode [n12] the BCS1 process-
ing part of the ALTRO needs to be conﬁgured with a cor-
rect pedestal pattern and an overall baseline for the chan-
nel. The extraction of the ﬁxed baseline is described in the 
previous chapter. To extract the pedestal pattern a similar 
approach was chosen, so all channels which have a signal at 
a time after the gating grid eﬀect are discarded. All accept-
ed channels are divided into their timebins and each ADC 
value is stored in an data array of the dimension channel 
and timebin as also in a diﬀerent array of the same dimen-
sion, the count of found valid ADCs per channel and time-
bin is saved. After processing all events the mean of this 
values is calculated and stored with the in ->Prototype de-
scribed extended hardware address as unique identiﬁer. The 
conﬁguration process to ﬁnally send this look up table to 
the ATLRO is described in this chapter in »Computing«.

Extraction

Based on a run taken at the TPC testbeam the look up ta-
ble was computed. At this step several problems occurred 
with the integrity of the stored data. A few data ﬁles weren’t 
completely  written  by  DATE  so  the  event  structure  was 
inconsistent,  these  ﬁles  were  discarded.  The  more  severe 
problem in many runs was that the hardware addresses of 
the read out ALTROs had errors. Three check criteria were 
implemented.  The  ﬁrst  check  just  veriﬁes  that  the  read 
hardware address is smaller than the biggest allowed one. 
This check is more important for the implementation of the 
mapping  table, since this is a boundary  unchecked  array, 
as usual in C/C++, and accessing a non existing position 
causes a crash of the program. The second check veriﬁed 
that the read hardware address is valid, so it is in the pre-
deﬁned  set  of  addresses  of  the  IROC  module.  The  third 
check veriﬁes that each address is unique. When a doublet 
is found the event is checked again in reverse order to ﬁnd 
the second address of the doublet. The error log of run 820 
is attached in the appendix as an example. To create a ped-
estal pattern a correct mapping is mandatory, so all events 
which have at least one error are discarded. The reason of 
this hardware address problems is most likely located at the 
RCU ﬁrmware level, since there was only a small amount 
of time to implement the ﬁrmware on the new RCU hard-
ware before the  start of the testbeam. Timing problems in 
the FPGA code could easily generate errors like this. These 

34

15

20

25

30

35

40

45

50

Signal of one channel. The black line is the ADC data, the 
blue line is the corresponding pedestal LuT, the red line is 
the ﬁxed pedestal and the pink line is the signal after LuT 
substruction. For a better visibility an arbitrary 10 was 
added.

The inﬂuence of the gating grid switching is substantially 
decreased but not completely removed as shown in the plot 
above.  To  get  a  general  overview  of  the  correction  capa-
bility on this data the instability of the data was analysed. 
Firstly each timebin of each channel over all events was ﬁt-
ted with a line to observe possible baseline variations over 
the  time.  In  the  plot  below  the  maximum  time  depend-
ence of the timebins past the inﬂuence of the gating grid 
is shown.

0

-1

-0.5

0

1
Maximum difference [ADC]

0.5

Maximum dispersion of the basline over the total 
acquisition time of this particular run. (run 820)

]

C
D
A

[
 

S
M
R

60

50

40

30

20

10

0
0

It leads to no relevant diﬀerence, since mostly every slope 
leads  to  a  maximum  diﬀerence  below  the  quantisation 
noise level. 

Timebin 22

Baseline Dispersion

Secondly the dispersion of each channel and timebin over 
all  events  was  calculated  using  the  RMS.  Only  channel,  
timebin doublets with a small inner noise can be suﬃcient-
ly corrected by the use of the LuT. For the time domain of 
the signals past the gating grid inﬂuence this inner noise is 
suﬃciently small and therefore the baseline is correctable. 
In the region inﬂuenced by the gating grid the eﬀect is not 
completely correctable, since the inner noise is beyond the 
correctable limits. In the plot below the RMS values of all 
channels an the speciﬁed timebin is shown. The peaks are 
artefacts of signals, since this calculation was done on data 
with signals, not like the ﬁnal approach to use a dedicated 
run  with  the  complete  detector  and  trigger  only  without 
signals inherited by tracks, called pedestal runs. The ﬁt of 
the line shows that the weight of this glitches is small.

hhist0078

3.5

2.5

4

3

2

1.5

1

0.5

0
0

1000

2000

3000

4000

5000

RMS values of timebin 78 over all channels. The mean 
value is 0.83 ADC including the visible glitches. It is 
expected that a pure pedestal run would have a mean 
value of around 0.7 ADC

In the Plot below the same inner noise is shown, but calcu-
lated at the timebin 22 which is the most inﬂuenced one, 
by the switching of the gating grid. Clearly a wide spread 
is visible, so the inﬂuence cannot be fully corrected. In the 
testbeam the electrical version of the gating grid pulser was 
not the ﬁnal one as also the trigger setup, this are two pos-
sible  sources  of  the  big  visible  variance.  Additionally  the 
grounding  of  the  two  patches  had  a  diﬀerent  quality  as 
clearly visible at the change at channel 3328 as also the dif-
ferent branches of the RCUs at 1664 and 4352.

1000

2000

3000

4000

5000
Channel

RMS values of timebin 22 over all channels. At this time 
the gating grid inﬂuence is maximum. The trend changes 
at channel 1664 and 4352 are the different branches and 
at 3328 the RCUs change.

As  shown  in  the  ﬁrst  plot  the  correction  of  the  baseline 
using  the  LuT  in  the  BCS1  is  working  on  real  data,  as 
also  the  inﬂuence  of  the  switching  of  the  gating  grid  is 
up to a certain extend removable. Since this analysis was 
only based on normal data instead dedicated pedestal data 
and the current version of the used detector electronics the 
conclusion is that the baseline correction of the complete 
data is possible.

TCF Parameters

The TCF has six parameters to be accommodated to the  
real  signal  shape,  which  means  that  this  parameters  are 
extracted  from  the  real  detector  response.  In  general  the 
accommodation  has  to  follow  the  working  principle  to 
shorten the signal but not to change the amplitude or cre-
ate over or under shoots after the pulse.
The basic fact, that the parameters are extracted from the 
data opens up two schemes to ﬁnd a general set of param-
eters. Firstly to create a universal pulse by selecting pulses 
from  the  data,  normalising  and  positioning  them.  From 
this  universal  pulse  the  parameter  set  would  be  derived. 
Secondly  to  search  for  the  best  set  by  extracting  the  op-
timum  parameters  for  each  pulse  individually  and  then 
choosing the best working set. This path has been imple-
mented and tested.

Pulse Finder

The ﬁrst step is to ﬁnd a good set of pulses. There are cer-
tain requirements at each of this pulses, they should have 
a suﬃcient amplitude, should not be disturbed by glitches 
or other pulses and the tail should be inside the acquisition 
window.  Technically  the  chain  to  ﬁnd  this  pulses  starts 
with  discarding  the  gating  grid  inﬂuenced  data  (discard 
ﬁrst 12 timebins of the pipeline delay of the ALTRO and 
26 of the gating grid inﬂuence), followed by the amplitude 
criteria. Only pulses which have an amplitude inside the set 
band (min: 600, max: 800) are accepted. The band should 
be narrow, to get similar pulses. It should accept high am-

35

plitudes to maximise the signal to noise ratio, but it should 
be smaller than the maximum amplitude (1024 ADC) to 
avoid overﬂow eﬀects. Also only one pulse per channel is 
allowed to avoid crossover eﬀects. The position of the pulse 
should  be  at  small  times  (max  position  timebin  200)  to 
have suﬃcient time in the acquisition window left to also 
include the tail. Some pulses have an extremely big integral 
compared to their amplitude, this can be created by several 
detector eﬀects. The ratio of amplitude and integral can be 
limited (< 4.5) to remove this type of pulses. All remaining 
signals are then saved with a smoothed tail to avoid inﬂu-
ences  by  the  noise.  The  smoothing  is  done  by  a  moving 
average calculation which starts after the pulse. All param-
eters are brieﬂy described in ->Appendix.
To crosscheck the set parameters there is an additional pro-
gram which reads the stored pulses and plots them into a 
.ps ﬁle, including the pulse information. Below an example 
pulse is shown.

3400 :esluP lanigirO

:tolP fo noitpircseD
war.700.028nur/0280nur//maeBtseT/netaD/semuloV/ :eliFtnevE
163 :muNtnevE
8242 :sserdAWH
18 :tratS
504 :htgneL
005613.12 :enilesaB
45 :daP
82 :woR
11 :CEF
7 :ortlA
1 :tnuoCecneuqeSretsulC
898926.38 :naeMdethgiehWecneuqeSretsulC
346 :CDAxaMretsulC
0 :htgneLretsulC
059604.3 :pmAsvtnIretsulC

006

005

004

003

002

001

0

0

05

001

051

002

052

003

053

004

Extracted pulse found by the pulse finder. The black line 
is the signal, the red line is the moving average and green 
is the resulting smoothed pulse. All pulse parameters are 
shown in the parameter box.

Parameter Set Finder

To derive a parameter set from a given signal a algorithm 
was  developed  and  implemented  in  MATLAB  [n3]  and 
is  described  in  [n2].  This  algorithm  was  re  implemented 
in  C++  and  optimised  to  reduce  the  calculation  time  by 
roughly two orders of magnitude. Each pulse will be proc-
essed and the optimum parameter set will be stored. Two 
stages of the TCF are used to remove the tail, the third is 
used for equalisation to keep the amplitude. Each stage can 
be individually conﬁgured in the parameter set ﬁnder.

Correlator

The correlator applies all parameter sets on one given pulse 
by  a  ﬂoating  point  version  of  the  TCF  algorithm  of  the 
ALTRO. The idea is to compare the optimal parameter set, 
so the set which was created by the parameter set ﬁnder for 
this pulse (optimal set), with the result of all other param-
eter sets of the other pulses (correlated set). To determine 
the  diﬀerence  in  the  resulting  pulses  three  quality  meas-
ures had been deﬁned as shown in the plot below. The ﬁrst 

36

one is the amplitude diﬀerence in between the optimal and 
the correlated set. The second one is the diﬀerence in the 
shortening of both sets. At a conﬁgurable level the length 
in between the two crossing points of the application of the 
optimum set and the correlated set is calculated. The third 
one is the diﬀerence in the undershoot integral after the 
pulse. All this diﬀerences are stored.

���������
����������

�������������

����������������

������������������

���������������������������

����������

TODO FIX SHORTENINGSchematic of the three pulses with 
the quality measures

Best Set Finder

The ﬁnal task is to ﬁnd the best set. The ﬁrst step is to deﬁne 
the wanted criteria, which is for the TCF the sustainment 
of the amplitude, minimising an undershoot and maximis-
ing the shortening of the tail as previously described. This 
is  preserved  by  the  parameter  set  ﬁnder.  For  the  best  set 
ﬁnder  the  criteria  is  that  the  diﬀerences  in  between  the 
optimal set and all correlated sets should be minimised. In 
other words the search is done to ﬁnd the set which works 
best for one pulse and works still works best on all other 
pulses.
For  this  purpose  two  schemes  were  implemented  which 
start from the same base as shown in the to scheme ﬂow-
charts on the next page. Firstly all diﬀerences in each of the 
quality measures of all correlations in between the result 
of the pulse with its optimum set and all results of this set 
with the other pulses are summed. This sum is then nor-
malised and the RMS of all diﬀerences is calculated.
The ﬁrst scheme “Weighted Quality” tries to combine this 
three  quality  measures  and  then  ﬁnd  the  best  one.  Each 
quality measure has a weighting parameter to vary the im-
portance. Additionally each measure can  be weighted by 
the RMS value to reward the set which has the most steady 
performance. All weighted values are then added and sort-
ed afterwards. The result is a sorted list starting with the 
set with the lowest value as the best one. This scheme has 
the advantage to be simple but the disadvantage that the 
addition of the diﬀerent measures is not explicit, since the 
normalised  and  weighted  distributions  can  have  big  dif-
ferences.

quite well but does a lot of harm to the rest. The next step 
is to inspect the pulses, since the reason of this behaviour 
can also be that there are strange pulses found. This pulses 
should be removed and then the calculation has to be start-
ed again with the parameter set ﬁnder.

1100:rNteSsbAhtdiW

Flowchart of the “Weighted Quality“ scheme. The greyish  
boxes mark the common block of the schemes.

The  second  scheme  “Weighted  Vote”  uses  the  idea  of  an 
election. Each measure can be weighted by the RMS value 
to reward the set with the most steady performance and is 
then sorted individually. There are now three uncorrelated 
elections  of  the  best  set  for  each  quality  measure.  These 
elections are combined by adding the slot number of the 
individual  elections.  The  set  with  the  lowest  number  of 
elections  is  the  best  one.  There  are  additional  weights  to 
vary the importance of the separate elections.

02

04

06

08

001

021

041

061

081

Example quality plot for the shortening amount. Negative 
values indicate a lenghtening of the pulse, positive vice 
versa. Overpopulated ends indicate a non optimal 
parameter set.

To have access to the original pulses and the results of the 
TCF using the optimum set of the pulse and the one which 
was found as the best set, a set of four plots per pulse is 
created.  Starting  with  an  overview  of  the  three  pulses. 
Followed by a zoom on each of the three quality measures.

1500:soPesluPteS

01

5

0

5-

01-

51-

02-

006

005

004

003

002

001

0

05

001

051

002

052

003

053

004

Overview over the three pulses. Black is the original signal, 
green is the signal processed with the optimum set and 
red is the signal with the correlated set.

Flowchart of the “Weighted Vote“ scheme. Add desc for 
vote streamThe greyish  boxes mark the common block 
of the schemes. The black lines indicate a data stream, the 
dashed line a slots stream.

This  scheme  is  more  complex  than  the  previous  one  but 
has the advantage that diﬀerences in the separate quality 
measures are replaced by a position.
To crosscheck the performance several plots are produced. 
As  a  summary  for  each  quality  measure  the  results  are 
sorted and plotted. Problematic pairs of set and pulse are 
then on the left and right due to their big diﬀerence to the 
optimum set. An indication that the best set is not work-
ing well is when the extreme ends are strongly populated, 
translated  this  means  that  the  set  works  on  many  pulses 

37

edutilpmA no mooZ

BSC2 & ZSU Parameters

The parameter set of this two units is correlated, since the 
goal is to keep all signal information but also get a good 
compression. As described in the ALTRO chapter the ZSU 
removes all samples below a threshold. It can happen that 
due to pile up eﬀects a small signal would fall below the 
ZSU  threshold.  This  can  be  cured  by  the  BSC2  unit,  as 
long as the BSC2 can track the baseline. When allowing 
the  BSC2  a  large  acceptance  window  it  can  happen  that 
it  will  follow  partially  a  signal  and  then  never  get  track 
again of the real baseline. With the use of the pre and post 
samples this overreaction cam be removed but the amount 
of baseline ADC values gets decreased so that again it can 
happen that the BSC2 looses track.
The ZSU can only work and keep all signals as considered 
if the BSC2 stays on track or the baseline variation of the 
channel is smaller than the threshold. Since clusters with a 
big charge have a visible, long living and signiﬁcant tail as 
discussed in chapter ->Iontail even low occupancy events 
can have baseline distortions harming small signals. When 
moving  to  high  occupancy  channels  the  distortion  in-
crease, so the basic assumption is that the optimising goal 
is to keep all clusters but maximise the compression, with-
out loosing cluster information.

5

01

51

02

52

Zoom on the Amplitude difference. Black is the original 
signal, green is the signal processed with the optimum set 
and red is the signal with the correlated set.

liaT no mooZ

5

01

51

02

52

03

53

04

54

05

Zoom on the Shortening difference. Black is the original 
signal, green is the signal processed with the optimum set 
and red is the signal with the correlated set

enilesaB no mooZ

05

001

051

002

052

003

053

004

Zoom on the Undershoot difference. Black is the original 
signal, green is the signal processed with the optimum set 
and red is the signal with the correlated set.

Flowchart of the BSC2 & ZSU finder

4.106

3.106

2.106

1.106

106

9.006

8.006

003

052

002

051

001

05

0

02

51

01

5

0

5-

01-

51-

02-

38

The  result  of  this  optimisation  gives  a  set  of  possible  pa-
rameters for each occupancy tested. This scheme is not im-
plemented but parts are existing, like the MAF and ZSU 
units as described int the following chapter.

Altro++

As  clearly  indicated  the  ALTRO  parameters  will  be  opti-
mised by using the digital chain of the ALTRO. To reduce 
the  overhead  in  complexity,  price  and  speed  when  intro-
ducing real hardware in this process a ALTRO simulator 
was developed. The aim was to build up a software module 
which reproduces exactly the results of an real chip on the 
cost of speed or precision. This includes a bit precise ﬁxed 
point implementation of the TCF not a more accurate ver-
sion which is possible with a CPU. The ALTRO++ can be 
conﬁgured to turn on and of individual units of the dig-
ital chain as also as an inconsistency the clipping can be 
turned of, which is impossible in the ALTRO. This feature 
is  extremely  helpful  when  analysing  data  which  is  drop-
ping below zero.
There is a limitations, the AUTOCAL circuit (->FEC) cant 
be  implemented  since  in  the  stored  data  the  data  in  be-
tween two events is not stored. The ZSU in the ALTRO++ 
at the moment only calculates the compression factor, not 
the ALTRO data format. This will be implemented. Not 
implemented is the MEB since this is not needed in soft-
ware.

Computing

The  ﬁnal  ALICE  TPC  consists  of  roughly  560000  chan-
nels,  assuming  the  worst  case  that  each  channel  needs  a 
diﬀerent  conﬁguration  for  the  digital  processor  addition-
ally to the pedestals, this puts the attention on the comput-
ing time to extract this parameters. The stability of the pa-
rameters will deﬁne the update rate to revise or recalculate 
the  parameters.  Also  the  pure  data  volume  which  has  to 
be transferred to the detector electronics pre a start of run 
requires a clear scheme. Finally this conﬁguration data has 
to be archived for the oﬄine data reconstruction [n5,n6]. 
This  leads  to  the  questions:  computing  time,  computing 
frequency, data volume, storage frequency, which will not 
be  broken  up  completely  before  the  ALICE  physics  pro-
gram starts. 

Pedestals

Starting with the pedestals as partially the simplest prob-
lem and partially a quite problematic one. The computing 
time is neglectable, since only a few hundred events have 
to be parsed to get the mean pedestal value. Additionally 
this computation is completely independent for each chan-
nel and extremely simple, so this task can already be done 
in the RCU or later in the LDCs of the DAQ or the HLT 
nodes. The data for the pedestal calculation does not need 
to be archived any time. The problem of the pedestals is 
more  the  pure  data  volume,  since  for  all  channels  near-
ly  700 MByte  is  needed.  So  the  distribution  of  the  data 

should  be  done  in  parallel.  As  already  partially  existing 
and implemented the two data paths, the DDL or the DCS 
are usable as described in chapter Prototype. The Data vol-
ume for each RCU is from 5 to 10 MB depending on the 
position on the TPC, since pedestal data could be highly 
compressed by a entropy coder [n8] like the huﬀman cod-
ing [n13] this volume can be reduced by a factor of ﬁve. So 
as long as the data will not be send from one source to the 
detector  both  data  paths,  the  200  MB/s  DDL  or  the  10 
MB/s  DCS  are  suﬃcient.  For  archiving  this  data  can  be 
slowly collected and centrally stored. 
The calculation and storage frequency will not be known 
before  the  complete  ALICE  Setup  is  completed  detector 
wise as also cooling and electronics wise. The upper limit 
can be  deﬁned by the experience of NA49 [n7] of three 
pedestal runs per running day.

TCF

The determination of the TCF parameters are showing a 
completely  diﬀerent  picture  of  problems.  The  previously 
described scheme consists of several computing steps with 
diﬀerent  computing  prerequisite.  The  pulse  ﬁnder  has  at 
the  moment  an  inspection  rate  of  roughly  26000  chan-
nels/s of 500 timebins on an Opteron 246 [n9] system us-
ing xfs [n10] as ﬁle system and gcc 3.3.4 [n11] as compiler. 
To  extract  the  coeﬃcients  for  one  found  pulse  the  same 
system needs 0.2 s. The running time of the correlator is 
increasing quadraticially from 1.2s for 100 to 30s for 1000 
correlations without storing the correlated pulses and from 
14s for 100 to 21m for 1000 correlations when storing the 
correlated pulses. The best set ﬁnder needs 50s to ﬁnd the 
best set. The most time (90%) is spend by reading the cur-
rent implementation of the data set, so a speed up to below 
20s is easily possible.
The ﬁrst problem is the uncertainty if each ALTRO chan-
nel  needs  its  on  optimised  TCF  parameter  set  or  each 
ALTRO reducing the needed eﬀort by a factor 16 or bigger 
structures  like  TPC  rows  or  patches  reducing  again  the 
needed eﬀort by a factor of 6 to 30 so 96 to 480 in total. 
There is not enough data of pulses with a high amplitude to 
answer the question if there are diﬀerences in the ALTRO 
channels or in the diﬀerent ALTROs which are big enough 
that a channel wise TCF conﬁguration is needed. Another 
question is the stability of the sets, which should be quite 
high, since only changes in the signal shape aﬀect the TCF. 
The complete chain can run in parallel since no communi-
cation in between the diﬀerent set ﬁnding blocks is needed, 
so the calculation time scales with the number of CPUs in 
a Cluster.
Assuming the worst case that every of the 557568 channels 
need their own conﬁguration and that 1000 channels, ful-
ﬁlling the pulse ﬁnder requirements, are needed to extract 
the optimum set. I assume that 1 million events should be 
suﬃcient to get enough statistics on each channel leading 
to an inspection time of 6000h for one CPU. The extrac-
tion  of  the  coeﬃcients  would  take  30000h  for  one  CPU. 
With out the major speed up due to the re implementation 
this  scheme  would  be  completly  impossible  since  the  cal-
culqation time would be still half a year on an 2000 CPU 
cluster.  The  correlator  needs  4500h  without  writing  and  

39

conﬁguration as also the broadcast mode, if so the conﬁgu-
ration parameters will be automaticly send by the RCU to 
all channels on one FEC as long the commands support a 
broeadcast, otherwise it automaticly creates the sequence 
for the individual channels. This sequences can be translat-
ed into the FeC2 language [n14] to use the DDL by the in-
termediate step to write out this sequences as FeC2 script. 
This is included in the FeC2Writer. For the conﬁguration 
using  the  InterCom  Layer  [n15]  no  intermediate  step  is 
needed, since the function creating the code sequences is 
called by this layer and returns the command block wich is 
then handled by the DIM client server system. Later also 
the communication via the DDL will be incooperated into 
the DIM system.
The data source for the InstructionBlockCoder is a binary 
ﬁle encapsulated into a class (ConﬁgIO). This can be eas-
ily extendet to communicate with a database without any 
need of changing the other parts of the system. The actual 
partitioning of the data is derived from the transport gran-
ularity, so all conﬁguration data from one RCU is collected 
in one ﬁle.

ﬁnally to ﬁnd the best set 8000h are needed. In total this 
leads to a quite big amount of data and computing time.

1 CPU

Program

On Set per
Chip

Row

Patch

Pulse Finder 6000

375

38

Coefﬁcient 
Maker

30000 

1900

200

Correlator

4500

290

Best Set 
Finder

8000

490

30

49

2.4

12

1.8

3

Cluster

2000 
CPUs

3

15

2.3

4

Total

48500

3055

317

19.2

24.3

Running time in hours of the different steps to extract the 
TCF Parameters

BSC2 & ZSU

To optimise this parameter set it is not expected that these 
parameters  diﬀer  for  each  channel,  since  they  are  most-
ly  dependent  on  the  occupancy.  The  problem  here  arises 
when scanning the complete parameter space since there 
are  eight  parameters  with  6.6  trillion  possible  combina-
tions per occupancy. Fortunately many combinations can 
be excluded, since they are quite senseless.

Conﬁguration

When all parameters are extracted they have to be stored 
and prepared for sending them to the FEE. For this pur-
pose a set of classes were implemented. There are encapsu-
lations for the diﬀerent hardware components:

»
»
»

ALTROCOMMANDCODER
RCUCOMMANDCODER
BOARDCONTROLLERCOMMANDCODER

By the use of the component encapsulation classes all com-
mands can be translated in their correct bit pattern for the 
hardware. The extracted parameters are set via the use of 
the matching commands. Additionally to the ALTRO dig-
ital  chain  parameters  the  BC  needs  conﬁguration  of  the 
controlling  thresholds.  Also  included  in  the  classes  are 
functions to read and parse the various parameters and er-
ror registers.
The layer above is parted in the diﬀerent interface encap-
sulations.

»
»
»

INSTRUCTIONBLOCKCODER
CONFIGIO
FEC2WRITER

The  RCU  has  a  memory  where  command  sequences  can 
be  stored.  The  coding  of  this  command  blocks  is  encap-
sulated  in  the  InstructionBlockCoder.  It  supports  both 
conﬁguration  modes  of  the  FEE,  the  individual  channel 

40

41

Ion Tail Analysis

Ion Tail Analysis

During the analysis of the cosmics data of the test 

TPC an additional eﬀect got visible following the 
normal signal tail. Since each avalanche signal is 
the result of the contribution of a large number of positive 
ions leaving the anode wire in various angles, so following 
diﬀerent  paths  which  can  last  for  several  tens  of  micro-
seconds inducing a long ion tail as described in chapter (-
>TPC). At ﬁrst the eﬀect of the ion tail was visually found 
in  cosmic  data  at  the  test  TPC  in  pulses  with  extremly 
big amplitudes (>700 ADC) during the usage of the OM. 
After applying a moving average smoothing the shape of 
the ion tail was also found in clusters with smaller ampli-
tudes (>200 ADC).
Neither the spread of the avalanche around the anode wire 
nor the variation from avalanche to avalanche has been ac-
curatly  understood  and  quantiﬁed.  Since  this  eﬀect  was 
visible in normal data a data based anlyses was developed 
and due to the big inﬂuence of the gas mixture on the sig-
nal shape so also the ion tail the analysis was repeated for 
each gas mixture.

Pulse Extraction

To  characterise  the  signal  tail  and  its  variation  adequate 
pulses  were  extracted  from  the  data.  Like  in  the  pulse 
ﬁnder  of  the  TCF  parameter  extraction  (page  xx)  single 
pulses  of  a  minimum  amplitude  of  200  ADC  at  a  early 
time position are needed since this fullﬁlls the prerequisite 
of  an  complete,  undisturbed  and  visible  tail.  The  end  of 
pulse position of the simple clusterﬁnder which is the time 
position  of  the  last  sample  above  the  threshold  of  ﬁve  is 
then  reﬁned  for  all  remaining  pulses.  Since  this  method 
is insensitive on the tail shape but very sensitive to noise. 
The  recalculation  is  based  on  a  linear  regression  of  a  few 
samples around the previously calculated endpoint and the 
crossing point of the line with the baseline which then de-
ﬁnes the new end point. This is shown in the plot below.

4

2

0

-2

-4

-6

Fitted Line

18

16

14

12

10

8

6

End

Refined End

190

200

210

220

230

Baseline old Method

Baseline

200

250

300

350

400
Timebin

Part of extracted signal. The red line shows the new 
baseline calculation method, blue is the failing old one. 
In the zoomed view the linear regression around the 
pulseﬁnder end (6 pre, 2 post samples), the extrapolation 
and the reﬁned end.

C
D
A

100

80

60

40

20

0

44

The endpoint of the pulses also deﬁnes the start point of 
the ion tail. From all pulses 500 timebins starting with the 
ion tail start point are then saved. This time window of 50 
μs (500 timebins with 10 MHz sampling frequency)
The accuracy of the starting point of the ion tail is impor-
tant since it is used to reshift all pulses to the same timing 
position.
It turned out that the cluster reﬁnment is needed when us-
ing low clusterﬁnder thresholds, but the threshold used in 
the analysis threshold of  ... kill CR
The  determination  of  this  point  requires  a  proper  knowl-
edge of the baseline which is no problem during analysis of 
the cosmics data as described in (-> setup ?) since a proper 
baseline table and a correct mapping procedure exists. In 
the  testbeam  data  this  is  not  the  case.  As  described  in  -
>FeatureExtraction the extraction of a correct baseline table 
is possible with additional data reject and check algorithms 
but for the tail analysis the mapping of the AltroAddress 
of the baseline pattern or value to the correct AltroAddress 
in the data is problematic, since the address can be incor-
rect  in  the  data.  If  applying  the  ﬁlter  used  by  the  base-
line pattern extraction the statistics for suﬃcient pulses is 
dramaticly reduced and renders a tail feature extraction at 
high maximum ADC values or high pulse charges impos-
sible. Additionally the ﬁlter is not completly correct since 
switched address errors are not found, so wrongly reshifted 
ion tails would spoil the analysis which is quite sensitive 
to small errors due to the small signal itself. So the base-
line for each pulse has to be extracted of the channel host-
ing the pulse. the ﬁrst approach used the in ->Monitor de-
scribed double threshold scheme which lead to a extreme 
signal drop as shown in the following plot, which was not 
discovered in diﬀerent data.

0

50

100

150

200

250

Mean of Ion Tail of all pulses of 600 < max ADC < 700 
using the old basline calculation. The signal drops by 4 
ADC.

This was caused by the limitation of the double threshold 
baseline calculation, which can fail following the tail if the 
mean of all samples lifts the thresholds away from the sig-
nal baseline, as shown in the plot to the left.
This method was replaced by a more precise and also stable 
one, which extracts an ADC histogram of all ADC values 
after the gating grid pulse of the channel and then calcu-
lates the mean of the channel by using the most probable  

bin  with  a  conﬁgurable  amount  of  bins  next  to  it.  Since 
this analysis searches for a signal drop after the pulse an 
asymetric window with only one lower bin and three high-
er  bins  was  choosen  too  minimise  the  ion  tail  inﬂuence 
on the baseline calculation. To check the performance of 
this method the pedestal table and the wrong address ﬁlter 
was  used.  The  remaining  mapping  faliures  were  discard-
ed  by  comparing  the  ﬁle  baseline  with  the  dynamic  one. 
If  the  diﬀerence  was  bigger  than  two  ADC  the  plot  was 
displayed and cheked via the eye. After removing the am-
bigues addresses by the eye scan nearly no outlayers of the 
new method are left as shown in the plot below, which also 
includes the double threshold calculation result.
 

210

10

1

-2

0

2

4

6

8

10
Difference in ADC

Difference (dynamic - file) in between the file based 
basline and the two dynamic baseline calculation 
methods. The red line is the new method, which is quite 
symetric (mean = 0.13, σ = 0.46). The blue line is the 
double threshold scheme which clearly shows a trend to 
overestimate the baseline (mean = 1.7, RMS = 2.6).

This method works for all pulses in a low occupancy envi-
ronment, which was a prereequisite of this analysis as long 
as there are no slow developing eﬀects.
Additionally  the  ALTRO++  class  (ref)  is  integrated  here, 
to check the performance of the ALTRO digital circuit to 
remove disturbances like this ion tail.
All extracted signals are stored in a ROOT File as histro-
grams.  This  are  the  time  normalised  tails  as  pure  ADC 
values and as smoothed values by the moving average cal-
culation as data. To check the analysis additional data ist 
stored, this are complete pulses, histograms on all applied 
cuts and histograms to crosscheck the baseline calculation  
and validity of the cluster end reﬁnment. Additionally all 
cut parameters and cluster informations are stored.

Cosmics

All pulses are seperated in maximum ADC or pulse charge 
classes and the mean of this class is calculated.
the mean of each class is calculated. To extract the spread 
of the ion tail all pulses in their classes are overlayed in an 
hit plot. 

45

Literaturverzeichniss

 

[7] ALICE COLLABORATION; »TDR of the Inner 

Trans. Nucl. Sci. NS-30 p. 50; 1983 

  [18] S. V. AFANASIEV ET AL. FOR THE NA49 

COLLABORATION; »The NA49 large acceptance 
hadron detector«; Nucl. Instr. and Meth. A430, 210-
244; 1999

  [19] M. ANDERSON ET AL. ; »The STAR Time Projection 
Chamber: A Unique Tool for Studying High 
Multiplicity Events at RHIC«; Nucl. Instrum. 
Meth. A 499, 659; 2003; http://www.star.bnl.
gov/~jhthomas/NimWeb/tpc/tpc_nim.pdf
  [20] ALICE COLLABORATION; »TDR of the Trigger, 

Data Aquisition, High Level Trigger and Control 
System«; CERN/LHCC/1003-062, ISBN 92-
9083-217-7 January 2004; https://edms.cern.ch/
document/456354/1

  [21] W. BLUM AND L. ROLANDI; »Particle Detection 
with Drift Chambers«; Springer Verlag, Berlin, 
Heidelberg, New York, ISBN 3-540-56425-X; 1993

  [22] H. A. BETHE; Annalen der Physik 5, p. 325; 1930
  [23] F. BLOCH; Z. Physik 81, p. 363; 1933
  [24] BETHE BLOCH AND I. LEHRHAUS ET AL.; IEEE 

  [25] R VEENHOF; »Choosing a gas mixture for the 

ALICE TPC«; ALICE-INT-2003-29; May 2003; 
https://edms.cern.ch/document/404406/1

 [26] CONSTI
  [27] A. PEISERT AND F. SAULI; »Drift and diﬀusion of 

electrons in gases«; CERN Report 84-08; 1984
  [28] L. G. H. HUXLEY AND R. W. CROMPTON; »The dif-
fusion and drift of electrons in gases«; Wiley, New 
York; 1974

  [29] STEPHEN BIAGI; »Magboltz 2«; Nucl. Instr. and 

Meth. A421 234-240; 1999; http://ref.web.cern.ch/
ref/CERN/CNL/2000/001/Pr/magboltz

  [30] F. SAULI; »Principles of Operation of Multiwire 

Proportional and Drift Chambers«; CERN Report 
77-09, p. 79 – 183; 1977

  [31] B. MOTA; »Time-Domain Signal Processing 
Algorithms and their Implementation in the 
ALTRO chip for the ALICE TPC«; Ecole 
Polythechnique Fédérale de Lausanne; May 2003; 
http://doc.cern.ch/archive/electronic/cern/preprints/
thesis/thesis-2003-023.pdf

  [32] S. MARIDOR; »L3 Magnet - ALICE Experiment«; 

https://edms.cern.ch/cdd/plsql/c4w_edms.edms_logon?
jump=SEARCH&p1=DIRECT&p2=ALI3DDET00
01&p3=AB

  [33] R.BRAMM; »TPC-Test Data Page«; http://pcikf49.ikf.

physik.uni-frankfurt.de/~tpc/ or via http://www.ikf.
physik.uni-frankfurt.de/~alice/

The Experiment

 

 

 

[1] ALICE COLLABORATION; Homepage; http://alice.

web.cern.ch/Alice/AliceNew/

[2] ALICE COLLABORATION; »Technical Proposal«; 
CERN/LHCC/95-71, ISBN 92-9083-077-8; 
December 1995

[3] ALICE COLLABORATION; »Technical Proposal 

Addendum 1«; CERN/LHCC/96-32

  [4] ALICE COLLABORATION; »Technical Proposal 

Addendum 2«; CERN/LHCC/99-13

 

[5] ALICE COLLABORATION; »Physics Performance 
Report«; CERN/LHCC/2003-049, ISBN 92-
9083-210-X; November 2003; http://alice.web.cern.
ch/Alice/ppr/web/PPRVICurrentVersion.html
  [6] ALICE COLLABORATION; »TDR of the Dimuon 
Forward Spectrometer«; CERN/LHCC/99-22, 
ISBN 92-9083-148-0; August 1999; https://edms.
cern.ch/document/470838/1

Tracking System«; CERN/LHCC/99-12, ISBN 
92-9083-144-8; June 1999; https://edms.cern.ch/
document/398932/1

 

[8] ALICE COLLABORATION; »TDR of the Time 

Projection Chamber«; CERN/LHCC/2000-001, 
ISBN 92-9083-155-3; January 2000; https://edms.
cern.ch/document/398930/1

 

[9] ALICE COLLABORATION; »TDR of the Transition 
Radiation Detector«; CERN/LHCC/2001-021, 
ISBN 92-9083-184-7; October 2001; https://edms.
cern.ch/document/398057/1

  [10] ALICE COLLABORATION; »TDR of the Time of 
Flight System«; CERN/LHCC/2002-016, ISBN 
92-9083-192-8; April 2002; https://edms.cern.ch/
document/460192/1

  [11] ALICE COLLABORATION; »TDR of the High 
Momentum Particle Identiﬁcation Detector«; 
CERN/LHCC/98-19, ISBN 92-9083-134-0; August 
1998; https://edms.cern.ch/document/316545/1

  [12] ALICE COLLABORATION; »TDR of the Photon 
Spectrometer«; CERN/LHCC/99-4, ISBN 92-
9083-138-3; March 1999; https://edms.cern.ch/
document/398934/1

  [13] ALICE COLLABORATION; Homepage of the Forward 

Multiplicity Detector; http://fmd.nbi.dk/
  [14] B. CHEYNIS, L. DUCROUX, E. GANGLER, 

J.Y. GROSSIORD, R. GUERNANE, A. GUICHARD; »For 
a V0 detector dedicated to the pp->2my+X physics 
in ALICE«; ALICE/INT-2000-29; November 2000; 
https://edms.cern.ch/document/303914/1
  [15] ALICE COLLABORATION; Homepage of the T0 

Detector; http://fmd.nbi.dk/

  [16] ALICE COLLABORATION; »TDR of the Photon 

Multiplicity Detector«; CERN/LHCC/99-32, ISBN 
92-9083-153-7; September 1999; https://edms.cern.
ch/document/398931/1

  [17] ALICE COLLABORATION; »TDR of the Zero 

Degree Calorimeter«; CERN/LHCC/99-5, ISBN 
92-9083-139-1; March 1999; https://edms.cern.ch/
document/398933/1

48

Front End Electronic

  [N1] L. MUSA*, J. BAECHLER, N. BIALAS, 

R. BRAMM, R. CAMPAGNOLO, C. ENGSTER, 
F. FORMENTI, U. BONNES, R. ESTEVE BOSCH, 
U. FRANKENFELD, P. GLASSEL, C. GONZALEZ, 
H.-A. GUSTAFSSON, A. JIMÉNEZ, A. JUNIQUE, 
J. LIEN, V. LINDENSTRUTH, B. MOTA, 
P. BRAUN-MUNZINGER, H. OESCHLER, 
L. OSTERMAN, R. RENFORDT, G. RÜSCHMANN, 
D. RÖHRICH, H.-R. SCHMIDT, J. STACHEL, 
A.-K. SOLTVEIT, K. ULLALAND; »The ALICE TPC 
Front End Electronics«; Proceedings of the IEEE 
Nuclear Science Symposium, Portland; 20 - 25 Oct 
2003; http://ep-ed-alice-tpc.web.cern.ch/ep-ed-alice-
tpc/doc/papers/NSS2003.pdf 

TSA1001 A/D Converter«; 2004; http://www.st.com/
stonline/books/pdf/docs/7333.pdf

  [N3] L. DUGOUJON, S. ENGELS, R. ESTEVE-BOSCH, 
B. MOTA, L. MUSA, A. JIMÉNEZ-DE-PARGA, D. 
SUBIELA; »A Low-Power 16-channel AD Converter 
and Digital Processor ASIC«; Proc. of the  
ESSCIRC, Florence, Italy; September 2002; http://
ep-ed-alice-tpc.web.cern.ch/ep-ed-alice-tpc/doc/papers/
ESSCERC2002.pdf

 [N4] R. ESTEVE BOSCH, A. JIMÉNEZ DE PARGA, B. MOTA, 

AND L. MUSA; »The ALTRO Chip: A 16-Channel 
A/D Converter and Digital Processor for Gas 
Detectors«; IEEE Transaction on Nuclear Science, 
Vol. 50 No. 6; December 2003; http://ep-ed-alice-
tpc.web.cern.ch/ep-ed-alice-tpc/doc/papers/TNS_
altro_Dic2003.pdf

 [N10] J. A. LIEN ET AL.; »Readout Control Unit of 

the Front end Electronics for  the ALICE Time 
Projection Chamber«; Proceedings of the 8th 
Workshop on Electronics for LHC Experiments, 
Colmar, France; 9-13 September 2002 http://doc.
cern.ch//archive/cernrep/2002/2002-003/p160.pdf
 [N11] ARM LIMITED; »ARM T922 Core Data Sheet«; 

http://www.arm.com/products/CPUs/ARM922T.html

 [N12] μCLINUX; »μClinux Embedded Linux/

Microcontroller Project«; http://www.uclinux.org/
 [N13] PASA; Homepage; http://ep-ed-alice-tpc.web.cern.

ch/ep-ed-alice-tpc/pasa.htm

 [N14] ALTRO BUS, BACKPLANE; Homepage; http://ep-ed-

alice-tpc.web.cern.ch/ep-ed-alice-tpc/altro_bus.htm
 [N15] RCU; Homepage; http://ep-ed-alice-tpc.web.cern.
ch/ep-ed-alice-tpc/rcu1.htm & http://www.ﬁ.uib.
no/~pommer/rcu/

Data Aquisition, High Level Trigger and Control 
System«; CERN/LHCC/1003-062, ISBN 92-
9083-217-7 January 2004; https://edms.cern.ch/
document/456354/1

 [N17] P. W. NICHOLSON; »Nuclear Electronics«; Wiley 
Interscience, ISBN 0-471-63687-5; 1969

 [N18] C. H. NOWLIN AND J. L. BLANKENSHIP; Rev.Sci. 

Instr. 36, p. 599-605; 1965

Jitter

Prototype Environment

 [N2] ST MICROELECTRONICS; »Datasheet of the 

 [N16] ALICE COLLABORATION; »TDR of the Trigger, 

 [N5] L. MUSA ET AL. ; »ALICE TPC Readout Chip Users 

  [N1] PLDAPPLICATIONS; »Standard Prototyping PCI 

Manual«; CERN EP/ED; June 2002; http://ep-ed-
alice-tpc.web.cern.ch/ep-ed-alice-tpc/doc/ALTRO_
CHIP/UserManual_draft_02.pdf 

Boards«; http://www.plda.com/pdt_boards_pci.
htmwww.plda.com

 [N2] PLDAPPLICATIONS; »Interlectual Property Cores«; 

 [N6] ALICE COLLABORATION; »TDR of the Time 

http://www.plda.com/pdt_core_pci.htm

Projection Chamber«; CERN/LHCC/2000-001, 
ISBN 92-9083-155-3; January 2000; https://edms.
cern.ch/document/398930/1

 [N7] B. MOTA ET AL.; »Digital Implementation of a 

Tail Cancellation Filter for the Time Projection 
Chamber of the ALICE Experiment.«; Proc of the 
6 Workshop on Electronics for LHC Experiments, 
Krakow; September, 11-15, 2000; http://ep-ed-alice-
tpc.web.cern.ch/ep-ed-alice-tpc/doc/papers/ﬁlter.pdf

 [N8] B. MOTA; »Time-Domain Signal Processing 
Algorithms and their Implementation in the 
ALTRO chip for the ALICE TPC«; Ecole 
Polythechnique Fédérale de Lausanne; May 2003; 
http://doc.cern.ch/archive/electronic/cern/preprints/
thesis/thesis-2003-023.pdf

 [N9] ALICE TPC FRONT END ELECTRONICS; Homepage; 
http://ep-ed-alice-tpc.web.cern.ch/ep-ed-alice-tpc/

  [N3] B. W. KERNIGHAN AND D. M. RITCHIE; 

Whitepaper: »The C Programming Language«; 
Prentice-Hall: Englewood Cliﬀs, NJ, 1978. Second 
edition, 1988

 [N4] NATIONAL INSTRUMENTS; »LabVIEW«;http://www.

ni.com/labview/

 [N5] RENE BRUN, FONS RADEMAKERS; »ROOT an object 

orientated Data Analysis Framework«;root.cern.ch 

 [N6] BJARNE STROUSTRUP; Whitepaper: »The C++ 

Programming Language«; Addison Wesley, 1985. 
Second edition, 1991, Third Edition 1997, ISBN 02-
0188-9544

 [N7] MASAHARU GOTO; »CINT a C/C++ interpreter«; 

http://root.cern.ch/root/Cint.html 

 [N8] OPENGL; »The Industry’s Foundation for High 
Performance Graphics«; http://www.opengl.org/
 [N9] E. DÉNES; »Instructions for FeC2 (Front-End 

Control and Conﬁguration) program«; http://alice-
proj-ddl.web.cern.ch/alice-proj-ddl/doc/FeC2_syntax.
txt

49

 [N10] C. KOFLER, S. BABLOK; »Alice-FEEControl«; http://
www.ztt.fh-worms.de/en/projects/Alice-FEEControl/
index.shtml

 [N11] ALICE DATE GROUP; »ALICE DATE V4 User’s 
Guide«; ALICE/INT-2002-036 v.1; November 
2002; https://edms.cern.ch/document/362104/1

 [N5] ALICE COLLABORATION; »Physics Performance 

Report«; CERN/LHCC/2003-049, ISBN 92-
9083-210-X; November 2003; http://alice.web.cern.
ch/Alice/ppr/web/PPRVICurrentVersion.html

 [N6] ALICE OFF-LINE PROJECT; Homepage; http://

aliweb.cern.ch/oﬄine/

 [N12] R. DIVIÀ; »DATE header reference card«; http://

 [N7] S. V. AFANASIEV ET AL. FOR THE NA49 

COLLABORATION; »The NA49 large acceptance 
hadron detector«; Nucl. Instr. and Meth. A430, 210-
244; 1999

 [N8] C. E. SHANNON; »Mathematical theory of commu-

nication«; Bell System Technical Journal, 27:379-
423; 1948

 [N9] AMD; »Opteron Processor»; http://www.amd.

com/us-en/Processors/ProductInformation/0,,30_118_
8825,00.html

 [N10] SGI; »XFS A high-performance journaling ﬁlesys-

tem«; http://oss.sgi.com/projects/xfs/

 [N11] GNU; »gcc Homepage«; http://gcc.gnu.org/
 [N12] L. MUSA ET AL. ; »ALICE TPC Readout Chip Users 

Manual«; CERN EP/ED; June 2002; http://ep-ed-
alice-tpc.web.cern.ch/ep-ed-alice-tpc/doc/ALTRO_
CHIP/UserManual_draft_02.pdf 

 [N13] D. A. HUFFMAN; »A method for the construction 

of minimum redundancy codes«;.In Proc. IRE 40, 
volume 10, pages 1098–1101; September 1952
 [N14] E. DÉNES; »Instructions for FeC2 (Front-End 

Control and Conﬁguration) program«; http://alice-
proj-ddl.web.cern.ch/alice-proj-ddl/doc/FeC2_syntax.
txt

 [N15] C. KOFLER, S. BABLOK; »Alice-FEEControl«; http://
www.ztt.fh-worms.de/en/projects/Alice-FEEControl/
index.shtml

aldwww.cern.ch/

 [N13] L. MUSA; »TPC Data Format for the may 2004 in-
Beam Test«; http://ep-ed-alice-tpc.web.cern.ch/ep-ed-
alice-tpc/

 [N14] L. MUSA ET AL. ; »ALICE TPC Readout Chip Users 

Manual«; CERN EP/ED; June 2002; http://ep-ed-
alice-tpc.web.cern.ch/ep-ed-alice-tpc/doc/ALTRO_
CHIP/UserManual_draft_02.pdf 

 [N15] ALICE COLLABORATION; »TDR of the Trigger, 

Data Aquisition, High Level Trigger and Control 
System«; CERN/LHCC/1003-062, ISBN 92-
9083-217-7 January 2004; https://edms.cern.ch/
document/456354/1

[N16] R. BRAMM ET AL.; »High-level trigger system for the 
LHC ALICE experiment«; Nucl. Instrum. Methods 
Phys. Res., A 502 p. 441-442; 2003; http://dx.doi.
org/10.1016/S0168-9002(03)00463-7

 [N17] T. STEINBECK; »A Modular and Fault-Tolerant Data 

Transport Framework«; arXiv:cs.DC/0404014v1; 
April 2004; http://de.arxiv.org/pdf/cs.DC/0404014 
 [N18] ALICE TPC GROUP; »ROC and Pad Numbering 

Convention«

 [N19] RENE BRUN, FONS RADEMAKERS; »ROOT porting 

status«;http://root.cern.ch/root/Porting.html

 [N20] LINUX; »The Linux Kernel«;http://www.kernel.org/
 [N21] R.BRAMM; »TPC-Test Data Page«; http://pcikf49.ikf.

physik.uni-frankfurt.de/~tpc/ or via http://www.ikf.
physik.uni-frankfurt.de/~alice/

 

 [N22] CASTOR;»CASTOR«;http://castor.web.cern.ch/

castor/

 [N23] J. P. BAUD, B. COUTURIER, C. CURRAN, 
J. D. DURAND, E. KNEZO, S. OCCHETTI, 
O. BÄRRING; »CASTOR status and evolution«; 
Conference for Computing in High-Energy and 
Nuclear Physics, cs.OH/0305047;2003;http://arxiv.
org/abs/cs.OH/0305047 

ALTRO Parameter Optimising 

  [N1] ALICE TPC FRONT END ELECTRONICS; Homepage; 
http://ep-ed-alice-tpc.web.cern.ch/ep-ed-alice-tpc/

 [N2] B. MOTA; »Time-Domain Signal Processing 
Algorithms and their Implementation in the 
ALTRO chip for the ALICE TPC«; Ecole 
Polythechnique Fédérale de Lausanne; May 2003; 
http://doc.cern.ch/archive/electronic/cern/preprints/
thesis/thesis-2003-023.pdf

  [N3] THE MATHWORKS, INC.; »MATLAB«;http://www.

mathworks.com/products/matlab/

 [N4] R.BRAMM; »TPC-Test Data Page«; http://pcikf49.ikf.

physik.uni-frankfurt.de/~tpc/ or via http://www.ikf.
physik.uni-frankfurt.de/~alice/

50

51

Pulse Finder

pulseFinder, extracts selected pulses and denoises the tail.
Run Parameters :
    -t, --EventType :
        sets the eventtype: [mandatory]
        DATEFile = Testbeam DATE events
    -rn, --Runnumber :
        sets the runnumber [mandatory]
    -rp, --RunPath :
        sets path to the run [mandatory]
    -n, --EventCount :
        number of events [default: 1000]
    -o, --OutPlace :
        Path to the Output dir for the results [mandatory]
        BAWARE Folder MUST exist

Pulse Finder Parameters:
    -pa, --PreAquisitionSamples :
        Pre Aquisition Samples. [default: 40]
    -ps --PreSamples :
        Number of Presamples where no signal is allowed,
        to circumvent Pulses before event start. [default: 5]
    -pt --PreSampleThreshold :
        Threshold to deﬁne what is a pulse in the presample
        area [default: 20]
    -ah --MaxADCThreshold :
        Max ADCThreshold, upper boundarys to specify which
        clusters are to be found [mandatory]
    -al --MinADCThreshold :
        Min ADCThreshold, lower boundarys to specify which
         clusters are to be found [mandatory]
    -sp --MaxTimePosition :
        Maximum Time Position of Pulse [mandatory]
        BEWARE ! The programm always assumes 1024 timebins max 
!
    -ct --PulseThreshold :
        Threshold, from where on somthing is called a
        pulse [default: 10]
    -cs --NeededSuccessiveADC :
        Number of consecutive Samples above PulseThreshold
        needed to deﬁne a Pulse [default: 3]
    -cf --FitThreshold :
        Factor to specify level of end of cluster. means
        maxadc*FitThreshold [default: 0.1]
    -ia --IntegralVSAmpThreshold :
        Integral vs Amplitude Threshold, to ﬁlter out double
        clusters [default: 4.5]

Moving Average Parameters/Smoothing parameters:
    -ml --MALeftSamples :
        MALeftSamples samples left to actual Point [default: 3]
    -mr --MARightSamples :
        MARightSamples samples right to actual Point [default: 
4]
    -md --MADirection :
        Direction > 0 = from left to right; < 0 = vice versa 
[default: 1]
    -gt --AllowedGlitchesinSignal :
        Allowed Glitches in Signal threeshold [default: 5]

General Parameters:
    -d --DebugLevel :
        Sets the debuglevel  [default: 0]
    -h --help: 
        Shows help, exactly what you see now
    -v --version: 
        Show revision
example: ./pulseFinder.app -t DATEFile -rn 820 -rp /Volumes/
Daten/TestBeam/ -o ./teststart/ -n 1000 -d 0 -ah 900 -al 500 
-sp 200

Pedestal Calculation log

   0 Event:   14 secondEquipment: 0 DefChannels: 1552 double 
Addresses: 1552 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
   1 Event:   47 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
   2 Event:   66 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
   3 Event:   77 secondEquipment: 0 DefChannels: 2714 double 
Addresses: 2714 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
   4 Event:   79 secondEquipment: 0 DefChannels: 2418 double 
Addresses: 2418 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
   5 Event:  101 secondEquipment: 0 DefChannels: 1800 double 
Addresses: 1800 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
   6 Event:  109 secondEquipment: 0 DefChannels: 1144 double 
Addresses: 1144 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
   7 Event:  136 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
   8 Event:  141 secondEquipment: 0 DefChannels:    2 double 
Addresses:    2 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0

   9 Event:  171 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  10 Event:  178 secondEquipment: 0 DefChannels:  790 double 
Addresses:  790 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  11 Event:  186 secondEquipment: 0 DefChannels: 3018 double 
Addresses: 3018 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  12 Event:  188 secondEquipment: 0 DefChannels: 2268 double 
Addresses: 2268 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  13 Event:  189 secondEquipment: 0 DefChannels: 3154 double 
Addresses: 3072 =  97 overﬂow Addresses:    0 =   0 Invalid 
Addresses:   82 =   2
  14 Event:  190 secondEquipment: 0 DefChannels:  582 double 
Addresses:  582 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  15 Event:  197 secondEquipment: 0 DefChannels: 1624 double 
Addresses: 1624 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  16 Event:  206 secondEquipment: 0 DefChannels:    2 double 
Addresses:    2 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  17 Event:  229 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  18 Event:  235 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  19 Event:  236 secondEquipment: 0 DefChannels: 2158 double 
Addresses: 2158 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  20 Event:  239 secondEquipment: 0 DefChannels:    2 double 
Addresses:    2 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  21 Event:  251 secondEquipment: 0 DefChannels: 2588 double 
Addresses: 2588 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  22 Event:  269 secondEquipment: 0 DefChannels:    2 double 
Addresses:    2 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  23 Event:  310 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  24 Event:  314 secondEquipment: 0 DefChannels: 2056 double 
Addresses: 2056 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  25 Event:  335 secondEquipment: 0 DefChannels: 1730 double 
Addresses: 1730 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  26 Event:  339 secondEquipment: 0 DefChannels: 1432 double 
Addresses: 1432 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  27 Event:  359 secondEquipment: 0 DefChannels: 2038 double 
Addresses: 2038 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  28 Event:  361 secondEquipment: 0 DefChannels: 3008 double 
Addresses: 3008 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  29 Event:  384 secondEquipment: 0 DefChannels: 2744 double 
Addresses: 2744 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  30 Event:  396 secondEquipment: 0 DefChannels:    2 double 
Addresses:    2 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  31 Event:  400 secondEquipment: 0 DefChannels: 1814 double 
Addresses: 1814 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  32 Event:  404 secondEquipment: 0 DefChannels: 2908 double 
Addresses: 2908 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  33 Event:  407 secondEquipment: 0 DefChannels: 1792 double 
Addresses: 1792 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  34 Event:  424 secondEquipment: 0 DefChannels:  924 double 
Addresses:  924 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  35 Event:  432 secondEquipment: 0 DefChannels: 1748 double 
Addresses: 1748 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  36 Event:  433 secondEquipment: 0 DefChannels: 1052 double 
Addresses: 1052 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  37 Event:  478 secondEquipment: 0 DefChannels: 3132 double 
Addresses: 3072 =  98 overﬂow Addresses:    0 =   0 Invalid 
Addresses:   60 =   1
  38 Event:  492 secondEquipment: 0 DefChannels: 2574 double 
Addresses: 2574 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  39 Event:  522 secondEquipment: 0 DefChannels: 1794 double 
Addresses: 1794 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  40 Event:  531 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  41 Event:  533 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  42 Event:  578 secondEquipment: 0 DefChannels: 1350 double 
Addresses: 1350 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  43 Event:  580 secondEquipment: 0 DefChannels: 1596 double 

52

Addresses: 1596 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  44 Event:  609 secondEquipment: 0 DefChannels: 3117 double 
Addresses: 3072 =  98 overﬂow Addresses:    0 =   0 Invalid 
Addresses:   45 =   1
  45 Event:  619 secondEquipment: 0 DefChannels: 1844 double 
Addresses: 1844 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  46 Event:  620 secondEquipment: 0 DefChannels:  166 double 
Addresses:  166 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  47 Event:  637 secondEquipment: 0 DefChannels: 3113 double 
Addresses: 3072 =  98 overﬂow Addresses:    0 =   0 Invalid 
Addresses:   41 =   1
  48 Event:  650 secondEquipment: 0 DefChannels: 1832 double 
Addresses: 1832 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  49 Event:  666 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  50 Event:  677 secondEquipment: 0 DefChannels: 2132 double 
Addresses: 2132 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  51 Event:  692 secondEquipment: 0 DefChannels: 2472 double 
Addresses: 2472 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  52 Event:  695 secondEquipment: 0 DefChannels: 2458 double 
Addresses: 2458 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  53 Event:  696 secondEquipment: 0 DefChannels: 1760 double 
Addresses: 1760 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  54 Event:  701 secondEquipment: 0 DefChannels:    2 double 
Addresses:    2 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  55 Event:  703 secondEquipment: 0 DefChannels:    2 double 
Addresses:    2 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  56 Event:  706 secondEquipment: 0 DefChannels: 3296 double 
Addresses: 3296 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  57 Event:  714 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  58 Event:  718 secondEquipment: 0 DefChannels:  988 double 
Addresses:  988 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  59 Event:  722 secondEquipment: 0 DefChannels: 1292 double 
Addresses: 1292 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  60 Event:  778 secondEquipment: 0 DefChannels: 4338 double 
Addresses: 4338 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  61 Event:  779 secondEquipment: 0 DefChannels:    2 double 
Addresses:    2 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  62 Event:  790 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  63 Event:  796 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  64 Event:  813 secondEquipment: 0 DefChannels: 1834 double 
Addresses: 1834 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  65 Event:  826 secondEquipment: 0 DefChannels: 1496 double 
Addresses: 1496 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  66 Event:  885 secondEquipment: 0 DefChannels: 1504 double 
Addresses: 1504 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  67 Event:  889 secondEquipment: 0 DefChannels:  726 double 
Addresses:  726 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  68 Event:  890 secondEquipment: 0 DefChannels:  940 double 
Addresses:  940 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  69 Event:  910 secondEquipment: 0 DefChannels:    2 double 
Addresses:    2 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  70 Event:  914 secondEquipment: 0 DefChannels: 1936 double 
Addresses: 1936 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  71 Event:  989 secondEquipment: 0 DefChannels: 2642 double 
Addresses: 2642 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  72 Event:  991 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
  73 Event:  994 secondEquipment: 0 DefChannels:    4 double 
Addresses:    4 = 100 overﬂow Addresses:    0 =   0 Invalid 
Addresses:    0 =   0
-----------------------------------------------------------------
-----------------------------------------------------------------
----------------
Channel : 3229 Timebin:   44 always excluded!! val: 0
Channel : 3229 Timebin:   49 always excluded!! val: 0
Channel : 3229 Timebin:   51 always excluded!! val: 0
Channel : 3229 Timebin:   53 always excluded!! val: 0
Channel : 3230 Timebin:   42 always excluded!! val: 0
Channel : 3230 Timebin:   44 always excluded!! val: 0
Channel : 3230 Timebin:   49 always excluded!! val: 0
Channel : 3230 Timebin:   51 always excluded!! val: 0

Channel : 3230 Timebin:   58 always excluded!! val: 0
Channel : 3230 Timebin:   60 always excluded!! val: 0
Channel : 3230 Timebin:   62 always excluded!! val: 0
Channel : 3231 Timebin:   42 always excluded!! val: 0
Channel : 3231 Timebin:   44 always excluded!! val: 0
Channel : 3231 Timebin:   49 always excluded!! val: 0
Channel : 3231 Timebin:   51 always excluded!! val: 0
Channel : 3231 Timebin:   53 always excluded!! val: 0
Channel : 3231 Timebin:   58 always excluded!! val: 0
Channel : 3231 Timebin:   60 always excluded!! val: 0
Channel : 3232 Timebin:   41 always excluded!! val: 0
Channel : 3232 Timebin:   43 always excluded!! val: 0
Channel : 3232 Timebin:   45 always excluded!! val: 0
Channel : 3233 Timebin:   41 always excluded!! val: 0
Channel : 3233 Timebin:   43 always excluded!! val: 0
Channel : 3233 Timebin:   45 always excluded!! val: 0
Channel : 3234 Timebin:   41 always excluded!! val: 0
Channel : 3234 Timebin:   43 always excluded!! val: 0
Channel : 3234 Timebin:   45 always excluded!! val: 0
Channel : 3247 Timebin:   44 always excluded!! val: 0
Channel : 3247 Timebin:   49 always excluded!! val: 0
Channel : 3247 Timebin:   51 always excluded!! val: 0
Channel : 3247 Timebin:   58 always excluded!! val: 0
Channel : 3247 Timebin:   60 always excluded!! val: 0
Channel : 3262 Timebin:   59 always excluded!! val: 0
Channel : 3262 Timebin:   63 always excluded!! val: 0
Channel : 3262 Timebin:   67 always excluded!! val: 0
Channel : 3275 Timebin:  163 always excluded!! val: 0
Channel : 3276 Timebin:  163 always excluded!! val: 0
Channel : 3276 Timebin:  181 always excluded!! val: 0
Channel : 3276 Timebin:  345 always excluded!! val: 0
Channel : 3276 Timebin:  363 always excluded!! val: 0
Channel : 3277 Timebin:  163 always excluded!! val: 0
Channel : 3277 Timebin:  181 always excluded!! val: 0
Channel : 3277 Timebin:  254 always excluded!! val: 0
Channel : 3277 Timebin:  272 always excluded!! val: 0
Channel : 3277 Timebin:  345 always excluded!! val: 0
Channel : 3277 Timebin:  363 always excluded!! val: 0
Channel : 3277 Timebin:  436 always excluded!! val: 0
Channel : 3278 Timebin:  145 always excluded!! val: 0
Channel : 3278 Timebin:  163 always excluded!! val: 0
Channel : 3278 Timebin:  181 always excluded!! val: 0
Channel : 3278 Timebin:  254 always excluded!! val: 0
Channel : 3278 Timebin:  272 always excluded!! val: 0
Channel : 3278 Timebin:  345 always excluded!! val: 0
Channel : 3278 Timebin:  363 always excluded!! val: 0
Channel : 3278 Timebin:  405 always excluded!! val: 0
Channel : 3278 Timebin:  436 always excluded!! val: 0
Channel : 3278 Timebin:  454 always excluded!! val: 0
Channel : 3279 Timebin:   90 always excluded!! val: 0
Channel : 3279 Timebin:   96 always excluded!! val: 0
Channel : 3279 Timebin:  114 always excluded!! val: 0
Channel : 3279 Timebin:  132 always excluded!! val: 0
Channel : 3279 Timebin:  145 always excluded!! val: 0
Channel : 3279 Timebin:  163 always excluded!! val: 0
Channel : 3279 Timebin:  181 always excluded!! val: 0
Channel : 3279 Timebin:  236 always excluded!! val: 0
Channel : 3279 Timebin:  254 always excluded!! val: 0
Channel : 3279 Timebin:  272 always excluded!! val: 0
Channel : 3279 Timebin:  327 always excluded!! val: 0
Channel : 3279 Timebin:  345 always excluded!! val: 0
Channel : 3279 Timebin:  405 always excluded!! val: 0
Channel : 3279 Timebin:  418 always excluded!! val: 0
Channel : 3279 Timebin:  436 always excluded!! val: 0
Channel : 3279 Timebin:  454 always excluded!! val: 0
Channel : 3279 Timebin:  460 always excluded!! val: 0
Channel : 3407 Timebin:  163 always excluded!! val: 0
-----------------------------------------------------------------
-----------------------------------------------------------------
----------------
Count ʻDefChannels: 2ʼ         : 9
Count ʻDefChannels > 2ʼ        : 65
Count ʻoverﬂow Addresses > 0ʼ  : 0
Count ʻInvalid Addresses > 0ʼ  : 4
Total Errors                   : 74 = 7%
Total Events                   : 1000 Events Analysed.

make coeﬃcients

[pcikf49:AliceTPC/AltroOptimisation/trunk] rbramm % ./
makeCoefﬁcients.app -h
writePulsestoRoot, reads the results of the pulse ﬁnder and 
writes them into a root ﬁle
Run Parameters :
    -rn, --Runnumber :
        sets the runnumber [mandatory]
    -p, --PulsePlace :
        Path to the Output dir of the pulse ﬁnder [mandatory]

Stage 1 Prameters :
    -1e, --Stage1Epsilon :
        sets allowed variation [default: 0.0015]
    -1a, --Stage1AmplitudeTolerance :
        sets allowed amplitude tolerance [default: 0.1]
    -1s, --Stage1Start :
        sets the start timebin for the optimisation [default: 
0]
    -1e, --pStage1End :
        sets the end timebin for the optimisation [default: 
200]

53

Stage 2 Prameters :
    -2e, --Stage2Epsilon :
        sets allowed variation [default: 0.002]
    -2a, --Stage2AmplitudeTolerance :
        sets allowed amplitude tolerance [default: 0.1]
    -2s, --Stage2Start :
        sets the start timebin for the optimisation [default: 
0]
    -2e, --pStage2End :
        sets the end timebin for the optimisation [default: 40]

Stage 3 / Equalisation Stage Prameters :
    -3s, --EqualStart :
        sets the start timebin for the optimisation [default: 
0]
    -3e, --EqualEnd :
        sets the end timebin for the optimisation [default: 
endofpulse]

General Parameters:
    -d --DebugLevel :
        Sets the debuglevel  [default: 0]
    -h --help: 
        Shows help, exactly what you see now
    -v --version: 
        Show revision
example: ./writePulsestoRoot.app -rn 820 -p ./teststart/

Correlator

[pcikf49:AliceTPC/AltroOptimisation/trunk] rbramm % ./correlator.
app -h
correlator, reads the results of the pulse ﬁnder and of the 
makeCoefﬁcient
Programm and builds the correlation Matrix

Run Parameters :
    -rn, --Runnumber :
        sets the runnumber [mandatory]
    -p, --PulsePlace :
        Path to the Output dir of the pulse ﬁnder [mandatory]

Correlation Parameters :
    -w, --LevelofWidthofPulse :
        sets Level on wich the width of Pulse is calculated, 
        (maxADC of Pulse)*LevelofWidthofPulse [default : 0.01]
    -u, --LevelofUndershootofPulse :
        sets Level on wich the undershoot after the Pulse is 
calculated,
        (maxADC of Pulse)*LevelofUndershootofPulse [default : 
0.01]

General Parameters:
    -l --listFileHeaders :
        Flag to lists the ﬁle headers
    -d --DebugLevel :
        Sets the debuglevel  [default: 0]
    -h --help: 
        Shows help, exactly what you see now
    -v --version: 
        Show revision
example: ./correlator.app -rn 820 -p ./teststart/

54

55

A:
ADC: ................Analog Digital Converter
ALEPH: ............Apparatus for LEP Physics
ALICE: .............A Large Ion Collider Experiment
ALTRO: ............ALICE TPC read out

LDC: ................Local Data Concentrator
LHC: ................Large Hadron Collider
LHCC: .............LHC Committe
LUT: .................Look up Table
LVCMOS: ........Low Voltage CMOS

M:
MEB: ................Multi Event Buﬀer
MIP. ..................Minimum Ionising Particle
MSPS: ...............Million Samples Per Second
MWPC: ............Multi Wire Proportional Chamber

O:
OpenGL: ..........Open Graphics Library
OROC: .............Outer Readout Chamber

P:
PASA: ................Preampliﬁer/Shaper
PCB: .................Printed Circuit Board
PHOS: ..............Photon Spectrometer
PCI: ..................Peripheral Component Interconnect
PMD: ................Photon Multiplicity Detector
PPR: ..................Physics Performace Report
ps: .....................Postscritp
PS: ....................Proton Synchrotron

Q:
QGP .................Quark Gluon Plasma

R:
RCU: ................Readout Control Unit
RCUI: ...............RCU 1
RCUII: ..............RCU 2
RCUIII: ............RCU 3
RHIC: ...............Relativistic heavy ion collider
RMS: ................Root Mean Square
ROC: ................Readout Chamber

S:
SIU: ..................Source Interface Unit
SO: ...................Shared Object
SPS: ..................Super Proton Synchrotron
STAR: ...............Solenodial Traqcker At RHIC
svg: ....................Scalable Vector Gpahics

T:
TCF: .................Tail Cancellation Filter
TOF: .................time of ﬂight
TDR: ................Technical Design Report
TPC: .................time projection chamber 
TRD: ................transition radiation detector
TTCRX: ...........TT:Trigger and C:Controll and Rx:
Reciever

Z:
ZDC: ................Zero Degree Calorimeters
ZSU: .................Zero Suppression Unit

B:
BC: ...................Board Controller
BCSI: ................Baseline Correction and Subtraction 1
BCSII: ...............Baseline Correction and Subtraction 2

C:
CASTOR: .........CERN Advances Storage
CCL: .................Common Control Logic
CERN: ..............Conseil Européen pour la Recherche 
Nucléaire
CINT: ...............C Interpreter
CMOS: .............Complementary Metal Oxide Semicon-
ductor
CPU: .................Central Processing Unit
CSA: .................charge sensitive ampliﬁer 

D:
DAQ: ................Data Acquisition
DATE: ..............Date Acquisition Test Environment
DIM: ................Distributed Information Management
DIU: .................Destination Interface Unit
DCS: .................Detector Control System
DDL: ................Detector Data Link 
DFU: ................Data Formatting Unit

E:
eps: ....................Encapsulated Postscript

F:
FEC: .................Front End Card
FeC2: ................Front End Control and Conﬁguration
FEE: ..................Front End Electronics
FMD: ................Forword Multiplicity Detector
FPGA: ...............Field Programmable Gate Array
FWHM: ............Full Width Half Maximum

G
GDC: ................Global Data Concentrator
GIF: ..................Graphics Interchange Format
GTL: .................Gunning Transceiver Logic
GUI: .................Graphical User Interface

H:
HLT: .................High Level Trigger
HMPID: ...........high momentum particle identiﬁcation 
detector

i:
I2C: ..................Inter-IC
IC: ....................Integrated Circuit
IIR: ...................inﬁnite impulse response
IROC: ...............Inner Readout Chamber
ISBN: ................International Standard Book Number
ITS: ...................inner tracking system

L:

56

57

