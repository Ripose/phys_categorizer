Predictability of Shanghai Stock Market by Agent-based Mix-game Model 

Chengling Gou¹·² 

¹Physics Department, Beijing University of Aeronautics and Astronautics 

No.37, Xueyuan Road, Heidian District, Beijing, 100083, China 
²Physics Department, University of Oxford 

Clarendon Laboratory, Parks Road, Oxford, OX1 3PU, UK 

 

 

 

Abstract: This paper1  reports the effort of using agent-based mix-game model to 

predict financial time series. It introduces the prediction methodology by means of 

mix-game model and gives an example of its application to forecasting Shanghai 

Index.  The  results  show  that  this  prediction  methodology  is  effective  and 

agent-based mix-game model is a potential good model to predict time series of 

Keyword:  predictability,  mix-game,  third  party  game,  black-box  game,  simple 

financial markets. 

PACS: 89.65.Gh, 02.50.Le 

generic algorithm, 

   

1.  Introduction 

Forecasting financial markets is a continuous effort of researchers, and attracts 

great  attention  of  practitioners.  The  use  of  agent-based  models  for  forecasting 

financial  markets  is  a  new  attempt  in  this  area.  Neil  F.  Johnson,  David  Lamper, 

Paul  Jefferies  Michael  L.  Hart  and  Sam  Howison  reported  on  a  technique  based 

on multi-agent games which has potential use in predicting future movements of 

                                                        
1  This  research  was  performed  in  collaboration  with  Professor  Neil  F.  Johnson, 
Oxford University. 

 

1

financial  time-series.  In  their  articles,  a  “third-party”  game  is  trained  on  a 

“black-box”  time-series,  and  then  run  into  the  future  to  extract  next  step  and 

multi-step predictions [1, 2, 3]. 

This paper reports the results of using agent-based mix-game model to predict 

financial time  series.  Section 2 introduces the prediction methodology by means 

of  mix-game  model.  Section  3  illustrates  the  use  of  this  methodology  for 

forecasting Shanghai Index. Section 4 concludes that this methodology is effective 

and  mix-game  model  is  a  potential  good  model  for  prediction  of  financial  time 

series. 

2.  Methodology 

2.1 Mix-game model 

 

 

Challet and Zhang's MG model, together with the original bar model of Arthur, 

attracts  a  lot  of  following  studies.  Given  the  MG's  richness  and  yet  underlying 

simplicity, the MG has also received much attention as a financial market model 

[4]. The MG comprises an odd number of agents choosing repeatedly between the 

options  of  buying  (1)  and  selling  (0)  a  quantity  of  a  risky  asset.  The  agents 

continually try to make the minority decision i.e. buy assets when the majority of 

other  agents  are  selling,  and  sell  when  the  majority  of  other  agents  are  buying. 

Neil Johnson [5, 6] and coworkers extended MG by allowing a variable number of 

2

active  traders  at  each  timestep---  they  called  their  modified  game  as  the  Grand 

Canonical Minority Game (GCMG). The GCMG, and to a lesser extent the basic 

MG itself, can reproduce the stylized facts of financial markets, such as volatility 

clustering and fat-tail distributions.     

However, there are some weaknesses in MG and GCMG. First, the diversity of 

agents is limited since agents all have the same memory length and time-horizon. 

Second, in real markets, some agents are tendency-followers, i.e. “noise traders” 

[7,  8,  9,  10,  11,  12],  who  effectively  play  a  majority  game;  while  others  are 

“foundation traders”, who effectively play a minority game. 

In  order  to  create  an  agent-based  model  which  more  closely  mimics  a  real 

financial  market,  C.  Gou  modifies  the  MG  model  by  dividing  agents  into  two 

groups:  each  group  has  different  memory  and  time-horizon.  The  most  important 

modification is to make one group play the minority game and the other play the 

majority game. For this reason, this system is referred to as a ‘mix-game’ model 

[13].   

Since mix-game model is an extension of minority game (MG), its structure is 

similar  to  MG.  In  mix-game,  there  are  two  groups  of  agents;  group1  plays  the 

majority game, and group2 plays the minority game. N (odd number) is the total 

number of the agents, and N1 is number of agents in group1. The system resource 

is  R=N*L,  where  L<1  is  the  proportion  of  resource  of  the  system.  All  agents 

compete in the system for the limited resource R. T1 and T2 are the time horizon 

 

3

lengths of the two groups, and m1 and m2 denote the memory lengths of the two 

groups, respectively.     

The  global  information  only  available  to  agents  is  a  common  bit-string 

“memory” of the m1 or m2 most recent competition outcomes (1 or 0). A strategy 

consists of a response, i.e., 0 (sell) or 1 (buy), to  each possible  bit string;  hence 

there  are 

m

122

or 

m

222

  possible  strategies  for  group1  or  group2,  respectively, 

which form full strategy spaces (FSS). At the beginning of the game, each agent is 

assigned  s  strategies  and  keeps  them  unchangeable  during  the  game.  After  each 

turn,  agents  assign  one  (virtual)  point  to  a  strategy  which  would  have  predicted 

the correct outcome. For agents in group1, they reward their strategies one point if 

they  are  in  the  majority;  for  agents  in  group2,  they  reward  their  strategies  one 

point  if  they  are  in  the  minority.  Agents  collect  the  virtual  points  for  their 

strategies over the time horizon T1 or T2, and they use their strategy which has 

the  highest  virtual  point  in  each  turn.  If  there  are  two  strategies  which  have  the 

highest virtual point, agents use coin toss to decide which strategy to be used.   

Excess  demand  is  equal  to  the  number  of  ones  (buy)  which  agents  choose 

minus  the  number  of  zeros  (sell)  which  agents  choose.  According  to  a  widely 

accepted  assumption  that  excess  demand  exerts  a  force  on  the  price  of  the  asset 

and the change of price is proportion to the excess demand in a financial market, 

the time series of the price can be calculated based on the time series of the excess 

demand [14, 15, 16].   

 

4

Through simulations, C. Gou finds out that the fluctuations of local volatilities 

change greatly by adding some agents who play majority game into MG, but the 

stylized  features  of  MG  don’t  change  obviously  except  agents  with  memory 

length 1 and 2, and the correlation between the average winning of agents and the 

mean of local volatilities of the systems is different with different configurations 

of m1 and m2. She also gives suggestions about how to use mix-game model to 

simulate  financial  markets,  and  shows  the  example  of  modeling  Shanghai  stock 

market by means of mix-game model [13, 17]. 

 

 

2.2 Prediction method 

We use mix-game model to do one-step direction prediction about a real time 

series  produced  by  a  financial  market,  whose  dynamics  are  well-described  by  a 

mix-game  model  for  a  unknown  parameter  configuration of T1,  T2,  m1,  m2,  N, 

N1 and an unknown specific realization of initial strategy choices (ISC). We call 

this  as  the  “black-box”  game.  Based  on  mix-game  model,  we  need  to  identify 

“third-party”  game  which  can  be  matched  with  the  black-box  game.  After  we 

select the parameter configuration for the third party game, we use it to predict the 

time  series  produced  by  the  black-box  game.  Fig.1  shows  the  work  flow  for 

prediction.   

  In the third party game, agents receive the global information which is strings 

of 1's  and 0's (WinEx) digitized from  the real time series produced by the black 

5

box  game  other  than  that  (WinIn)  generated  by  the  third  party  game  itself,  and 

agents  also  reward  their  strategies  according  to  the  real  time  series  (WinEx).  In 

order to see the performances of the third party game, we compare the time series 

generated by the third party game with the real time series produced by the black 

box  game,  i.e.  we  compare  WinIn  with  WinEx  because  we  just  predict  the 

direction. If they match, the third party game gets one point; if not, it gets zero. 

This  point  is  referred  to  as  hit  scores.  After  finishing  the  prediction  turns,  we 

calculate the hit rate which is equal to hit scores divided by prediction turns.     

 

financial market 

2.3 Searching  for  parameters  of  mix-game  model  to  simulate  a  specific 

First  we  need  to  search  for  proper  parameter  configurations  for  modeling  the 

target financial market in order to identify the third party game. According to [13, 

17],  the  mix-game  model  with  some  parameter  configurations  reproduces  the 

stylized features of financial time series. Therefore, we need to choose parameters 

of m1, m2, T1, T2, N and N1 when using mix-game to model financial markets. 

To do so, the following aspects need to be considered. 

•  First make sure the time series of mix-game can reproduce the stylized facts 

of time series of financial markets by choosing proper parameters, especially 

m1 and m2 must be larger than 2 and m1< m2; 

 

6

•  Second pay attention to the fluctuation of local volatilities, and ensure that the 

median  of  local  volatilities  of  mix-game  is  similar  to  that of  the  target  time 

•  Third make sure the log-log plot of absolute returns look similar. 

2.4 Optimizing mix-game parameters of the target financial market   

Second  we  locally  optimize  the  mix-game  parameters  of  the  target  financial 

market  for  prediction  under  the  condition  of  using  an  ISC  generated  by  a  set  of 

specific parameters. Keeping m1, m2 and N unchanged, we change N1, T1 and T2 

around  their  previous  found  values  for  simulating  the  target  market  in  order  to 

find the better parameter configurations for predicting the target market.     

series; 

   

 

2.5 Searching for the better ISC by using simple generic algorithm 

Finally,  the  ISCs  need  to  be  chosen  in  full  strategy  space  (FSS)  in  order  to 

improve hit rates because the hit rates are greatly sensitive to ISCs. However, the 

FSS is huge and can not be searched thoroughly by trial-error method. In order to 

perform  the  search,  we  use  simple  generic  algorithm  (SGA)  with  different 

parameter configurations of mix-game model for the target financial market. 

Since we use a set of parameters to generate ISC, the problem of searching for 

the better ISC is a problem of searching for a set of parameters of ISC. In order to 

 

7

use SGA to optimize parameter sets, first we code the parameter set into a set of 

strings  of  zeros  and  ones,  which  are  “chromosomes”;  then  we  attach  fitness  to 

them. In our case, the fitness is just the hit rate. The following is SGA where P(t) 

indicates the population of parameter sets used to generate ISCs. 

              SGA( ) 

%{    t=0; 

%      initilize P(t);   

          %      evaluation P(t); 

% while (not terminal-condition ) 

%} 

% {   

%      t=t+1; 

                            %        select P(t) from P(t-1); 

                            %        recombined P(t);   

                            %      evaluation P(t);   

  %} 

 

3.  Results and discussion 

02-07-2002 to 30-12-2003l. 

As an example, we use this methodology to predict Shanghai Index dating from 

3.1 Mix-game model for Shanghai stock market 

Since the median value of local volatilities of Shanghai Index daily data from 

1992/01/02  to  2004/03/19  is  222,  two  parameter  configurations  of  mix-game 

model have the similar median values of local volatilities according to [13]; one 

 

8

configuration is m1=3, m2=6, T1=12, T2=60, N=201, N1=72, the other is m1=4, 

m2=6, T1=T2=12, N=201, N1=72. 

 

3.2   Optimal parameters of mix-game model for predicting Shanghai Index   

Table 1, table 2 and table 3 show the hit rates of prediction with different N1, 

T1 and T2 under the condition of m1=3, m2=6, N=201,L=0.5, s=2. From Table 1, 

we can find that hit rates vary with N1 and T2. Generally speaking, hit rates are 

better for N1=90. There are three best hit rates which are boldfaced in table 1. And 

the parameter configurations are (N1=95, T2=12), (N1=90, T2=24) and (N1=90, 

T2=60) respectively. Table 2 shows that hit rates vary with T1 and N1 under the 

condition  m1=3,  m2=6,  T2=60,  N=201,  L=0.5,  s=2,  and  the  parameter 

configuration of N1=90, T1=12 has the best hit rate in table 2. Table 3 shows that 

hit rates vary with T1 and N1 under the condition m1=3, m2=6, T2=24, N=201, 

L=0.5,  s=2  and  there  are  two  best  hit  rates  whose  parameter  configurations  are 

(N1=90, T1=12) and (N1=90, T1=24), respectively.   

Table  4  and  table  5  give  the  resulting  hit  rates  with  different  N1,  T1  and  T2 

under the condition of m1=4, m2=6, N=201, L=0.5, s=2. From table 4, we can see 

that  hit  rates  are  higher  with  T2=24  and  larger  N1.  There  are  four  best  hit  rates 

which  are  boldfaced  in  these  two  tables.  Table  6  lists  the  eight  best  parameter 

configurations for predicting Shanghai Index.   

 

 

9

3.3 The resulting hit rates for predicting Shanghai Index 

Table  7  lists  the  resulting  best  hit  rates  for  different  parameter  configurations 

corresponding  to  different  specific  ISCs  found  by  SGA  program.  Most  hit  rates 

are  larger  than  60%.  However,  we  notice  that  the  landscape  of  hit  rates  vs.  the 

parameter sets of ISC seems rugged. So the best hit rates are just obtained by the 

present SGA program, and there are chances to improve SGA program so as to get 

better hit rates.   

4.  Conclusion 

In  conclusion,  our  prediction  methodology  is  effective  and  agent-based 

mix-game  model  is  a  potential  good  model  to  predict  time  series  of  financial 

markets.  The  further  study  will  focus  on  the  improvement  of  SGA  program  in 

order to find better ISCs so as to get better hit rates. 

Acknowledgements 

This research is supported by Chinese Overseas Study Fund. Thanks Professor 

Yaping Lin for suggestion of using simple generic algorithm. 

Reference 

 

 

1.  Neil  F.  Johnson,,  David  Lamper,  Paul  Jefferies  Michael  L.  Hart  and  Sam  Howison, 
time-series, 
to 

the  prediction  of 

Application  of  multi-agent  games 
arXiv:cond-mat/0105303 v1; Physica A 299 (2001) 222–227. 

financial 

2.  D. Lamper, S. D. Howison and N. F. Johnson, Predictability of Large Future Changes in 
a Competitive Evolving Population, Physical Review Letters Vol. 88, No.1, 017902-1~4 
(2002). 

10

3.  P.  Jefferies,  M.L.  Hart,  P.M.  Hui,  and  N.F.  Johnson,  From  market  games  to  real-world 

markets, Eur. Phys. J. B 20, 493{501 (2001). 

4.  W.B. Arthur, Science 284, 107 (1999); D. Challet, and Y. C. Zhang, Phyisca A 246, 

407(1997); 

5.  Neil  F.  Johnson,  Paul  Jefferies,  and  Pak  Ming  Hui,  Financial  Market 

Complexity, Oxford Press(2003); 

6.  Paul  Jefferies  and  Neil  F.  Johnson,  Designing  agent-based  market  models, 
Oxford Center for Computational Finance working paper: OCCF/010702; 

7.  J. V. Andersen, and D. Sornette, The $-game, cond-mat/0205423; 
8.  Challet,  Damien,  Inter-pattern  speculation:  beyond  minority,  majority  and 

$-games, arXiv: physics/0502140 v1.   

9.  F. Slanina and Y.-C. Zhang, Physica A 289, 290 (2001). 
10.  T.  Lux,  Herd  Behavior,  Bubbles  and  Crashes.  Economic  Journal  105(431): 
881-896(1995).  T.  Lux,  and  M.  Marchesi  Scaling  and  criticality  in  a  stochastic 
multi-agent model of a financial market. Nature 397(6719): 498-500 (1999). 

11.  J.V. Andersen and D. Sornette, Eur. Phys. J. B 31, 141 (2003). 
12.  I. Giardina and J.-P. Bouchaud, Eur. Phys. J. B 31, 421 (2003).   
13.  Chengling Gou, Dynamic Behaviors of Mix-game Models and Its Application, 

/arxiv.org/abs/physics/0504001 

14.  J.P. Bouchaud and R. Cont, Eur. Phys. J. B 6 543 (1998). 
15.  J. D. Farmer, adap-org/9812005. 
16.  J. Lakonishok, A. Shleifer, R. Thaler and R. Vishny, J. Fin. Econ. 32, 23 (1991) 
17.  Chengling Gou, Agents Play Mix-game,  http://arxiv.org/abs/physics/0505112 
 
 

 

11

Third party game 

Black box game 

Time series 

Real time series 

WinIn=sign (time series) 

WinEx=sign (real time series ) 

Hit scores 

Fig.1 work flow for prediction 

Table 1 hit rates under condition of m1=3, m2=6, T1=12, N=201, L=0.5, s=2 

65 

70 

75 

80 

85 

90 

95 

100 

105 

110 

0.5136 

0.5136 

0.5161 

0.5261 

0.5285 

0.5434 

0.5509 

0.5186 

0.5261 

0.5211 

0.5264 

0.5290 

0.5290 

0.5315 

0.5416 

0.5542 

0.5365 

0.5315 

0.5290 

0.5264 

0.5192 

0.5396 

0.5371 

0.5371 

0.5371 

0.5550 

0.5320 

0.5294 

0.5320 

0.5422 

0.4935 

0.5117 

0.5143 

0.5273 

0.5377 

0.5403 

0.5429 

0.5221 

0.5221 

0.5299 

0.5092 

0.5092 

0.5092 

0.5224 

0.5251 

0.5224 

0.5145 

0.5251 

0.5145 

0.5303 

0.5094 

0.5121 

0.5255 

0.5255 

0.5201 

0.5228 

0.5389 

0.5442 

0.5362 

0.5308 

0.4986 

0.5068 

0.5014 

0.5177 

0.5232 

0.5368 

0.5341 

0.5368 

0.5368 

0.5422 

0.4986 

0.5042 

0.5125 

0.5235 

0.5457 

0.5374 

0.5346 

0.5374 

0.5374 

0.5291 

0.4986 

0.5070 

0.5155 

0.5268 

0.5380 

0.5549 

0.5324 

0.5127 

0.5352 

0.5324 

0.5100 

0.5100 

0.5072 

0.5158 

0.5215 

0.5330 

0.5415 

0.5244 

0.5244 

0.5301 

0.5100 

0.5100 

0.5072 

0.5158 

0.5215 

0.5330 

0.5415 

0.5244 

0.5244 

0.5301 

 

12

 

N1 

T2 

12 

18 

24 

30 

36 

42 

48 

54 

60 

66 

72 

 
 
 
 

 

  Table 2 hit rates under condition of m1=3, m2=6, T2=60, N=201, L=0.5, s=2 

65 

70 

75 

80 

85 

90 

95 

100 

105 

110 

0.4986 

0.5070 

0.5155 

0.5268 

0.5380 

0.5549 

0.5324 

0.5127 

0.5352 

0.5324 

0.5014 

0.5183 

0.5183 

0.5183 

0.5099 

0.5155 

0.4845 

0.5183 

0.5211 

0.5099 

0.4901 

0.5183 

0.5099 

0.5183 

0.5268 

0.5211 

0.5268 

0.5211 

0.5324 

0.5155 

0.4986 

0.5127 

0.5099 

0.5211 

0.5296 

0.5296 

0.5099 

0.5380 

0.5324 

0.5324 

0.4958 

0.5127 

0.5127 

0.5183 

0.5239 

0.5268 

0.5211 

0.5183 

0.5183 

0.5239 

0.5127 

0.5099 

0.5183 

0.5380 

0.5521 

0.5493 

0.5465 

0.5268 

0.5183 

0.5211 

0.5042 

0.5239 

0.5239 

0.5155 

0.5211 

0.5324 

0.5296 

0.5239 

0.5211 

0.5211 

0.5070 

0.5014 

0.5211 

0.5155 

0.5408 

0.5408 

0.5352 

0.5408 

0.5211 

0.5099 

0.5042 

0.5070 

0.5155 

0.5324 

0.5465 

0.5352 

0.5437 

0.5352 

0.5408 

0.5155 

                       
   
    Table 3 hit rates under condition of m1=3, m2=6, T2=24, N=201, L=0.5, s=2 

65 

70 

75 

80 

85 

90 

95 

100 

105 

110 

0.5192  0.5396  0.5371  0.5371

0.5371

0.5550

0.5320

0.5294  0.5320  0.5422

0.5013  0.5396  0.5396  0.5473

0.5396

0.5345

0.5269

0.5243  0.5166  0.5243

0.5141  0.5269  0.5243  0.5320

0.5422

0.5601

0.5473

0.5345  0.5422  0.5371

Table 4 hit rates under condition of m1=4, m2=6, T1=12, N=201, L=0.5, s=2 

55 

60 

65 

70 

75 

80 

85 

90 

95 

100 

0.5335 

0.5459 

0.5434 

0.5360 

0.5385 

0.5434 

0.5434 

0.5434 

0.5509 

0.5509 

0.5315 

0.5264 

0.5264 

0.5365 

0.5390 

0.5365 

0.5365 

0.5390 

0.5466 

0.5491 

0.5396 

0.5473 

0.5448 

0.5396 

0.5499 

0.5575 

0.5601 

0.5473 

0.5652 

0.5575 

0.5351 

0.5273 

0.5299 

0.5325 

0.5429 

0.5455 

0.5403 

0.5403 

0.5532 

0.5532 

0.5224 

0.5277 

0.5145 

0.5330 

0.5330 

0.5383 

0.5356 

0.5356 

0.5356 

0.5462 

Table 5 hit rates under condition of m1=4, m2=6, T2=24, N=201, L=0.5, s=2 

55 

60 

65 

70 

75 

80 

85 

90 

95 

100 

0.5396 

0.5473 

0.5448 

0.5396 

0.5499 

0.5575 

0.5601 

0.5473 

0.5652 

0.5575 

0.5396 

0.5422 

0.5524 

0.5499 

0.5499 

0.5601 

0.5550 

0.5550 

0.5575 

0.5524 

0.5294 

0.5396 

0.5499 

0.5499 

0.5422 

0.5524 

0.5499 

0.5601 

0.5575 

0.5524 

13

N1 

T1 

12 

18 

24 

30 

36 

42 

48 

54 

60 

T1 

12 

18 

24 

 

 

T2 

12 

18 

24 

30 

36 

 

T1 

12 

18 

24 

 

 

N1 

N1 

N1 

 
Table 6 the eight best parameter configurations under the condition of ISC produced by the 
same parameters     

N0. 

parameter configurations 

Hit rate 

 
 
Table 7 the best hit rates found by SGA for different parameter configurations at 200 turns     

N0. 

parameter configurations 

Hit rate 

m1=3, m2=6, N=201, N1=90, T1=24, T2=24, 

0.5601 

m1=3, m2=6, N=201, N1=90, T1=12, T2=24, 

0.5550 

m1=3, m2=6, N=201, N1=90, T1=12, T2=60, 

0.5549 

m1=3, m2=6, N=201, N1=95, T2=12, T1=12, 

0.5509 

m1=4, m2=6, N=201, N1=95, T1=12,T2=24, 

0.5652 

m1=4, m2=6, N=201, N1=90, T1=24, T2=24, 

0.5601 

m1=4, m2=6, N=201, N1=85, T1=12, T2=24, 

0.5601 

m1=4, m2=6, N=201, N1=80, T1=18, T2=24, 

0.5601 

m1=3, m2=6, N=201, N1=90, T1=24, T2=24, 

m1=3, m2=6, N=201, N1=90, T1=12, T2=24, 

m1=3, m2=6, N=201, N1=90, T1=12, T2=60, 

m1=3, m2=6, N=201, N1=95, T2=12, T1=12, 

m1=4, m2=6, N=201, N1=95, T1=12,T2=24, 

61.3% 

60.3% 

53.8% 

61.8% 

59.3% 

m1=4, m2=6, N=201, N1=90, T1=24, T2=24, 

61.3% 

m1=4, m2=6, N=201, N1=85, T1=12, T2=24, 

60.8% 

m1=4, m2=6, N=201, N1=80, T1=18, T2=24, 

60.8% 

1 

2 

3 

4 

5 

6 

7 

8 

1 

2 

3 

4 

5 

6 

7 

8 

 

 

14

