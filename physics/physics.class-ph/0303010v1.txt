Physics Letters A

The Gap-Tooth Method in Particle Simulations

C. William Gear1, Ju Li2, Ioannis G. Kevrekidis3

1NEC Research Institute, 4 Independence Way, Princeton, New Jersey 08540

2Department of Materials Science and Engineering,

Ohio State University, Columbus, Ohio 43210 and

3Department of Chemical Engineering, PACM and Mathematics,
Princeton University, Princeton, New Jersey 08544∗

(Dated: December 21, 2012)

Abstract

We explore the gap-tooth method for multiscale modeling of systems represented by microscopic

physics-based simulators, when coarse-grained evolution equations are not available in closed form.

A biased random walk particle simulation, motivated by the viscous Burgers equation, serves as

an example. We construct macro-to-micro (lifting) and micro-to-macro (restriction) operators,

and drive the coarse time-evolution by particle simulations in appropriately coupled microdomains

(“teeth”) separated by large spatial gaps. A macroscopically interpolative mechanism for com-

munication between the teeth at the particle level is introduced. The results demonstrate the

feasibility of a “closure-on-demand” approach to solving hydrodynamics problems.

PACS numbers: 02.70.-c, 47.11.+j

Keywords: modeling; multiscale; closure-on-demand; gap-tooth; lifting; restriction

3
0
0
2
 
r
a

M
 
3
 
 
]
h
p
-
s
s
a
l
c
.
s
c
i
s
y
h
p
[
 
 
1
v
0
1
0
3
0
3
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

∗Electronic address: yannis@Princeton.EDU

1

Traditional approaches to solving physical problems that manifest separation of scales in-

volve ﬁrst (a) deriving a set of reduced equations to describe the system, and subsequently (b)

solving the equations and analyzing their solutions. Recently an “equation-free” approach

has been proposed [1] that sidesteps the necessity of ﬁrst deriving explicit reduced equations.

The approach relies instead on microscopic simulations, enabling them through a computa-

tional superstructure to perform numerical tasks as if the reduced equations were available in

closed form. Both macroscopically coarse-grained equations and atomistic/stochastic simu-

lations can be regarded as “black boxes” from the point of view of appropriately formulated

numerical algorithms. They constitute alternative realizations of the same macroscopic

input-output mapping. For example, a crystal’s elastic response can either be evaluated

using elastic constants, or estimated by a high-accuracy electronic structure program based

on density functional theory, which, for a given strain, computes the stress on-the-ﬂy. The

advantage of a simulator-based approach is that it can be used generally, beyond the region

of validity of any given closure - e.g. providing the correct nonlinear elastic responses in

the above example. Equation-free methods hold the promise of combining direct physics-

based simulation with the strength and scope of traditional numerical analysis on coarse

variables (bifurcation, parametric study, optimization) for certain problems - problems for

which coarse equations conceptually exist, but are not available in closed form. An exam-

ple is the so-called interatomic potential ﬁnite-element method (IPFEM)[2], a subset of the

more general quasi-continuum method[3], used to identify elastic instabilities leading to de-

fect nucleation in nanoindentation, for which no accurate closed-form constitutive relation

is currently available due to the complex triaxial stress state at the critical site of instability.

Microscopic simulations cannot be used directly to attack problems with large spatial

and temporal scales (“macrodomains” in space and time); the amount of computation is

prohibitive. If, however, the actual behavior can be meaningfully coarse-grained to a rep-

resentation that is smooth over the macrodomain, the microscopic systems need only be

directly simulated in small patches of the macrodomain. This is done by interpolating hy-

drodynamic variables between the patches in space - the gap-tooth method (see [4]) - and

extrapolating from one or more patches in time - projective integration[5, 6]. In this pa-

per, we use this “closure-on-demand” approach to solve for the coarse-grained behavior of

a particular microscopic system. The illustrative example is the biased random walk of an

2

External boundary

Edge
tooth

Tooth
αD

n
o
i
t
i
d
n
o
c
 
y
r
a
d
n
u
o
b

 
l
a
n
r
e
t
x
E

Internal 
boundary of 
tooth 

Gap

D

D

D

FIG. 1: Teeth and gaps covering space.

ensemble of particles, motivated by the viscous Burgers equation,

ut + uux = νuxx,

(1)

a 1D version of the hydrodynamics equations used under various conditions to model bound-

ary layer behavior, shock formation, turbulence, and transport. Here, ν > 0 is the viscos-

ity; periodic boundary condition is used for simplicity, and only non-negative solutions

u(x, t) > 0 are considered. A particular microscopic dynamics is constructed, motivated by

Eq.(1), interpreting u as the density ﬁeld of the random walkers; R udx = 1 corresponds to Z

walkers, where Z is a large normalization constant. In the micro-simulation, random walk-
ers move on [−1, 1) at discrete timesteps tn = nh. At each step, an approximation to the

local density, ρi, is computed from the positions of neighbors. Then every walker is moved
by ∆xi ∈ N(hρi/2, 2νh), a biased Gaussian distribution. xi’s are then wrapped around to
[−1, 1), and the process repeats. Since ρi is a local estimate of u, this process achieves a
coarse-grained ﬂux analogous to j ≡ u2/2 − νux in Eq.(1) by assigning each walker a drift

velocity of ρi/2.

The gap-tooth scheme, ﬁrst discussed in [4], covers space with teeth and intervening gaps

as shown in Fig. 1 for one dimension. The microscopic evolution is simulated in the interior

of each tooth. Clearly appropriate boundary conditions have to be provided at the edges

of each tooth. Tooth boundaries coincident with external boundaries have the boundary

conditions speciﬁed externally, while internal boundary conditions must be generated by

the gap-tooth scheme itself. Because this example uses periodic boundary conditions, there

are no external boundaries: the teeth can be viewed as equally spaced on a circle.

The microscopic simulation operates on the position of each particle. We are interested

3

in a meaningful coarse description, a ﬁnite-dimensional approximation to the density of par-

ticles, u(x), possibly averaged over several realizations of the computational experiment [1].

The lifting operator that maps a given u(x) to consistent particle positions is straightforward

in this case. From the density function over a tooth we can compute its integral, so we know

the number of particles that should be present in that tooth. The indeﬁnite integral of the

density function over the tooth provides the cumulative distribution function for that tooth

which permits the particles to be placed as a discrete representation of that function[7]. If

the density approximation is constant in each tooth (as has been found to be adequate in

the examples here) this simply means that the particles are uniformly spaced in each tooth

according to the density in that tooth.

In our particular stochastic simulation, the evolution rules require a local density estimate.

This should be done by choosing a particle density inﬂuence function σ(d) that speciﬁes the

contribution of each particle to the local density at a distance d from that particle. If this

function is constant for d < w and zero elsewhere, the local density function at x is found

by just counting the number of particles within distance d of x. Ref.

[8, 9], seeking some

level of diﬀerentiability, use a Gaussian spreading function for each particle. Since we do

not require diﬀerentiability, we will count particles within distance d. By making d twice

the tooth size, we can then simply count the particles in each tooth. We have also used

higher-order approximations, but it is not clear that they yield suﬃcient improvements in

accuracy to justify the additional computational eﬀort. The technique used for higher-order

approximations is based on the fact that the sample cumulative distribution function in each

tooth is known from the particle positions. We can then ﬁt a polynomial to it within each

tooth. The density function over a tooth is simply given by the derivative of this polynomial.

The mapping of a phase point or points (particle positions and velocities history) to coarse

ﬁelds is called a restriction operator. In addition to the density ﬁeld (0th-moment), smooth

velocity (1st-moment) and temperature (2nd-moment) ﬁelds can be extracted from molecular

dynamics based on maximum likelihood inference [10]. If the interior of a tooth were to be

simulated by solving a PDE, we would need to prescribe appropriate boundary conditions

at each tooth at each timestep. The same is still true when the tooth is realized using

particle-based microscopic simulations. Creating an appropriate match between the coarse

ﬁelds at the boundaries and the particles in the teeth is an area of intense research[11, 12].

Sometimes one knows so little about the nature of the coarse equation that even the correct

4

Tooth 0

Tooth 1

Or,0

Ir,1

Or,1

(1-α)D

D

FIG. 2: Right-going Input and Ouput Fluxes

order for imposing well-posed boundary conditions at the teeth is unknown. This issue is

addressed in [13].

Here we use an alternative approach suggested in [14]. In a 1D particle based random

walk simulation we can distinguish two “ﬂuxes” - left-going and right-going. The particle

simulation in the interior of each tooth generates outgoing ﬂuxes, that is, the left[right]-going

ﬂuxes at the left[right] boundaries, directly. Boundary conditions are needed to provide

matching incoming (right[left]-going) ﬂuxes at the same boundaries. In d-dimensions, there

will be 2d boundaries to deal with and the corresponding incoming ﬂuxes to provide.

Consider the estimation of the right-going incoming ﬂux, Ir,1, as shown in Fig.

2.

Assuming macroscopic ﬂux smoothness suggests that we can interpolate its values from

neighboring outgoing ﬂuxes, in this case Or,0 and Or,1. If we use linear interpolation, we can

Ir,i = αOr,i−1 + (1 − α)Or,i.

(2)

The interpolation coeﬃcients depend (in this case through α) only on the gap-tooth geom-

write

etry.

However, the “ﬂuxes” under discussion here are not real-valued quantities, but discrete

events as particles cross a boundary, so Eq.(2) needs a diﬀerent interpretation. Consider

instead the role played by each outgoing ﬂux in the interpolation for ingoing ﬂuxes. An
interpretation of Eq.(2) for i = 1 and i = 2 would be the portion (1 − α) of Or,1 contributes

to the ﬂux Ir,1 while α of it contributes to Ir,2. A similar procedure applies to the left-going

ﬂuxes. Thus, rather than thinking in terms of ﬂux interpolation we can think in terms of

ﬂux redistribution. Interpreting the linear interpolation stochastically, (on a regularly spaced

gap-tooth scheme) we direct α of the outgoing particles as input to the neighboring tooth,

5

Or,0

Ir,1

Or,1

Ir,2

Or,2

Or,1 α

(1- α)

FIG. 3: Flux Redistribution for Right-going Fluxes

and redirect (1 − α) of them back to the other boundary of the same tooth as shown in Fig.

3.

Flux redistribution has to recognize the position of a particle after it leaves a tooth. If it

had moved to a distance δ beyond the boundary of the tooth, it must be inserted a distance

δ inside the receiving tooth. If δ were larger that the tooth width it would have left a tooth

boundary again and a further redistribution would be required following the same rule. (In

multiple dimensions, the boundaries in each dimension are treated independently so that a

particle will be distributed for each boundary that it crosses until it is inside a tooth.)

The above method implements eﬀective linear interpolation. As discussed in [14], linear

interpolation is not adequate for second-order problems: at least quadratic interpolation

must be used. A possible quadratic interpolation formula is

Ir,i =

α(1 + α)
2

Or,i−1 + (1 − α2)Or,i − α(1 − α)

Or,i+1.

2

(3)

As before we consider the impact of each outgoing ﬂux on incoming ﬂuxes. The fractions of
output Or,1 should be sent to the inputs as follows: (1 − α2) to Ir,1; α(1 + α)/2 to Ir,2: and
−α(1 − α)/2 to Ir,0.

Note that the last value is negative. Any linear higher-order interpolation formula con-

tains negative coeﬃcients. Our solution is to direct anti-particles to the appropriate teeth.

There they must annihilate with regular particles - we simply annihilate with the nearest
regular particle. With this approach, the Or,1 is redistributed as follows: (1 − α(1 + α)/2)
to Ir,1; α2 to Ir,2; and α(1 − α)/2 are cloned to get two regular particles sent to Ir,1 and Or,2

and one anti-particle sent to Ir,0 It is interesting to observe that this scheme conserves the

total number of particles in the computation.

The microscopic evolution rules were simulated at conditions corresponding to ν = 0.05

6

N: 100000, M: 40 alpha: 0.2 nu: 0.05 h: 0.002 Options 20

−0.8

−0.6

−0.4

−0.2

0.2

0.4

0.6

0.8

1

N: 500000, M: 40 alpha: 0.2 nu: 0.05 h: 0.002 Options 20

0.4

−1

1.6

1.4

1.2

1

0.8

0.6

1.6

1.4

1.2

1

0.8

0.6

e
u
r
t
 
:

n
e
e
r
g

 
,

t

d
e
u
p
m
o
c
 
:

d
e
r

e
u
r
t
 
:
n
e
e
r
g
 
,
d
e
t
u
p
m
o
c
 
:
d
e
r

0.4

−1

itime 1000

0
space

(a)

itime 1000

0
space

(b)

7

−0.8

−0.6

−0.4

−0.2

0.2

0.4

0.6

0.8

1

FIG. 4: Simulation results after 1,000 steps. α = 0.2. (a) 100,000 particles (b) 500,000 particles

and timestep h = 0.002 in Eq.(1) for 1,000 time steps using the gap-tooth scheme with 40
equally spaced teeth in the interval [−1, 1). The tooth-to-spacing ratio was α = 0.2. The
coarse initial condition was 1 − sin(πx)/2. Fig. 4 shows the results at t = 2 when 100,000

particles are used (upper ﬁgure) and 500,000 particles (lower ﬁgure). The dots indicate the

particle density approximations within each tooth (constant in this case); they are connected

by a spline interpolant. The smooth curve (to guide the eye) is the analytical solution [15, 16]

of Eq.(1).

The problem was also run with α = 1, i.e., no gaps, to compare with a conventional, full

space, direct microscopic simulation. Fig. 5 shows the result using 500,000 particles and a

constant density approximation in each tooth. This is the same average particle density per

spatial unit as with α = 0.2 and 100,000 points. The results are comparable. The α = 1

case with 40 teeth and 500,000 particles has also been run with the polynomial density

N: 500000, M: 40 alpha: 1 nu: 0.05 h: 0.002 Options 20

1.6

1.4

1.2

1

0.8

0.6

e
u
r
t
 
:

n
e
e
r
g

 
,

t

d
e
u
p
m
o
c
 
:

d
e
r

0.4

−1

−0.8

−0.6

−0.4

−0.2

0.2

0.4

0.6

0.8

1

itime 1000

0
space

FIG. 5: Standard particle simulation (no gaps)

interpolants described above of degrees 1 and 2. No signiﬁcant diﬀerence in the solutions

were observed, and neither were diﬀerences observed when the higher order polynomial ﬁts

were used with α = 0.2.

We have demonstrated that the gap-tooth scheme can be successful in solving some

problems using microscopic models based on the stochastic simulation of particle motion;

we also introduced a novel approach for dealing with the inter-tooth boundary conditions.

In earlier work we have proposed combining this with projective integration [5] and some

preliminary experiments have been performed in this direction. However, projective inte-

gration requires smoothness of the time derivative estimates. The stochastic nature of the

microscopic model leads to signiﬁcant noise. In this simulation we used a least-squares lin-

ear estimate from a large number of time steps to get a reasonably accurate time derivative

estimate. However, by then, the total time step at the microscopic level was large relative to

the size of a projective step in time (which is limited by the smoothness of the solution). If

the stochastic noise is reduced by using a much larger number of particles, or a large number

of “copies” of the simulation, the time derivative estimates would allow the application of

projective integration. In some sense there is a tradeoﬀ between saving computation in the

spatial domain with fewer teeth and fewer particles, and saving computation in the time

domain by getting more accurate estimates of the time derivatives. We believe that for prob-

lems where there is a signiﬁcant gap between the timescales of the microscopic dynamics

and those of the expected macro-scale behavior, projective intregration would be a useful

addition. We will report on such “patch dynamics” experiments in a future paper.

8

This work was partially supported by the Air Force Oﬃce of Scientiﬁc Research (Dynam-

ics and Control) and an NSF ITR grant (C.W.G.,I.G.K.). J.L. acknowledges support by

Honda R&D Co., Ltd. (RF# 744252) and the OSU Transportation Research Endowment

Program.

[1] I.G. Kevrekidis, C.W. Gear, J.M. Hyman, P.G. Kevrekidis, O. Runborg, C. Theodoropoulos,

submitted to Communications in the Mathematical Sciences.

[2] J. Li, K.J. Van Vliet, T. Zhu, S. Yip, S. Suresh, Nature 418 (2002) 307-310. K.J. Van Vliet,

J. Li, T. Zhu, S. Yip, S. Suresh, Phys. Rev. B 67 (2003) 1041XX.

[3] R. Phillips, D. Rodney, V. Shenoy, E. Tadmor and M. Ortiz, Model. Simul. Mater. Sci. Eng.

7, 769 (1999).

[4] I.G. Kevrekidis, Plenary Lecture, CAST Division, AIChE Annual Meeting, Los Angeles, 2000.

Slides can be obtained at http://arnold.princeton.edu/∼yannis/

[5] C.W. Gear, I.G. Kevrekidis, to appear SIAM Journal on Scientiﬁc Computing.

[6] C.W. Gear, I.G. Kevrekidis, C. Theodoropoulos, Computers and Chemical Engineering 26

(2002) 941-963.

[7] C.W. Gear, NEC Research Institute Report TR 2001-130, Nov, 2001.

[8] A. Chertock, D. Levy, J. Comp. Phys. 171 (2001) 708-30.

[9] A. Chertock, D. Levy, J. Sci. Comp. 17 (2002) 491-499.

[10] J. Li, D. Liao, S. Yip, Phys. Rev. E 57 (1998) 7259-7267.

[11] J. Li, D. Liao, S. Yip, J. Comput.-Aided Mater. Des. 6 (1999) 95-102.

[12] W. E, Z. Huang, Phys. Rev. Lett. 87 (2001) 135501.

[13] J. Li, P.G. Kevrekidis, C.W. Gear, I.G. Kevrekidis, submitted to Multiscale Modeling and

Simulation. http://arxiv.org/abs/physics/0212034

[14] C.W. Gear, I.G. Kevrekidis, NEC Research Institute Report TR 2002-031N, Oct. 2002.

http://arXiv.org/abs/physics/0211043

[15] J.D. Cole, Quart. Appl. Math. 9 (1951) 225-236.

[16] E. Hopf, Comm. Pure Appl. Math. 3 (1950) 201-230.

9

1.6

1.4

1.2

1

0.8

0.6

e
u
r
t
 
:

n
e
e
r
g

 
,

d
e

t

u
p
m
o
c
 
:

d
e
r

0.4

−1

N: 500000, M: 200 alpha: 1 nu: 0.05 h: 0.002 Options 20

Reflective
Boundary

Edge
tooth

Ol,0

Internal
tooth

Or,0

Il,0

itime 10

Ir,1

α

−0.8

−0.6

−0.4

−0.2

0.4

0.6

0.8

1

0
space

0.2

(1- α)

