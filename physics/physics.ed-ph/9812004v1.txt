8
9
9
1
 
c
e
D
 
3
 
 
]
h
p
-
d
e
.
s
c
i
s
y
h
p
[
 
 
1
v
4
0
0
2
1
8
9
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Use of computer facilities in teaching general
relativity

Florin A. Ghergu and Dumitru N. Vulcanov
Theoretical and Computational Physics Department

The West University of Timi¸soara

Bv. V. Pˆarvan No. 4, 1900 Timi¸soara, Romˆania
E-mail : florin/vulcan@mitica.uvt.ro

September 20, 2013

Abstract

The article presents some aspects on the use of computer in teaching general rela-
tivity for undergraduate students with some experience in computer manipulation.
The ﬁrst part of the article presents some simple algebraic programming (in RE-
DUCE+EXCALC package) procedures for obtaining the Schwarzschild solution of
Einstein equations in order to convince a dedicated student in general relativity
about the utility of a computer algebra system. The second part of the article is
dedicated of some applications of Mathematica package in studying and visualiza-
tion of the Schwarzschild-type solution properties.

1 Introduction

Teaching general relativity is a very diﬃcult task not only for the ”teacher”
but also for the students. But why ?

General relativity (GRG) is not only a theory of gravity; it is a theory of
the structure of space and time, and hence a theory of the dynamics of the
universe in its entirety. Thus, the theory is a vast ediﬁce of pure geometry,
indisputably elegant, but of a great mathematical diﬃculty especially for

1

undergraduate students (among others...). But why undergraduate students?
Because, in our department, (considering GRG a necessity for the medium
graduate physics people) we make eﬀorts to introduce a course of GRG at the
III-rd year level. After some years of experience in teaching GRG at graduate
students, specialized in theoretical physics, we can say that after some weeks
of introducing the must important tools of diﬀerential geometry, starting
with the physical problems of GRG, an important part of our students were
almost discouraged. At an undergraduate level, with unspecialized students,
this risk is much greater.

Thus, algebraic programming systems (like REDUCE - [7]) which contain
diﬀerential geometry packages can become a very important tool for surpass-
ing these diﬃculties. With the computer, the student can learn very fast,
and in an attractive manner, the important notions of diﬀerential geometry,
tensor calculus and, of course, the exterior calculus (with EXCALC for RE-
DUCE, for example - [8]). As an example, he can make, after some simple
computer manipulation, the long and unattractive (for the ”manual” stu-
dent) calculations from the Riemannian geometry, with metrics and Christ-
toﬀel symbols, etc. Thus, the ﬁrst part of the second section of this article
illustrates how we can use the EXCALC package in teaching Riemannian
geometry.

But having such a powerful l tool for calculus in diﬀerential geometry, we
can try to introduce some aspects of GRG using computer algebra systems.
For example, the Schwarzschild solution can be completely obtained on the
computer, and also we can generate the Reissner-Nordstrom solution. These
aspects are presented in the second part of the next section.

The second part of the article (section 3) presents some facts and results
concerning the use of Mathematica package ([6]) in teaching general rela-
tivity. A major problem which appears in teaching general relativity is the
necessity of vizualisation of diﬀerent geometrical objects, results and prop-
erties of space-times studied. Here the graphical facilities of the computer
can be used and is a very promising the fact that the software market oﬀers
popular (and cheap...) packages with nice and easy to use graphical toolkits.
Among these, exists for instance the Mathematica package (which oﬀer also
a good algebraic programming package too - [6]). We present here a way
to eliminate the pseudo-singularities, which has as a result the maximal an-
alytic extension as well as the necessity of introducing Penrose coordinates
to represent the whole universe within a diagram with ﬁnite numbers. The

2

results are obtained and visualized in a series of diagrams using Mathematica
procedures.

As a conclusion, we consider the use of computer facilities as an impor-
tant tool for teaching general relativity. During the last two years we have
experienced several packages of procedures, (in REDUCE + EXCALC for al-
gebraic programming and in Mathematica for graphic visualizations) which
fulﬁll this purpose. Even when the students were real beginners in computer
manipulation we have obtained visible good results, in approaching several
topics of diﬀerential geometry and of course, in general relativity.

2 Use of computer algebra in general relativ-

ity

2.1 Diﬀerential geometry in EXCALC

The program EXCALC ([8]) is completely embedded in REDUCE, thus all
features and facilities of REDUCE are available in a calculation.

EXCALC is designed for easy use by all who are familiar (or want to
became) with the calculus of Modern Diﬀerential Geometry. The program is
currently able to handle scalar-valued exterior forms, vectors and operations
between them, as well as non-scalar valued forms (indexed forms).

Geometrical objects like exterior forms or vectors are introduced to the
system by declaration commands; therefore zero-forms (functions) must also
be declared. Also, speciﬁc operations with geometric objects are available in
EXCALC like : exterior multiplication between exterior forms (carried
(wedge)), partial diﬀerentiation (is
out with the nary inﬁx operator
denoted by the operator @), exterior diﬀerentiation of exterior forms
(carried out by the operator d), the inner product between a vector and an
(underscore or-bar)), the Lie
exterior form (represented by the diphthong
derivative can be taken between a vector and an exterior form or between
), the Hodge-* duality
two vectors (represented by the inﬁx operator
operator (maps an exterior form of degree K to an exterior form of degree
N-K, where N is the dimension of the space).
It is possible to declare an
indexed quantity completely antisymmetric or completely symmetric. Some
examples :

∧

|

|

3

PFORM U=1,V=1,W=K;
(3*U-A*W)^(W+5*V)^U;
A*(5*U^V^W - U^W^W)
@(SIN X,X);
COS(X)

PFORM X=0,Y=K,Z=M;
D(X * Y);
X*d Y + d X^Y
D(X*Y^Z);

K

%declaration of some forms

% partial differentiation

% exterior differentiation of a
% product of two forms

( - 1) *X*Y^d Z

+ X*d Y^Z + d X^Y^Z

PFORM X=0,Y=K,Z=M;
U_|(X*Y^Z);
K

TVECTOR U,V;

% inner product

X*(( - 1) *Y^U_|Z + U_|Y^Z)

PFORM Z=K; TVECTOR U;
U |_ Z;
U_|d Z + d(U_|Z)

% Lie derivative

A metric structure is deﬁned in EXCALC by specifying a set of basis
one- forms (the coframe) together with the metric. The clause WITH MET-
RIC can be omitted if the metric is Euclidean and the shorthand WITH
SIGNATURE <diagonal elements> can be used in the case of a pseudo-
Euclidean metric. The splitting of a metric structure in its metric tensor co-
eﬃcients and basis one-forms is completely arbitrary including the extremes
of an orthonormal frame and a coordinate frame. Examples ([8]) :

COFRAME O(T)=D T, O X=D X
WITH SIGNATURE -1,1;

%A Lorentz coframe;

COFRAME E R=D R, E PH=D PH
WITH METRIC G=E R*E R+R**2*E PH*E PH;

%Polar coordinate
%basis;

The frame, dual to the coframe deﬁned by the COFRAME command
can be introduced by FRAME <identiﬁer>. This command causes the dual

4

property to be recognized, and the tangent vectors of the coordinate functions
are replaced by the frame basis vectors.

The command RIEMANNCONX is provided for calculating the connec-
tion 1 forms. Example : calculate the connection 1-form and curvature
2-form on S(2) (displaying only the nonzero results) :

COFRAME E TH=R*D TH,E PH=R*SIN(TH)*D PH;
RIEMANNCONX OM;
OM(K,-L);

%Display the connection forms;

:= (E

*COS(TH))/(SIN(TH)*R)

PH

PH

PH

NS

TH

NS

TH

PH

:= ( - E *COS(TH))/(SIN(TH)*R)

PFORM CURV(K,L)=2;
CURV(K,-L):=D OM(K,-L) + OM(K,-M)^OM(M-L);

%The curvature forms

PH

TH

PH

2

CURV

:= ( - E

^E

)/R

%it was a sphere with

%radius R.

TH

TH

PH

2

CURV

:= (E

^E

)/R

TH

PH

2.2 General relativity on the computer

The students in our Faculty of Physics are, generally speaking, well trained in
practical computer manipulations. There is no semester without at least one
course with labs in the computer room. But when we invited our students
to come in the computer room, to learn something about general relativity
with the computer, it was a general surprise, because they considered (until

5

now) the computer as a tool for hard numerical computations. They do
not know almost anything about computer algebra - [4].

It is not necessary to use sophisticated procedures, with large and com-
plicated metric statements (which are almost impossible to calculate by hand
in a civilized time of teaching) in order to convince a dedicated student in
general relativity about the utility of a computer algebra system. It is enough
to use a simple program like ([9]) :

pform psi=0; fdomain psi=psi(r);
coframe
o(t)
o(r)
o(theta) = r
o(phi)

= psi
= (1/psi)

= r * sin(theta)* d phi
with signature 1,-1,-1,-1; frame e;

% Schwarzschild
* d t,
* d r,
%
* d theta,

metric

to introduce a Schwarzschild type metric in spherical coordinates (r, θ, ϕ).

This means that in classical notation the interval is

ds2 = Ψ2dt2

1
Ψ2 dr2

−

−

r2

dθ2 + sin2θ dϕ2

(cid:16)

(cid:17)

(1)

Ψ being a function Ψ = Ψ(r) and diﬀer from a Minkowski one by the a new
1 + unknown(r) which must be determined
”unknown” function (Ψ =
from Einstein equations :

q

pform unknown=0; fdomain unknown=unknown(r);
psi := sqrt(1 + unknown);

Now comes the most important part of the procedure : the calculation
of the components of Einstein tensor (einstein3) via the Riemann or Levi-
Civita connection 1-form Γij - christ1 and the curvature 2-form Rij - curv2

pform chris1(a,b)=1, curv2(a,b)=2, einstein3(a)=3;
antisymmetric chris1, curv2;
riemannconx christ1; chris1(a,b) := christ1(b,a);
curv2(a,b)
einstein3(-a)

:= d chris1(a,b) + chris1(-c,b) ^ chris1(a,c);
:= (1/2) * curv2(b,c) ^ #(o(-a)^o(-b)^o(-c));

6

The last of the above program lines just deﬁnes the Einstein 3-form which
appears in the Einstein equations. Those who prefer the coordinate compo-
1
nents form (thus the Einstein tensor Gij = Rij −
2gijR) can use the next line
to “pick-up” these components as :

pform Ein(i,j)=0;
Ein(-i,-j):=e(-i)_|einstein3(-j);

A typical component (Gφ) of the output of einstein3 reads :

R

T
- (O ^O ^O

THETA

or :

*(@

UNKNOWN*R + 2*@ UNKNOWN))/(2*R)
R

R R

Gφ =

1
2

∂2unknown
∂r2

1
r

∂unknown
∂r

−

 −

ot

or

∧

∧

oθ

!

Requiring the coeﬃcients to vanish yields a second order diﬀerential equation
for the function unknown. Trying unknown = α
n, after using
SOLVE ([7]) package, we obtain n =

1 and :

m/r

∗ ∗

∗

unknown := - alpha * m/r;

where ”m” is the mass and alpha a constant coeﬃcient to be determined by
physical considerations (link to the Newtonian theory, for example).

Finally, evaluating the ψ function (psi := psi), we obtain :

ψ =

1
r

−

αm
r

or, in (1) we have

ds2 =

1
(cid:18)

−

αm
r (cid:19)

dt2

1

−

1

αm
r

−

dr2

r2

−

dθ2 + sin2θ dϕ2
(cid:16)

(cid:17)

(2)

which is the typical form of the Schwarzschild metric ([3]) identifying α = 2
by physical considerations.

From now one, it is possible to study, in a similar way more complex
situations, like Reissner-Nordstr¨om ([3]) metric (starting, of course with the

−

7

above Schwarzschild one), Kerr or Kerr-Newmann solutions. But this is no
more the object of the present article. We have presented only a very relevant
example. Of course, the teacher can select more exact solutions of Einstein
equations in order to complete the education of his students. Also, algebraic
programming can be used to present (in a very fast manner) the canonical
version of general relativity ([10]) or the post-Newtonian approximation ([2]).

3 Use of Mathematica package in teaching

general relativity

Through solving Einstein equations for diﬀerent models of the universe, ex-
ternal solutions are obtained. These are not valid in the regions which contain
singularities and pseudo-singularities ([2]-[3]).

This part of the article presents a way (using extensively the computer)
to eliminate pseudo-singularities, which has as a result the maximal ana-
lytic extension as well as the necessity of introducing Penrose coordinates to
represent the whole universe within a diagram with ﬁnite numbers.

We assign the above metric (1) to describe the universe. This metric has
the following properties: is static, contains spherical symmetry and includes
Schwarzschild, Reissner-Nordstrom, de Sitter metrics. All the results were
checked through the Univers software package written for the programming
language Mathematica - [6].

We will choose those coordinates for which the line element ds2 is contin-
uous and positive within each region which contains the pseudo-singularity.
The maps bond in the regions with no pseudo-singularities through the scale
factor, so that no discontinuities of the line element results in the bound
point.
If, in this way, we go through the whole universe, we will obtain
a set of maps which is the atlas of the spacetime manifold, implying the
achievement of maximal analytical extension.

3.1 The maximal analytical extension of Schwarzschild

universe

The Schwarzschild solution contains a singularity for r = 0 and a pseudo-
singularity at r = 2m as we can see from (2). We can eliminate this pseudo-

8

singularity with an suitable coordinate system (u, v, θ, ϕ) - ([1]-[3]). This
selection have to satisfy the following rules:

- the metric is positive deﬁnite and continuous in each point;
- u(r, t), v(r, t) coordinates are dimensionless and preserve the light cone.
The Schwarzschild solution (2) now becomes

ds2 =

1

4a2γ2 e−2r∗γ

du2

2m
r (cid:19) (cid:16)

1
(cid:18)
, r∗ = r + 2m ln

−

−

r

(cid:17)
2m

r∗ =

dr
1− 2m
r

(4)
where r∗ is the extended coordinate, γ the parameter which ensures the
metric continuity, a the scale factor and dΩ2 = r2(dθ2 + sin2θdϕ2).

−

R

|

|

The new coordinates u and v are bound with the following relations :

dv2

+ dΩ2

(3)

u(r, t) =
v(r, t) =

(

±
±

2aeγr∗
2aeγr∗

cosh(γt)
sinh(γt)

for

r > 2m

and for r

2m we denote the pair of (u, v) coordinates as :

≤

u1(r, t) =
v1(r, t) =

(

±
±

2aeγr∗
2aeγr∗

sinh(γt)
cosh(γt)

for

r

2m

≤

obtained with the identiﬁcations of the both metrics (2) and (3).

In purpose of ilustrating these new coordiantes we propose the next pro-

gram lines in Mathematica :

}

Clear[r, t, u, v, s];
SetAttributes[
m, a, γ
, Cons tan t];
{
u[r , t ] := 2aExp[γr∗[r]]Cosh[γt];
u[r , t ] := 2aExp[γr∗[r]]Sinh[γt];
r∗[r ] :=
1
dr;
1− 2m
r
s := F ullSimplif y[ Exp(−2r∗γ)
R
Pr int[”ds2 = ”, s];
Pr int[”ds2 = ”, s/.
{
Pr int[”ds2 = ”, s/.
{

u[r, t]
u[r, t]

−
−

4a2γ2

−

−

1

2m
r

(Dt[u[r, t]]2

Dt[v[r, t]]2)]+Dt[Ω]2;

−

(cid:16)
>
> v[r, t], v[r, t]
The geometrical properties of this space-time don’t change because the Killing
vectors are the same for the both coordinate. The metric continuity is ob-
tained for

>
−
> u[r, t]
}

(cid:17)
u[r, t], v[r, t]

v[r, t]
}
];

−

−

];

(5)

(6)

(7)

γ =

1
4m

9

We declare (u, v) and (u1, v1) as dimensionless coordinates. Because both
coordinates distance r and time t are to be measured in centimeters, the scale
factor will be

a =

1
2√2m

Thus the above obtained coordinates are those discovered in 1960 , known
as Kruskal-Szekeres coordinates - [2].

u1(r, t) =

v1(r, t) =

1
q
1

±

±

−

−




r

r
2m e
r
2m e

4m sinh( t
4m cosh( t

4m )
4m )

r

for

r

2m

≤



u(r, t) =

q
r
2m −
r
2m −
The analytical metric in this atlas has the following form ([2]) :

4m cosh( t
4m sinh( t

4m)
4m )

v(r, t) =

r > 2m




for

1e

1e

±

±

q

q

r

r



ds2 =

32m3
r

− r
e

2m (du2

dv2) + dΩ2

−

(8)

(9)

(10)

(11)

We obtained a set of maps which is the atlas of the spacetime manifold,
implying the achievement of maximal analytical extension. If we visualize
all the atlas maps we obtain the Kruskal-Szekeres diagram. The calculation
system does not admit inﬁnite values for r and t. We chose m = 1 a maximum
radial coordinate rmax = 3 and a time coordinate which varies between (
5,
5). That is why the maps appears to be unbound. In reality they are bound.
Thus we have the next program lines :

−

<< Graphics‘Shapes‘
<< Graphics‘Arrow‘
Clear[u, v, m, maps14, maps23]; m = 1; rmaz = 3;
u[r , t ] :=

Abs[ r
Abs[ r

2m −
2m −

q

1]Exp[ r
1]Exp[ r

4m ]Cosh[ t
4m ]Sinh[ t

4m ];
4m ];

q

v[r , t ] :=
u1[r , t ] := v[r, t]; v1[r , t ] := u[r, t];
maps14 := P arametricP lot3D[
t,
r, 2m, rmax}
}
{
> F alse, Axes
Boxed
−
maps23 := P arametricP lot3D[
, V iewP oint

, V iewP oint

5, 5

5, 5

{{

−
−
> F alse, P lotP oints
−

0, 0,

u[r, t], v[r, t], 0

,
}
3.38
>
u1[r, t], v1[r, t], 0
}
,
>

u[r, t],
{−
,
}
8, 8
{
,
{−

3.38

0, 0,

−

−

>

t,

{

{

,

,

r, 0, 2m
}

{

{

−

}

{

−

}

{{
−

10

v[r, t], 0

,

}}

−

];
}
u1[r, t],

v1[r, t], 0

,

}}

−

> F alse, Axes

Boxed
−
Show[Graphics[
{
0.95, 0.45
T ext[”u”,
{
T ext[”r =
∞
W ireF rame[maps14], W ireF rame[maps23], AspectRatio

> F alse, P lotP oints
0.5, 0.5
], T ext[”v”,

>
−
], Arrow[
}
{
],
}
0.45, 0.8

}
{
], T ext[”r = 0”,

,
0.5, 0.95
{
0.45, 0.95

−
Arrow[
{

}
0.8, 0.45

8, 8

]
}

”,

}

{

}

{

{

]

];

}
0.5, 0.5

> 1];

−

As a result we can obtain a diagram as shown in the next ﬁgure nr. 1.

,

0.5, 0.95

],

}

{

}

Figure 1: Kruskal-Szekeres diagram for the Schwarzschild space-time

The lines at v =
u together represent the light cone as in Minkowski case.
The lines which pass through the origin represent the surfaces of t-constant
and the hyperboles represent surfaces of r-constant. Two hyperboles corre-
spond to the geometric singularity r = 0

±

All the curves within the cone will be temporal curves. Those outside the

v =

√1 + u2

±

(12)

11

cone will be radial curves. These consideration are helpful in establishing a
causality relation between two space-time events.

The study of space-time geometry through the Penrose representation
technique ([2]-[3]) provides information on the asymptotic shapes of the ﬁelds
(metric, curvature tensor, electromagnetic tensor) at inﬁnite. The key for this
technique are the conformal space-time transformations. This method deals
with several types of inﬁnities, which are well deﬁned. These inﬁnities are
inﬁnite regions of the space-time. Conformal transformation used to deal
with diﬀerent universes is :

v + u = tan y+x
2
u = tan y−x
v

2

−

(

(13)

where u and v are coordinates for which the maximal analytical extension is
obtained, x and y representing the Penrose coordinates. Penrose diagrams
can be calculated through identiﬁcation of the inﬁnities within (x, y) plane,
by means of analytic geometry considerations. An example of the Penrose
diagram can be obtained using the next small program in Mathematica :

Clear[x, y, x1, y1, ep, en, m]; m = 1; rmax = 10;
r
ep[r , t ] :=

Abs[1

−

2m ]Exp[ r+t
4m ];
2m ]Exp[ r−t
4m ];

r

q

q

−

−

en[r, t]]/; r

Abs[1

en[r , t ] :=
x[r , t ] := ArcT an[ep[r, t]] + ArcT an[
x[r , t ] := 0/; r > 2m
y[r , t ] := ArcT an[ep[r, t]]
y[r , t ] := 0/; r > 2m
x1[r , t ] := ArcT an[ep[r, t]] + ArcT an[en[r, t]]/; r
x1[r , t ] := 0/; r < 2m
y1[r , t ] := ArcT an[ep[r, t]]
y1[r , t ] := 0/; r < 2m
maps1234 := P arametricP lot3D[

ArcT an[en[r, t]]/; r

ArcT an[

en[r, t]]/; r

−

−

−

2m

2m

≤

≤

2m

2m

≥

≥

,

{{
y1[r, t], 0
>

x[r, t], y[r, t], 0
,
}}
0, 0,
{

−

−

3.38

,

}

}

{−

,
{−
}
10, 10
}
−
> F alse, Axes

t,

,

{

x1[r, t], y1[r, t], 0
{
r, 0, rmax}
{
Boxed
−
Show[Graphics[
{
T ext[”x”,
{
T ext[”τ −”,
T ext[”I 0”,

1.1, 0.45
}
0.9, 0.4
{
}
0.96, 0.45
{

}

−

x1[r, t],
, V iewP oint
> F alse ];
0.5, 0.5

−
,
Arrow[
}
{
0.45, 0.85
], T ext[”y”,
{
], T ext[”τ +”,
0.9, 0.6

0.5, 0.85
}
],
}
],
}

{
], T ext[”I +”,

0.75, 0.75

{

],

}

{

12

x[r, t],

y[r, t], 0

,

−

}

], Arrow[
{

0.5, 0.5

,

1.1, 0.5

],

}

{

}

T ext[”I −”,
T ext[”r = 0”,

{

0.75, 0.25

], T ext[”r = 0”,

0.4, 0.75

],

}
0.4, 0.25

{
], W ireF rame[maps1234]];

}

{

]
}

}

In the next ﬁgure nr. 2. we have noted with I +-”future timelike inﬁnity”,
I −-”past timelike inﬁnity”, I 0-”spacelike inﬁnity”, J +-”future null inﬁnity”
and J −-”past null inﬁnity”. This diagram can be obtained with help oh
analytic geometry with identiﬁcation of types of ”inﬁnity”. It result points
and lines which represent the inﬁnities but it doesn’t result space-like and
time-like curves.

Figure 2: Penrose diagram for the Schwarzschild spacetime

References

[1] J.C.Graves, D.R.Brill : Oscillatory character of Reissner-Nordstrom
metric for an ideal charged Wormhole, Phys.Rev., 120, 1907, 1960

13

[2] C.W.Misner, K.S.Thorne, J.A.Wheeler : Gravitation, W.H.Freeman

Co., San Francisco, 1973

[3] S.Hawking, G.F.R.Ellis : The large scale structure of space-time, Cam-

bridge Univ. Press, Cambridge, 1973

[4] D. Stauﬀer, F.W. Hehl, N. Ito, V. Winkelmann, J. G. Zabolitzky, Com-
puter Simulation and Computer Algebra, Springer Verlag, Berlin, 1993

[5] C.W.Misner, J.A.Wheeler : Classical Physics as Geometry, Rev.of Mod-

ern Phys., 2, 529, 1957

[6] L.A.Martha, J.P.Braselton : Mathematica by Example, Academic Press,

1997

[7] A.C. Hearn, REDUCE User’s Manual, Version 3.3, RAND Publications,

The RAND Corp., Santa Monica, CA, 90407-2138, 1987

[8] E. Schr¨ufer, EXCALC : A system for doing Calculus of Modern Dif-
ferential Geometry, GMD Institut II, D-53757, St. Augustin, Germany,
1994

[9] R. Puntigam, E. Schr¨ufer, F.W. Hehl, The use of computer algebra in
Maxwell’s theory, Computer Algebra and Engineering, Proc. of the XiF-
Workshop, Bielefeld, Aug. 1994, J Fleisher et al. (eds.), World Scientiﬁc,
Singapore (1995)

[10] D.N. Vulcanov, Algebraic Programming in the Hamiltonian Version of
General Relativity, in Relativity and Scientiﬁc Computing, F.W. Hehl,
R.A. Puntigam and H. Ruder (eds.), Springer Verlag, 1996

14

