I. SIMPLE 8085 µP COMPATIBLE I/O CARD

with Arti Dwivedi

Abstract

A simple interfacing project with the 8085-microprocessor kits available in under graduate college labs has been
discussed. The interface card to study the I-V characteristics of a p-n diode emphasizes how the microprocessor can be
used to do experiments in physics. Also, since the whole project was done within Rs400/- it can easily be popularized.

A. Introduction

There is a Malayalam proverb, ”the lazy fellow will ultimately have to lift the mountain”. The scientist to save
the trouble of doing routine experiments always wanted to develop a machine to do it for him, with the scientist free
to analyze the collected data. Isn’t this a symptom of a lazy fellow? Well these lazy fellows went on to develop the
computer to achieve their rest. Rest assured ”a lot of work”. Apart from the joke, a computer is an important device
in experiments, where the results pour in very very slowly or very rapidly. Consider, the diﬃculty of measuring the
discharging of a capacitor in milli-seconds or in couple of hours. The microprocessor communicates in 1’s and 0’s,
i.e. it is only capable of digital communication. However, the external or outside world as we see it, communicates
in analog. Thus, the basic requirement for the microprocessor to communicate with the analog world is a device
capable of converting digital signals to analog signal and visa versa. The Input part of the device takes analog signals
and converts it digital signals, while Output part of the device receives digital signals from the microprocessor and
sends out analog signals. Together they form what is called an I/O device or more popularly an interfacing card.
Anyone with a basic understanding of digital electronics [1, 2] would immediately realize that the input part would
require Analog-to-Digital Converter (ADC) while the output part would have a Digital-to-Analog Converter (DAC).
In this article we describe how an ADC and DAC chip was used to develop a low cost 8085 microprocessor compatible
interface card, which was then used to measure the I-V characteristics of a P-N diode.

B. Designing of the Interfacing Card

Analog to Digital Converter

The IC0804 ADC from National Semiconductors is a low cost chip. The cost is less then Rs 200/- in Delhi market.
The cost is on the lower side since the 0804 is an single channel ADC. This implies only a single source of analog
signal can be given to the ADC. Multi-channel ADC’s are available in the market, however, the cost and programming
complexity goes up.

The IC0804 converts analog signal to digital data by successive approximation method. In this method, a internal
DAC keeps on comparing its output to the analog input. If the two voltage levels match, the DAC’s input is the
digital equivalent of the analog input. Figure 1 shows how to use/test an IC0804(2). An input analog signal varying
between 0 to 5volts can be given at pin 6. The corresponding digital signal from 00H to FFH is collected from pin
11-18. Pin 11 gives the Most-Signiﬁcant-Bit (MSB, D7) while Pin 18 gives the Least-Signiﬁcant-Bit (LSB, D0). The
converter requires a clock pulse at pin 4. It is generated using a built in clock by connecting a resistor and capacitor
externally at pin 19 and 4. The time period of the clock pulse is given as

T = 1.1RC

For proper conversion the chip requires a control signal. The Start-Of-Conversion pulse (SOC) tells the chip to keep
on varying the internal DAC input and compare with input analog input. When the chip has completed and got the
answer, informs the user by giving an End-Of-Conversion pulse (EOC). The IC in fact, at pin 5 (EOC) always gives
5volts, i.e. digital 1. When the conversion is ﬁnished, the signal goes low indicating completion. Care should be taken
on selection of clock pulse (R & C), since the end of conversion signals generation is sensitive to the clock pulse (the
value of R and C selected was 680KΩ and 150pF respectively, giving T = 115µs). Further details of IC0804 can be
downloaded from the National Semiconductor’s web site.

4
0
0
2
 
t
c
O
 
9
1
 
 
]
h
p
-
d
e
.
s
c
i
s
y
h
p
[
 
 
1
v
0
5
1
0
1
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

FIG. 1 Circuit using IC0804 for converting input analog voltage into corresponding digital signal.

Digital To Analog Converter

A DAC 0808 can be used to convert the digital input given to pins 5 to 12 of the chip. The analog output appears at
pin 4, with the voltage level varying from zero to negative 5volts. An inverting ampliﬁer is used to make the voltage
level vary in the positive direction. The DAC0808 in itself is cheap, costing just over Rs 100/- in Delhi market.
However, a simple resistive ladder digital to analog converter circuit [1] was used in this project. The circuit, with
a non-inverting op-amp circuit was used (whose cost was just Rs 10/-). The DAC0808 would obviously be better in
terms of accuracy. However, in a under-graduate lab, the resistive ladder circuit proved to be good enough.

C. The Interfacing Card

After the hardware, a program has to be developed. Along with generating the input for the DAC and collecting the
output of the ADC, the program should generate the SOC signal for the ADC. The program should also after sending
the SOC, continuously monitor for the signal. All this can be achieved using either the 8155 or 8255 peripheral present
on the 8085 microprocessor trainer kit. We selected the 8255 peripheral for the present project. A introduction to
the 8255 peripheral chip is beyond the scope of this article, and details of the same can be found in Goankar(3). To
appreciate the programming part of this project would require the reader to be familiar with 8255 peripheral, as also,
the 8085 microprocessor.

The automation of measuring the I-V characteristics of a diode is achieved by making the DAC generate a ramp
signal. In simple words the output of the DAC would be a linearly increasing voltage with time, the voltage level
going from 0v to 5v. This is done by the microprocessor counting from 00H to FFH. With each increasing count, the
DAC’s output voltage increases by 19.6mV (5/255volts). This voltage is given as an input signal to the circuit shown
below.

The voltage across the 1KΩ resistance is converted to digital values and is collected and stored by the microprocessor.
So the program increments the count and sends the digital data to the DAC which is used as the input voltage for the
diode circuit. The voltage across the resistance is converted to digital signal and stored in a memory location of the
microprocessor. This goes on in a loop to completely obtain the diodes I-V characteristics. Table I lists the required
program to achieve the above objective.

Before relying on the results of the device, it is necessary to see the linearity of the device. This is done by giving the
output of the DAC as input of the ADC. The program remains the same. Figure 4 shows the device to be appreciably

FIG. 2 A DAC0808 circuit with op-amp ampliﬁer used to invert the 0 to -5v output.

FIG. 3 Circuit for measuring IV characteristics using interface card.

linear. The listed program above saves the input to the DAC and the output of the ADC. As seen from ﬁgure 3, the
voltage output of the ADC is a measure of the circuit’s current. To plot the I-V characteristics, the ADC’s results
are plotted on the ’y’ axis (Vr, the voltage drop across the 1KΩ resistor, which is proportional to the current) while
this data has to be subtracted from the DAC’s output for voltage across the diode (’x’-axis). Figure 5 shows the I-V
characteristics of a 1N407 diode measured with the designed interface card. The knee voltage is evident, just more
then 0.4v.

Obviously, the prospect of copying 512 (= 2 × 256) data from the microprocessors memory might put of the reader.
However, with a small additional program and by connecting the DAC to an oscilloscope, the data can be read and
displayed on the CRT.

This project was done in a graduate college laboratory, with a small budget of Rs 400/-. A reader who has
knowledge of computers and of computer programming (especially of C programming) would beneﬁt from Probhir
Goyal’s article(4), if he or she were interested for developing an interfacing card for the computer.

FIG. 4 The interface card was found to be perfectly linear, i.e. the output of the ADC is equal to the input given to the DAC.

FIG. 5 The I-V characteristics of a p-n diode as measured by the designed interface card.

References

[1] Malvino and Leech, ”Digital Electronics”.
[2] Terry L. M. Bartelt, ”Digital Principles”.
[3] Ramesh S. Gaonkar, ”Microprocessor Architecture, Programming and applications with the 8085/8080A”.
[4] Probhir Goyal, ”Electronics for You” (Oct, 1996), pg 87.

Program required for the interface card.

Memory address Hex Code Instruction

Comments

C000
C001
C002
C003
C004
C005
C006
C007
C008
C009
C00A
C00B
C00C
C00D
C00E
C00F
C010
C011
C012
C013
C014
C015
C016
C017
C018
C019
C01A
C01B
C01C
C01D
C01E
C01F
C020
C021
C022
C023
C024
C025
C026
C027
C028
C029
C02A
C02B
C02C
C02D
C02E
C02F
C030

26
00
06
00
3E
98
D3
13
78
D3
11
11
00
C1
7B
84
5F
78
12
3E
00
D3
13
0E
15
0D
C2
19
C0
3E
01
D3
13
DB
12
17
DA
21
C0
DB
10
4F
11
00
C2
7B
84
5F
79

MVI H
00H
MVI B
00H

98H
OUT
13H
MOV A, B
OUT
11H
LXI D
00
C1
MOV A, E
ADD H
MOV E, A
MOV A, B

Initialize counter H to 0

Initialize counter B to 0

MVI A ”Load control word in control

Register”

”Setup DE pair as pointer
for destination memory C100”

Move data of E into A
Add data in H to A
Move data of A into E
Move into A data of B

Wait in delay loop

”Load BSR mode control
Word in control register
To reset PC0”

STAX D Store data in pointed memory
MVI A
00H
OUT
13H
MVI C
15H
DCR C
JNZ
19
C0
MVI A
01H
OUT
13H
IN
12H
RAL
JC
21
CO
IN
10H

”Load BSR mode control
word in control register to
PC0”

”Read Port A (ADC output)
Into accumulator”

Move PC7 into carry ﬂag
Wait in loop till EOC is low

Read port C

MOV C, A Move data from A into C

”Setup DE pair as a pointer
For destination memory”

LXI D
00
C2
MOV A, E
ADD H
MOV E, A
MOV A, C

Move data in E into A
Add the data in H into A
Move data in A into E
Move data in C into A

Memory address Hex Code Instruction

Comments

C031
C032
C033
C034
C035
C036
C037
C038
C039
C03A
C03B
C03C
C03D
C03E
C03F
C040

12
04
24
0E
FF
OD
C2
36
C0
78
FE
00
C2
04
C0
76

Increment register B
Increment register H
Wait in delay loop

STAX D Store ADC o/p into memory
INR B
INR H
MVI C
FFH
DCR C
JNZ
36
C0
MOV A, B
CPI
00H
JNZ
04
C0
HLT

Move data in B into A
Compare data in A with 00H

”If data in B is not 0 go back
In loop”

End Of Program

