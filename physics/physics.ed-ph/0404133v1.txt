4
0
0
2
 
r
p
A
 
8
2
 
 
]
h
p
-
d
e
.
s
c
i
s
y
h
p
[
 
 
1
v
3
3
1
4
0
4
0
/
s
c
i
s
y
h
p
:
v
i
X
r
a

Considerations on Classical and Quantum Bits ∗

F.L. Marquezino and R.R. Mello J´unior

CBPF - Centro Brasileiro de Pesquisas F´ısicas
CCP - Coordena¸c˜ao de Campos e Part´ıculas
Av. Dr. Xavier Sigaud, 150
22.290-180 Rio de Janeiro (RJ) Brazil
(CNPq Fellows/PIBIC)
franklin@serraon.com.br, rui.rodrigues@inf.ucp.br

April, 2004

Abstract

This article is a short review on the concept of information. We
show the strong relation between Information Theory and Physics,
beginning by the concept of bit and its representation with classical
physical systems, and then going to the concept of quantum bit (the
so-called “qubit”) and exposing some diﬀerences and similarities.This
paper is intended to be read by non-specialists and undergraduate stu-
dents of Computer Science, Mathematics and Physics, with knowledge
of Linear Algebra and Quantum Mechanics.
Keywords:
Computation, Computer Science.

Information Theory, Quantum Information, Quantum

1

Introduction

Physics is an important subject in the study of information processing. It
could not be diﬀerent, since information is always represented by a physical
system. When we write, the information is encoded in ink particles over
a paper surface. When we think or memorize something, our neurons are
storing and processing information. Morse code uses a physical system, such
as light or sound waves to encode and transfer messages. As Rolf Laudauer
said, “information is physical”. At least for the purposes of our study, this
statement is very adequate.

Every day, we use classical systems to store or read information. This is
part of human life since the very beginning of history. But, what happens

∗

The authors are undergraduate students of Computer Science at the Catholic Univer-

sity of Petr´opolis. They are also members of Grupo de F´ısica Te´orica Jos´e Leite Lopes.

1

if we use quantum systems instead of classical ones? This is an interesting
subject in the intersection of Physics, Computer Science and Mathematics.
In this article, we show how information is represented, both in quantum
and classical systems. The plan of our work is as follows: in Section 2 we
argue about the physical character of information. In Section 3 we show the
classical point of view of information, i.e., according to Newtonian Mechan-
ics. In Section 4, the point of view of Quantum Mechanics will be shown.

We also suggest some introductory references that explain most of the

concepts discussed here [1, 2, 3].

The main goal of this paper is to review some mathematical and phys-
ical aspects of classical information and compare them with its quantum
counterpart.

2

Information is physical

In its very beginning, Computer Science could be considered a branch of
Mathematics, exclusively. However, since a few decades some scientists have
been giving special attention to the correlation between Computer Science
and Physics.

One of the ﬁrst physical aspects that we can raise in classical compu-
tation is thermodynamics. How much energy is spent when the computer
does a certain calculation, and how much heat is dissipated? Is it possible to
create a computer that does not spend any energy at all? To answer these
questions we will begin by examining Landauer’s principle.

According to Landauer’s principle, when a computer erases a bit, the
amount of energy dissipated is at least kBT ln 2, where kB is Boltzmann’s
constant and T is the temperature of the environment. The entropy of the
environment increases at least kB ln 2. This means that any irreversible
operation performed by a computer dissipates heat and spends energy. For
instance, the AND logical operation1 is irreversible, because given an output
we cannot necessarily know the inputs. If the output is 0, the inputs could
be 00, 01 or 10. This operation erases information from the input, so it
dissipates energy, according to Landauer’s principle.

If one could create a computer using only reversible operations, this
computer would not spend any energy. That would be a great achievement,
given the fact that our modern society spends more and more in energy, and
computers are responsible for great part of the problem. Charles Bennett,
in 1973, proved that building a reversible computer is possible [5]. The next
step would be ﬁnding universal reversible gates, i.e., a gate or a small set
of gates that allows the construction of circuits to calculate any computable
function. E. Fredkin and T. Toﬀoli proved the existence of such gate in
1If the reader is not familiar with the concept of logical gate, we recommend the reading

of [4].

2

1982 [6]. The Toﬀoli gate is equivalent to the traditional NAND operation
(which is universal in classical computation) and works as follows:

Toﬀoli(A, B, C) = (A, B, C

A

B),

(1)

⊕

∧

where

is sum modulus 2 and

in the logical AND.

⊕

∧

In priciple we could build a reversible computer by simply replacing
NAND gates by Toﬀoli gates. That is not so simple to implement, though.
Besides, one could question whether this gate is actually non-dissipative,
since we generate a lot of junk bits that will need to be erased sometime.
Bennett solved this problem by observing that we could perform the entire
computation, print the answer (which is a reversible operation in Classical
Mechanics) and then run the computer backwards, returning to the initial
state. So, we do not need to erase the extra bits.

Another interesting subject that leads us to the intersection between
In 1871, J.C.
Computer Science and Physics is the Maxwell’s demon.
Maxwell proposed a theoretic machine, operated by a little “demon” that
could violate the second law of thermodynamics [7].

The machine would have two partitions, separated by a little door con-
trolled by this demon. The modus operandi of this demon would be quite
interesting.
It would watch the movement of each molecule, opening the
door whenever they approach, allowing fast ones to pass from the left to
right partition and slow ones to pass from right to left partition. By doing
that, heat would ﬂow from a cold place to a hot one at no cost. The so-
lution for this apparently paradox resides in the fact that the demon must
store information about the movement of the particles. Since the demon’s
memory is ﬁnite, it will have to erase information in a moment, dissipating
energy and then increasing the entropy of the system.

The topics pointed out in this section show how close Computer Science
and Physics are.
In the next sections we will show how information is
represented by Classical Mechanics, and what happens if we use Quantum
Mechanics instead.

3 On classical bits

A classical computer performs logical and arithmetical operations with a cer-
tain (ﬁnite) alphabet2. Each one of the symbols that compose this alphabet
must be represented by a speciﬁc state of a classical system.

Since we are used to perform calculations with decimal numbers it is
very natural to think that the computer’s alphabet should be composed by
ten diﬀerent symbols. However, it would be very expensive and complex
2The Turing machine was proposed by Alan Turing in 1936 and became very important
for the understanding of what computers can do [8]. It is composed by a program, a ﬁnite
state control, a tape and a read/write tape head.

3

to build a computer with this characteristic. Instead, computers work with
2-state systems, the so-called bits, and represent binary numbers.

The concept of bit was anticipated by Leo Szilard [9] while analyzing the
Maxwell’s demon paradox. However, the word bit (binary digit) was ﬁrst
introduced by Tukey. The bit is the fundamental concept in Information
Theory, and is the smallest information that can be handled by a classical
computer. Every information stored in the computer is either a bit or a
sequence of bits.

If we join n bits, we can represent 2n diﬀerent characters. But, how many
bits are necessary to represent all the characters in the English alphabet,
plus the numbers and some special characters? If we use 8 bits, we can
represent 256 characters, which is enough! To these 8 bits we give the name
byte 3. Another interesting unit is the nibble, which is formed by 4 bits. With
one nibble we can represent all the hexadecimal numbers (24 = 16). Since
the hexadecimal base is largely used in assembly languages and low-level
computing, some computer scientists work with nibbles quite often.

The byte is a very small unit, so we normally use some of its multiples.
The kilobyte (KB) corresponds to 1024 bytes, i.e., 8192 bits. One could
think that 1KB should be 1000 bytes, but as we are dealing with binary
numbers, the power of 2 which is closer to 1000 is actually 210 = 1024.

There are also some other useful units: megabyte (MB), which corre-
sponds to 1024 KB, gigabyte (GB), equals to 1024 MB, terabyte (TB),
equivalent to 1024 GB and petabyte, which corresponds to 1024 TB.

At this point, the idea of Shannon entropy should be introduced [10].
Shannon entropy is an important concept of Information Theory, which
quantiﬁes the uncertainty about a physical system. We can also look at
Shannon entropy in a diﬀerent point of view, as a function that measures
the amount of information we obtain, on average, when we learn the state
of a physical system.

We deﬁne Shannon entropy as a function of a probability distribution,

p1, p2, . . . , pn:

H(p1, p2, . . . , pn)

px log px

(2)

≡ − Xx

where 0 log 0
≡
Note that limx
→

0, in the context of distributions or generalized functions.
0 (x log x) = 0.

This function will be explained in this paper through an exercise, which
can also be found in [11]. This is an intuitive justiﬁcation for the function
we deﬁned above.

Suppose we want to measure the amount of information associated to an
event E, which occurs in a probabilistic experiment. We will use a function
3Some authors say that the group of 8 bits are special because of the 80x86 processor.
This processor used 8 bits to give memory addresses, i.e., it had 256 diﬀerent addresses
in memory.

4

I(E), which ﬁts the following requirements:

1. I(E) is a function only of the event E, so we may write I = I(p),

where p is the probability of the event E;

2. I is a smooth function of probability;

3. I(pq) = I(p) + I(q) when p, q > 0, i.e., the information obtained when
two independent events occur with probabilities p and q is the sum of
the information obtained by each event alone.

We want to show that I = k log p, for some constant k. From the third

condition of the problem,

I(pq) = I(p) + I(q),

we can let q = 1, verifying that I(1) = 0. Now, we can diﬀerentiate both
sides of the above equation with respect to p.

When p = 1 we can easily note that

Based on the second condition of the problem, we know that I ′(p) is well

deﬁned when p = 1, so I ′(1) = k, k constant.

The function I(p) appeared naturally and satisﬁes the three conditions
speciﬁed by the problem. However, the function I(p) represents the amount
of information gained by one event with probability p. We are interested in
a function that gives us the mean information, that is, the entropy.

∂I(pq)
∂p

=

dI(p)
dp
∂pq
∂p

+

dI(q)
dp

= I ′(p)

q = I ′(p).

·

dI(pq)
d(pq) ·
I ′(pq)

I ′(q)

q = I ′(1).

·

I ′(q) =

k
q

k
q

dq

I(q) =

Z
I(q) = k log q.

H =< I >=

H =< I >= k

P

x px(k log px)
x px
px log px

P

Xx

5

(3)

(4)

(5)

(6)

(7)

(8)

(9)

(10)

(11)

(12)

where k =

1, and we have the Shannon entropy’s formula:

−

H =

px log px.

− Xx

If we apply (13) speciﬁcally to the case where we have a binary random
variable (which is very common in Computer Science), this entropy receive
the name binary entropy:

Hbin(p) =

p log p

(1

p) log (1

p)

−

−

−

−

where p is the probability for the variable to have the value v, and (1
is the probability for the variable to assume the value

v.

−

p)

Information Theory studies the amount of information contained in a
certain message, and its transmission through a channel. Shannon’s In-
formation Theory was responsible for giving a precise and mathematical
deﬁnition for information.

¬

Written languages can be analyzed with the help of Information The-

ory [12]. For a given language, we can deﬁne the rate of the language as

(13)

(14)

(15)

r =

H(M )
N

,

where H(M ) is the Shannon entropy of a particular message and N is the
lenght of this message.

In English texts, r normally varies from 1.0 to 1.5 bit per letter. Cover
found r = 1.3 bits/letter in [13]. Assuming that, in a certain language
composed by L characters, the probability of occurence of each letter is
equal, one can easily found the amount of information contained in each
character.

R = log L,

(16)

where R, the maximum entropy of each character in a language, is called
absolute rate.

The English alphabet is composed by 26 letters, so its absolute rate is
4.7 bits/letter. The absolute rate is normally higher that the rate

log 26
of the language. Hence, we can deﬁne the redundancy of a language as

≈

D = R

r.

(17)

−
In the English language, if we consider r = 1.3 according to [13], and if we
apply eq. (16) to ﬁnd R, we ﬁnd out that the redundancy is 3.4 bits/letter.
We cannot forget that we deal with information every day. In this exact
moment, you are dealing with the information contained in this paper. So,
it is natural to ask how much information our senses can deal with. Studies
108 bits per second, while audition
have shown that vision can receive 2.8

·

6

104 bits per second. Our memory can store and organize
can deal with 3
information for a long time. The storage capacity of the human brain varies
from 1011 to 1012 bits. Just as a comparison we can mention that the
knowledge of a foreign language requires about 4

106 bits [14].

·

·

4

Introducing qubits

The quantum bit is often called “qubit”. The key idea is that a quantum sys-
tem will be used to store and handle data. When we use a classical system,
such as a capacitor or a transistor, the properties of Classical Mechanics are
still observed. On the other hand, if we use a quantum system to process
information, we can take advantage of the quantum-mechanical properties.
Quantum Mechanics has a probabilistic character. While a classical
system can be in one, and only one state, a quantum system can be in a
state of superposition, as if it was in diﬀerent states simultaneously, each
one associated to a probability. Mathematically, we will express this N -state
quantum system as the linear combination,

Xi=0
where ai are complex numbers called amplitudes. We know, from the Quan-
k
tum Mechanics postulates, that
|
when measuring the state

2 is the probability of obtaining
ak
k
k
. Then,
i

ψ
|

i

(18)

(19)

N

1

−

=

ψ
|

i

ai

i
i
|

N

1

−
Xi=0 k

ai

2
k

= 1.

In Quantum Computation we normally work with 2-state systems (oth-
erwise we would not be referring to qubits, but qutrits, qu-nits or something
similar). So, the quantum bits can assume any value in the form:

ψ
|

+ β

= α
0
i
|
2 +
α
k
k

1
(20)
i
|
2 = 1. It is important to stress
k
) is
1
i
|

i
with α, β complex numbers, and
that the amplitudes are not simple probabilities. The state 1
diﬀerent from 1
), for instance. In this case we say that the two
1
0
√2 (
i
i − |
|
ψ
states are diﬀerent by a relative phase. However, the states
i
|
(where θ is a real number) are considered equal, because they diﬀer only
by a global phase. The global phase factor does not have inﬂuence in the
measurement of the state.

0
√2 (
i
|

and eiθ

β
k

ψ
|

+

i

Superposition is quite interesting because while classical bits can as-
sume only one value, its quantum counterpart can assume a superposition
of states. A single qubit can value both 0 and 1 simultaneously. Similarly

7

Figure 1: Bloch sphere.

a n-qubit register can value, simultaneously, all the values from 0 to 2n
1.
Consequently, we can do the same calculation on diﬀerent values at the same
time, simply by performing an operation on a quantum system.

−

Now, returning to the mathematical study of the quantum system, we
can observe that a single qubit can be represented in a two-dimensional
complex vector space. Of course, that does not help us so much in terms of
geometric visualization. However, note that we may rewrite eq. (20):

θ
0
2 |
i
where θ, ϕ and γ are real numbers. The global factor eiγ can be ignored,
since it has no observable eﬀects.

θ
1
i(cid:19)
2 |

+ eiϕ sin

= eiγ

(21)

ψ
|

cos

(cid:18)

i

= cos

+ eiϕ sin

ψ
|

i

θ
2

θ
.
1
2 |
i

(22)

Now, we can represent a qubit in a three-dimensional real vector space.
According to eq. (19), the qubit norm must be equal to 1, so the numbers θ
and ϕ will deﬁne a sphere: the so-called Bloch sphere.

As we can see, there are inﬁnite points on the Bloch sphere. Nevertheless,
it is important to emphasize that all we can learn from a measurement is 0 or
1, but not the values of θ or ϕ. Moreover, after performing a measurement
the state will be irreversibly collapsed (projected) to either
. Should
1
i
|
it be diﬀerent, we could write an entire encyclopedia in one qubit, by taking
advantage of the inﬁnite solutions of (19).

0
i
|

or

If we wished to represent a composite physical system (which could be
a quantum register, for instance), we would use an operation called tensor

8

product, represented by the symbol
composed by the qubits

⊗

ψi
|

, where i varies from 1 to n is
i

. The state of a quantum register

i ⊗
We recommend that the reader refers to [11] to get more information on

i ⊗ |

⊗ |

φ
i
|

=

ψ1
|

ψ2

. . .

ψn

.
i

φ
i
|

(23)

this postulate.

4.1 The no-cloning theorem

There is a remarkable diﬀerence between classical and quantum states, which
is the impossibility of the latter to be perfectly cloned when it is not known
a priori. This can be proved by the no-cloning theorem, published by W.K.
Wooters and W.H. Zurek, in 1982 [15]. Here, we will prove that a generic
quantum state cannot be cloned. The authors recommend the reading of
the article cited before for a more complete comprehension.

Let us suppose we wish to create a machine that receives two qubits
as inputs, called qubit A and qubit B. Qubit A will receive an unknown
(such as a blank
quantum state,
, and qubit B a pure standard state,
i
to qubit
sheet of paper in a copy machine). We wish to copy the state
B. The initial state of the machine is

ψ
|

ψ
|

s
|

i

i

ψ
|

s
i ⊗ |

.
i

(24)

If the copy was possible, there were an unitary operator U such that
U (
ψ
. However, we wish our machine to be able to copy
i
|
diﬀerent states. So, the operator U must be such that U (
φ
φ
.
i
|
The inner product between these two equations is

s
i ⊗ |

s
i⊗|

) =
i

) =
i

i ⊗ |

ψ
|

φ
|

i⊗|

ψ

ψ
h

φ
i
|
It is easy to realize that the solutions for this equation are
ψ
|

ψ
= 1
h
and
. The ﬁrst solution
i
is useless, so we proved that a perfect cloning machine is only able to clone
orthogonal states.

, or when
i

= 0, i.e., when

ψ
= (
h

φ
i
|

φ
i
|

φ
i
|

i ⊥ |

ψ
h

(25)

φ
|

=

ψ

2.
φ
)
i
|

The non-cloning theorem leads us to a very interesting application of
Quantum Mechanics: a provable secure protocol for key distribution that
can be used together with Vernam’s cipher to provide an absolutely reliable
cryptography. The reader can refer to [2] for a short introduction to this
subject.

4.2 Von Neumann entropy

Up to this point, we have been using the vector language to express Quantum
Mechanics. From now on, it will be interesting to introduce another formal-
ism: the density operator (also called “density matrix”). This is absolutely

9

equivalent to the language of state vectors, but it will make the calculations
much easier in this case. Besides, the density operator is an excellent way to
express quantum systems whose state is not completely known. If we have
a quantum system with probability pi to be in the state
, then we call
i
ψi
pi,
an ensemble of pure states. We deﬁne the density matrix for this
{
i}
|
system as

ψi
|

(26)

(27)

(28)

(29)

(30)

Von Neumann entropy is very similar to the Shannon entropy. It mea-
sures the uncertainty associated with a quantum state. The quantum state
ρ has its Von Neumann entropy given by the formula

Let λi be the eigenvalues of ρ. It is not very diﬃcult to realize that the

Von Neumann entropy can be rewritten as

ρ =

pi

ψi
|

ih

ψi

.
|

Xi

S(ρ) =

tr(ρ log ρ).

−

S(ρ) =

λx log λx.

− Xx

Another important concept is the relative entropy. We can deﬁne the

relative entropy of ρ to σ as

where ρ and σ are density operators.

S(ρ

σ) = tr(ρ log ρ)

tr(ρ log σ)

||

−

According to Klein’s inequality, the quantum relative entropy is never

negative:

S(ρ

σ)

0

||

≥

with equality holding if and only if ρ = σ. The proof for this theorem is not
relevant here, but it can be found in [11, page 511].

4.3 Further comments on Quantum Information Theory

The Quantum Information Theory is concerned with the information ex-
change between two or more parties, when a quantum mechanical channel is
used to achieve this objective. Naturally, the purpose of this paper is not to
give a deep comprehension of this subject. Quantum Information Theory,
as well as its classical counterpart, is a vast area of knowledge, which would
require much more than just few pages to be fully explained. Instead, we
give some basic elements, allowing the reader, independently of his area of
knowledge, to have a better comprehension of Quantum Computation and
Quantum Information Processing.

10

Quantum systems have a collection of astonishing properties. Some of
them could, at least in principle, be used in Computer Science, allowing the
production of new technology. One of these amazing properties we have
already mentioned: it is the superposition. If in the future mankind learn
how to control a large number of qubits in a state of superposition for enough
time, we will have the computer of our dreams. It would be a great step for
science.

Another important property is the entanglement [11, 16]. Some states
are so strongly connected that one cannot be written disregarding the other.
In other words, they cannot be written separately, as a tensor product. This
property brings interesting consequences. Imagine that Alice prepares the
state below4 in her laboratory, in Brazil:

β00
|

i

0
a
= |
i

b +
1
0
a
i
|
i
|
√2

1
b
i
|

.

(31)

After that, Alice keeps qubit a and gives qubit b to Bob, who will take it
to another laboratory, let us say, in Australia. Now, we know from the third
postulate of Quantum Mechanics that if any of them measure the state, it
b. So, the state of the qubit in
1
1
will collapse either to
a
i
|
i
|
Australia can be modiﬁed by a measurement done in Brazil and vice-versa!
Reference [11] is strongly recommended as a starting point, for those

b or to
0
i
|

0
a
i
|

who want to study this topic more deeply.

5 Concluding remarks

In this paper, we have shown some of the main aspects of information.
Information Theory normally considers that all information must have a
physical representation. But, Nature is much more than the classical world,
that we see every day. If we remember that the amazing quantum world can
also represent information, we discover astonishing properties, leading us to
a new ﬁeld of study. Here, we brieﬂy introduced this subject to students
and researchers from diﬀerent areas of knowledge.

In Computer Science, we normally wish to represent some information,
manipulate it in order to perform some calculation and, ﬁnally, measure it,
obtaining the result. We began by showing how information is represented,
in classical systems and in quantum systems. In a forthcoming work [4], we
show how information can be manipulated in each case.

Both classical and quantum information have similarities and diﬀerences,
that were quickly exposed in this article. The technological diﬀerences are
still enormous. While the technology to produce classical computers are
highly developed, the experiments involving quantum computers are not so
simple and have a slow progress. However, as we saw in this article, the

4This is one of the so-called Bell states.

11

properties of quantum information are so interesting that the development
of quantum computers in the future can become one of the greatest achieve-
ments of our history.

Acknowledgements

The authors thank Prof. J.A. Helay¨el-Neto (CBPF) and Dr. J.L. Ace-
bal (PUC-Minas) for reading the manuscripts, and for providing helpful
discussions. We thank the Group of Quantum Computation at LNCC, in
particular Drs. R. Portugal and F. Haas, for the courses and stimulating
discussions. We also thank the brazilian institution CNPq and the PIBIC
program, for the ﬁnancial support.

References

[1] Lavor, C., Manssur, L.R.U and Portugal, R.,

gorithm:
www.arxiv.org/quant-ph/0301079.

Quantum Database

Search”.

“Grover’s Al-
at

(2003) Available

[2] Marquezino, F.L., “Estudo Introdut´orio do Protocolo Quˆantico BB84
para Troca Segura de Chaves”. Centro Brasileiro de Pesquisas F´ısicas,
Monography CBPF-MO-001/03. (2003)

[3] Maser, S., “Fundamentos da Teoria Geral da Comunica¸c˜ao”. S˜ao Paulo,

EPU-EDUSP. (1975)

[4] Marquezino, F.L. and Mello J´unior, R.R., “An Introduction to Logical

Operations on Classical and Quantum Bits”. Work in progress.

[5] Bennett, C.H., “Logical reversibility of computation”, IBM J.Res.Dev.,

17(6):525-32. (1973)

21(3/4):219-253. (1982)

(1871)

[6] Fredkin, E. and Toﬀoli, T. “Conservative logic”, Int.J.Theor.Phys.,

[7] Maxwell, J.C., “Theory of Heat”, Longmans, Green, and Co., London.

[8] Turing, A.M., “On computable numbers, with an application to the

Entscheidungsproblem”, Proc.Lond.Math.Soc. 2, 42:230. (1936)

[9] Szilard, L., “ ¨Uber die entropieverminderung in einen thermodynamis-
chen system bei eingriﬀen intelliganter wesen”. Z. Phys., 53:840-856.
(1929)

12

[10] Shannon, C.E., “A Mathematical Theory of Communication”, Bell Sys-
tem Technical Journal, 27, pp. 379-423 and 623-656, July and October
(1948)

[11] Nielsen, M.A. and Chuang, I.L., “Quantum Computation e Quantum

Information”, Cambridge University Press. (2000)

[12] Schneier, B., “Applied Cryptography”, 2nd edn, Wiley Computer Pub-

lishing, John Wiley & Sons, Inc. (1996)

[13] Cover, T.M. and King, R.C., “A Convergent Gambling Estimate of
the Entropy of English”, IEEE Transactions on Information Theory, v.
IT-24, n. 4, July. (1978) pp.413-421.

[14] K¨upfm¨uller, K., “Nachrichtenverarbeitung im Menschen”, University

of Darmstadt. (1975)

[15] Wooters, W.K. and Zurek, W.H., “A single quantum cannot be cloned”,

Nature, 299, 802-803. (1982)

[16] Preskill, J., “Lecture Notes for Physics 229: Quantum Information and

Computation”. California Institute of Technology. (1998)

13

